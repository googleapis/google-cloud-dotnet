// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/api/apikeys/v2/apikeys.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ApiKeys.V2 {
  /// <summary>
  /// Manages the API keys associated with projects.
  /// </summary>
  public static partial class ApiKeys
  {
    static readonly string __ServiceName = "google.api.apikeys.v2.ApiKeys";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.CreateKeyRequest> __Marshaller_google_api_apikeys_v2_CreateKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.CreateKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.ListKeysRequest> __Marshaller_google_api_apikeys_v2_ListKeysRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.ListKeysRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.ListKeysResponse> __Marshaller_google_api_apikeys_v2_ListKeysResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.ListKeysResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.GetKeyRequest> __Marshaller_google_api_apikeys_v2_GetKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.GetKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.Key> __Marshaller_google_api_apikeys_v2_Key = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.Key.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest> __Marshaller_google_api_apikeys_v2_GetKeyStringRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse> __Marshaller_google_api_apikeys_v2_GetKeyStringResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest> __Marshaller_google_api_apikeys_v2_UpdateKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest> __Marshaller_google_api_apikeys_v2_DeleteKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest> __Marshaller_google_api_apikeys_v2_UndeleteKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.LookupKeyRequest> __Marshaller_google_api_apikeys_v2_LookupKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.LookupKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiKeys.V2.LookupKeyResponse> __Marshaller_google_api_apikeys_v2_LookupKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiKeys.V2.LookupKeyResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiKeys.V2.CreateKeyRequest, global::Google.LongRunning.Operation> __Method_CreateKey = new grpc::Method<global::Google.Cloud.ApiKeys.V2.CreateKeyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateKey",
        __Marshaller_google_api_apikeys_v2_CreateKeyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiKeys.V2.ListKeysRequest, global::Google.Cloud.ApiKeys.V2.ListKeysResponse> __Method_ListKeys = new grpc::Method<global::Google.Cloud.ApiKeys.V2.ListKeysRequest, global::Google.Cloud.ApiKeys.V2.ListKeysResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListKeys",
        __Marshaller_google_api_apikeys_v2_ListKeysRequest,
        __Marshaller_google_api_apikeys_v2_ListKeysResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiKeys.V2.GetKeyRequest, global::Google.Cloud.ApiKeys.V2.Key> __Method_GetKey = new grpc::Method<global::Google.Cloud.ApiKeys.V2.GetKeyRequest, global::Google.Cloud.ApiKeys.V2.Key>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetKey",
        __Marshaller_google_api_apikeys_v2_GetKeyRequest,
        __Marshaller_google_api_apikeys_v2_Key);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest, global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse> __Method_GetKeyString = new grpc::Method<global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest, global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetKeyString",
        __Marshaller_google_api_apikeys_v2_GetKeyStringRequest,
        __Marshaller_google_api_apikeys_v2_GetKeyStringResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest, global::Google.LongRunning.Operation> __Method_UpdateKey = new grpc::Method<global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateKey",
        __Marshaller_google_api_apikeys_v2_UpdateKeyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest, global::Google.LongRunning.Operation> __Method_DeleteKey = new grpc::Method<global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteKey",
        __Marshaller_google_api_apikeys_v2_DeleteKeyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest, global::Google.LongRunning.Operation> __Method_UndeleteKey = new grpc::Method<global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UndeleteKey",
        __Marshaller_google_api_apikeys_v2_UndeleteKeyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiKeys.V2.LookupKeyRequest, global::Google.Cloud.ApiKeys.V2.LookupKeyResponse> __Method_LookupKey = new grpc::Method<global::Google.Cloud.ApiKeys.V2.LookupKeyRequest, global::Google.Cloud.ApiKeys.V2.LookupKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LookupKey",
        __Marshaller_google_api_apikeys_v2_LookupKeyRequest,
        __Marshaller_google_api_apikeys_v2_LookupKeyResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ApiKeys.V2.ApikeysReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ApiKeys</summary>
    [grpc::BindServiceMethod(typeof(ApiKeys), "BindService")]
    public abstract partial class ApiKeysBase
    {
      /// <summary>
      /// Creates a new API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateKey(global::Google.Cloud.ApiKeys.V2.CreateKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the API keys owned by a project. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiKeys.V2.ListKeysResponse> ListKeys(global::Google.Cloud.ApiKeys.V2.ListKeysRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the metadata for an API key. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiKeys.V2.Key> GetKey(global::Google.Cloud.ApiKeys.V2.GetKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the key string for an API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse> GetKeyString(global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Patches the modifiable fields of an API key.
      /// The key string of the API key isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateKey(global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an API key. Deleted key can be retrieved within 30 days of
      /// deletion. Afterward, key will be purged from the project.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteKey(global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Undeletes an API key which was deleted within 30 days.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UndeleteKey(global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Find the parent project and resource name of the API
      /// key that matches the key string in the request. If the API key has been
      /// purged, resource name will not be set.
      /// The service account must have the `apikeys.keys.lookup` permission
      /// on the parent project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiKeys.V2.LookupKeyResponse> LookupKey(global::Google.Cloud.ApiKeys.V2.LookupKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ApiKeys</summary>
    public partial class ApiKeysClient : grpc::ClientBase<ApiKeysClient>
    {
      /// <summary>Creates a new client for ApiKeys</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ApiKeysClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ApiKeys that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ApiKeysClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ApiKeysClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ApiKeysClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a new API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateKey(global::Google.Cloud.ApiKeys.V2.CreateKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateKey(global::Google.Cloud.ApiKeys.V2.CreateKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateKey, null, options, request);
      }
      /// <summary>
      /// Creates a new API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateKeyAsync(global::Google.Cloud.ApiKeys.V2.CreateKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateKeyAsync(global::Google.Cloud.ApiKeys.V2.CreateKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateKey, null, options, request);
      }
      /// <summary>
      /// Lists the API keys owned by a project. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiKeys.V2.ListKeysResponse ListKeys(global::Google.Cloud.ApiKeys.V2.ListKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListKeys(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the API keys owned by a project. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiKeys.V2.ListKeysResponse ListKeys(global::Google.Cloud.ApiKeys.V2.ListKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListKeys, null, options, request);
      }
      /// <summary>
      /// Lists the API keys owned by a project. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiKeys.V2.ListKeysResponse> ListKeysAsync(global::Google.Cloud.ApiKeys.V2.ListKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListKeysAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the API keys owned by a project. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiKeys.V2.ListKeysResponse> ListKeysAsync(global::Google.Cloud.ApiKeys.V2.ListKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListKeys, null, options, request);
      }
      /// <summary>
      /// Gets the metadata for an API key. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiKeys.V2.Key GetKey(global::Google.Cloud.ApiKeys.V2.GetKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the metadata for an API key. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiKeys.V2.Key GetKey(global::Google.Cloud.ApiKeys.V2.GetKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetKey, null, options, request);
      }
      /// <summary>
      /// Gets the metadata for an API key. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiKeys.V2.Key> GetKeyAsync(global::Google.Cloud.ApiKeys.V2.GetKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the metadata for an API key. The key string of the API key
      /// isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiKeys.V2.Key> GetKeyAsync(global::Google.Cloud.ApiKeys.V2.GetKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetKey, null, options, request);
      }
      /// <summary>
      /// Get the key string for an API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse GetKeyString(global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKeyString(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the key string for an API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse GetKeyString(global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetKeyString, null, options, request);
      }
      /// <summary>
      /// Get the key string for an API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse> GetKeyStringAsync(global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKeyStringAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the key string for an API key.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse> GetKeyStringAsync(global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetKeyString, null, options, request);
      }
      /// <summary>
      /// Patches the modifiable fields of an API key.
      /// The key string of the API key isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateKey(global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Patches the modifiable fields of an API key.
      /// The key string of the API key isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateKey(global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateKey, null, options, request);
      }
      /// <summary>
      /// Patches the modifiable fields of an API key.
      /// The key string of the API key isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateKeyAsync(global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Patches the modifiable fields of an API key.
      /// The key string of the API key isn't included in the response.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateKeyAsync(global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateKey, null, options, request);
      }
      /// <summary>
      /// Deletes an API key. Deleted key can be retrieved within 30 days of
      /// deletion. Afterward, key will be purged from the project.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteKey(global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an API key. Deleted key can be retrieved within 30 days of
      /// deletion. Afterward, key will be purged from the project.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteKey(global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteKey, null, options, request);
      }
      /// <summary>
      /// Deletes an API key. Deleted key can be retrieved within 30 days of
      /// deletion. Afterward, key will be purged from the project.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteKeyAsync(global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an API key. Deleted key can be retrieved within 30 days of
      /// deletion. Afterward, key will be purged from the project.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteKeyAsync(global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteKey, null, options, request);
      }
      /// <summary>
      /// Undeletes an API key which was deleted within 30 days.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UndeleteKey(global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndeleteKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Undeletes an API key which was deleted within 30 days.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UndeleteKey(global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UndeleteKey, null, options, request);
      }
      /// <summary>
      /// Undeletes an API key which was deleted within 30 days.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UndeleteKeyAsync(global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndeleteKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Undeletes an API key which was deleted within 30 days.
      ///
      /// NOTE: Key is a global resource; hence the only supported value for
      /// location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UndeleteKeyAsync(global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UndeleteKey, null, options, request);
      }
      /// <summary>
      /// Find the parent project and resource name of the API
      /// key that matches the key string in the request. If the API key has been
      /// purged, resource name will not be set.
      /// The service account must have the `apikeys.keys.lookup` permission
      /// on the parent project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiKeys.V2.LookupKeyResponse LookupKey(global::Google.Cloud.ApiKeys.V2.LookupKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Find the parent project and resource name of the API
      /// key that matches the key string in the request. If the API key has been
      /// purged, resource name will not be set.
      /// The service account must have the `apikeys.keys.lookup` permission
      /// on the parent project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiKeys.V2.LookupKeyResponse LookupKey(global::Google.Cloud.ApiKeys.V2.LookupKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LookupKey, null, options, request);
      }
      /// <summary>
      /// Find the parent project and resource name of the API
      /// key that matches the key string in the request. If the API key has been
      /// purged, resource name will not be set.
      /// The service account must have the `apikeys.keys.lookup` permission
      /// on the parent project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiKeys.V2.LookupKeyResponse> LookupKeyAsync(global::Google.Cloud.ApiKeys.V2.LookupKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Find the parent project and resource name of the API
      /// key that matches the key string in the request. If the API key has been
      /// purged, resource name will not be set.
      /// The service account must have the `apikeys.keys.lookup` permission
      /// on the parent project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiKeys.V2.LookupKeyResponse> LookupKeyAsync(global::Google.Cloud.ApiKeys.V2.LookupKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LookupKey, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ApiKeysClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ApiKeysClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ApiKeysBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateKey, serviceImpl.CreateKey)
          .AddMethod(__Method_ListKeys, serviceImpl.ListKeys)
          .AddMethod(__Method_GetKey, serviceImpl.GetKey)
          .AddMethod(__Method_GetKeyString, serviceImpl.GetKeyString)
          .AddMethod(__Method_UpdateKey, serviceImpl.UpdateKey)
          .AddMethod(__Method_DeleteKey, serviceImpl.DeleteKey)
          .AddMethod(__Method_UndeleteKey, serviceImpl.UndeleteKey)
          .AddMethod(__Method_LookupKey, serviceImpl.LookupKey).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ApiKeysBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiKeys.V2.CreateKeyRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateKey));
      serviceBinder.AddMethod(__Method_ListKeys, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiKeys.V2.ListKeysRequest, global::Google.Cloud.ApiKeys.V2.ListKeysResponse>(serviceImpl.ListKeys));
      serviceBinder.AddMethod(__Method_GetKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiKeys.V2.GetKeyRequest, global::Google.Cloud.ApiKeys.V2.Key>(serviceImpl.GetKey));
      serviceBinder.AddMethod(__Method_GetKeyString, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiKeys.V2.GetKeyStringRequest, global::Google.Cloud.ApiKeys.V2.GetKeyStringResponse>(serviceImpl.GetKeyString));
      serviceBinder.AddMethod(__Method_UpdateKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiKeys.V2.UpdateKeyRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateKey));
      serviceBinder.AddMethod(__Method_DeleteKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiKeys.V2.DeleteKeyRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteKey));
      serviceBinder.AddMethod(__Method_UndeleteKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiKeys.V2.UndeleteKeyRequest, global::Google.LongRunning.Operation>(serviceImpl.UndeleteKey));
      serviceBinder.AddMethod(__Method_LookupKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiKeys.V2.LookupKeyRequest, global::Google.Cloud.ApiKeys.V2.LookupKeyResponse>(serviceImpl.LookupKey));
    }

  }
}
#endregion
