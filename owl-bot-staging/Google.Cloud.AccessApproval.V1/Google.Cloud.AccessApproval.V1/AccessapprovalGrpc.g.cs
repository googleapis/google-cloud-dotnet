// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/accessapproval/v1/accessapproval.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.AccessApproval.V1 {
  /// <summary>
  /// This API allows a customer to manage accesses to cloud resources by
  /// Google personnel. It defines the following resource model:
  ///
  /// - The API has a collection of
  ///   [ApprovalRequest][google.cloud.accessapproval.v1.ApprovalRequest]
  ///   resources, named `approvalRequests/{approval_request}`
  /// - The API has top-level settings per Project/Folder/Organization, named
  ///   `accessApprovalSettings`
  ///
  /// The service also periodically emails a list of recipients, defined at the
  /// Project/Folder/Organization level in the accessApprovalSettings, when there
  /// is a pending ApprovalRequest for them to act on. The ApprovalRequests can
  /// also optionally be published to a Pub/Sub topic owned by the customer
  /// (contact support if you would like to enable Pub/Sub notifications).
  ///
  /// ApprovalRequests can be approved or dismissed. Google personnel can only
  /// access the indicated resource or resources if the request is approved
  /// (subject to some exclusions:
  /// https://cloud.google.com/access-approval/docs/overview#exclusions).
  ///
  /// Note: Using Access Approval functionality will mean that Google may not be
  /// able to meet the SLAs for your chosen products, as any support response times
  /// may be dramatically increased. As such the SLAs do not apply to any service
  /// disruption to the extent impacted by Customer's use of Access Approval. Do
  /// not enable Access Approval for projects where you may require high service
  /// availability and rapid response by Google Cloud Support.
  ///
  /// After a request is approved or dismissed, no further action may be taken on
  /// it. Requests with the requested_expiration in the past or with no activity
  /// for 14 days are considered dismissed. When an approval expires, the request
  /// is considered dismissed.
  ///
  /// If a request is not approved or dismissed, we call it pending.
  /// </summary>
  public static partial class AccessApproval
  {
    static readonly string __ServiceName = "google.cloud.accessapproval.v1.AccessApproval";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage> __Marshaller_google_cloud_accessapproval_v1_ListApprovalRequestsMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse> __Marshaller_google_cloud_accessapproval_v1_ListApprovalRequestsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage> __Marshaller_google_cloud_accessapproval_v1_GetApprovalRequestMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> __Marshaller_google_cloud_accessapproval_v1_ApprovalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.ApprovalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage> __Marshaller_google_cloud_accessapproval_v1_ApproveApprovalRequestMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage> __Marshaller_google_cloud_accessapproval_v1_DismissApprovalRequestMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage> __Marshaller_google_cloud_accessapproval_v1_InvalidateApprovalRequestMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage> __Marshaller_google_cloud_accessapproval_v1_GetAccessApprovalSettingsMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> __Marshaller_google_cloud_accessapproval_v1_AccessApprovalSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage> __Marshaller_google_cloud_accessapproval_v1_UpdateAccessApprovalSettingsMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage> __Marshaller_google_cloud_accessapproval_v1_DeleteAccessApprovalSettingsMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage> __Marshaller_google_cloud_accessapproval_v1_GetAccessApprovalServiceAccountMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount> __Marshaller_google_cloud_accessapproval_v1_AccessApprovalServiceAccount = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage, global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse> __Method_ListApprovalRequests = new grpc::Method<global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage, global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListApprovalRequests",
        __Marshaller_google_cloud_accessapproval_v1_ListApprovalRequestsMessage,
        __Marshaller_google_cloud_accessapproval_v1_ListApprovalRequestsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest> __Method_GetApprovalRequest = new grpc::Method<global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetApprovalRequest",
        __Marshaller_google_cloud_accessapproval_v1_GetApprovalRequestMessage,
        __Marshaller_google_cloud_accessapproval_v1_ApprovalRequest);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest> __Method_ApproveApprovalRequest = new grpc::Method<global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApproveApprovalRequest",
        __Marshaller_google_cloud_accessapproval_v1_ApproveApprovalRequestMessage,
        __Marshaller_google_cloud_accessapproval_v1_ApprovalRequest);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest> __Method_DismissApprovalRequest = new grpc::Method<global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DismissApprovalRequest",
        __Marshaller_google_cloud_accessapproval_v1_DismissApprovalRequestMessage,
        __Marshaller_google_cloud_accessapproval_v1_ApprovalRequest);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest> __Method_InvalidateApprovalRequest = new grpc::Method<global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InvalidateApprovalRequest",
        __Marshaller_google_cloud_accessapproval_v1_InvalidateApprovalRequestMessage,
        __Marshaller_google_cloud_accessapproval_v1_ApprovalRequest);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> __Method_GetAccessApprovalSettings = new grpc::Method<global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccessApprovalSettings",
        __Marshaller_google_cloud_accessapproval_v1_GetAccessApprovalSettingsMessage,
        __Marshaller_google_cloud_accessapproval_v1_AccessApprovalSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> __Method_UpdateAccessApprovalSettings = new grpc::Method<global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAccessApprovalSettings",
        __Marshaller_google_cloud_accessapproval_v1_UpdateAccessApprovalSettingsMessage,
        __Marshaller_google_cloud_accessapproval_v1_AccessApprovalSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAccessApprovalSettings = new grpc::Method<global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccessApprovalSettings",
        __Marshaller_google_cloud_accessapproval_v1_DeleteAccessApprovalSettingsMessage,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount> __Method_GetAccessApprovalServiceAccount = new grpc::Method<global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccessApprovalServiceAccount",
        __Marshaller_google_cloud_accessapproval_v1_GetAccessApprovalServiceAccountMessage,
        __Marshaller_google_cloud_accessapproval_v1_AccessApprovalServiceAccount);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.AccessApproval.V1.AccessapprovalReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AccessApproval</summary>
    [grpc::BindServiceMethod(typeof(AccessApproval), "BindService")]
    public abstract partial class AccessApprovalBase
    {
      /// <summary>
      /// Lists approval requests associated with a project, folder, or organization.
      /// Approval requests can be filtered by state (pending, active, dismissed).
      /// The order is reverse chronological.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse> ListApprovalRequests(global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an approval request. Returns NOT_FOUND if the request does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> GetApprovalRequest(global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Approves a request and returns the updated ApprovalRequest.
      ///
      /// Returns NOT_FOUND if the request does not exist. Returns
      /// FAILED_PRECONDITION if the request exists but is not in a pending state.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> ApproveApprovalRequest(global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Dismisses a request. Returns the updated ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It is equivalent in effect to ignoring the request
      /// altogether.
      ///
      /// Returns NOT_FOUND if the request does not exist.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in a pending
      /// state.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> DismissApprovalRequest(global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Invalidates an existing ApprovalRequest. Returns the updated
      /// ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It only invalidates a single approval.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in an approved
      /// state.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> InvalidateApprovalRequest(global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the settings associated with a project, folder, or organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> GetAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the settings associated with a project, folder, or organization.
      /// Settings to update are determined by the value of field_mask.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> UpdateAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the settings associated with a project, folder, or organization.
      /// This will have the effect of disabling Access Approval for the project,
      /// folder, or organization, but only if all ancestors also have Access
      /// Approval disabled. If Access Approval is enabled at a higher level of the
      /// hierarchy, then Access Approval will still be enabled at this level as
      /// the settings are inherited.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the service account that is used by Access Approval to access KMS
      /// keys for signing approved approval requests.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount> GetAccessApprovalServiceAccount(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AccessApproval</summary>
    public partial class AccessApprovalClient : grpc::ClientBase<AccessApprovalClient>
    {
      /// <summary>Creates a new client for AccessApproval</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AccessApprovalClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AccessApproval that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AccessApprovalClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AccessApprovalClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AccessApprovalClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists approval requests associated with a project, folder, or organization.
      /// Approval requests can be filtered by state (pending, active, dismissed).
      /// The order is reverse chronological.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse ListApprovalRequests(global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListApprovalRequests(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists approval requests associated with a project, folder, or organization.
      /// Approval requests can be filtered by state (pending, active, dismissed).
      /// The order is reverse chronological.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse ListApprovalRequests(global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListApprovalRequests, null, options, request);
      }
      /// <summary>
      /// Lists approval requests associated with a project, folder, or organization.
      /// Approval requests can be filtered by state (pending, active, dismissed).
      /// The order is reverse chronological.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse> ListApprovalRequestsAsync(global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListApprovalRequestsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists approval requests associated with a project, folder, or organization.
      /// Approval requests can be filtered by state (pending, active, dismissed).
      /// The order is reverse chronological.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse> ListApprovalRequestsAsync(global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListApprovalRequests, null, options, request);
      }
      /// <summary>
      /// Gets an approval request. Returns NOT_FOUND if the request does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ApprovalRequest GetApprovalRequest(global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetApprovalRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an approval request. Returns NOT_FOUND if the request does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ApprovalRequest GetApprovalRequest(global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetApprovalRequest, null, options, request);
      }
      /// <summary>
      /// Gets an approval request. Returns NOT_FOUND if the request does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> GetApprovalRequestAsync(global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetApprovalRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an approval request. Returns NOT_FOUND if the request does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> GetApprovalRequestAsync(global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetApprovalRequest, null, options, request);
      }
      /// <summary>
      /// Approves a request and returns the updated ApprovalRequest.
      ///
      /// Returns NOT_FOUND if the request does not exist. Returns
      /// FAILED_PRECONDITION if the request exists but is not in a pending state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ApprovalRequest ApproveApprovalRequest(global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApproveApprovalRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Approves a request and returns the updated ApprovalRequest.
      ///
      /// Returns NOT_FOUND if the request does not exist. Returns
      /// FAILED_PRECONDITION if the request exists but is not in a pending state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ApprovalRequest ApproveApprovalRequest(global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ApproveApprovalRequest, null, options, request);
      }
      /// <summary>
      /// Approves a request and returns the updated ApprovalRequest.
      ///
      /// Returns NOT_FOUND if the request does not exist. Returns
      /// FAILED_PRECONDITION if the request exists but is not in a pending state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> ApproveApprovalRequestAsync(global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApproveApprovalRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Approves a request and returns the updated ApprovalRequest.
      ///
      /// Returns NOT_FOUND if the request does not exist. Returns
      /// FAILED_PRECONDITION if the request exists but is not in a pending state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> ApproveApprovalRequestAsync(global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ApproveApprovalRequest, null, options, request);
      }
      /// <summary>
      /// Dismisses a request. Returns the updated ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It is equivalent in effect to ignoring the request
      /// altogether.
      ///
      /// Returns NOT_FOUND if the request does not exist.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in a pending
      /// state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ApprovalRequest DismissApprovalRequest(global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DismissApprovalRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Dismisses a request. Returns the updated ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It is equivalent in effect to ignoring the request
      /// altogether.
      ///
      /// Returns NOT_FOUND if the request does not exist.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in a pending
      /// state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ApprovalRequest DismissApprovalRequest(global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DismissApprovalRequest, null, options, request);
      }
      /// <summary>
      /// Dismisses a request. Returns the updated ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It is equivalent in effect to ignoring the request
      /// altogether.
      ///
      /// Returns NOT_FOUND if the request does not exist.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in a pending
      /// state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> DismissApprovalRequestAsync(global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DismissApprovalRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Dismisses a request. Returns the updated ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It is equivalent in effect to ignoring the request
      /// altogether.
      ///
      /// Returns NOT_FOUND if the request does not exist.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in a pending
      /// state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> DismissApprovalRequestAsync(global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DismissApprovalRequest, null, options, request);
      }
      /// <summary>
      /// Invalidates an existing ApprovalRequest. Returns the updated
      /// ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It only invalidates a single approval.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in an approved
      /// state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ApprovalRequest InvalidateApprovalRequest(global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InvalidateApprovalRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Invalidates an existing ApprovalRequest. Returns the updated
      /// ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It only invalidates a single approval.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in an approved
      /// state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.ApprovalRequest InvalidateApprovalRequest(global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InvalidateApprovalRequest, null, options, request);
      }
      /// <summary>
      /// Invalidates an existing ApprovalRequest. Returns the updated
      /// ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It only invalidates a single approval.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in an approved
      /// state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> InvalidateApprovalRequestAsync(global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InvalidateApprovalRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Invalidates an existing ApprovalRequest. Returns the updated
      /// ApprovalRequest.
      ///
      /// NOTE: This does not deny access to the resource if another request has been
      /// made and approved. It only invalidates a single approval.
      ///
      /// Returns FAILED_PRECONDITION if the request exists but is not in an approved
      /// state.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.ApprovalRequest> InvalidateApprovalRequestAsync(global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InvalidateApprovalRequest, null, options, request);
      }
      /// <summary>
      /// Gets the settings associated with a project, folder, or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings GetAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessApprovalSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the settings associated with a project, folder, or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings GetAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccessApprovalSettings, null, options, request);
      }
      /// <summary>
      /// Gets the settings associated with a project, folder, or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> GetAccessApprovalSettingsAsync(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessApprovalSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the settings associated with a project, folder, or organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> GetAccessApprovalSettingsAsync(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccessApprovalSettings, null, options, request);
      }
      /// <summary>
      /// Updates the settings associated with a project, folder, or organization.
      /// Settings to update are determined by the value of field_mask.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings UpdateAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccessApprovalSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the settings associated with a project, folder, or organization.
      /// Settings to update are determined by the value of field_mask.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings UpdateAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAccessApprovalSettings, null, options, request);
      }
      /// <summary>
      /// Updates the settings associated with a project, folder, or organization.
      /// Settings to update are determined by the value of field_mask.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> UpdateAccessApprovalSettingsAsync(global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccessApprovalSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the settings associated with a project, folder, or organization.
      /// Settings to update are determined by the value of field_mask.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings> UpdateAccessApprovalSettingsAsync(global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAccessApprovalSettings, null, options, request);
      }
      /// <summary>
      /// Deletes the settings associated with a project, folder, or organization.
      /// This will have the effect of disabling Access Approval for the project,
      /// folder, or organization, but only if all ancestors also have Access
      /// Approval disabled. If Access Approval is enabled at a higher level of the
      /// hierarchy, then Access Approval will still be enabled at this level as
      /// the settings are inherited.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccessApprovalSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the settings associated with a project, folder, or organization.
      /// This will have the effect of disabling Access Approval for the project,
      /// folder, or organization, but only if all ancestors also have Access
      /// Approval disabled. If Access Approval is enabled at a higher level of the
      /// hierarchy, then Access Approval will still be enabled at this level as
      /// the settings are inherited.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccessApprovalSettings(global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccessApprovalSettings, null, options, request);
      }
      /// <summary>
      /// Deletes the settings associated with a project, folder, or organization.
      /// This will have the effect of disabling Access Approval for the project,
      /// folder, or organization, but only if all ancestors also have Access
      /// Approval disabled. If Access Approval is enabled at a higher level of the
      /// hierarchy, then Access Approval will still be enabled at this level as
      /// the settings are inherited.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccessApprovalSettingsAsync(global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccessApprovalSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the settings associated with a project, folder, or organization.
      /// This will have the effect of disabling Access Approval for the project,
      /// folder, or organization, but only if all ancestors also have Access
      /// Approval disabled. If Access Approval is enabled at a higher level of the
      /// hierarchy, then Access Approval will still be enabled at this level as
      /// the settings are inherited.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccessApprovalSettingsAsync(global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccessApprovalSettings, null, options, request);
      }
      /// <summary>
      /// Retrieves the service account that is used by Access Approval to access KMS
      /// keys for signing approved approval requests.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount GetAccessApprovalServiceAccount(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessApprovalServiceAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the service account that is used by Access Approval to access KMS
      /// keys for signing approved approval requests.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount GetAccessApprovalServiceAccount(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccessApprovalServiceAccount, null, options, request);
      }
      /// <summary>
      /// Retrieves the service account that is used by Access Approval to access KMS
      /// keys for signing approved approval requests.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount> GetAccessApprovalServiceAccountAsync(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccessApprovalServiceAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the service account that is used by Access Approval to access KMS
      /// keys for signing approved approval requests.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount> GetAccessApprovalServiceAccountAsync(global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccessApprovalServiceAccount, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AccessApprovalClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AccessApprovalClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AccessApprovalBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListApprovalRequests, serviceImpl.ListApprovalRequests)
          .AddMethod(__Method_GetApprovalRequest, serviceImpl.GetApprovalRequest)
          .AddMethod(__Method_ApproveApprovalRequest, serviceImpl.ApproveApprovalRequest)
          .AddMethod(__Method_DismissApprovalRequest, serviceImpl.DismissApprovalRequest)
          .AddMethod(__Method_InvalidateApprovalRequest, serviceImpl.InvalidateApprovalRequest)
          .AddMethod(__Method_GetAccessApprovalSettings, serviceImpl.GetAccessApprovalSettings)
          .AddMethod(__Method_UpdateAccessApprovalSettings, serviceImpl.UpdateAccessApprovalSettings)
          .AddMethod(__Method_DeleteAccessApprovalSettings, serviceImpl.DeleteAccessApprovalSettings)
          .AddMethod(__Method_GetAccessApprovalServiceAccount, serviceImpl.GetAccessApprovalServiceAccount).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AccessApprovalBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListApprovalRequests, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsMessage, global::Google.Cloud.AccessApproval.V1.ListApprovalRequestsResponse>(serviceImpl.ListApprovalRequests));
      serviceBinder.AddMethod(__Method_GetApprovalRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.GetApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest>(serviceImpl.GetApprovalRequest));
      serviceBinder.AddMethod(__Method_ApproveApprovalRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.ApproveApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest>(serviceImpl.ApproveApprovalRequest));
      serviceBinder.AddMethod(__Method_DismissApprovalRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.DismissApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest>(serviceImpl.DismissApprovalRequest));
      serviceBinder.AddMethod(__Method_InvalidateApprovalRequest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.InvalidateApprovalRequestMessage, global::Google.Cloud.AccessApproval.V1.ApprovalRequest>(serviceImpl.InvalidateApprovalRequest));
      serviceBinder.AddMethod(__Method_GetAccessApprovalSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.GetAccessApprovalSettingsMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings>(serviceImpl.GetAccessApprovalSettings));
      serviceBinder.AddMethod(__Method_UpdateAccessApprovalSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.UpdateAccessApprovalSettingsMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalSettings>(serviceImpl.UpdateAccessApprovalSettings));
      serviceBinder.AddMethod(__Method_DeleteAccessApprovalSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.DeleteAccessApprovalSettingsMessage, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAccessApprovalSettings));
      serviceBinder.AddMethod(__Method_GetAccessApprovalServiceAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AccessApproval.V1.GetAccessApprovalServiceAccountMessage, global::Google.Cloud.AccessApproval.V1.AccessApprovalServiceAccount>(serviceImpl.GetAccessApprovalServiceAccount));
    }

  }
}
#endregion
