// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/routing/v2/speed_reading_interval.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Maps.Routing.V2 {

  /// <summary>Holder for reflection information generated from google/maps/routing/v2/speed_reading_interval.proto</summary>
  public static partial class SpeedReadingIntervalReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/routing/v2/speed_reading_interval.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpeedReadingIntervalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNnb29nbGUvbWFwcy9yb3V0aW5nL3YyL3NwZWVkX3JlYWRpbmdfaW50ZXJ2",
            "YWwucHJvdG8SFmdvb2dsZS5tYXBzLnJvdXRpbmcudjIivAIKFFNwZWVkUmVh",
            "ZGluZ0ludGVydmFsEicKGnN0YXJ0X3BvbHlsaW5lX3BvaW50X2luZGV4GAEg",
            "ASgFSAGIAQESJQoYZW5kX3BvbHlsaW5lX3BvaW50X2luZGV4GAIgASgFSAKI",
            "AQESQwoFc3BlZWQYAyABKA4yMi5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlNw",
            "ZWVkUmVhZGluZ0ludGVydmFsLlNwZWVkSAAiRQoFU3BlZWQSFQoRU1BFRURf",
            "VU5TUEVDSUZJRUQQABIKCgZOT1JNQUwQARIICgRTTE9XEAISDwoLVFJBRkZJ",
            "Q19KQU0QA0IMCgpzcGVlZF90eXBlQh0KG19zdGFydF9wb2x5bGluZV9wb2lu",
            "dF9pbmRleEIbChlfZW5kX3BvbHlsaW5lX3BvaW50X2luZGV4QssBChpjb20u",
            "Z29vZ2xlLm1hcHMucm91dGluZy52MkIZU3BlZWRSZWFkaW5nSW50ZXJ2YWxQ",
            "cm90b1ABWjpjbG91ZC5nb29nbGUuY29tL2dvL21hcHMvcm91dGluZy9hcGl2",
            "Mi9yb3V0aW5ncGI7cm91dGluZ3BiogIFR01SVjKqAhZHb29nbGUuTWFwcy5S",
            "b3V0aW5nLlYyygIWR29vZ2xlXE1hcHNcUm91dGluZ1xWMuoCGUdvb2dsZTo6",
            "TWFwczo6Um91dGluZzo6VjJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Routing.V2.SpeedReadingInterval), global::Google.Maps.Routing.V2.SpeedReadingInterval.Parser, new[]{ "StartPolylinePointIndex", "EndPolylinePointIndex", "Speed" }, new[]{ "SpeedType", "StartPolylinePointIndex", "EndPolylinePointIndex" }, new[]{ typeof(global::Google.Maps.Routing.V2.SpeedReadingInterval.Types.Speed) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Traffic density indicator on a contiguous segment of a polyline or path.
  /// Given a path with points P_0, P_1, ... , P_N (zero-based index), the
  /// `SpeedReadingInterval` defines an interval and describes its traffic using
  /// the following categories.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SpeedReadingInterval : pb::IMessage<SpeedReadingInterval>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpeedReadingInterval> _parser = new pb::MessageParser<SpeedReadingInterval>(() => new SpeedReadingInterval());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpeedReadingInterval> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Maps.Routing.V2.SpeedReadingIntervalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeedReadingInterval() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeedReadingInterval(SpeedReadingInterval other) : this() {
      _hasBits0 = other._hasBits0;
      startPolylinePointIndex_ = other.startPolylinePointIndex_;
      endPolylinePointIndex_ = other.endPolylinePointIndex_;
      switch (other.SpeedTypeCase) {
        case SpeedTypeOneofCase.Speed:
          Speed = other.Speed;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeedReadingInterval Clone() {
      return new SpeedReadingInterval(this);
    }

    /// <summary>Field number for the "start_polyline_point_index" field.</summary>
    public const int StartPolylinePointIndexFieldNumber = 1;
    private readonly static int StartPolylinePointIndexDefaultValue = 0;

    private int startPolylinePointIndex_;
    /// <summary>
    /// The starting index of this interval in the polyline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StartPolylinePointIndex {
      get { if ((_hasBits0 & 1) != 0) { return startPolylinePointIndex_; } else { return StartPolylinePointIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startPolylinePointIndex_ = value;
      }
    }
    /// <summary>Gets whether the "start_polyline_point_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartPolylinePointIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_polyline_point_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartPolylinePointIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "end_polyline_point_index" field.</summary>
    public const int EndPolylinePointIndexFieldNumber = 2;
    private readonly static int EndPolylinePointIndexDefaultValue = 0;

    private int endPolylinePointIndex_;
    /// <summary>
    /// The ending index of this interval in the polyline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EndPolylinePointIndex {
      get { if ((_hasBits0 & 2) != 0) { return endPolylinePointIndex_; } else { return EndPolylinePointIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        endPolylinePointIndex_ = value;
      }
    }
    /// <summary>Gets whether the "end_polyline_point_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEndPolylinePointIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "end_polyline_point_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEndPolylinePointIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 3;
    /// <summary>
    /// Traffic speed in this interval.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Routing.V2.SpeedReadingInterval.Types.Speed Speed {
      get { return HasSpeed ? (global::Google.Maps.Routing.V2.SpeedReadingInterval.Types.Speed) speedType_ : global::Google.Maps.Routing.V2.SpeedReadingInterval.Types.Speed.Unspecified; }
      set {
        speedType_ = value;
        speedTypeCase_ = SpeedTypeOneofCase.Speed;
      }
    }
    /// <summary>Gets whether the "speed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpeed {
      get { return speedTypeCase_ == SpeedTypeOneofCase.Speed; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "speed" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpeed() {
      if (HasSpeed) {
        ClearSpeedType();
      }
    }

    private object speedType_;
    /// <summary>Enum of possible cases for the "speed_type" oneof.</summary>
    public enum SpeedTypeOneofCase {
      None = 0,
      Speed = 3,
    }
    private SpeedTypeOneofCase speedTypeCase_ = SpeedTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeedTypeOneofCase SpeedTypeCase {
      get { return speedTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpeedType() {
      speedTypeCase_ = SpeedTypeOneofCase.None;
      speedType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpeedReadingInterval);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpeedReadingInterval other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartPolylinePointIndex != other.StartPolylinePointIndex) return false;
      if (EndPolylinePointIndex != other.EndPolylinePointIndex) return false;
      if (Speed != other.Speed) return false;
      if (SpeedTypeCase != other.SpeedTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStartPolylinePointIndex) hash ^= StartPolylinePointIndex.GetHashCode();
      if (HasEndPolylinePointIndex) hash ^= EndPolylinePointIndex.GetHashCode();
      if (HasSpeed) hash ^= Speed.GetHashCode();
      hash ^= (int) speedTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStartPolylinePointIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartPolylinePointIndex);
      }
      if (HasEndPolylinePointIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(EndPolylinePointIndex);
      }
      if (HasSpeed) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStartPolylinePointIndex) {
        output.WriteRawTag(8);
        output.WriteInt32(StartPolylinePointIndex);
      }
      if (HasEndPolylinePointIndex) {
        output.WriteRawTag(16);
        output.WriteInt32(EndPolylinePointIndex);
      }
      if (HasSpeed) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Speed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStartPolylinePointIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartPolylinePointIndex);
      }
      if (HasEndPolylinePointIndex) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndPolylinePointIndex);
      }
      if (HasSpeed) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Speed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpeedReadingInterval other) {
      if (other == null) {
        return;
      }
      if (other.HasStartPolylinePointIndex) {
        StartPolylinePointIndex = other.StartPolylinePointIndex;
      }
      if (other.HasEndPolylinePointIndex) {
        EndPolylinePointIndex = other.EndPolylinePointIndex;
      }
      switch (other.SpeedTypeCase) {
        case SpeedTypeOneofCase.Speed:
          Speed = other.Speed;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartPolylinePointIndex = input.ReadInt32();
            break;
          }
          case 16: {
            EndPolylinePointIndex = input.ReadInt32();
            break;
          }
          case 24: {
            speedType_ = input.ReadEnum();
            speedTypeCase_ = SpeedTypeOneofCase.Speed;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartPolylinePointIndex = input.ReadInt32();
            break;
          }
          case 16: {
            EndPolylinePointIndex = input.ReadInt32();
            break;
          }
          case 24: {
            speedType_ = input.ReadEnum();
            speedTypeCase_ = SpeedTypeOneofCase.Speed;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SpeedReadingInterval message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The classification of polyline speed based on traffic data.
      /// </summary>
      public enum Speed {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("SPEED_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Normal speed, no slowdown is detected.
        /// </summary>
        [pbr::OriginalName("NORMAL")] Normal = 1,
        /// <summary>
        /// Slowdown detected, but no traffic jam formed.
        /// </summary>
        [pbr::OriginalName("SLOW")] Slow = 2,
        /// <summary>
        /// Traffic jam detected.
        /// </summary>
        [pbr::OriginalName("TRAFFIC_JAM")] TrafficJam = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
