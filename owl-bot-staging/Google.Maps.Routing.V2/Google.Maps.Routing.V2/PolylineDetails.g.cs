// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/routing/v2/polyline_details.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Maps.Routing.V2 {

  /// <summary>Holder for reflection information generated from google/maps/routing/v2/polyline_details.proto</summary>
  public static partial class PolylineDetailsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/routing/v2/polyline_details.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PolylineDetailsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvbWFwcy9yb3V0aW5nL3YyL3BvbHlsaW5lX2RldGFpbHMucHJv",
            "dG8SFmdvb2dsZS5tYXBzLnJvdXRpbmcudjIaH2dvb2dsZS9hcGkvZmllbGRf",
            "YmVoYXZpb3IucHJvdG8i+QUKD1BvbHlsaW5lRGV0YWlscxJJCgxmbHlvdmVy",
            "X2luZm8YDCADKAsyMy5nb29nbGUubWFwcy5yb3V0aW5nLnYyLlBvbHlsaW5l",
            "RGV0YWlscy5GbHlvdmVySW5mbxJQChBuYXJyb3dfcm9hZF9pbmZvGA0gAygL",
            "MjYuZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Qb2x5bGluZURldGFpbHMuTmFy",
            "cm93Um9hZEluZm8aZAoSUG9seWxpbmVQb2ludEluZGV4EhgKC3N0YXJ0X2lu",
            "ZGV4GAEgASgFSACIAQESFgoJZW5kX2luZGV4GAIgASgFSAGIAQFCDgoMX3N0",
            "YXJ0X2luZGV4QgwKCl9lbmRfaW5kZXgawAEKC0ZseW92ZXJJbmZvElcKEGZs",
            "eW92ZXJfcHJlc2VuY2UYASABKA4yOC5nb29nbGUubWFwcy5yb3V0aW5nLnYy",
            "LlBvbHlsaW5lRGV0YWlscy5Sb2FkRmVhdHVyZVN0YXRlQgPgQQMSWAoUcG9s",
            "eWxpbmVfcG9pbnRfaW5kZXgYAiABKAsyOi5nb29nbGUubWFwcy5yb3V0aW5n",
            "LnYyLlBvbHlsaW5lRGV0YWlscy5Qb2x5bGluZVBvaW50SW5kZXgaxwEKDk5h",
            "cnJvd1JvYWRJbmZvElsKFG5hcnJvd19yb2FkX3ByZXNlbmNlGAEgASgOMjgu",
            "Z29vZ2xlLm1hcHMucm91dGluZy52Mi5Qb2x5bGluZURldGFpbHMuUm9hZEZl",
            "YXR1cmVTdGF0ZUID4EEDElgKFHBvbHlsaW5lX3BvaW50X2luZGV4GAIgASgL",
            "MjouZ29vZ2xlLm1hcHMucm91dGluZy52Mi5Qb2x5bGluZURldGFpbHMuUG9s",
            "eWxpbmVQb2ludEluZGV4IlYKEFJvYWRGZWF0dXJlU3RhdGUSIgoeUk9BRF9G",
            "RUFUVVJFX1NUQVRFX1VOU1BFQ0lGSUVEEAASCgoGRVhJU1RTEAESEgoORE9F",
            "U19OT1RfRVhJU1QQAkLGAQoaY29tLmdvb2dsZS5tYXBzLnJvdXRpbmcudjJC",
            "FFBvbHlsaW5lRGV0YWlsc1Byb3RvUAFaOmNsb3VkLmdvb2dsZS5jb20vZ28v",
            "bWFwcy9yb3V0aW5nL2FwaXYyL3JvdXRpbmdwYjtyb3V0aW5ncGKiAgVHTVJW",
            "MqoCFkdvb2dsZS5NYXBzLlJvdXRpbmcuVjLKAhZHb29nbGVcTWFwc1xSb3V0",
            "aW5nXFYy6gIZR29vZ2xlOjpNYXBzOjpSb3V0aW5nOjpWMmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Routing.V2.PolylineDetails), global::Google.Maps.Routing.V2.PolylineDetails.Parser, new[]{ "FlyoverInfo", "NarrowRoadInfo" }, null, new[]{ typeof(global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex), global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex.Parser, new[]{ "StartIndex", "EndIndex" }, new[]{ "StartIndex", "EndIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Routing.V2.PolylineDetails.Types.FlyoverInfo), global::Google.Maps.Routing.V2.PolylineDetails.Types.FlyoverInfo.Parser, new[]{ "FlyoverPresence", "PolylinePointIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Routing.V2.PolylineDetails.Types.NarrowRoadInfo), global::Google.Maps.Routing.V2.PolylineDetails.Types.NarrowRoadInfo.Parser, new[]{ "NarrowRoadPresence", "PolylinePointIndex" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Details corresponding to a given index or contiguous segment of a polyline.
  /// Given a polyline with points P_0, P_1, ... , P_N (zero-based index), the
  /// `PolylineDetails` defines an interval and associated metadata.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PolylineDetails : pb::IMessage<PolylineDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PolylineDetails> _parser = new pb::MessageParser<PolylineDetails>(() => new PolylineDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PolylineDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Maps.Routing.V2.PolylineDetailsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolylineDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolylineDetails(PolylineDetails other) : this() {
      flyoverInfo_ = other.flyoverInfo_.Clone();
      narrowRoadInfo_ = other.narrowRoadInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PolylineDetails Clone() {
      return new PolylineDetails(this);
    }

    /// <summary>Field number for the "flyover_info" field.</summary>
    public const int FlyoverInfoFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Maps.Routing.V2.PolylineDetails.Types.FlyoverInfo> _repeated_flyoverInfo_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Maps.Routing.V2.PolylineDetails.Types.FlyoverInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Routing.V2.PolylineDetails.Types.FlyoverInfo> flyoverInfo_ = new pbc::RepeatedField<global::Google.Maps.Routing.V2.PolylineDetails.Types.FlyoverInfo>();
    /// <summary>
    /// Flyover details along the polyline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Routing.V2.PolylineDetails.Types.FlyoverInfo> FlyoverInfo {
      get { return flyoverInfo_; }
    }

    /// <summary>Field number for the "narrow_road_info" field.</summary>
    public const int NarrowRoadInfoFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Google.Maps.Routing.V2.PolylineDetails.Types.NarrowRoadInfo> _repeated_narrowRoadInfo_codec
        = pb::FieldCodec.ForMessage(106, global::Google.Maps.Routing.V2.PolylineDetails.Types.NarrowRoadInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Routing.V2.PolylineDetails.Types.NarrowRoadInfo> narrowRoadInfo_ = new pbc::RepeatedField<global::Google.Maps.Routing.V2.PolylineDetails.Types.NarrowRoadInfo>();
    /// <summary>
    /// Narrow road details along the polyline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Routing.V2.PolylineDetails.Types.NarrowRoadInfo> NarrowRoadInfo {
      get { return narrowRoadInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PolylineDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PolylineDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!flyoverInfo_.Equals(other.flyoverInfo_)) return false;
      if(!narrowRoadInfo_.Equals(other.narrowRoadInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= flyoverInfo_.GetHashCode();
      hash ^= narrowRoadInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      flyoverInfo_.WriteTo(output, _repeated_flyoverInfo_codec);
      narrowRoadInfo_.WriteTo(output, _repeated_narrowRoadInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      flyoverInfo_.WriteTo(ref output, _repeated_flyoverInfo_codec);
      narrowRoadInfo_.WriteTo(ref output, _repeated_narrowRoadInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += flyoverInfo_.CalculateSize(_repeated_flyoverInfo_codec);
      size += narrowRoadInfo_.CalculateSize(_repeated_narrowRoadInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PolylineDetails other) {
      if (other == null) {
        return;
      }
      flyoverInfo_.Add(other.flyoverInfo_);
      narrowRoadInfo_.Add(other.narrowRoadInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 98: {
            flyoverInfo_.AddEntriesFrom(input, _repeated_flyoverInfo_codec);
            break;
          }
          case 106: {
            narrowRoadInfo_.AddEntriesFrom(input, _repeated_narrowRoadInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 98: {
            flyoverInfo_.AddEntriesFrom(ref input, _repeated_flyoverInfo_codec);
            break;
          }
          case 106: {
            narrowRoadInfo_.AddEntriesFrom(ref input, _repeated_narrowRoadInfo_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PolylineDetails message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Encapsulates the states of road features along a stretch of polyline.
      /// </summary>
      public enum RoadFeatureState {
        /// <summary>
        /// The road feature's state was not computed (default value).
        /// </summary>
        [pbr::OriginalName("ROAD_FEATURE_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The road feature exists.
        /// </summary>
        [pbr::OriginalName("EXISTS")] Exists = 1,
        /// <summary>
        /// The road feature does not exist.
        /// </summary>
        [pbr::OriginalName("DOES_NOT_EXIST")] DoesNotExist = 2,
      }

      /// <summary>
      /// Encapsulates the start and end indexes for a polyline detail.
      /// For instances where the data corresponds to a single point, `start_index`
      /// and `end_index` will be equal.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PolylinePointIndex : pb::IMessage<PolylinePointIndex>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PolylinePointIndex> _parser = new pb::MessageParser<PolylinePointIndex>(() => new PolylinePointIndex());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PolylinePointIndex> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Routing.V2.PolylineDetails.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PolylinePointIndex() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PolylinePointIndex(PolylinePointIndex other) : this() {
          _hasBits0 = other._hasBits0;
          startIndex_ = other.startIndex_;
          endIndex_ = other.endIndex_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PolylinePointIndex Clone() {
          return new PolylinePointIndex(this);
        }

        /// <summary>Field number for the "start_index" field.</summary>
        public const int StartIndexFieldNumber = 1;
        private readonly static int StartIndexDefaultValue = 0;

        private int startIndex_;
        /// <summary>
        /// The start index of this detail in the polyline.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int StartIndex {
          get { if ((_hasBits0 & 1) != 0) { return startIndex_; } else { return StartIndexDefaultValue; } }
          set {
            _hasBits0 |= 1;
            startIndex_ = value;
          }
        }
        /// <summary>Gets whether the "start_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStartIndex {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "start_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStartIndex() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "end_index" field.</summary>
        public const int EndIndexFieldNumber = 2;
        private readonly static int EndIndexDefaultValue = 0;

        private int endIndex_;
        /// <summary>
        /// The end index of this detail in the polyline.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int EndIndex {
          get { if ((_hasBits0 & 2) != 0) { return endIndex_; } else { return EndIndexDefaultValue; } }
          set {
            _hasBits0 |= 2;
            endIndex_ = value;
          }
        }
        /// <summary>Gets whether the "end_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasEndIndex {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "end_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearEndIndex() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PolylinePointIndex);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PolylinePointIndex other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StartIndex != other.StartIndex) return false;
          if (EndIndex != other.EndIndex) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasStartIndex) hash ^= StartIndex.GetHashCode();
          if (HasEndIndex) hash ^= EndIndex.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasStartIndex) {
            output.WriteRawTag(8);
            output.WriteInt32(StartIndex);
          }
          if (HasEndIndex) {
            output.WriteRawTag(16);
            output.WriteInt32(EndIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasStartIndex) {
            output.WriteRawTag(8);
            output.WriteInt32(StartIndex);
          }
          if (HasEndIndex) {
            output.WriteRawTag(16);
            output.WriteInt32(EndIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasStartIndex) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartIndex);
          }
          if (HasEndIndex) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndIndex);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PolylinePointIndex other) {
          if (other == null) {
            return;
          }
          if (other.HasStartIndex) {
            StartIndex = other.StartIndex;
          }
          if (other.HasEndIndex) {
            EndIndex = other.EndIndex;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                StartIndex = input.ReadInt32();
                break;
              }
              case 16: {
                EndIndex = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                StartIndex = input.ReadInt32();
                break;
              }
              case 16: {
                EndIndex = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Encapsulates information about flyovers along the polyline.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class FlyoverInfo : pb::IMessage<FlyoverInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FlyoverInfo> _parser = new pb::MessageParser<FlyoverInfo>(() => new FlyoverInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<FlyoverInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Routing.V2.PolylineDetails.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FlyoverInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FlyoverInfo(FlyoverInfo other) : this() {
          flyoverPresence_ = other.flyoverPresence_;
          polylinePointIndex_ = other.polylinePointIndex_ != null ? other.polylinePointIndex_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FlyoverInfo Clone() {
          return new FlyoverInfo(this);
        }

        /// <summary>Field number for the "flyover_presence" field.</summary>
        public const int FlyoverPresenceFieldNumber = 1;
        private global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState flyoverPresence_ = global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified;
        /// <summary>
        /// Output only. Denotes whether a flyover exists for a given stretch of the
        /// polyline.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState FlyoverPresence {
          get { return flyoverPresence_; }
          set {
            flyoverPresence_ = value;
          }
        }

        /// <summary>Field number for the "polyline_point_index" field.</summary>
        public const int PolylinePointIndexFieldNumber = 2;
        private global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex polylinePointIndex_;
        /// <summary>
        /// The location of flyover related information along the polyline.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex PolylinePointIndex {
          get { return polylinePointIndex_; }
          set {
            polylinePointIndex_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as FlyoverInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(FlyoverInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FlyoverPresence != other.FlyoverPresence) return false;
          if (!object.Equals(PolylinePointIndex, other.PolylinePointIndex)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (FlyoverPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) hash ^= FlyoverPresence.GetHashCode();
          if (polylinePointIndex_ != null) hash ^= PolylinePointIndex.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (FlyoverPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) FlyoverPresence);
          }
          if (polylinePointIndex_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PolylinePointIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (FlyoverPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) FlyoverPresence);
          }
          if (polylinePointIndex_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PolylinePointIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (FlyoverPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FlyoverPresence);
          }
          if (polylinePointIndex_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PolylinePointIndex);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(FlyoverInfo other) {
          if (other == null) {
            return;
          }
          if (other.FlyoverPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) {
            FlyoverPresence = other.FlyoverPresence;
          }
          if (other.polylinePointIndex_ != null) {
            if (polylinePointIndex_ == null) {
              PolylinePointIndex = new global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex();
            }
            PolylinePointIndex.MergeFrom(other.PolylinePointIndex);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                FlyoverPresence = (global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState) input.ReadEnum();
                break;
              }
              case 18: {
                if (polylinePointIndex_ == null) {
                  PolylinePointIndex = new global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex();
                }
                input.ReadMessage(PolylinePointIndex);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                FlyoverPresence = (global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState) input.ReadEnum();
                break;
              }
              case 18: {
                if (polylinePointIndex_ == null) {
                  PolylinePointIndex = new global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex();
                }
                input.ReadMessage(PolylinePointIndex);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Encapsulates information about narrow roads along the polyline.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class NarrowRoadInfo : pb::IMessage<NarrowRoadInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NarrowRoadInfo> _parser = new pb::MessageParser<NarrowRoadInfo>(() => new NarrowRoadInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NarrowRoadInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Routing.V2.PolylineDetails.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NarrowRoadInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NarrowRoadInfo(NarrowRoadInfo other) : this() {
          narrowRoadPresence_ = other.narrowRoadPresence_;
          polylinePointIndex_ = other.polylinePointIndex_ != null ? other.polylinePointIndex_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NarrowRoadInfo Clone() {
          return new NarrowRoadInfo(this);
        }

        /// <summary>Field number for the "narrow_road_presence" field.</summary>
        public const int NarrowRoadPresenceFieldNumber = 1;
        private global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState narrowRoadPresence_ = global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified;
        /// <summary>
        /// Output only. Denotes whether a narrow road exists for a given stretch of
        /// the polyline.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState NarrowRoadPresence {
          get { return narrowRoadPresence_; }
          set {
            narrowRoadPresence_ = value;
          }
        }

        /// <summary>Field number for the "polyline_point_index" field.</summary>
        public const int PolylinePointIndexFieldNumber = 2;
        private global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex polylinePointIndex_;
        /// <summary>
        /// The location of narrow road related information along the polyline.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex PolylinePointIndex {
          get { return polylinePointIndex_; }
          set {
            polylinePointIndex_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as NarrowRoadInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NarrowRoadInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (NarrowRoadPresence != other.NarrowRoadPresence) return false;
          if (!object.Equals(PolylinePointIndex, other.PolylinePointIndex)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (NarrowRoadPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) hash ^= NarrowRoadPresence.GetHashCode();
          if (polylinePointIndex_ != null) hash ^= PolylinePointIndex.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (NarrowRoadPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) NarrowRoadPresence);
          }
          if (polylinePointIndex_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PolylinePointIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (NarrowRoadPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) NarrowRoadPresence);
          }
          if (polylinePointIndex_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(PolylinePointIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (NarrowRoadPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NarrowRoadPresence);
          }
          if (polylinePointIndex_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PolylinePointIndex);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NarrowRoadInfo other) {
          if (other == null) {
            return;
          }
          if (other.NarrowRoadPresence != global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState.Unspecified) {
            NarrowRoadPresence = other.NarrowRoadPresence;
          }
          if (other.polylinePointIndex_ != null) {
            if (polylinePointIndex_ == null) {
              PolylinePointIndex = new global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex();
            }
            PolylinePointIndex.MergeFrom(other.PolylinePointIndex);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                NarrowRoadPresence = (global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState) input.ReadEnum();
                break;
              }
              case 18: {
                if (polylinePointIndex_ == null) {
                  PolylinePointIndex = new global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex();
                }
                input.ReadMessage(PolylinePointIndex);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                NarrowRoadPresence = (global::Google.Maps.Routing.V2.PolylineDetails.Types.RoadFeatureState) input.ReadEnum();
                break;
              }
              case 18: {
                if (polylinePointIndex_ == null) {
                  PolylinePointIndex = new global::Google.Maps.Routing.V2.PolylineDetails.Types.PolylinePointIndex();
                }
                input.ReadMessage(PolylinePointIndex);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
