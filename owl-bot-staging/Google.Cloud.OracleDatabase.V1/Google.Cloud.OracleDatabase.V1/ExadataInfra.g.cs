// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/oracledatabase/v1/exadata_infra.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.OracleDatabase.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/oracledatabase/v1/exadata_infra.proto</summary>
  public static partial class ExadataInfraReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/oracledatabase/v1/exadata_infra.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExadataInfraReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJnb29nbGUvY2xvdWQvb3JhY2xlZGF0YWJhc2UvdjEvZXhhZGF0YV9pbmZy",
            "YS5wcm90bxIeZ29vZ2xlLmNsb3VkLm9yYWNsZWRhdGFiYXNlLnYxGh9nb29n",
            "bGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291",
            "cmNlLnByb3RvGitnb29nbGUvY2xvdWQvb3JhY2xlZGF0YWJhc2UvdjEvY29t",
            "bW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhtn",
            "b29nbGUvdHlwZS9kYXlvZndlZWsucHJvdG8aF2dvb2dsZS90eXBlL21vbnRo",
            "LnByb3RvIoQFChpDbG91ZEV4YWRhdGFJbmZyYXN0cnVjdHVyZRIRCgRuYW1l",
            "GAEgASgJQgPgQQgSGQoMZGlzcGxheV9uYW1lGAIgASgJQgPgQQESHAoPZ2Nw",
            "X29yYWNsZV96b25lGAggASgJQgPgQQESGwoOZW50aXRsZW1lbnRfaWQYBCAB",
            "KAlCA+BBAxJdCgpwcm9wZXJ0aWVzGAUgASgLMkQuZ29vZ2xlLmNsb3VkLm9y",
            "YWNsZWRhdGFiYXNlLnYxLkNsb3VkRXhhZGF0YUluZnJhc3RydWN0dXJlUHJv",
            "cGVydGllc0ID4EEBElsKBmxhYmVscxgGIAMoCzJGLmdvb2dsZS5jbG91ZC5v",
            "cmFjbGVkYXRhYmFzZS52MS5DbG91ZEV4YWRhdGFJbmZyYXN0cnVjdHVyZS5M",
            "YWJlbHNFbnRyeUID4EEBEjQKC2NyZWF0ZV90aW1lGAcgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcEID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE62wHqQdcBCjhvcmFjbGVkYXRh",
            "YmFzZS5nb29nbGVhcGlzLmNvbS9DbG91ZEV4YWRhdGFJbmZyYXN0cnVjdHVy",
            "ZRJicHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2Ns",
            "b3VkRXhhZGF0YUluZnJhc3RydWN0dXJlcy97Y2xvdWRfZXhhZGF0YV9pbmZy",
            "YXN0cnVjdHVyZX0qG2Nsb3VkRXhhZGF0YUluZnJhc3RydWN0dXJlczIaY2xv",
            "dWRFeGFkYXRhSW5mcmFzdHJ1Y3R1cmUipgoKJENsb3VkRXhhZGF0YUluZnJh",
            "c3RydWN0dXJlUHJvcGVydGllcxIRCgRvY2lkGAEgASgJQgPgQQMSGgoNY29t",
            "cHV0ZV9jb3VudBgCIAEoBUID4EEBEhoKDXN0b3JhZ2VfY291bnQYAyABKAVC",
            "A+BBARIiChV0b3RhbF9zdG9yYWdlX3NpemVfZ2IYBCABKAVCA+BBARImChlh",
            "dmFpbGFibGVfc3RvcmFnZV9zaXplX2diGAUgASgFQgPgQQMSUgoSbWFpbnRl",
            "bmFuY2Vfd2luZG93GAYgASgLMjEuZ29vZ2xlLmNsb3VkLm9yYWNsZWRhdGFi",
            "YXNlLnYxLk1haW50ZW5hbmNlV2luZG93QgPgQQESXgoFc3RhdGUYByABKA4y",
            "Si5nb29nbGUuY2xvdWQub3JhY2xlZGF0YWJhc2UudjEuQ2xvdWRFeGFkYXRh",
            "SW5mcmFzdHJ1Y3R1cmVQcm9wZXJ0aWVzLlN0YXRlQgPgQQMSEgoFc2hhcGUY",
            "CCABKAlCA+BBAhIUCgdvY2lfdXJsGAkgASgJQgPgQQMSFgoJY3B1X2NvdW50",
            "GAogASgFQgPgQQMSGgoNbWF4X2NwdV9jb3VudBgLIAEoBUID4EEDEhsKDm1l",
            "bW9yeV9zaXplX2diGAwgASgFQgPgQQMSGgoNbWF4X21lbW9yeV9nYhgNIAEo",
            "BUID4EEDEiQKF2RiX25vZGVfc3RvcmFnZV9zaXplX2diGA4gASgFQgPgQQMS",
            "KAobbWF4X2RiX25vZGVfc3RvcmFnZV9zaXplX2diGA8gASgFQgPgQQMSIQoU",
            "ZGF0YV9zdG9yYWdlX3NpemVfdGIYECABKAFCA+BBAxIgChNtYXhfZGF0YV9z",
            "dG9yYWdlX3RiGBEgASgBQgPgQQMSJAoXYWN0aXZhdGVkX3N0b3JhZ2VfY291",
            "bnQYEiABKAVCA+BBAxIlChhhZGRpdGlvbmFsX3N0b3JhZ2VfY291bnQYEyAB",
            "KAVCA+BBAxIeChFkYl9zZXJ2ZXJfdmVyc2lvbhgUIAEoCUID4EEDEiMKFnN0",
            "b3JhZ2Vfc2VydmVyX3ZlcnNpb24YFSABKAlCA+BBAxIkChduZXh0X21haW50",
            "ZW5hbmNlX3J1bl9pZBgWIAEoCUID4EEDEkIKGW5leHRfbWFpbnRlbmFuY2Vf",
            "cnVuX3RpbWUYFyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPg",
            "QQMSSwoibmV4dF9zZWN1cml0eV9tYWludGVuYW5jZV9ydW5fdGltZRgYIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxJPChFjdXN0b21l",
            "cl9jb250YWN0cxgZIAMoCzIvLmdvb2dsZS5jbG91ZC5vcmFjbGVkYXRhYmFz",
            "ZS52MS5DdXN0b21lckNvbnRhY3RCA+BBARIrCh5tb250aGx5X3N0b3JhZ2Vf",
            "c2VydmVyX3ZlcnNpb24YGiABKAlCA+BBAxImChltb250aGx5X2RiX3NlcnZl",
            "cl92ZXJzaW9uGBsgASgJQgPgQQMilwEKBVN0YXRlEhUKEVNUQVRFX1VOU1BF",
            "Q0lGSUVEEAASEAoMUFJPVklTSU9OSU5HEAESDQoJQVZBSUxBQkxFEAISDAoI",
            "VVBEQVRJTkcQAxIPCgtURVJNSU5BVElORxAEEg4KClRFUk1JTkFURUQQBRIK",
            "CgZGQUlMRUQQBhIbChdNQUlOVEVOQU5DRV9JTl9QUk9HUkVTUxAHIqUFChFN",
            "YWludGVuYW5jZVdpbmRvdxJmCgpwcmVmZXJlbmNlGAEgASgOMk0uZ29vZ2xl",
            "LmNsb3VkLm9yYWNsZWRhdGFiYXNlLnYxLk1haW50ZW5hbmNlV2luZG93Lk1h",
            "aW50ZW5hbmNlV2luZG93UHJlZmVyZW5jZUID4EEBEicKBm1vbnRocxgCIAMo",
            "DjISLmdvb2dsZS50eXBlLk1vbnRoQgPgQQESGwoOd2Vla3Nfb2ZfbW9udGgY",
            "AyADKAVCA+BBARIxCgxkYXlzX29mX3dlZWsYBCADKA4yFi5nb29nbGUudHlw",
            "ZS5EYXlPZldlZWtCA+BBARIZCgxob3Vyc19vZl9kYXkYBSADKAVCA+BBARIb",
            "Cg5sZWFkX3RpbWVfd2VlaxgGIAEoBUID4EEBEloKDXBhdGNoaW5nX21vZGUY",
            "ByABKA4yPi5nb29nbGUuY2xvdWQub3JhY2xlZGF0YWJhc2UudjEuTWFpbnRl",
            "bmFuY2VXaW5kb3cuUGF0Y2hpbmdNb2RlQgPgQQESJwoaY3VzdG9tX2FjdGlv",
            "bl90aW1lb3V0X21pbnMYCCABKAVCA+BBARItCiBpc19jdXN0b21fYWN0aW9u",
            "X3RpbWVvdXRfZW5hYmxlZBgJIAEoCEID4EEBInYKG01haW50ZW5hbmNlV2lu",
            "ZG93UHJlZmVyZW5jZRItCilNQUlOVEVOQU5DRV9XSU5ET1dfUFJFRkVSRU5D",
            "RV9VTlNQRUNJRklFRBAAEhUKEUNVU1RPTV9QUkVGRVJFTkNFEAESEQoNTk9f",
            "UFJFRkVSRU5DRRACIksKDFBhdGNoaW5nTW9kZRIdChlQQVRDSElOR19NT0RF",
            "X1VOU1BFQ0lGSUVEEAASCwoHUk9MTElORxABEg8KC05PTl9ST0xMSU5HEAJC",
            "+QEKImNvbS5nb29nbGUuY2xvdWQub3JhY2xlZGF0YWJhc2UudjFCH0Nsb3Vk",
            "RXhhZGF0YUluZnJhc3RydWN0dXJlUHJvdG9QAVpKY2xvdWQuZ29vZ2xlLmNv",
            "bS9nby9vcmFjbGVkYXRhYmFzZS9hcGl2MS9vcmFjbGVkYXRhYmFzZXBiO29y",
            "YWNsZWRhdGFiYXNlcGKqAh5Hb29nbGUuQ2xvdWQuT3JhY2xlRGF0YWJhc2Uu",
            "VjHKAh5Hb29nbGVcQ2xvdWRcT3JhY2xlRGF0YWJhc2VcVjHqAiFHb29nbGU6",
            "OkNsb3VkOjpPcmFjbGVEYXRhYmFzZTo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.OracleDatabase.V1.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.DayofweekReflection.Descriptor, global::Google.Type.MonthReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure), global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure.Parser, new[]{ "Name", "DisplayName", "GcpOracleZone", "EntitlementId", "Properties", "Labels", "CreateTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties), global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Parser, new[]{ "Ocid", "ComputeCount", "StorageCount", "TotalStorageSizeGb", "AvailableStorageSizeGb", "MaintenanceWindow", "State", "Shape", "OciUrl", "CpuCount", "MaxCpuCount", "MemorySizeGb", "MaxMemoryGb", "DbNodeStorageSizeGb", "MaxDbNodeStorageSizeGb", "DataStorageSizeTb", "MaxDataStorageTb", "ActivatedStorageCount", "AdditionalStorageCount", "DbServerVersion", "StorageServerVersion", "NextMaintenanceRunId", "NextMaintenanceRunTime", "NextSecurityMaintenanceRunTime", "CustomerContacts", "MonthlyStorageServerVersion", "MonthlyDbServerVersion" }, null, new[]{ typeof(global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow), global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Parser, new[]{ "Preference", "Months", "WeeksOfMonth", "DaysOfWeek", "HoursOfDay", "LeadTimeWeek", "PatchingMode", "CustomActionTimeoutMins", "IsCustomActionTimeoutEnabled" }, null, new[]{ typeof(global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference), typeof(global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents CloudExadataInfrastructure resource.
  /// https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/CloudExadataInfrastructure/
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CloudExadataInfrastructure : pb::IMessage<CloudExadataInfrastructure>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudExadataInfrastructure> _parser = new pb::MessageParser<CloudExadataInfrastructure>(() => new CloudExadataInfrastructure());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CloudExadataInfrastructure> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.OracleDatabase.V1.ExadataInfraReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CloudExadataInfrastructure() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CloudExadataInfrastructure(CloudExadataInfrastructure other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      gcpOracleZone_ = other.gcpOracleZone_;
      entitlementId_ = other.entitlementId_;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      labels_ = other.labels_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CloudExadataInfrastructure Clone() {
      return new CloudExadataInfrastructure(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The name of the Exadata Infrastructure resource with the
    /// format:
    /// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Optional. User friendly name for this resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gcp_oracle_zone" field.</summary>
    public const int GcpOracleZoneFieldNumber = 8;
    private string gcpOracleZone_ = "";
    /// <summary>
    /// Optional. Google Cloud Platform location where Oracle Exadata is hosted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GcpOracleZone {
      get { return gcpOracleZone_; }
      set {
        gcpOracleZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entitlement_id" field.</summary>
    public const int EntitlementIdFieldNumber = 4;
    private string entitlementId_ = "";
    /// <summary>
    /// Output only. Entitlement ID of the private offer against which this
    /// infrastructure resource is provisioned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntitlementId {
      get { return entitlementId_; }
      set {
        entitlementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 5;
    private global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties properties_;
    /// <summary>
    /// Optional. Various properties of the infra.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Labels or tags associated with the resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The date and time that the Exadata Infrastructure was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CloudExadataInfrastructure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CloudExadataInfrastructure other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (GcpOracleZone != other.GcpOracleZone) return false;
      if (EntitlementId != other.EntitlementId) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (GcpOracleZone.Length != 0) hash ^= GcpOracleZone.GetHashCode();
      if (EntitlementId.Length != 0) hash ^= EntitlementId.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (EntitlementId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EntitlementId);
      }
      if (properties_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Properties);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (GcpOracleZone.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GcpOracleZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (EntitlementId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EntitlementId);
      }
      if (properties_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Properties);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (GcpOracleZone.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GcpOracleZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (GcpOracleZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcpOracleZone);
      }
      if (EntitlementId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntitlementId);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CloudExadataInfrastructure other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.GcpOracleZone.Length != 0) {
        GcpOracleZone = other.GcpOracleZone;
      }
      if (other.EntitlementId.Length != 0) {
        EntitlementId = other.EntitlementId;
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties();
        }
        Properties.MergeFrom(other.Properties);
      }
      labels_.MergeFrom(other.labels_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            EntitlementId = input.ReadString();
            break;
          }
          case 42: {
            if (properties_ == null) {
              Properties = new global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            GcpOracleZone = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            EntitlementId = input.ReadString();
            break;
          }
          case 42: {
            if (properties_ == null) {
              Properties = new global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties();
            }
            input.ReadMessage(Properties);
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            GcpOracleZone = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Various properties of Exadata Infrastructure.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CloudExadataInfrastructureProperties : pb::IMessage<CloudExadataInfrastructureProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CloudExadataInfrastructureProperties> _parser = new pb::MessageParser<CloudExadataInfrastructureProperties>(() => new CloudExadataInfrastructureProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CloudExadataInfrastructureProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.OracleDatabase.V1.ExadataInfraReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CloudExadataInfrastructureProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CloudExadataInfrastructureProperties(CloudExadataInfrastructureProperties other) : this() {
      ocid_ = other.ocid_;
      computeCount_ = other.computeCount_;
      storageCount_ = other.storageCount_;
      totalStorageSizeGb_ = other.totalStorageSizeGb_;
      availableStorageSizeGb_ = other.availableStorageSizeGb_;
      maintenanceWindow_ = other.maintenanceWindow_ != null ? other.maintenanceWindow_.Clone() : null;
      state_ = other.state_;
      shape_ = other.shape_;
      ociUrl_ = other.ociUrl_;
      cpuCount_ = other.cpuCount_;
      maxCpuCount_ = other.maxCpuCount_;
      memorySizeGb_ = other.memorySizeGb_;
      maxMemoryGb_ = other.maxMemoryGb_;
      dbNodeStorageSizeGb_ = other.dbNodeStorageSizeGb_;
      maxDbNodeStorageSizeGb_ = other.maxDbNodeStorageSizeGb_;
      dataStorageSizeTb_ = other.dataStorageSizeTb_;
      maxDataStorageTb_ = other.maxDataStorageTb_;
      activatedStorageCount_ = other.activatedStorageCount_;
      additionalStorageCount_ = other.additionalStorageCount_;
      dbServerVersion_ = other.dbServerVersion_;
      storageServerVersion_ = other.storageServerVersion_;
      nextMaintenanceRunId_ = other.nextMaintenanceRunId_;
      nextMaintenanceRunTime_ = other.nextMaintenanceRunTime_ != null ? other.nextMaintenanceRunTime_.Clone() : null;
      nextSecurityMaintenanceRunTime_ = other.nextSecurityMaintenanceRunTime_ != null ? other.nextSecurityMaintenanceRunTime_.Clone() : null;
      customerContacts_ = other.customerContacts_.Clone();
      monthlyStorageServerVersion_ = other.monthlyStorageServerVersion_;
      monthlyDbServerVersion_ = other.monthlyDbServerVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CloudExadataInfrastructureProperties Clone() {
      return new CloudExadataInfrastructureProperties(this);
    }

    /// <summary>Field number for the "ocid" field.</summary>
    public const int OcidFieldNumber = 1;
    private string ocid_ = "";
    /// <summary>
    /// Output only. OCID of created infra.
    /// https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ocid {
      get { return ocid_; }
      set {
        ocid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "compute_count" field.</summary>
    public const int ComputeCountFieldNumber = 2;
    private int computeCount_;
    /// <summary>
    /// Optional. The number of compute servers for the Exadata Infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ComputeCount {
      get { return computeCount_; }
      set {
        computeCount_ = value;
      }
    }

    /// <summary>Field number for the "storage_count" field.</summary>
    public const int StorageCountFieldNumber = 3;
    private int storageCount_;
    /// <summary>
    /// Optional. The number of Cloud Exadata storage servers for the Exadata
    /// Infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StorageCount {
      get { return storageCount_; }
      set {
        storageCount_ = value;
      }
    }

    /// <summary>Field number for the "total_storage_size_gb" field.</summary>
    public const int TotalStorageSizeGbFieldNumber = 4;
    private int totalStorageSizeGb_;
    /// <summary>
    /// Optional. The total storage allocated to the Exadata Infrastructure
    /// resource, in gigabytes (GB).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalStorageSizeGb {
      get { return totalStorageSizeGb_; }
      set {
        totalStorageSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "available_storage_size_gb" field.</summary>
    public const int AvailableStorageSizeGbFieldNumber = 5;
    private int availableStorageSizeGb_;
    /// <summary>
    /// Output only. The available storage can be allocated to the Exadata
    /// Infrastructure resource, in gigabytes (GB).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AvailableStorageSizeGb {
      get { return availableStorageSizeGb_; }
      set {
        availableStorageSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "maintenance_window" field.</summary>
    public const int MaintenanceWindowFieldNumber = 6;
    private global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow maintenanceWindow_;
    /// <summary>
    /// Optional. Maintenance window for repair.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow MaintenanceWindow {
      get { return maintenanceWindow_; }
      set {
        maintenanceWindow_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 7;
    private global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State state_ = global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current lifecycle state of the Exadata Infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 8;
    private string shape_ = "";
    /// <summary>
    /// Required. The shape of the Exadata Infrastructure. The shape determines the
    /// amount of CPU, storage, and memory resources allocated to the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Shape {
      get { return shape_; }
      set {
        shape_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oci_url" field.</summary>
    public const int OciUrlFieldNumber = 9;
    private string ociUrl_ = "";
    /// <summary>
    /// Output only. Deep link to the OCI console to view this resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OciUrl {
      get { return ociUrl_; }
      set {
        ociUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cpu_count" field.</summary>
    public const int CpuCountFieldNumber = 10;
    private int cpuCount_;
    /// <summary>
    /// Output only. The number of enabled CPU cores.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CpuCount {
      get { return cpuCount_; }
      set {
        cpuCount_ = value;
      }
    }

    /// <summary>Field number for the "max_cpu_count" field.</summary>
    public const int MaxCpuCountFieldNumber = 11;
    private int maxCpuCount_;
    /// <summary>
    /// Output only. The total number of CPU cores available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxCpuCount {
      get { return maxCpuCount_; }
      set {
        maxCpuCount_ = value;
      }
    }

    /// <summary>Field number for the "memory_size_gb" field.</summary>
    public const int MemorySizeGbFieldNumber = 12;
    private int memorySizeGb_;
    /// <summary>
    /// Output only. The memory allocated in GBs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MemorySizeGb {
      get { return memorySizeGb_; }
      set {
        memorySizeGb_ = value;
      }
    }

    /// <summary>Field number for the "max_memory_gb" field.</summary>
    public const int MaxMemoryGbFieldNumber = 13;
    private int maxMemoryGb_;
    /// <summary>
    /// Output only. The total memory available in GBs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxMemoryGb {
      get { return maxMemoryGb_; }
      set {
        maxMemoryGb_ = value;
      }
    }

    /// <summary>Field number for the "db_node_storage_size_gb" field.</summary>
    public const int DbNodeStorageSizeGbFieldNumber = 14;
    private int dbNodeStorageSizeGb_;
    /// <summary>
    /// Output only. The local node storage allocated in GBs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DbNodeStorageSizeGb {
      get { return dbNodeStorageSizeGb_; }
      set {
        dbNodeStorageSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "max_db_node_storage_size_gb" field.</summary>
    public const int MaxDbNodeStorageSizeGbFieldNumber = 15;
    private int maxDbNodeStorageSizeGb_;
    /// <summary>
    /// Output only. The total local node storage available in GBs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxDbNodeStorageSizeGb {
      get { return maxDbNodeStorageSizeGb_; }
      set {
        maxDbNodeStorageSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "data_storage_size_tb" field.</summary>
    public const int DataStorageSizeTbFieldNumber = 16;
    private double dataStorageSizeTb_;
    /// <summary>
    /// Output only. Size, in terabytes, of the DATA disk group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DataStorageSizeTb {
      get { return dataStorageSizeTb_; }
      set {
        dataStorageSizeTb_ = value;
      }
    }

    /// <summary>Field number for the "max_data_storage_tb" field.</summary>
    public const int MaxDataStorageTbFieldNumber = 17;
    private double maxDataStorageTb_;
    /// <summary>
    /// Output only. The total available DATA disk group size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double MaxDataStorageTb {
      get { return maxDataStorageTb_; }
      set {
        maxDataStorageTb_ = value;
      }
    }

    /// <summary>Field number for the "activated_storage_count" field.</summary>
    public const int ActivatedStorageCountFieldNumber = 18;
    private int activatedStorageCount_;
    /// <summary>
    /// Output only. The requested number of additional storage servers activated
    /// for the Exadata Infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ActivatedStorageCount {
      get { return activatedStorageCount_; }
      set {
        activatedStorageCount_ = value;
      }
    }

    /// <summary>Field number for the "additional_storage_count" field.</summary>
    public const int AdditionalStorageCountFieldNumber = 19;
    private int additionalStorageCount_;
    /// <summary>
    /// Output only. The requested number of additional storage servers for the
    /// Exadata Infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AdditionalStorageCount {
      get { return additionalStorageCount_; }
      set {
        additionalStorageCount_ = value;
      }
    }

    /// <summary>Field number for the "db_server_version" field.</summary>
    public const int DbServerVersionFieldNumber = 20;
    private string dbServerVersion_ = "";
    /// <summary>
    /// Output only. The software version of the database servers (dom0) in the
    /// Exadata Infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DbServerVersion {
      get { return dbServerVersion_; }
      set {
        dbServerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "storage_server_version" field.</summary>
    public const int StorageServerVersionFieldNumber = 21;
    private string storageServerVersion_ = "";
    /// <summary>
    /// Output only. The software version of the storage servers (cells) in the
    /// Exadata Infrastructure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StorageServerVersion {
      get { return storageServerVersion_; }
      set {
        storageServerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "next_maintenance_run_id" field.</summary>
    public const int NextMaintenanceRunIdFieldNumber = 22;
    private string nextMaintenanceRunId_ = "";
    /// <summary>
    /// Output only. The OCID of the next maintenance run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextMaintenanceRunId {
      get { return nextMaintenanceRunId_; }
      set {
        nextMaintenanceRunId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "next_maintenance_run_time" field.</summary>
    public const int NextMaintenanceRunTimeFieldNumber = 23;
    private global::Google.Protobuf.WellKnownTypes.Timestamp nextMaintenanceRunTime_;
    /// <summary>
    /// Output only. The time when the next maintenance run will occur.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NextMaintenanceRunTime {
      get { return nextMaintenanceRunTime_; }
      set {
        nextMaintenanceRunTime_ = value;
      }
    }

    /// <summary>Field number for the "next_security_maintenance_run_time" field.</summary>
    public const int NextSecurityMaintenanceRunTimeFieldNumber = 24;
    private global::Google.Protobuf.WellKnownTypes.Timestamp nextSecurityMaintenanceRunTime_;
    /// <summary>
    /// Output only. The time when the next security maintenance run will occur.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NextSecurityMaintenanceRunTime {
      get { return nextSecurityMaintenanceRunTime_; }
      set {
        nextSecurityMaintenanceRunTime_ = value;
      }
    }

    /// <summary>Field number for the "customer_contacts" field.</summary>
    public const int CustomerContactsFieldNumber = 25;
    private static readonly pb::FieldCodec<global::Google.Cloud.OracleDatabase.V1.CustomerContact> _repeated_customerContacts_codec
        = pb::FieldCodec.ForMessage(202, global::Google.Cloud.OracleDatabase.V1.CustomerContact.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.OracleDatabase.V1.CustomerContact> customerContacts_ = new pbc::RepeatedField<global::Google.Cloud.OracleDatabase.V1.CustomerContact>();
    /// <summary>
    /// Optional. The list of customer contacts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.OracleDatabase.V1.CustomerContact> CustomerContacts {
      get { return customerContacts_; }
    }

    /// <summary>Field number for the "monthly_storage_server_version" field.</summary>
    public const int MonthlyStorageServerVersionFieldNumber = 26;
    private string monthlyStorageServerVersion_ = "";
    /// <summary>
    /// Output only. The monthly software version of the storage servers (cells)
    /// in the Exadata Infrastructure. Example: 20.1.15
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MonthlyStorageServerVersion {
      get { return monthlyStorageServerVersion_; }
      set {
        monthlyStorageServerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "monthly_db_server_version" field.</summary>
    public const int MonthlyDbServerVersionFieldNumber = 27;
    private string monthlyDbServerVersion_ = "";
    /// <summary>
    /// Output only. The monthly software version of the database servers (dom0)
    /// in the Exadata Infrastructure. Example: 20.1.15
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MonthlyDbServerVersion {
      get { return monthlyDbServerVersion_; }
      set {
        monthlyDbServerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CloudExadataInfrastructureProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CloudExadataInfrastructureProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ocid != other.Ocid) return false;
      if (ComputeCount != other.ComputeCount) return false;
      if (StorageCount != other.StorageCount) return false;
      if (TotalStorageSizeGb != other.TotalStorageSizeGb) return false;
      if (AvailableStorageSizeGb != other.AvailableStorageSizeGb) return false;
      if (!object.Equals(MaintenanceWindow, other.MaintenanceWindow)) return false;
      if (State != other.State) return false;
      if (Shape != other.Shape) return false;
      if (OciUrl != other.OciUrl) return false;
      if (CpuCount != other.CpuCount) return false;
      if (MaxCpuCount != other.MaxCpuCount) return false;
      if (MemorySizeGb != other.MemorySizeGb) return false;
      if (MaxMemoryGb != other.MaxMemoryGb) return false;
      if (DbNodeStorageSizeGb != other.DbNodeStorageSizeGb) return false;
      if (MaxDbNodeStorageSizeGb != other.MaxDbNodeStorageSizeGb) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DataStorageSizeTb, other.DataStorageSizeTb)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxDataStorageTb, other.MaxDataStorageTb)) return false;
      if (ActivatedStorageCount != other.ActivatedStorageCount) return false;
      if (AdditionalStorageCount != other.AdditionalStorageCount) return false;
      if (DbServerVersion != other.DbServerVersion) return false;
      if (StorageServerVersion != other.StorageServerVersion) return false;
      if (NextMaintenanceRunId != other.NextMaintenanceRunId) return false;
      if (!object.Equals(NextMaintenanceRunTime, other.NextMaintenanceRunTime)) return false;
      if (!object.Equals(NextSecurityMaintenanceRunTime, other.NextSecurityMaintenanceRunTime)) return false;
      if(!customerContacts_.Equals(other.customerContacts_)) return false;
      if (MonthlyStorageServerVersion != other.MonthlyStorageServerVersion) return false;
      if (MonthlyDbServerVersion != other.MonthlyDbServerVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ocid.Length != 0) hash ^= Ocid.GetHashCode();
      if (ComputeCount != 0) hash ^= ComputeCount.GetHashCode();
      if (StorageCount != 0) hash ^= StorageCount.GetHashCode();
      if (TotalStorageSizeGb != 0) hash ^= TotalStorageSizeGb.GetHashCode();
      if (AvailableStorageSizeGb != 0) hash ^= AvailableStorageSizeGb.GetHashCode();
      if (maintenanceWindow_ != null) hash ^= MaintenanceWindow.GetHashCode();
      if (State != global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (Shape.Length != 0) hash ^= Shape.GetHashCode();
      if (OciUrl.Length != 0) hash ^= OciUrl.GetHashCode();
      if (CpuCount != 0) hash ^= CpuCount.GetHashCode();
      if (MaxCpuCount != 0) hash ^= MaxCpuCount.GetHashCode();
      if (MemorySizeGb != 0) hash ^= MemorySizeGb.GetHashCode();
      if (MaxMemoryGb != 0) hash ^= MaxMemoryGb.GetHashCode();
      if (DbNodeStorageSizeGb != 0) hash ^= DbNodeStorageSizeGb.GetHashCode();
      if (MaxDbNodeStorageSizeGb != 0) hash ^= MaxDbNodeStorageSizeGb.GetHashCode();
      if (DataStorageSizeTb != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DataStorageSizeTb);
      if (MaxDataStorageTb != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxDataStorageTb);
      if (ActivatedStorageCount != 0) hash ^= ActivatedStorageCount.GetHashCode();
      if (AdditionalStorageCount != 0) hash ^= AdditionalStorageCount.GetHashCode();
      if (DbServerVersion.Length != 0) hash ^= DbServerVersion.GetHashCode();
      if (StorageServerVersion.Length != 0) hash ^= StorageServerVersion.GetHashCode();
      if (NextMaintenanceRunId.Length != 0) hash ^= NextMaintenanceRunId.GetHashCode();
      if (nextMaintenanceRunTime_ != null) hash ^= NextMaintenanceRunTime.GetHashCode();
      if (nextSecurityMaintenanceRunTime_ != null) hash ^= NextSecurityMaintenanceRunTime.GetHashCode();
      hash ^= customerContacts_.GetHashCode();
      if (MonthlyStorageServerVersion.Length != 0) hash ^= MonthlyStorageServerVersion.GetHashCode();
      if (MonthlyDbServerVersion.Length != 0) hash ^= MonthlyDbServerVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ocid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ocid);
      }
      if (ComputeCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ComputeCount);
      }
      if (StorageCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StorageCount);
      }
      if (TotalStorageSizeGb != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalStorageSizeGb);
      }
      if (AvailableStorageSizeGb != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AvailableStorageSizeGb);
      }
      if (maintenanceWindow_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MaintenanceWindow);
      }
      if (State != global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      if (Shape.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Shape);
      }
      if (OciUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OciUrl);
      }
      if (CpuCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CpuCount);
      }
      if (MaxCpuCount != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MaxCpuCount);
      }
      if (MemorySizeGb != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MemorySizeGb);
      }
      if (MaxMemoryGb != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MaxMemoryGb);
      }
      if (DbNodeStorageSizeGb != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(DbNodeStorageSizeGb);
      }
      if (MaxDbNodeStorageSizeGb != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(MaxDbNodeStorageSizeGb);
      }
      if (DataStorageSizeTb != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(DataStorageSizeTb);
      }
      if (MaxDataStorageTb != 0D) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(MaxDataStorageTb);
      }
      if (ActivatedStorageCount != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ActivatedStorageCount);
      }
      if (AdditionalStorageCount != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(AdditionalStorageCount);
      }
      if (DbServerVersion.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(DbServerVersion);
      }
      if (StorageServerVersion.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(StorageServerVersion);
      }
      if (NextMaintenanceRunId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(NextMaintenanceRunId);
      }
      if (nextMaintenanceRunTime_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(NextMaintenanceRunTime);
      }
      if (nextSecurityMaintenanceRunTime_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(NextSecurityMaintenanceRunTime);
      }
      customerContacts_.WriteTo(output, _repeated_customerContacts_codec);
      if (MonthlyStorageServerVersion.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(MonthlyStorageServerVersion);
      }
      if (MonthlyDbServerVersion.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(MonthlyDbServerVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ocid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ocid);
      }
      if (ComputeCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ComputeCount);
      }
      if (StorageCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StorageCount);
      }
      if (TotalStorageSizeGb != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalStorageSizeGb);
      }
      if (AvailableStorageSizeGb != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AvailableStorageSizeGb);
      }
      if (maintenanceWindow_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MaintenanceWindow);
      }
      if (State != global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      if (Shape.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Shape);
      }
      if (OciUrl.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(OciUrl);
      }
      if (CpuCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CpuCount);
      }
      if (MaxCpuCount != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MaxCpuCount);
      }
      if (MemorySizeGb != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MemorySizeGb);
      }
      if (MaxMemoryGb != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(MaxMemoryGb);
      }
      if (DbNodeStorageSizeGb != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(DbNodeStorageSizeGb);
      }
      if (MaxDbNodeStorageSizeGb != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(MaxDbNodeStorageSizeGb);
      }
      if (DataStorageSizeTb != 0D) {
        output.WriteRawTag(129, 1);
        output.WriteDouble(DataStorageSizeTb);
      }
      if (MaxDataStorageTb != 0D) {
        output.WriteRawTag(137, 1);
        output.WriteDouble(MaxDataStorageTb);
      }
      if (ActivatedStorageCount != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(ActivatedStorageCount);
      }
      if (AdditionalStorageCount != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(AdditionalStorageCount);
      }
      if (DbServerVersion.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(DbServerVersion);
      }
      if (StorageServerVersion.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(StorageServerVersion);
      }
      if (NextMaintenanceRunId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(NextMaintenanceRunId);
      }
      if (nextMaintenanceRunTime_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(NextMaintenanceRunTime);
      }
      if (nextSecurityMaintenanceRunTime_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(NextSecurityMaintenanceRunTime);
      }
      customerContacts_.WriteTo(ref output, _repeated_customerContacts_codec);
      if (MonthlyStorageServerVersion.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(MonthlyStorageServerVersion);
      }
      if (MonthlyDbServerVersion.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(MonthlyDbServerVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ocid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ocid);
      }
      if (ComputeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ComputeCount);
      }
      if (StorageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StorageCount);
      }
      if (TotalStorageSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalStorageSizeGb);
      }
      if (AvailableStorageSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableStorageSizeGb);
      }
      if (maintenanceWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaintenanceWindow);
      }
      if (State != global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Shape.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Shape);
      }
      if (OciUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OciUrl);
      }
      if (CpuCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CpuCount);
      }
      if (MaxCpuCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxCpuCount);
      }
      if (MemorySizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemorySizeGb);
      }
      if (MaxMemoryGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxMemoryGb);
      }
      if (DbNodeStorageSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DbNodeStorageSizeGb);
      }
      if (MaxDbNodeStorageSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxDbNodeStorageSizeGb);
      }
      if (DataStorageSizeTb != 0D) {
        size += 2 + 8;
      }
      if (MaxDataStorageTb != 0D) {
        size += 2 + 8;
      }
      if (ActivatedStorageCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ActivatedStorageCount);
      }
      if (AdditionalStorageCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(AdditionalStorageCount);
      }
      if (DbServerVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DbServerVersion);
      }
      if (StorageServerVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StorageServerVersion);
      }
      if (NextMaintenanceRunId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(NextMaintenanceRunId);
      }
      if (nextMaintenanceRunTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NextMaintenanceRunTime);
      }
      if (nextSecurityMaintenanceRunTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NextSecurityMaintenanceRunTime);
      }
      size += customerContacts_.CalculateSize(_repeated_customerContacts_codec);
      if (MonthlyStorageServerVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MonthlyStorageServerVersion);
      }
      if (MonthlyDbServerVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MonthlyDbServerVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CloudExadataInfrastructureProperties other) {
      if (other == null) {
        return;
      }
      if (other.Ocid.Length != 0) {
        Ocid = other.Ocid;
      }
      if (other.ComputeCount != 0) {
        ComputeCount = other.ComputeCount;
      }
      if (other.StorageCount != 0) {
        StorageCount = other.StorageCount;
      }
      if (other.TotalStorageSizeGb != 0) {
        TotalStorageSizeGb = other.TotalStorageSizeGb;
      }
      if (other.AvailableStorageSizeGb != 0) {
        AvailableStorageSizeGb = other.AvailableStorageSizeGb;
      }
      if (other.maintenanceWindow_ != null) {
        if (maintenanceWindow_ == null) {
          MaintenanceWindow = new global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow();
        }
        MaintenanceWindow.MergeFrom(other.MaintenanceWindow);
      }
      if (other.State != global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.Shape.Length != 0) {
        Shape = other.Shape;
      }
      if (other.OciUrl.Length != 0) {
        OciUrl = other.OciUrl;
      }
      if (other.CpuCount != 0) {
        CpuCount = other.CpuCount;
      }
      if (other.MaxCpuCount != 0) {
        MaxCpuCount = other.MaxCpuCount;
      }
      if (other.MemorySizeGb != 0) {
        MemorySizeGb = other.MemorySizeGb;
      }
      if (other.MaxMemoryGb != 0) {
        MaxMemoryGb = other.MaxMemoryGb;
      }
      if (other.DbNodeStorageSizeGb != 0) {
        DbNodeStorageSizeGb = other.DbNodeStorageSizeGb;
      }
      if (other.MaxDbNodeStorageSizeGb != 0) {
        MaxDbNodeStorageSizeGb = other.MaxDbNodeStorageSizeGb;
      }
      if (other.DataStorageSizeTb != 0D) {
        DataStorageSizeTb = other.DataStorageSizeTb;
      }
      if (other.MaxDataStorageTb != 0D) {
        MaxDataStorageTb = other.MaxDataStorageTb;
      }
      if (other.ActivatedStorageCount != 0) {
        ActivatedStorageCount = other.ActivatedStorageCount;
      }
      if (other.AdditionalStorageCount != 0) {
        AdditionalStorageCount = other.AdditionalStorageCount;
      }
      if (other.DbServerVersion.Length != 0) {
        DbServerVersion = other.DbServerVersion;
      }
      if (other.StorageServerVersion.Length != 0) {
        StorageServerVersion = other.StorageServerVersion;
      }
      if (other.NextMaintenanceRunId.Length != 0) {
        NextMaintenanceRunId = other.NextMaintenanceRunId;
      }
      if (other.nextMaintenanceRunTime_ != null) {
        if (nextMaintenanceRunTime_ == null) {
          NextMaintenanceRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NextMaintenanceRunTime.MergeFrom(other.NextMaintenanceRunTime);
      }
      if (other.nextSecurityMaintenanceRunTime_ != null) {
        if (nextSecurityMaintenanceRunTime_ == null) {
          NextSecurityMaintenanceRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NextSecurityMaintenanceRunTime.MergeFrom(other.NextSecurityMaintenanceRunTime);
      }
      customerContacts_.Add(other.customerContacts_);
      if (other.MonthlyStorageServerVersion.Length != 0) {
        MonthlyStorageServerVersion = other.MonthlyStorageServerVersion;
      }
      if (other.MonthlyDbServerVersion.Length != 0) {
        MonthlyDbServerVersion = other.MonthlyDbServerVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ocid = input.ReadString();
            break;
          }
          case 16: {
            ComputeCount = input.ReadInt32();
            break;
          }
          case 24: {
            StorageCount = input.ReadInt32();
            break;
          }
          case 32: {
            TotalStorageSizeGb = input.ReadInt32();
            break;
          }
          case 40: {
            AvailableStorageSizeGb = input.ReadInt32();
            break;
          }
          case 50: {
            if (maintenanceWindow_ == null) {
              MaintenanceWindow = new global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow();
            }
            input.ReadMessage(MaintenanceWindow);
            break;
          }
          case 56: {
            State = (global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State) input.ReadEnum();
            break;
          }
          case 66: {
            Shape = input.ReadString();
            break;
          }
          case 74: {
            OciUrl = input.ReadString();
            break;
          }
          case 80: {
            CpuCount = input.ReadInt32();
            break;
          }
          case 88: {
            MaxCpuCount = input.ReadInt32();
            break;
          }
          case 96: {
            MemorySizeGb = input.ReadInt32();
            break;
          }
          case 104: {
            MaxMemoryGb = input.ReadInt32();
            break;
          }
          case 112: {
            DbNodeStorageSizeGb = input.ReadInt32();
            break;
          }
          case 120: {
            MaxDbNodeStorageSizeGb = input.ReadInt32();
            break;
          }
          case 129: {
            DataStorageSizeTb = input.ReadDouble();
            break;
          }
          case 137: {
            MaxDataStorageTb = input.ReadDouble();
            break;
          }
          case 144: {
            ActivatedStorageCount = input.ReadInt32();
            break;
          }
          case 152: {
            AdditionalStorageCount = input.ReadInt32();
            break;
          }
          case 162: {
            DbServerVersion = input.ReadString();
            break;
          }
          case 170: {
            StorageServerVersion = input.ReadString();
            break;
          }
          case 178: {
            NextMaintenanceRunId = input.ReadString();
            break;
          }
          case 186: {
            if (nextMaintenanceRunTime_ == null) {
              NextMaintenanceRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextMaintenanceRunTime);
            break;
          }
          case 194: {
            if (nextSecurityMaintenanceRunTime_ == null) {
              NextSecurityMaintenanceRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextSecurityMaintenanceRunTime);
            break;
          }
          case 202: {
            customerContacts_.AddEntriesFrom(input, _repeated_customerContacts_codec);
            break;
          }
          case 210: {
            MonthlyStorageServerVersion = input.ReadString();
            break;
          }
          case 218: {
            MonthlyDbServerVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ocid = input.ReadString();
            break;
          }
          case 16: {
            ComputeCount = input.ReadInt32();
            break;
          }
          case 24: {
            StorageCount = input.ReadInt32();
            break;
          }
          case 32: {
            TotalStorageSizeGb = input.ReadInt32();
            break;
          }
          case 40: {
            AvailableStorageSizeGb = input.ReadInt32();
            break;
          }
          case 50: {
            if (maintenanceWindow_ == null) {
              MaintenanceWindow = new global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow();
            }
            input.ReadMessage(MaintenanceWindow);
            break;
          }
          case 56: {
            State = (global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructureProperties.Types.State) input.ReadEnum();
            break;
          }
          case 66: {
            Shape = input.ReadString();
            break;
          }
          case 74: {
            OciUrl = input.ReadString();
            break;
          }
          case 80: {
            CpuCount = input.ReadInt32();
            break;
          }
          case 88: {
            MaxCpuCount = input.ReadInt32();
            break;
          }
          case 96: {
            MemorySizeGb = input.ReadInt32();
            break;
          }
          case 104: {
            MaxMemoryGb = input.ReadInt32();
            break;
          }
          case 112: {
            DbNodeStorageSizeGb = input.ReadInt32();
            break;
          }
          case 120: {
            MaxDbNodeStorageSizeGb = input.ReadInt32();
            break;
          }
          case 129: {
            DataStorageSizeTb = input.ReadDouble();
            break;
          }
          case 137: {
            MaxDataStorageTb = input.ReadDouble();
            break;
          }
          case 144: {
            ActivatedStorageCount = input.ReadInt32();
            break;
          }
          case 152: {
            AdditionalStorageCount = input.ReadInt32();
            break;
          }
          case 162: {
            DbServerVersion = input.ReadString();
            break;
          }
          case 170: {
            StorageServerVersion = input.ReadString();
            break;
          }
          case 178: {
            NextMaintenanceRunId = input.ReadString();
            break;
          }
          case 186: {
            if (nextMaintenanceRunTime_ == null) {
              NextMaintenanceRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextMaintenanceRunTime);
            break;
          }
          case 194: {
            if (nextSecurityMaintenanceRunTime_ == null) {
              NextSecurityMaintenanceRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextSecurityMaintenanceRunTime);
            break;
          }
          case 202: {
            customerContacts_.AddEntriesFrom(ref input, _repeated_customerContacts_codec);
            break;
          }
          case 210: {
            MonthlyStorageServerVersion = input.ReadString();
            break;
          }
          case 218: {
            MonthlyDbServerVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CloudExadataInfrastructureProperties message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The various lifecycle states of the Exadata Infrastructure.
      /// </summary>
      public enum State {
        /// <summary>
        /// Default unspecified value.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The Exadata Infrastructure is being provisioned.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// The Exadata Infrastructure is available for use.
        /// </summary>
        [pbr::OriginalName("AVAILABLE")] Available = 2,
        /// <summary>
        /// The Exadata Infrastructure is being updated.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 3,
        /// <summary>
        /// The Exadata Infrastructure is being terminated.
        /// </summary>
        [pbr::OriginalName("TERMINATING")] Terminating = 4,
        /// <summary>
        /// The Exadata Infrastructure is terminated.
        /// </summary>
        [pbr::OriginalName("TERMINATED")] Terminated = 5,
        /// <summary>
        /// The Exadata Infrastructure is in failed state.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 6,
        /// <summary>
        /// The Exadata Infrastructure is in maintenance.
        /// </summary>
        [pbr::OriginalName("MAINTENANCE_IN_PROGRESS")] MaintenanceInProgress = 7,
      }

    }
    #endregion

  }

  /// <summary>
  /// Maintenance window as defined by Oracle.
  /// https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/MaintenanceWindow
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MaintenanceWindow : pb::IMessage<MaintenanceWindow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaintenanceWindow> _parser = new pb::MessageParser<MaintenanceWindow>(() => new MaintenanceWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MaintenanceWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.OracleDatabase.V1.ExadataInfraReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenanceWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenanceWindow(MaintenanceWindow other) : this() {
      preference_ = other.preference_;
      months_ = other.months_.Clone();
      weeksOfMonth_ = other.weeksOfMonth_.Clone();
      daysOfWeek_ = other.daysOfWeek_.Clone();
      hoursOfDay_ = other.hoursOfDay_.Clone();
      leadTimeWeek_ = other.leadTimeWeek_;
      patchingMode_ = other.patchingMode_;
      customActionTimeoutMins_ = other.customActionTimeoutMins_;
      isCustomActionTimeoutEnabled_ = other.isCustomActionTimeoutEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaintenanceWindow Clone() {
      return new MaintenanceWindow(this);
    }

    /// <summary>Field number for the "preference" field.</summary>
    public const int PreferenceFieldNumber = 1;
    private global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference preference_ = global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference.Unspecified;
    /// <summary>
    /// Optional. The maintenance window scheduling preference.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference Preference {
      get { return preference_; }
      set {
        preference_ = value;
      }
    }

    /// <summary>Field number for the "months" field.</summary>
    public const int MonthsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Type.Month> _repeated_months_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Type.Month) x);
    private readonly pbc::RepeatedField<global::Google.Type.Month> months_ = new pbc::RepeatedField<global::Google.Type.Month>();
    /// <summary>
    /// Optional. Months during the year when maintenance should be performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Type.Month> Months {
      get { return months_; }
    }

    /// <summary>Field number for the "weeks_of_month" field.</summary>
    public const int WeeksOfMonthFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_weeksOfMonth_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> weeksOfMonth_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Optional. Weeks during the month when maintenance should be performed.
    /// Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a
    /// duration of 7 days. Weeks start and end based on calendar dates, not days
    /// of the week.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> WeeksOfMonth {
      get { return weeksOfMonth_; }
    }

    /// <summary>Field number for the "days_of_week" field.</summary>
    public const int DaysOfWeekFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Type.DayOfWeek> _repeated_daysOfWeek_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Type.DayOfWeek) x);
    private readonly pbc::RepeatedField<global::Google.Type.DayOfWeek> daysOfWeek_ = new pbc::RepeatedField<global::Google.Type.DayOfWeek>();
    /// <summary>
    /// Optional. Days during the week when maintenance should be performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Type.DayOfWeek> DaysOfWeek {
      get { return daysOfWeek_; }
    }

    /// <summary>Field number for the "hours_of_day" field.</summary>
    public const int HoursOfDayFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_hoursOfDay_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> hoursOfDay_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Optional. The window of hours during the day when maintenance should be
    /// performed. The window is a 4 hour slot. Valid values are:
    ///   0 - represents time slot 0:00 - 3:59 UTC
    ///   4 - represents time slot 4:00 - 7:59 UTC
    ///   8 - represents time slot 8:00 - 11:59 UTC
    ///   12 - represents time slot 12:00 - 15:59 UTC
    ///   16 - represents time slot 16:00 - 19:59 UTC
    ///   20 - represents time slot 20:00 - 23:59 UTC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> HoursOfDay {
      get { return hoursOfDay_; }
    }

    /// <summary>Field number for the "lead_time_week" field.</summary>
    public const int LeadTimeWeekFieldNumber = 6;
    private int leadTimeWeek_;
    /// <summary>
    /// Optional. Lead time window allows user to set a lead time to prepare for a
    /// down time. The lead time is in weeks and valid value is between 1 to 4.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LeadTimeWeek {
      get { return leadTimeWeek_; }
      set {
        leadTimeWeek_ = value;
      }
    }

    /// <summary>Field number for the "patching_mode" field.</summary>
    public const int PatchingModeFieldNumber = 7;
    private global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode patchingMode_ = global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode.Unspecified;
    /// <summary>
    /// Optional. Cloud CloudExadataInfrastructure node patching method, either
    /// "ROLLING"
    ///  or "NONROLLING". Default value is ROLLING.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode PatchingMode {
      get { return patchingMode_; }
      set {
        patchingMode_ = value;
      }
    }

    /// <summary>Field number for the "custom_action_timeout_mins" field.</summary>
    public const int CustomActionTimeoutMinsFieldNumber = 8;
    private int customActionTimeoutMins_;
    /// <summary>
    /// Optional. Determines the amount of time the system will wait before the
    /// start of each database server patching operation. Custom action timeout is
    /// in minutes and valid value is between 15 to 120 (inclusive).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CustomActionTimeoutMins {
      get { return customActionTimeoutMins_; }
      set {
        customActionTimeoutMins_ = value;
      }
    }

    /// <summary>Field number for the "is_custom_action_timeout_enabled" field.</summary>
    public const int IsCustomActionTimeoutEnabledFieldNumber = 9;
    private bool isCustomActionTimeoutEnabled_;
    /// <summary>
    /// Optional. If true, enables the configuration of a custom action timeout
    /// (waiting period) between database server patching operations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsCustomActionTimeoutEnabled {
      get { return isCustomActionTimeoutEnabled_; }
      set {
        isCustomActionTimeoutEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MaintenanceWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MaintenanceWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Preference != other.Preference) return false;
      if(!months_.Equals(other.months_)) return false;
      if(!weeksOfMonth_.Equals(other.weeksOfMonth_)) return false;
      if(!daysOfWeek_.Equals(other.daysOfWeek_)) return false;
      if(!hoursOfDay_.Equals(other.hoursOfDay_)) return false;
      if (LeadTimeWeek != other.LeadTimeWeek) return false;
      if (PatchingMode != other.PatchingMode) return false;
      if (CustomActionTimeoutMins != other.CustomActionTimeoutMins) return false;
      if (IsCustomActionTimeoutEnabled != other.IsCustomActionTimeoutEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Preference != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference.Unspecified) hash ^= Preference.GetHashCode();
      hash ^= months_.GetHashCode();
      hash ^= weeksOfMonth_.GetHashCode();
      hash ^= daysOfWeek_.GetHashCode();
      hash ^= hoursOfDay_.GetHashCode();
      if (LeadTimeWeek != 0) hash ^= LeadTimeWeek.GetHashCode();
      if (PatchingMode != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode.Unspecified) hash ^= PatchingMode.GetHashCode();
      if (CustomActionTimeoutMins != 0) hash ^= CustomActionTimeoutMins.GetHashCode();
      if (IsCustomActionTimeoutEnabled != false) hash ^= IsCustomActionTimeoutEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Preference != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Preference);
      }
      months_.WriteTo(output, _repeated_months_codec);
      weeksOfMonth_.WriteTo(output, _repeated_weeksOfMonth_codec);
      daysOfWeek_.WriteTo(output, _repeated_daysOfWeek_codec);
      hoursOfDay_.WriteTo(output, _repeated_hoursOfDay_codec);
      if (LeadTimeWeek != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LeadTimeWeek);
      }
      if (PatchingMode != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PatchingMode);
      }
      if (CustomActionTimeoutMins != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CustomActionTimeoutMins);
      }
      if (IsCustomActionTimeoutEnabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsCustomActionTimeoutEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Preference != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Preference);
      }
      months_.WriteTo(ref output, _repeated_months_codec);
      weeksOfMonth_.WriteTo(ref output, _repeated_weeksOfMonth_codec);
      daysOfWeek_.WriteTo(ref output, _repeated_daysOfWeek_codec);
      hoursOfDay_.WriteTo(ref output, _repeated_hoursOfDay_codec);
      if (LeadTimeWeek != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LeadTimeWeek);
      }
      if (PatchingMode != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) PatchingMode);
      }
      if (CustomActionTimeoutMins != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CustomActionTimeoutMins);
      }
      if (IsCustomActionTimeoutEnabled != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsCustomActionTimeoutEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Preference != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Preference);
      }
      size += months_.CalculateSize(_repeated_months_codec);
      size += weeksOfMonth_.CalculateSize(_repeated_weeksOfMonth_codec);
      size += daysOfWeek_.CalculateSize(_repeated_daysOfWeek_codec);
      size += hoursOfDay_.CalculateSize(_repeated_hoursOfDay_codec);
      if (LeadTimeWeek != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LeadTimeWeek);
      }
      if (PatchingMode != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PatchingMode);
      }
      if (CustomActionTimeoutMins != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CustomActionTimeoutMins);
      }
      if (IsCustomActionTimeoutEnabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MaintenanceWindow other) {
      if (other == null) {
        return;
      }
      if (other.Preference != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference.Unspecified) {
        Preference = other.Preference;
      }
      months_.Add(other.months_);
      weeksOfMonth_.Add(other.weeksOfMonth_);
      daysOfWeek_.Add(other.daysOfWeek_);
      hoursOfDay_.Add(other.hoursOfDay_);
      if (other.LeadTimeWeek != 0) {
        LeadTimeWeek = other.LeadTimeWeek;
      }
      if (other.PatchingMode != global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode.Unspecified) {
        PatchingMode = other.PatchingMode;
      }
      if (other.CustomActionTimeoutMins != 0) {
        CustomActionTimeoutMins = other.CustomActionTimeoutMins;
      }
      if (other.IsCustomActionTimeoutEnabled != false) {
        IsCustomActionTimeoutEnabled = other.IsCustomActionTimeoutEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Preference = (global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            months_.AddEntriesFrom(input, _repeated_months_codec);
            break;
          }
          case 26:
          case 24: {
            weeksOfMonth_.AddEntriesFrom(input, _repeated_weeksOfMonth_codec);
            break;
          }
          case 34:
          case 32: {
            daysOfWeek_.AddEntriesFrom(input, _repeated_daysOfWeek_codec);
            break;
          }
          case 42:
          case 40: {
            hoursOfDay_.AddEntriesFrom(input, _repeated_hoursOfDay_codec);
            break;
          }
          case 48: {
            LeadTimeWeek = input.ReadInt32();
            break;
          }
          case 56: {
            PatchingMode = (global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode) input.ReadEnum();
            break;
          }
          case 64: {
            CustomActionTimeoutMins = input.ReadInt32();
            break;
          }
          case 72: {
            IsCustomActionTimeoutEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Preference = (global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.MaintenanceWindowPreference) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            months_.AddEntriesFrom(ref input, _repeated_months_codec);
            break;
          }
          case 26:
          case 24: {
            weeksOfMonth_.AddEntriesFrom(ref input, _repeated_weeksOfMonth_codec);
            break;
          }
          case 34:
          case 32: {
            daysOfWeek_.AddEntriesFrom(ref input, _repeated_daysOfWeek_codec);
            break;
          }
          case 42:
          case 40: {
            hoursOfDay_.AddEntriesFrom(ref input, _repeated_hoursOfDay_codec);
            break;
          }
          case 48: {
            LeadTimeWeek = input.ReadInt32();
            break;
          }
          case 56: {
            PatchingMode = (global::Google.Cloud.OracleDatabase.V1.MaintenanceWindow.Types.PatchingMode) input.ReadEnum();
            break;
          }
          case 64: {
            CustomActionTimeoutMins = input.ReadInt32();
            break;
          }
          case 72: {
            IsCustomActionTimeoutEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MaintenanceWindow message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Maintenance window preference.
      /// </summary>
      public enum MaintenanceWindowPreference {
        /// <summary>
        /// Default unspecified value.
        /// </summary>
        [pbr::OriginalName("MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Custom preference.
        /// </summary>
        [pbr::OriginalName("CUSTOM_PREFERENCE")] CustomPreference = 1,
        /// <summary>
        /// No preference.
        /// </summary>
        [pbr::OriginalName("NO_PREFERENCE")] NoPreference = 2,
      }

      /// <summary>
      /// Patching mode.
      /// </summary>
      public enum PatchingMode {
        /// <summary>
        /// Default unspecified value.
        /// </summary>
        [pbr::OriginalName("PATCHING_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Updates the Cloud Exadata database server hosts in a rolling fashion.
        /// </summary>
        [pbr::OriginalName("ROLLING")] Rolling = 1,
        /// <summary>
        /// The non-rolling maintenance method first updates your storage servers at
        /// the same time, then your database servers at the same time.
        /// </summary>
        [pbr::OriginalName("NON_ROLLING")] NonRolling = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
