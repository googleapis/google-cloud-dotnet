// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/oracledatabase/v1/db_node.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.OracleDatabase.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/oracledatabase/v1/db_node.proto</summary>
  public static partial class DbNodeReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/oracledatabase/v1/db_node.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DbNodeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvY2xvdWQvb3JhY2xlZGF0YWJhc2UvdjEvZGJfbm9kZS5wcm90",
            "bxIeZ29vZ2xlLmNsb3VkLm9yYWNsZWRhdGFiYXNlLnYxGh9nb29nbGUvYXBp",
            "L2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnBy",
            "b3RvIoICCgZEYk5vZGUSEQoEbmFtZRgBIAEoCUID4EEIEkkKCnByb3BlcnRp",
            "ZXMYAyABKAsyMC5nb29nbGUuY2xvdWQub3JhY2xlZGF0YWJhc2UudjEuRGJO",
            "b2RlUHJvcGVydGllc0ID4EEBOpkB6kGVAQokb3JhY2xlZGF0YWJhc2UuZ29v",
            "Z2xlYXBpcy5jb20vRGJOb2RlElxwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRp",
            "b25zL3tsb2NhdGlvbn0vY2xvdWRWbUNsdXN0ZXJzL3tjbG91ZF92bV9jbHVz",
            "dGVyfS9kYk5vZGVzL3tkYl9ub2RlfSoHZGJOb2RlczIGZGJOb2RlIsADChBE",
            "Yk5vZGVQcm9wZXJ0aWVzEhEKBG9jaWQYASABKAlCA+BBAxIXCgpvY3B1X2Nv",
            "dW50GAIgASgFQgPgQQESFgoObWVtb3J5X3NpemVfZ2IYAyABKAUSJAoXZGJf",
            "bm9kZV9zdG9yYWdlX3NpemVfZ2IYBCABKAVCA+BBARIbCg5kYl9zZXJ2ZXJf",
            "b2NpZBgFIAEoCUID4EEBEhUKCGhvc3RuYW1lGAggASgJQgPgQQESSgoFc3Rh",
            "dGUYCSABKA4yNi5nb29nbGUuY2xvdWQub3JhY2xlZGF0YWJhc2UudjEuRGJO",
            "b2RlUHJvcGVydGllcy5TdGF0ZUID4EEDEhwKFHRvdGFsX2NwdV9jb3JlX2Nv",
            "dW50GAogASgFIqMBCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEhAK",
            "DFBST1ZJU0lPTklORxABEg0KCUFWQUlMQUJMRRACEgwKCFVQREFUSU5HEAMS",
            "DAoIU1RPUFBJTkcQBBILCgdTVE9QUEVEEAUSDAoIU1RBUlRJTkcQBhIPCgtU",
            "RVJNSU5BVElORxAHEg4KClRFUk1JTkFURUQQCBIKCgZGQUlMRUQQCULlAQoi",
            "Y29tLmdvb2dsZS5jbG91ZC5vcmFjbGVkYXRhYmFzZS52MUILRGJOb2RlUHJv",
            "dG9QAVpKY2xvdWQuZ29vZ2xlLmNvbS9nby9vcmFjbGVkYXRhYmFzZS9hcGl2",
            "MS9vcmFjbGVkYXRhYmFzZXBiO29yYWNsZWRhdGFiYXNlcGKqAh5Hb29nbGUu",
            "Q2xvdWQuT3JhY2xlRGF0YWJhc2UuVjHKAh5Hb29nbGVcQ2xvdWRcT3JhY2xl",
            "RGF0YWJhc2VcVjHqAiFHb29nbGU6OkNsb3VkOjpPcmFjbGVEYXRhYmFzZTo6",
            "VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.OracleDatabase.V1.DbNode), global::Google.Cloud.OracleDatabase.V1.DbNode.Parser, new[]{ "Name", "Properties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.OracleDatabase.V1.DbNodeProperties), global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Parser, new[]{ "Ocid", "OcpuCount", "MemorySizeGb", "DbNodeStorageSizeGb", "DbServerOcid", "Hostname", "State", "TotalCpuCoreCount" }, null, new[]{ typeof(global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Details of the database node resource.
  /// https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbNode/
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DbNode : pb::IMessage<DbNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DbNode> _parser = new pb::MessageParser<DbNode>(() => new DbNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DbNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.OracleDatabase.V1.DbNodeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DbNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DbNode(DbNode other) : this() {
      name_ = other.name_;
      properties_ = other.properties_ != null ? other.properties_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DbNode Clone() {
      return new DbNode(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The name of the database node resource in the following format:
    /// projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}/dbNodes/{db_node}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 3;
    private global::Google.Cloud.OracleDatabase.V1.DbNodeProperties properties_;
    /// <summary>
    /// Optional. Various properties of the database node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.DbNodeProperties Properties {
      get { return properties_; }
      set {
        properties_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DbNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DbNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Properties, other.Properties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (properties_ != null) hash ^= Properties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (properties_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Properties);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (properties_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Properties);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (properties_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Properties);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DbNode other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.properties_ != null) {
        if (properties_ == null) {
          Properties = new global::Google.Cloud.OracleDatabase.V1.DbNodeProperties();
        }
        Properties.MergeFrom(other.Properties);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (properties_ == null) {
              Properties = new global::Google.Cloud.OracleDatabase.V1.DbNodeProperties();
            }
            input.ReadMessage(Properties);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (properties_ == null) {
              Properties = new global::Google.Cloud.OracleDatabase.V1.DbNodeProperties();
            }
            input.ReadMessage(Properties);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Various properties and settings associated with Db node.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DbNodeProperties : pb::IMessage<DbNodeProperties>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DbNodeProperties> _parser = new pb::MessageParser<DbNodeProperties>(() => new DbNodeProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DbNodeProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.OracleDatabase.V1.DbNodeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DbNodeProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DbNodeProperties(DbNodeProperties other) : this() {
      ocid_ = other.ocid_;
      ocpuCount_ = other.ocpuCount_;
      memorySizeGb_ = other.memorySizeGb_;
      dbNodeStorageSizeGb_ = other.dbNodeStorageSizeGb_;
      dbServerOcid_ = other.dbServerOcid_;
      hostname_ = other.hostname_;
      state_ = other.state_;
      totalCpuCoreCount_ = other.totalCpuCoreCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DbNodeProperties Clone() {
      return new DbNodeProperties(this);
    }

    /// <summary>Field number for the "ocid" field.</summary>
    public const int OcidFieldNumber = 1;
    private string ocid_ = "";
    /// <summary>
    /// Output only. OCID of database node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ocid {
      get { return ocid_; }
      set {
        ocid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ocpu_count" field.</summary>
    public const int OcpuCountFieldNumber = 2;
    private int ocpuCount_;
    /// <summary>
    /// Optional. OCPU count per database node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OcpuCount {
      get { return ocpuCount_; }
      set {
        ocpuCount_ = value;
      }
    }

    /// <summary>Field number for the "memory_size_gb" field.</summary>
    public const int MemorySizeGbFieldNumber = 3;
    private int memorySizeGb_;
    /// <summary>
    /// Memory allocated in GBs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MemorySizeGb {
      get { return memorySizeGb_; }
      set {
        memorySizeGb_ = value;
      }
    }

    /// <summary>Field number for the "db_node_storage_size_gb" field.</summary>
    public const int DbNodeStorageSizeGbFieldNumber = 4;
    private int dbNodeStorageSizeGb_;
    /// <summary>
    /// Optional. Local storage per database node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DbNodeStorageSizeGb {
      get { return dbNodeStorageSizeGb_; }
      set {
        dbNodeStorageSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "db_server_ocid" field.</summary>
    public const int DbServerOcidFieldNumber = 5;
    private string dbServerOcid_ = "";
    /// <summary>
    /// Optional. Database server OCID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DbServerOcid {
      get { return dbServerOcid_; }
      set {
        dbServerOcid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hostname" field.</summary>
    public const int HostnameFieldNumber = 8;
    private string hostname_ = "";
    /// <summary>
    /// Optional. DNS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Hostname {
      get { return hostname_; }
      set {
        hostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 9;
    private global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State state_ = global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State.Unspecified;
    /// <summary>
    /// Output only. State of the database node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "total_cpu_core_count" field.</summary>
    public const int TotalCpuCoreCountFieldNumber = 10;
    private int totalCpuCoreCount_;
    /// <summary>
    /// Total CPU core count of the database node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalCpuCoreCount {
      get { return totalCpuCoreCount_; }
      set {
        totalCpuCoreCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DbNodeProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DbNodeProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ocid != other.Ocid) return false;
      if (OcpuCount != other.OcpuCount) return false;
      if (MemorySizeGb != other.MemorySizeGb) return false;
      if (DbNodeStorageSizeGb != other.DbNodeStorageSizeGb) return false;
      if (DbServerOcid != other.DbServerOcid) return false;
      if (Hostname != other.Hostname) return false;
      if (State != other.State) return false;
      if (TotalCpuCoreCount != other.TotalCpuCoreCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ocid.Length != 0) hash ^= Ocid.GetHashCode();
      if (OcpuCount != 0) hash ^= OcpuCount.GetHashCode();
      if (MemorySizeGb != 0) hash ^= MemorySizeGb.GetHashCode();
      if (DbNodeStorageSizeGb != 0) hash ^= DbNodeStorageSizeGb.GetHashCode();
      if (DbServerOcid.Length != 0) hash ^= DbServerOcid.GetHashCode();
      if (Hostname.Length != 0) hash ^= Hostname.GetHashCode();
      if (State != global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (TotalCpuCoreCount != 0) hash ^= TotalCpuCoreCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ocid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ocid);
      }
      if (OcpuCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OcpuCount);
      }
      if (MemorySizeGb != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MemorySizeGb);
      }
      if (DbNodeStorageSizeGb != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DbNodeStorageSizeGb);
      }
      if (DbServerOcid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DbServerOcid);
      }
      if (Hostname.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Hostname);
      }
      if (State != global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) State);
      }
      if (TotalCpuCoreCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TotalCpuCoreCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ocid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ocid);
      }
      if (OcpuCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OcpuCount);
      }
      if (MemorySizeGb != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MemorySizeGb);
      }
      if (DbNodeStorageSizeGb != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DbNodeStorageSizeGb);
      }
      if (DbServerOcid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DbServerOcid);
      }
      if (Hostname.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Hostname);
      }
      if (State != global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) State);
      }
      if (TotalCpuCoreCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TotalCpuCoreCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ocid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ocid);
      }
      if (OcpuCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OcpuCount);
      }
      if (MemorySizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MemorySizeGb);
      }
      if (DbNodeStorageSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DbNodeStorageSizeGb);
      }
      if (DbServerOcid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DbServerOcid);
      }
      if (Hostname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hostname);
      }
      if (State != global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (TotalCpuCoreCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalCpuCoreCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DbNodeProperties other) {
      if (other == null) {
        return;
      }
      if (other.Ocid.Length != 0) {
        Ocid = other.Ocid;
      }
      if (other.OcpuCount != 0) {
        OcpuCount = other.OcpuCount;
      }
      if (other.MemorySizeGb != 0) {
        MemorySizeGb = other.MemorySizeGb;
      }
      if (other.DbNodeStorageSizeGb != 0) {
        DbNodeStorageSizeGb = other.DbNodeStorageSizeGb;
      }
      if (other.DbServerOcid.Length != 0) {
        DbServerOcid = other.DbServerOcid;
      }
      if (other.Hostname.Length != 0) {
        Hostname = other.Hostname;
      }
      if (other.State != global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.TotalCpuCoreCount != 0) {
        TotalCpuCoreCount = other.TotalCpuCoreCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ocid = input.ReadString();
            break;
          }
          case 16: {
            OcpuCount = input.ReadInt32();
            break;
          }
          case 24: {
            MemorySizeGb = input.ReadInt32();
            break;
          }
          case 32: {
            DbNodeStorageSizeGb = input.ReadInt32();
            break;
          }
          case 42: {
            DbServerOcid = input.ReadString();
            break;
          }
          case 66: {
            Hostname = input.ReadString();
            break;
          }
          case 72: {
            State = (global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State) input.ReadEnum();
            break;
          }
          case 80: {
            TotalCpuCoreCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ocid = input.ReadString();
            break;
          }
          case 16: {
            OcpuCount = input.ReadInt32();
            break;
          }
          case 24: {
            MemorySizeGb = input.ReadInt32();
            break;
          }
          case 32: {
            DbNodeStorageSizeGb = input.ReadInt32();
            break;
          }
          case 42: {
            DbServerOcid = input.ReadString();
            break;
          }
          case 66: {
            Hostname = input.ReadString();
            break;
          }
          case 72: {
            State = (global::Google.Cloud.OracleDatabase.V1.DbNodeProperties.Types.State) input.ReadEnum();
            break;
          }
          case 80: {
            TotalCpuCoreCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DbNodeProperties message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The various lifecycle states of the database node.
      /// </summary>
      public enum State {
        /// <summary>
        /// Default unspecified value.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Indicates that the resource is in provisioning state.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// Indicates that the resource is in available state.
        /// </summary>
        [pbr::OriginalName("AVAILABLE")] Available = 2,
        /// <summary>
        /// Indicates that the resource is in updating state.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 3,
        /// <summary>
        /// Indicates that the resource is in stopping state.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 4,
        /// <summary>
        /// Indicates that the resource is in stopped state.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 5,
        /// <summary>
        /// Indicates that the resource is in starting state.
        /// </summary>
        [pbr::OriginalName("STARTING")] Starting = 6,
        /// <summary>
        /// Indicates that the resource is in terminating state.
        /// </summary>
        [pbr::OriginalName("TERMINATING")] Terminating = 7,
        /// <summary>
        /// Indicates that the resource is in terminated state.
        /// </summary>
        [pbr::OriginalName("TERMINATED")] Terminated = 8,
        /// <summary>
        /// Indicates that the resource is in failed state.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 9,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
