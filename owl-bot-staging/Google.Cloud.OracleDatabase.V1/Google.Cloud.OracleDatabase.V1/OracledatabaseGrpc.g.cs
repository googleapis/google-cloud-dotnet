// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/oracledatabase/v1/oracledatabase.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.OracleDatabase.V1 {
  /// <summary>
  /// Service describing handlers for resources
  /// </summary>
  public static partial class OracleDatabase
  {
    static readonly string __ServiceName = "google.cloud.oracledatabase.v1.OracleDatabase";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest> __Marshaller_google_cloud_oracledatabase_v1_ListCloudExadataInfrastructuresRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse> __Marshaller_google_cloud_oracledatabase_v1_ListCloudExadataInfrastructuresResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest> __Marshaller_google_cloud_oracledatabase_v1_GetCloudExadataInfrastructureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure> __Marshaller_google_cloud_oracledatabase_v1_CloudExadataInfrastructure = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest> __Marshaller_google_cloud_oracledatabase_v1_CreateCloudExadataInfrastructureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest> __Marshaller_google_cloud_oracledatabase_v1_DeleteCloudExadataInfrastructureRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest> __Marshaller_google_cloud_oracledatabase_v1_ListCloudVmClustersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse> __Marshaller_google_cloud_oracledatabase_v1_ListCloudVmClustersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest> __Marshaller_google_cloud_oracledatabase_v1_GetCloudVmClusterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.CloudVmCluster> __Marshaller_google_cloud_oracledatabase_v1_CloudVmCluster = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.CloudVmCluster.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest> __Marshaller_google_cloud_oracledatabase_v1_CreateCloudVmClusterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest> __Marshaller_google_cloud_oracledatabase_v1_DeleteCloudVmClusterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest> __Marshaller_google_cloud_oracledatabase_v1_ListEntitlementsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse> __Marshaller_google_cloud_oracledatabase_v1_ListEntitlementsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest> __Marshaller_google_cloud_oracledatabase_v1_ListDbServersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse> __Marshaller_google_cloud_oracledatabase_v1_ListDbServersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest> __Marshaller_google_cloud_oracledatabase_v1_ListDbNodesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse> __Marshaller_google_cloud_oracledatabase_v1_ListDbNodesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest> __Marshaller_google_cloud_oracledatabase_v1_ListGiVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse> __Marshaller_google_cloud_oracledatabase_v1_ListGiVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest> __Marshaller_google_cloud_oracledatabase_v1_ListDbSystemShapesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse> __Marshaller_google_cloud_oracledatabase_v1_ListDbSystemShapesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest> __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse> __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabasesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest> __Marshaller_google_cloud_oracledatabase_v1_GetAutonomousDatabaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase> __Marshaller_google_cloud_oracledatabase_v1_AutonomousDatabase = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest> __Marshaller_google_cloud_oracledatabase_v1_CreateAutonomousDatabaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest> __Marshaller_google_cloud_oracledatabase_v1_DeleteAutonomousDatabaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest> __Marshaller_google_cloud_oracledatabase_v1_RestoreAutonomousDatabaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest> __Marshaller_google_cloud_oracledatabase_v1_GenerateAutonomousDatabaseWalletRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse> __Marshaller_google_cloud_oracledatabase_v1_GenerateAutonomousDatabaseWalletResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest> __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDbVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse> __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDbVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest> __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabaseCharacterSetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse> __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabaseCharacterSetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest> __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabaseBackupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse> __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabaseBackupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest, global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse> __Method_ListCloudExadataInfrastructures = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest, global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCloudExadataInfrastructures",
        __Marshaller_google_cloud_oracledatabase_v1_ListCloudExadataInfrastructuresRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListCloudExadataInfrastructuresResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest, global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure> __Method_GetCloudExadataInfrastructure = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest, global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCloudExadataInfrastructure",
        __Marshaller_google_cloud_oracledatabase_v1_GetCloudExadataInfrastructureRequest,
        __Marshaller_google_cloud_oracledatabase_v1_CloudExadataInfrastructure);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest, global::Google.LongRunning.Operation> __Method_CreateCloudExadataInfrastructure = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCloudExadataInfrastructure",
        __Marshaller_google_cloud_oracledatabase_v1_CreateCloudExadataInfrastructureRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest, global::Google.LongRunning.Operation> __Method_DeleteCloudExadataInfrastructure = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCloudExadataInfrastructure",
        __Marshaller_google_cloud_oracledatabase_v1_DeleteCloudExadataInfrastructureRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest, global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse> __Method_ListCloudVmClusters = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest, global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCloudVmClusters",
        __Marshaller_google_cloud_oracledatabase_v1_ListCloudVmClustersRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListCloudVmClustersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest, global::Google.Cloud.OracleDatabase.V1.CloudVmCluster> __Method_GetCloudVmCluster = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest, global::Google.Cloud.OracleDatabase.V1.CloudVmCluster>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCloudVmCluster",
        __Marshaller_google_cloud_oracledatabase_v1_GetCloudVmClusterRequest,
        __Marshaller_google_cloud_oracledatabase_v1_CloudVmCluster);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest, global::Google.LongRunning.Operation> __Method_CreateCloudVmCluster = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCloudVmCluster",
        __Marshaller_google_cloud_oracledatabase_v1_CreateCloudVmClusterRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest, global::Google.LongRunning.Operation> __Method_DeleteCloudVmCluster = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCloudVmCluster",
        __Marshaller_google_cloud_oracledatabase_v1_DeleteCloudVmClusterRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest, global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse> __Method_ListEntitlements = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest, global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEntitlements",
        __Marshaller_google_cloud_oracledatabase_v1_ListEntitlementsRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListEntitlementsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest, global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse> __Method_ListDbServers = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest, global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDbServers",
        __Marshaller_google_cloud_oracledatabase_v1_ListDbServersRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListDbServersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest, global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse> __Method_ListDbNodes = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest, global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDbNodes",
        __Marshaller_google_cloud_oracledatabase_v1_ListDbNodesRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListDbNodesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest, global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse> __Method_ListGiVersions = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest, global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGiVersions",
        __Marshaller_google_cloud_oracledatabase_v1_ListGiVersionsRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListGiVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest, global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse> __Method_ListDbSystemShapes = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest, global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDbSystemShapes",
        __Marshaller_google_cloud_oracledatabase_v1_ListDbSystemShapesRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListDbSystemShapesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse> __Method_ListAutonomousDatabases = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAutonomousDatabases",
        __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabasesRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabasesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest, global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase> __Method_GetAutonomousDatabase = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest, global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAutonomousDatabase",
        __Marshaller_google_cloud_oracledatabase_v1_GetAutonomousDatabaseRequest,
        __Marshaller_google_cloud_oracledatabase_v1_AutonomousDatabase);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest, global::Google.LongRunning.Operation> __Method_CreateAutonomousDatabase = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAutonomousDatabase",
        __Marshaller_google_cloud_oracledatabase_v1_CreateAutonomousDatabaseRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest, global::Google.LongRunning.Operation> __Method_DeleteAutonomousDatabase = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAutonomousDatabase",
        __Marshaller_google_cloud_oracledatabase_v1_DeleteAutonomousDatabaseRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest, global::Google.LongRunning.Operation> __Method_RestoreAutonomousDatabase = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RestoreAutonomousDatabase",
        __Marshaller_google_cloud_oracledatabase_v1_RestoreAutonomousDatabaseRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest, global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse> __Method_GenerateAutonomousDatabaseWallet = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest, global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateAutonomousDatabaseWallet",
        __Marshaller_google_cloud_oracledatabase_v1_GenerateAutonomousDatabaseWalletRequest,
        __Marshaller_google_cloud_oracledatabase_v1_GenerateAutonomousDatabaseWalletResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse> __Method_ListAutonomousDbVersions = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAutonomousDbVersions",
        __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDbVersionsRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDbVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse> __Method_ListAutonomousDatabaseCharacterSets = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAutonomousDatabaseCharacterSets",
        __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabaseCharacterSetsRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabaseCharacterSetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse> __Method_ListAutonomousDatabaseBackups = new grpc::Method<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAutonomousDatabaseBackups",
        __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabaseBackupsRequest,
        __Marshaller_google_cloud_oracledatabase_v1_ListAutonomousDatabaseBackupsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.OracleDatabase.V1.OracledatabaseReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of OracleDatabase</summary>
    [grpc::BindServiceMethod(typeof(OracleDatabase), "BindService")]
    public abstract partial class OracleDatabaseBase
    {
      /// <summary>
      /// Lists Exadata Infrastructures in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse> ListCloudExadataInfrastructures(global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure> GetCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Exadata Infrastructure in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the VM Clusters in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse> ListCloudVmClusters(global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single VM Cluster.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.CloudVmCluster> GetCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new VM Cluster in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single VM Cluster.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the entitlements in a given project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse> ListEntitlements(global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the database servers of an Exadata Infrastructure instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse> ListDbServers(global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the database nodes of a VM Cluster.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse> ListDbNodes(global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all the valid Oracle Grid Infrastructure (GI) versions for the given
      /// project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse> ListGiVersions(global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the database system shapes available for the project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse> ListDbSystemShapes(global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the Autonomous Databases in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse> ListAutonomousDatabases(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the details of a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase> GetAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Autonomous Database in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Restores a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RestoreAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generates a wallet for an Autonomous Database.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse> GenerateAutonomousDatabaseWallet(global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all the available Autonomous Database versions for a project and
      /// location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse> ListAutonomousDbVersions(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Autonomous Database Character Sets in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse> ListAutonomousDatabaseCharacterSets(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the long-term and automatic backups of an Autonomous Database.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse> ListAutonomousDatabaseBackups(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OracleDatabase</summary>
    public partial class OracleDatabaseClient : grpc::ClientBase<OracleDatabaseClient>
    {
      /// <summary>Creates a new client for OracleDatabase</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OracleDatabaseClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OracleDatabase that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public OracleDatabaseClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OracleDatabaseClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected OracleDatabaseClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists Exadata Infrastructures in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse ListCloudExadataInfrastructures(global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCloudExadataInfrastructures(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Exadata Infrastructures in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse ListCloudExadataInfrastructures(global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCloudExadataInfrastructures, null, options, request);
      }
      /// <summary>
      /// Lists Exadata Infrastructures in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse> ListCloudExadataInfrastructuresAsync(global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCloudExadataInfrastructuresAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Exadata Infrastructures in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse> ListCloudExadataInfrastructuresAsync(global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCloudExadataInfrastructures, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure GetCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCloudExadataInfrastructure(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure GetCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCloudExadataInfrastructure, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure> GetCloudExadataInfrastructureAsync(global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCloudExadataInfrastructureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure> GetCloudExadataInfrastructureAsync(global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCloudExadataInfrastructure, null, options, request);
      }
      /// <summary>
      /// Creates a new Exadata Infrastructure in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCloudExadataInfrastructure(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Exadata Infrastructure in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCloudExadataInfrastructure, null, options, request);
      }
      /// <summary>
      /// Creates a new Exadata Infrastructure in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCloudExadataInfrastructureAsync(global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCloudExadataInfrastructureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Exadata Infrastructure in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCloudExadataInfrastructureAsync(global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCloudExadataInfrastructure, null, options, request);
      }
      /// <summary>
      /// Deletes a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCloudExadataInfrastructure(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteCloudExadataInfrastructure(global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCloudExadataInfrastructure, null, options, request);
      }
      /// <summary>
      /// Deletes a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteCloudExadataInfrastructureAsync(global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCloudExadataInfrastructureAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Exadata Infrastructure.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteCloudExadataInfrastructureAsync(global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCloudExadataInfrastructure, null, options, request);
      }
      /// <summary>
      /// Lists the VM Clusters in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse ListCloudVmClusters(global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCloudVmClusters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the VM Clusters in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse ListCloudVmClusters(global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCloudVmClusters, null, options, request);
      }
      /// <summary>
      /// Lists the VM Clusters in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse> ListCloudVmClustersAsync(global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCloudVmClustersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the VM Clusters in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse> ListCloudVmClustersAsync(global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCloudVmClusters, null, options, request);
      }
      /// <summary>
      /// Gets details of a single VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.CloudVmCluster GetCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCloudVmCluster(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.CloudVmCluster GetCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCloudVmCluster, null, options, request);
      }
      /// <summary>
      /// Gets details of a single VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.CloudVmCluster> GetCloudVmClusterAsync(global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCloudVmClusterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.CloudVmCluster> GetCloudVmClusterAsync(global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCloudVmCluster, null, options, request);
      }
      /// <summary>
      /// Creates a new VM Cluster in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCloudVmCluster(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new VM Cluster in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCloudVmCluster, null, options, request);
      }
      /// <summary>
      /// Creates a new VM Cluster in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCloudVmClusterAsync(global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCloudVmClusterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new VM Cluster in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCloudVmClusterAsync(global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCloudVmCluster, null, options, request);
      }
      /// <summary>
      /// Deletes a single VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCloudVmCluster(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteCloudVmCluster(global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCloudVmCluster, null, options, request);
      }
      /// <summary>
      /// Deletes a single VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteCloudVmClusterAsync(global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCloudVmClusterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteCloudVmClusterAsync(global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCloudVmCluster, null, options, request);
      }
      /// <summary>
      /// Lists the entitlements in a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse ListEntitlements(global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntitlements(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the entitlements in a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse ListEntitlements(global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEntitlements, null, options, request);
      }
      /// <summary>
      /// Lists the entitlements in a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse> ListEntitlementsAsync(global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntitlementsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the entitlements in a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse> ListEntitlementsAsync(global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEntitlements, null, options, request);
      }
      /// <summary>
      /// Lists the database servers of an Exadata Infrastructure instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse ListDbServers(global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDbServers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the database servers of an Exadata Infrastructure instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse ListDbServers(global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDbServers, null, options, request);
      }
      /// <summary>
      /// Lists the database servers of an Exadata Infrastructure instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse> ListDbServersAsync(global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDbServersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the database servers of an Exadata Infrastructure instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse> ListDbServersAsync(global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDbServers, null, options, request);
      }
      /// <summary>
      /// Lists the database nodes of a VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse ListDbNodes(global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDbNodes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the database nodes of a VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse ListDbNodes(global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDbNodes, null, options, request);
      }
      /// <summary>
      /// Lists the database nodes of a VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse> ListDbNodesAsync(global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDbNodesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the database nodes of a VM Cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse> ListDbNodesAsync(global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDbNodes, null, options, request);
      }
      /// <summary>
      /// Lists all the valid Oracle Grid Infrastructure (GI) versions for the given
      /// project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse ListGiVersions(global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGiVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the valid Oracle Grid Infrastructure (GI) versions for the given
      /// project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse ListGiVersions(global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGiVersions, null, options, request);
      }
      /// <summary>
      /// Lists all the valid Oracle Grid Infrastructure (GI) versions for the given
      /// project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse> ListGiVersionsAsync(global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGiVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the valid Oracle Grid Infrastructure (GI) versions for the given
      /// project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse> ListGiVersionsAsync(global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGiVersions, null, options, request);
      }
      /// <summary>
      /// Lists the database system shapes available for the project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse ListDbSystemShapes(global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDbSystemShapes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the database system shapes available for the project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse ListDbSystemShapes(global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDbSystemShapes, null, options, request);
      }
      /// <summary>
      /// Lists the database system shapes available for the project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse> ListDbSystemShapesAsync(global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDbSystemShapesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the database system shapes available for the project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse> ListDbSystemShapesAsync(global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDbSystemShapes, null, options, request);
      }
      /// <summary>
      /// Lists the Autonomous Databases in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse ListAutonomousDatabases(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAutonomousDatabases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Autonomous Databases in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse ListAutonomousDatabases(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAutonomousDatabases, null, options, request);
      }
      /// <summary>
      /// Lists the Autonomous Databases in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse> ListAutonomousDatabasesAsync(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAutonomousDatabasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Autonomous Databases in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse> ListAutonomousDatabasesAsync(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAutonomousDatabases, null, options, request);
      }
      /// <summary>
      /// Gets the details of a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase GetAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAutonomousDatabase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase GetAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAutonomousDatabase, null, options, request);
      }
      /// <summary>
      /// Gets the details of a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase> GetAutonomousDatabaseAsync(global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAutonomousDatabaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase> GetAutonomousDatabaseAsync(global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAutonomousDatabase, null, options, request);
      }
      /// <summary>
      /// Creates a new Autonomous Database in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAutonomousDatabase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Autonomous Database in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAutonomousDatabase, null, options, request);
      }
      /// <summary>
      /// Creates a new Autonomous Database in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAutonomousDatabaseAsync(global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAutonomousDatabaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Autonomous Database in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAutonomousDatabaseAsync(global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAutonomousDatabase, null, options, request);
      }
      /// <summary>
      /// Deletes a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAutonomousDatabase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAutonomousDatabase, null, options, request);
      }
      /// <summary>
      /// Deletes a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteAutonomousDatabaseAsync(global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAutonomousDatabaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteAutonomousDatabaseAsync(global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAutonomousDatabase, null, options, request);
      }
      /// <summary>
      /// Restores a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RestoreAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestoreAutonomousDatabase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Restores a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RestoreAutonomousDatabase(global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RestoreAutonomousDatabase, null, options, request);
      }
      /// <summary>
      /// Restores a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RestoreAutonomousDatabaseAsync(global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestoreAutonomousDatabaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Restores a single Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RestoreAutonomousDatabaseAsync(global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RestoreAutonomousDatabase, null, options, request);
      }
      /// <summary>
      /// Generates a wallet for an Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse GenerateAutonomousDatabaseWallet(global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateAutonomousDatabaseWallet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates a wallet for an Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse GenerateAutonomousDatabaseWallet(global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateAutonomousDatabaseWallet, null, options, request);
      }
      /// <summary>
      /// Generates a wallet for an Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse> GenerateAutonomousDatabaseWalletAsync(global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateAutonomousDatabaseWalletAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates a wallet for an Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse> GenerateAutonomousDatabaseWalletAsync(global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateAutonomousDatabaseWallet, null, options, request);
      }
      /// <summary>
      /// Lists all the available Autonomous Database versions for a project and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse ListAutonomousDbVersions(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAutonomousDbVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the available Autonomous Database versions for a project and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse ListAutonomousDbVersions(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAutonomousDbVersions, null, options, request);
      }
      /// <summary>
      /// Lists all the available Autonomous Database versions for a project and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse> ListAutonomousDbVersionsAsync(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAutonomousDbVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the available Autonomous Database versions for a project and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse> ListAutonomousDbVersionsAsync(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAutonomousDbVersions, null, options, request);
      }
      /// <summary>
      /// Lists Autonomous Database Character Sets in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse ListAutonomousDatabaseCharacterSets(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAutonomousDatabaseCharacterSets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Autonomous Database Character Sets in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse ListAutonomousDatabaseCharacterSets(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAutonomousDatabaseCharacterSets, null, options, request);
      }
      /// <summary>
      /// Lists Autonomous Database Character Sets in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse> ListAutonomousDatabaseCharacterSetsAsync(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAutonomousDatabaseCharacterSetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Autonomous Database Character Sets in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse> ListAutonomousDatabaseCharacterSetsAsync(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAutonomousDatabaseCharacterSets, null, options, request);
      }
      /// <summary>
      /// Lists the long-term and automatic backups of an Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse ListAutonomousDatabaseBackups(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAutonomousDatabaseBackups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the long-term and automatic backups of an Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse ListAutonomousDatabaseBackups(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAutonomousDatabaseBackups, null, options, request);
      }
      /// <summary>
      /// Lists the long-term and automatic backups of an Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse> ListAutonomousDatabaseBackupsAsync(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAutonomousDatabaseBackupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the long-term and automatic backups of an Autonomous Database.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse> ListAutonomousDatabaseBackupsAsync(global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAutonomousDatabaseBackups, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override OracleDatabaseClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OracleDatabaseClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(OracleDatabaseBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListCloudExadataInfrastructures, serviceImpl.ListCloudExadataInfrastructures)
          .AddMethod(__Method_GetCloudExadataInfrastructure, serviceImpl.GetCloudExadataInfrastructure)
          .AddMethod(__Method_CreateCloudExadataInfrastructure, serviceImpl.CreateCloudExadataInfrastructure)
          .AddMethod(__Method_DeleteCloudExadataInfrastructure, serviceImpl.DeleteCloudExadataInfrastructure)
          .AddMethod(__Method_ListCloudVmClusters, serviceImpl.ListCloudVmClusters)
          .AddMethod(__Method_GetCloudVmCluster, serviceImpl.GetCloudVmCluster)
          .AddMethod(__Method_CreateCloudVmCluster, serviceImpl.CreateCloudVmCluster)
          .AddMethod(__Method_DeleteCloudVmCluster, serviceImpl.DeleteCloudVmCluster)
          .AddMethod(__Method_ListEntitlements, serviceImpl.ListEntitlements)
          .AddMethod(__Method_ListDbServers, serviceImpl.ListDbServers)
          .AddMethod(__Method_ListDbNodes, serviceImpl.ListDbNodes)
          .AddMethod(__Method_ListGiVersions, serviceImpl.ListGiVersions)
          .AddMethod(__Method_ListDbSystemShapes, serviceImpl.ListDbSystemShapes)
          .AddMethod(__Method_ListAutonomousDatabases, serviceImpl.ListAutonomousDatabases)
          .AddMethod(__Method_GetAutonomousDatabase, serviceImpl.GetAutonomousDatabase)
          .AddMethod(__Method_CreateAutonomousDatabase, serviceImpl.CreateAutonomousDatabase)
          .AddMethod(__Method_DeleteAutonomousDatabase, serviceImpl.DeleteAutonomousDatabase)
          .AddMethod(__Method_RestoreAutonomousDatabase, serviceImpl.RestoreAutonomousDatabase)
          .AddMethod(__Method_GenerateAutonomousDatabaseWallet, serviceImpl.GenerateAutonomousDatabaseWallet)
          .AddMethod(__Method_ListAutonomousDbVersions, serviceImpl.ListAutonomousDbVersions)
          .AddMethod(__Method_ListAutonomousDatabaseCharacterSets, serviceImpl.ListAutonomousDatabaseCharacterSets)
          .AddMethod(__Method_ListAutonomousDatabaseBackups, serviceImpl.ListAutonomousDatabaseBackups).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, OracleDatabaseBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListCloudExadataInfrastructures, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresRequest, global::Google.Cloud.OracleDatabase.V1.ListCloudExadataInfrastructuresResponse>(serviceImpl.ListCloudExadataInfrastructures));
      serviceBinder.AddMethod(__Method_GetCloudExadataInfrastructure, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.GetCloudExadataInfrastructureRequest, global::Google.Cloud.OracleDatabase.V1.CloudExadataInfrastructure>(serviceImpl.GetCloudExadataInfrastructure));
      serviceBinder.AddMethod(__Method_CreateCloudExadataInfrastructure, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.CreateCloudExadataInfrastructureRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateCloudExadataInfrastructure));
      serviceBinder.AddMethod(__Method_DeleteCloudExadataInfrastructure, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.DeleteCloudExadataInfrastructureRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteCloudExadataInfrastructure));
      serviceBinder.AddMethod(__Method_ListCloudVmClusters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersRequest, global::Google.Cloud.OracleDatabase.V1.ListCloudVmClustersResponse>(serviceImpl.ListCloudVmClusters));
      serviceBinder.AddMethod(__Method_GetCloudVmCluster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.GetCloudVmClusterRequest, global::Google.Cloud.OracleDatabase.V1.CloudVmCluster>(serviceImpl.GetCloudVmCluster));
      serviceBinder.AddMethod(__Method_CreateCloudVmCluster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.CreateCloudVmClusterRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateCloudVmCluster));
      serviceBinder.AddMethod(__Method_DeleteCloudVmCluster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.DeleteCloudVmClusterRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteCloudVmCluster));
      serviceBinder.AddMethod(__Method_ListEntitlements, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListEntitlementsRequest, global::Google.Cloud.OracleDatabase.V1.ListEntitlementsResponse>(serviceImpl.ListEntitlements));
      serviceBinder.AddMethod(__Method_ListDbServers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListDbServersRequest, global::Google.Cloud.OracleDatabase.V1.ListDbServersResponse>(serviceImpl.ListDbServers));
      serviceBinder.AddMethod(__Method_ListDbNodes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListDbNodesRequest, global::Google.Cloud.OracleDatabase.V1.ListDbNodesResponse>(serviceImpl.ListDbNodes));
      serviceBinder.AddMethod(__Method_ListGiVersions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListGiVersionsRequest, global::Google.Cloud.OracleDatabase.V1.ListGiVersionsResponse>(serviceImpl.ListGiVersions));
      serviceBinder.AddMethod(__Method_ListDbSystemShapes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesRequest, global::Google.Cloud.OracleDatabase.V1.ListDbSystemShapesResponse>(serviceImpl.ListDbSystemShapes));
      serviceBinder.AddMethod(__Method_ListAutonomousDatabases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabasesResponse>(serviceImpl.ListAutonomousDatabases));
      serviceBinder.AddMethod(__Method_GetAutonomousDatabase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.GetAutonomousDatabaseRequest, global::Google.Cloud.OracleDatabase.V1.AutonomousDatabase>(serviceImpl.GetAutonomousDatabase));
      serviceBinder.AddMethod(__Method_CreateAutonomousDatabase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.CreateAutonomousDatabaseRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateAutonomousDatabase));
      serviceBinder.AddMethod(__Method_DeleteAutonomousDatabase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.DeleteAutonomousDatabaseRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteAutonomousDatabase));
      serviceBinder.AddMethod(__Method_RestoreAutonomousDatabase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.RestoreAutonomousDatabaseRequest, global::Google.LongRunning.Operation>(serviceImpl.RestoreAutonomousDatabase));
      serviceBinder.AddMethod(__Method_GenerateAutonomousDatabaseWallet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletRequest, global::Google.Cloud.OracleDatabase.V1.GenerateAutonomousDatabaseWalletResponse>(serviceImpl.GenerateAutonomousDatabaseWallet));
      serviceBinder.AddMethod(__Method_ListAutonomousDbVersions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDbVersionsResponse>(serviceImpl.ListAutonomousDbVersions));
      serviceBinder.AddMethod(__Method_ListAutonomousDatabaseCharacterSets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseCharacterSetsResponse>(serviceImpl.ListAutonomousDatabaseCharacterSets));
      serviceBinder.AddMethod(__Method_ListAutonomousDatabaseBackups, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsRequest, global::Google.Cloud.OracleDatabase.V1.ListAutonomousDatabaseBackupsResponse>(serviceImpl.ListAutonomousDatabaseBackups));
    }

  }
}
#endregion
