// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/apihub/v1/apihub_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ApiHub.V1 {
  /// <summary>
  /// This service provides all methods related to the API hub.
  /// </summary>
  public static partial class ApiHub
  {
    static readonly string __ServiceName = "google.cloud.apihub.v1.ApiHub";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.CreateApiRequest> __Marshaller_google_cloud_apihub_v1_CreateApiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.CreateApiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.Api> __Marshaller_google_cloud_apihub_v1_Api = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.Api.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetApiRequest> __Marshaller_google_cloud_apihub_v1_GetApiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetApiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListApisRequest> __Marshaller_google_cloud_apihub_v1_ListApisRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListApisRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListApisResponse> __Marshaller_google_cloud_apihub_v1_ListApisResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListApisResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.UpdateApiRequest> __Marshaller_google_cloud_apihub_v1_UpdateApiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.UpdateApiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DeleteApiRequest> __Marshaller_google_cloud_apihub_v1_DeleteApiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DeleteApiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.CreateVersionRequest> __Marshaller_google_cloud_apihub_v1_CreateVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.CreateVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.Version> __Marshaller_google_cloud_apihub_v1_Version = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.Version.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetVersionRequest> __Marshaller_google_cloud_apihub_v1_GetVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListVersionsRequest> __Marshaller_google_cloud_apihub_v1_ListVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListVersionsResponse> __Marshaller_google_cloud_apihub_v1_ListVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.UpdateVersionRequest> __Marshaller_google_cloud_apihub_v1_UpdateVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.UpdateVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DeleteVersionRequest> __Marshaller_google_cloud_apihub_v1_DeleteVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DeleteVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.CreateSpecRequest> __Marshaller_google_cloud_apihub_v1_CreateSpecRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.CreateSpecRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.Spec> __Marshaller_google_cloud_apihub_v1_Spec = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.Spec.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetSpecRequest> __Marshaller_google_cloud_apihub_v1_GetSpecRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetSpecRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest> __Marshaller_google_cloud_apihub_v1_GetSpecContentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.SpecContents> __Marshaller_google_cloud_apihub_v1_SpecContents = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.SpecContents.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListSpecsRequest> __Marshaller_google_cloud_apihub_v1_ListSpecsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListSpecsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListSpecsResponse> __Marshaller_google_cloud_apihub_v1_ListSpecsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListSpecsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.UpdateSpecRequest> __Marshaller_google_cloud_apihub_v1_UpdateSpecRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.UpdateSpecRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DeleteSpecRequest> __Marshaller_google_cloud_apihub_v1_DeleteSpecRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DeleteSpecRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetApiOperationRequest> __Marshaller_google_cloud_apihub_v1_GetApiOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetApiOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ApiOperation> __Marshaller_google_cloud_apihub_v1_ApiOperation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ApiOperation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest> __Marshaller_google_cloud_apihub_v1_ListApiOperationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse> __Marshaller_google_cloud_apihub_v1_ListApiOperationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetDefinitionRequest> __Marshaller_google_cloud_apihub_v1_GetDefinitionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetDefinitionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.Definition> __Marshaller_google_cloud_apihub_v1_Definition = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.Definition.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest> __Marshaller_google_cloud_apihub_v1_CreateDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.Deployment> __Marshaller_google_cloud_apihub_v1_Deployment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.Deployment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetDeploymentRequest> __Marshaller_google_cloud_apihub_v1_GetDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest> __Marshaller_google_cloud_apihub_v1_ListDeploymentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse> __Marshaller_google_cloud_apihub_v1_ListDeploymentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest> __Marshaller_google_cloud_apihub_v1_UpdateDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest> __Marshaller_google_cloud_apihub_v1_DeleteDeploymentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.CreateAttributeRequest> __Marshaller_google_cloud_apihub_v1_CreateAttributeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.CreateAttributeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.Attribute> __Marshaller_google_cloud_apihub_v1_Attribute = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.Attribute.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetAttributeRequest> __Marshaller_google_cloud_apihub_v1_GetAttributeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetAttributeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest> __Marshaller_google_cloud_apihub_v1_UpdateAttributeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest> __Marshaller_google_cloud_apihub_v1_DeleteAttributeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListAttributesRequest> __Marshaller_google_cloud_apihub_v1_ListAttributesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListAttributesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListAttributesResponse> __Marshaller_google_cloud_apihub_v1_ListAttributesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListAttributesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.SearchResourcesRequest> __Marshaller_google_cloud_apihub_v1_SearchResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.SearchResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.SearchResourcesResponse> __Marshaller_google_cloud_apihub_v1_SearchResourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.SearchResourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest> __Marshaller_google_cloud_apihub_v1_CreateExternalApiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ExternalApi> __Marshaller_google_cloud_apihub_v1_ExternalApi = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ExternalApi.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetExternalApiRequest> __Marshaller_google_cloud_apihub_v1_GetExternalApiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetExternalApiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest> __Marshaller_google_cloud_apihub_v1_UpdateExternalApiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest> __Marshaller_google_cloud_apihub_v1_DeleteExternalApiRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListExternalApisRequest> __Marshaller_google_cloud_apihub_v1_ListExternalApisRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListExternalApisRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListExternalApisResponse> __Marshaller_google_cloud_apihub_v1_ListExternalApisResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListExternalApisResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.CreateApiRequest, global::Google.Cloud.ApiHub.V1.Api> __Method_CreateApi = new grpc::Method<global::Google.Cloud.ApiHub.V1.CreateApiRequest, global::Google.Cloud.ApiHub.V1.Api>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateApi",
        __Marshaller_google_cloud_apihub_v1_CreateApiRequest,
        __Marshaller_google_cloud_apihub_v1_Api);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetApiRequest, global::Google.Cloud.ApiHub.V1.Api> __Method_GetApi = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetApiRequest, global::Google.Cloud.ApiHub.V1.Api>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetApi",
        __Marshaller_google_cloud_apihub_v1_GetApiRequest,
        __Marshaller_google_cloud_apihub_v1_Api);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListApisRequest, global::Google.Cloud.ApiHub.V1.ListApisResponse> __Method_ListApis = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListApisRequest, global::Google.Cloud.ApiHub.V1.ListApisResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListApis",
        __Marshaller_google_cloud_apihub_v1_ListApisRequest,
        __Marshaller_google_cloud_apihub_v1_ListApisResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateApiRequest, global::Google.Cloud.ApiHub.V1.Api> __Method_UpdateApi = new grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateApiRequest, global::Google.Cloud.ApiHub.V1.Api>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateApi",
        __Marshaller_google_cloud_apihub_v1_UpdateApiRequest,
        __Marshaller_google_cloud_apihub_v1_Api);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteApiRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteApi = new grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteApiRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteApi",
        __Marshaller_google_cloud_apihub_v1_DeleteApiRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.CreateVersionRequest, global::Google.Cloud.ApiHub.V1.Version> __Method_CreateVersion = new grpc::Method<global::Google.Cloud.ApiHub.V1.CreateVersionRequest, global::Google.Cloud.ApiHub.V1.Version>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateVersion",
        __Marshaller_google_cloud_apihub_v1_CreateVersionRequest,
        __Marshaller_google_cloud_apihub_v1_Version);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetVersionRequest, global::Google.Cloud.ApiHub.V1.Version> __Method_GetVersion = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetVersionRequest, global::Google.Cloud.ApiHub.V1.Version>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetVersion",
        __Marshaller_google_cloud_apihub_v1_GetVersionRequest,
        __Marshaller_google_cloud_apihub_v1_Version);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListVersionsRequest, global::Google.Cloud.ApiHub.V1.ListVersionsResponse> __Method_ListVersions = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListVersionsRequest, global::Google.Cloud.ApiHub.V1.ListVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListVersions",
        __Marshaller_google_cloud_apihub_v1_ListVersionsRequest,
        __Marshaller_google_cloud_apihub_v1_ListVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateVersionRequest, global::Google.Cloud.ApiHub.V1.Version> __Method_UpdateVersion = new grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateVersionRequest, global::Google.Cloud.ApiHub.V1.Version>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateVersion",
        __Marshaller_google_cloud_apihub_v1_UpdateVersionRequest,
        __Marshaller_google_cloud_apihub_v1_Version);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteVersionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteVersion = new grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteVersionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteVersion",
        __Marshaller_google_cloud_apihub_v1_DeleteVersionRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.CreateSpecRequest, global::Google.Cloud.ApiHub.V1.Spec> __Method_CreateSpec = new grpc::Method<global::Google.Cloud.ApiHub.V1.CreateSpecRequest, global::Google.Cloud.ApiHub.V1.Spec>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSpec",
        __Marshaller_google_cloud_apihub_v1_CreateSpecRequest,
        __Marshaller_google_cloud_apihub_v1_Spec);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetSpecRequest, global::Google.Cloud.ApiHub.V1.Spec> __Method_GetSpec = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetSpecRequest, global::Google.Cloud.ApiHub.V1.Spec>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSpec",
        __Marshaller_google_cloud_apihub_v1_GetSpecRequest,
        __Marshaller_google_cloud_apihub_v1_Spec);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest, global::Google.Cloud.ApiHub.V1.SpecContents> __Method_GetSpecContents = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest, global::Google.Cloud.ApiHub.V1.SpecContents>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSpecContents",
        __Marshaller_google_cloud_apihub_v1_GetSpecContentsRequest,
        __Marshaller_google_cloud_apihub_v1_SpecContents);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListSpecsRequest, global::Google.Cloud.ApiHub.V1.ListSpecsResponse> __Method_ListSpecs = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListSpecsRequest, global::Google.Cloud.ApiHub.V1.ListSpecsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSpecs",
        __Marshaller_google_cloud_apihub_v1_ListSpecsRequest,
        __Marshaller_google_cloud_apihub_v1_ListSpecsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateSpecRequest, global::Google.Cloud.ApiHub.V1.Spec> __Method_UpdateSpec = new grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateSpecRequest, global::Google.Cloud.ApiHub.V1.Spec>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSpec",
        __Marshaller_google_cloud_apihub_v1_UpdateSpecRequest,
        __Marshaller_google_cloud_apihub_v1_Spec);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteSpecRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSpec = new grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteSpecRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSpec",
        __Marshaller_google_cloud_apihub_v1_DeleteSpecRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetApiOperationRequest, global::Google.Cloud.ApiHub.V1.ApiOperation> __Method_GetApiOperation = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetApiOperationRequest, global::Google.Cloud.ApiHub.V1.ApiOperation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetApiOperation",
        __Marshaller_google_cloud_apihub_v1_GetApiOperationRequest,
        __Marshaller_google_cloud_apihub_v1_ApiOperation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest, global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse> __Method_ListApiOperations = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest, global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListApiOperations",
        __Marshaller_google_cloud_apihub_v1_ListApiOperationsRequest,
        __Marshaller_google_cloud_apihub_v1_ListApiOperationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetDefinitionRequest, global::Google.Cloud.ApiHub.V1.Definition> __Method_GetDefinition = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetDefinitionRequest, global::Google.Cloud.ApiHub.V1.Definition>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefinition",
        __Marshaller_google_cloud_apihub_v1_GetDefinitionRequest,
        __Marshaller_google_cloud_apihub_v1_Definition);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment> __Method_CreateDeployment = new grpc::Method<global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDeployment",
        __Marshaller_google_cloud_apihub_v1_CreateDeploymentRequest,
        __Marshaller_google_cloud_apihub_v1_Deployment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment> __Method_GetDeployment = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeployment",
        __Marshaller_google_cloud_apihub_v1_GetDeploymentRequest,
        __Marshaller_google_cloud_apihub_v1_Deployment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest, global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse> __Method_ListDeployments = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest, global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeployments",
        __Marshaller_google_cloud_apihub_v1_ListDeploymentsRequest,
        __Marshaller_google_cloud_apihub_v1_ListDeploymentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment> __Method_UpdateDeployment = new grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDeployment",
        __Marshaller_google_cloud_apihub_v1_UpdateDeploymentRequest,
        __Marshaller_google_cloud_apihub_v1_Deployment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDeployment = new grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDeployment",
        __Marshaller_google_cloud_apihub_v1_DeleteDeploymentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.CreateAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute> __Method_CreateAttribute = new grpc::Method<global::Google.Cloud.ApiHub.V1.CreateAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAttribute",
        __Marshaller_google_cloud_apihub_v1_CreateAttributeRequest,
        __Marshaller_google_cloud_apihub_v1_Attribute);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute> __Method_GetAttribute = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttribute",
        __Marshaller_google_cloud_apihub_v1_GetAttributeRequest,
        __Marshaller_google_cloud_apihub_v1_Attribute);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute> __Method_UpdateAttribute = new grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAttribute",
        __Marshaller_google_cloud_apihub_v1_UpdateAttributeRequest,
        __Marshaller_google_cloud_apihub_v1_Attribute);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAttribute = new grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAttribute",
        __Marshaller_google_cloud_apihub_v1_DeleteAttributeRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListAttributesRequest, global::Google.Cloud.ApiHub.V1.ListAttributesResponse> __Method_ListAttributes = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListAttributesRequest, global::Google.Cloud.ApiHub.V1.ListAttributesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAttributes",
        __Marshaller_google_cloud_apihub_v1_ListAttributesRequest,
        __Marshaller_google_cloud_apihub_v1_ListAttributesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.SearchResourcesRequest, global::Google.Cloud.ApiHub.V1.SearchResourcesResponse> __Method_SearchResources = new grpc::Method<global::Google.Cloud.ApiHub.V1.SearchResourcesRequest, global::Google.Cloud.ApiHub.V1.SearchResourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchResources",
        __Marshaller_google_cloud_apihub_v1_SearchResourcesRequest,
        __Marshaller_google_cloud_apihub_v1_SearchResourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi> __Method_CreateExternalApi = new grpc::Method<global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateExternalApi",
        __Marshaller_google_cloud_apihub_v1_CreateExternalApiRequest,
        __Marshaller_google_cloud_apihub_v1_ExternalApi);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi> __Method_GetExternalApi = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetExternalApi",
        __Marshaller_google_cloud_apihub_v1_GetExternalApiRequest,
        __Marshaller_google_cloud_apihub_v1_ExternalApi);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi> __Method_UpdateExternalApi = new grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateExternalApi",
        __Marshaller_google_cloud_apihub_v1_UpdateExternalApiRequest,
        __Marshaller_google_cloud_apihub_v1_ExternalApi);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteExternalApi = new grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteExternalApi",
        __Marshaller_google_cloud_apihub_v1_DeleteExternalApiRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListExternalApisRequest, global::Google.Cloud.ApiHub.V1.ListExternalApisResponse> __Method_ListExternalApis = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListExternalApisRequest, global::Google.Cloud.ApiHub.V1.ListExternalApisResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListExternalApis",
        __Marshaller_google_cloud_apihub_v1_ListExternalApisRequest,
        __Marshaller_google_cloud_apihub_v1_ListExternalApisResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ApiHub.V1.ApihubServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ApiHub</summary>
    [grpc::BindServiceMethod(typeof(ApiHub), "BindService")]
    public abstract partial class ApiHubBase
    {
      /// <summary>
      /// Create an API resource in the API hub.
      /// Once an API resource is created, versions can be added to it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Api> CreateApi(global::Google.Cloud.ApiHub.V1.CreateApiRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get API resource details including the API versions contained in it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Api> GetApi(global::Google.Cloud.ApiHub.V1.GetApiRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List API resources in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListApisResponse> ListApis(global::Google.Cloud.ApiHub.V1.ListApisRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update an API resource in the API hub. The following fields in the
      /// [API][] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Api.display_name]
      /// * [description][google.cloud.apihub.v1.Api.description]
      /// * [owner][google.cloud.apihub.v1.Api.owner]
      /// * [documentation][google.cloud.apihub.v1.Api.documentation]
      /// * [target_user][google.cloud.apihub.v1.Api.target_user]
      /// * [team][google.cloud.apihub.v1.Api.team]
      /// * [business_unit][google.cloud.apihub.v1.Api.business_unit]
      /// * [maturity_level][google.cloud.apihub.v1.Api.maturity_level]
      /// * [attributes][google.cloud.apihub.v1.Api.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      ///
      /// Updating the owner field requires complete owner message
      /// and updates both owner and email fields.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Api> UpdateApi(global::Google.Cloud.ApiHub.V1.UpdateApiRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an API resource in the API hub. API can only be deleted if all
      /// underlying versions are deleted.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteApi(global::Google.Cloud.ApiHub.V1.DeleteApiRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create an API version for an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Version> CreateVersion(global::Google.Cloud.ApiHub.V1.CreateVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details about the API version of an API resource. This will include
      /// information about the specs and operations present in the API
      /// version as well as the deployments linked to it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Version> GetVersion(global::Google.Cloud.ApiHub.V1.GetVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List API versions of an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListVersionsResponse> ListVersions(global::Google.Cloud.ApiHub.V1.ListVersionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update API version. The following fields in the
      /// [version][google.cloud.apihub.v1.Version] can be updated currently:
      ///
      /// * [display_name][google.cloud.apihub.v1.Version.display_name]
      /// * [description][google.cloud.apihub.v1.Version.description]
      /// * [documentation][google.cloud.apihub.v1.Version.documentation]
      /// * [deployments][google.cloud.apihub.v1.Version.deployments]
      /// * [lifecycle][google.cloud.apihub.v1.Version.lifecycle]
      /// * [compliance][google.cloud.apihub.v1.Version.compliance]
      /// * [accreditation][google.cloud.apihub.v1.Version.accreditation]
      /// * [attributes][google.cloud.apihub.v1.Version.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateVersionRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Version> UpdateVersion(global::Google.Cloud.ApiHub.V1.UpdateVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an API version. Version can only be deleted if all underlying specs,
      /// operations, definitions and linked deployments are deleted.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVersion(global::Google.Cloud.ApiHub.V1.DeleteVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a spec to an API version in the API hub.
      /// Multiple specs can be added to an API version.
      /// Note, while adding a spec, at least one of `contents` or `source_uri` must
      /// be provided. If `contents` is provided, then `spec_type` must also be
      /// provided.
      ///
      /// On adding a spec with contents to the version, the operations present in it
      /// will be added to the version.Note that the file contents in the spec should
      /// be of the same type as defined in the
      /// `projects/{project}/locations/{location}/attributes/system-spec-type`
      /// attribute associated with spec resource. Note that specs of various types
      /// can be uploaded, however parsing of details is supported for OpenAPI spec
      /// currently.
      ///
      /// In order to access the information parsed from the spec, use the
      /// [GetSpec][google.cloud.apihub.v1.ApiHub.GetSpec] method.
      /// In order to access the raw contents for a particular spec, use the
      /// [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method.
      /// In order to access the operations parsed from the spec, use the
      /// [ListAPIOperations][google.cloud.apihub.v1.ApiHub.ListApiOperations]
      /// method.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Spec> CreateSpec(global::Google.Cloud.ApiHub.V1.CreateSpecRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details about the information parsed from a spec.
      /// Note that this method does not return the raw spec contents.
      /// Use [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method
      /// to retrieve the same.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Spec> GetSpec(global::Google.Cloud.ApiHub.V1.GetSpecRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get spec contents.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.SpecContents> GetSpecContents(global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List specs corresponding to a particular API resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListSpecsResponse> ListSpecs(global::Google.Cloud.ApiHub.V1.ListSpecsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update spec. The following fields in the
      /// [spec][google.cloud.apihub.v1.Spec] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Spec.display_name]
      /// * [source_uri][google.cloud.apihub.v1.Spec.source_uri]
      /// * [lint_response][google.cloud.apihub.v1.Spec.lint_response]
      /// * [attributes][google.cloud.apihub.v1.Spec.attributes]
      /// * [contents][google.cloud.apihub.v1.Spec.contents]
      /// * [spec_type][google.cloud.apihub.v1.Spec.spec_type]
      ///
      /// In case of an OAS spec, updating spec contents can lead to:
      /// 1. Creation, deletion and update of operations.
      /// 2. Creation, deletion and update of definitions.
      /// 3. Update of other info parsed out from the new spec.
      ///
      /// In case of contents or source_uri being present in update mask, spec_type
      /// must also be present. Also, spec_type can not be present in update mask if
      /// contents or source_uri is not present.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateSpecRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Spec> UpdateSpec(global::Google.Cloud.ApiHub.V1.UpdateSpecRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a spec.
      /// Deleting a spec will also delete the associated operations from the
      /// version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSpec(global::Google.Cloud.ApiHub.V1.DeleteSpecRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details about a particular operation in API version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ApiOperation> GetApiOperation(global::Google.Cloud.ApiHub.V1.GetApiOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List operations in an API version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse> ListApiOperations(global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details about a definition in an API version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Definition> GetDefinition(global::Google.Cloud.ApiHub.V1.GetDefinitionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a deployment resource in the API hub.
      /// Once a deployment resource is created, it can be associated with API
      /// versions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Deployment> CreateDeployment(global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details about a deployment and the API versions linked to it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Deployment> GetDeployment(global::Google.Cloud.ApiHub.V1.GetDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List deployment resources in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse> ListDeployments(global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a deployment resource in the API hub. The following fields in the
      /// [deployment resource][google.cloud.apihub.v1.Deployment] can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Deployment.display_name]
      /// * [description][google.cloud.apihub.v1.Deployment.description]
      /// * [documentation][google.cloud.apihub.v1.Deployment.documentation]
      /// * [deployment_type][google.cloud.apihub.v1.Deployment.deployment_type]
      /// * [resource_uri][google.cloud.apihub.v1.Deployment.resource_uri]
      /// * [endpoints][google.cloud.apihub.v1.Deployment.endpoints]
      /// * [slo][google.cloud.apihub.v1.Deployment.slo]
      /// * [environment][google.cloud.apihub.v1.Deployment.environment]
      /// * [attributes][google.cloud.apihub.v1.Deployment.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateDeploymentRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Deployment> UpdateDeployment(global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a deployment resource in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeployment(global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a user defined attribute.
      ///
      /// Certain pre defined attributes are already created by the API hub. These
      /// attributes will have type as `SYSTEM_DEFINED` and can be listed via
      /// [ListAttributes][google.cloud.apihub.v1.ApiHub.ListAttributes] method.
      /// Allowed values for the same can be updated via
      /// [UpdateAttribute][google.cloud.apihub.v1.ApiHub.UpdateAttribute] method.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Attribute> CreateAttribute(global::Google.Cloud.ApiHub.V1.CreateAttributeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details about the attribute.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Attribute> GetAttribute(global::Google.Cloud.ApiHub.V1.GetAttributeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update the attribute.  The following fields in the
      /// [Attribute resource][google.cloud.apihub.v1.Attribute] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Attribute.display_name]
      /// The display name can be updated for user defined attributes only.
      /// * [description][google.cloud.apihub.v1.Attribute.description]
      /// The description can be updated for user defined attributes only.
      /// * [allowed_values][google.cloud.apihub.v1.Attribute.allowed_values]
      /// To update the list of allowed values, clients need to use the fetched list
      /// of allowed values and add or remove values to or from the same list.
      /// The mutable allowed values can be updated for both user defined and System
      /// defined attributes. The immutable allowed values cannot be updated or
      /// deleted. The updated list of allowed values cannot be empty. If an allowed
      /// value that is already used by some resource's attribute is deleted, then
      /// the association between the resource and the attribute value will also be
      /// deleted.
      /// * [cardinality][google.cloud.apihub.v1.Attribute.cardinality]
      /// The cardinality can be updated for user defined attributes only.
      /// Cardinality can only be increased during an update.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateAttributeRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Attribute> UpdateAttribute(global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an attribute.
      ///
      /// Note: System defined attributes cannot be deleted. All
      /// associations of the attribute being deleted with any API hub resource will
      /// also get deleted.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAttribute(global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List all attributes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListAttributesResponse> ListAttributes(global::Google.Cloud.ApiHub.V1.ListAttributesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search across API-Hub resources.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.SearchResourcesResponse> SearchResources(global::Google.Cloud.ApiHub.V1.SearchResourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ExternalApi> CreateExternalApi(global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details about an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ExternalApi> GetExternalApi(global::Google.Cloud.ApiHub.V1.GetExternalApiRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update an External API resource in the API hub. The following fields can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.ExternalApi.display_name]
      /// * [description][google.cloud.apihub.v1.ExternalApi.description]
      /// * [documentation][google.cloud.apihub.v1.ExternalApi.documentation]
      /// * [endpoints][google.cloud.apihub.v1.ExternalApi.endpoints]
      /// * [paths][google.cloud.apihub.v1.ExternalApi.paths]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateExternalApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ExternalApi> UpdateExternalApi(global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExternalApi(global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List External API resources in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListExternalApisResponse> ListExternalApis(global::Google.Cloud.ApiHub.V1.ListExternalApisRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ApiHub</summary>
    public partial class ApiHubClient : grpc::ClientBase<ApiHubClient>
    {
      /// <summary>Creates a new client for ApiHub</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ApiHubClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ApiHub that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ApiHubClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ApiHubClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ApiHubClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create an API resource in the API hub.
      /// Once an API resource is created, versions can be added to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Api CreateApi(global::Google.Cloud.ApiHub.V1.CreateApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateApi(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an API resource in the API hub.
      /// Once an API resource is created, versions can be added to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Api CreateApi(global::Google.Cloud.ApiHub.V1.CreateApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateApi, null, options, request);
      }
      /// <summary>
      /// Create an API resource in the API hub.
      /// Once an API resource is created, versions can be added to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Api> CreateApiAsync(global::Google.Cloud.ApiHub.V1.CreateApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateApiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an API resource in the API hub.
      /// Once an API resource is created, versions can be added to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Api> CreateApiAsync(global::Google.Cloud.ApiHub.V1.CreateApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateApi, null, options, request);
      }
      /// <summary>
      /// Get API resource details including the API versions contained in it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Api GetApi(global::Google.Cloud.ApiHub.V1.GetApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetApi(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get API resource details including the API versions contained in it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Api GetApi(global::Google.Cloud.ApiHub.V1.GetApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetApi, null, options, request);
      }
      /// <summary>
      /// Get API resource details including the API versions contained in it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Api> GetApiAsync(global::Google.Cloud.ApiHub.V1.GetApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetApiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get API resource details including the API versions contained in it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Api> GetApiAsync(global::Google.Cloud.ApiHub.V1.GetApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetApi, null, options, request);
      }
      /// <summary>
      /// List API resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListApisResponse ListApis(global::Google.Cloud.ApiHub.V1.ListApisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListApis(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List API resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListApisResponse ListApis(global::Google.Cloud.ApiHub.V1.ListApisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListApis, null, options, request);
      }
      /// <summary>
      /// List API resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListApisResponse> ListApisAsync(global::Google.Cloud.ApiHub.V1.ListApisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListApisAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List API resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListApisResponse> ListApisAsync(global::Google.Cloud.ApiHub.V1.ListApisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListApis, null, options, request);
      }
      /// <summary>
      /// Update an API resource in the API hub. The following fields in the
      /// [API][] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Api.display_name]
      /// * [description][google.cloud.apihub.v1.Api.description]
      /// * [owner][google.cloud.apihub.v1.Api.owner]
      /// * [documentation][google.cloud.apihub.v1.Api.documentation]
      /// * [target_user][google.cloud.apihub.v1.Api.target_user]
      /// * [team][google.cloud.apihub.v1.Api.team]
      /// * [business_unit][google.cloud.apihub.v1.Api.business_unit]
      /// * [maturity_level][google.cloud.apihub.v1.Api.maturity_level]
      /// * [attributes][google.cloud.apihub.v1.Api.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      ///
      /// Updating the owner field requires complete owner message
      /// and updates both owner and email fields.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Api UpdateApi(global::Google.Cloud.ApiHub.V1.UpdateApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateApi(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an API resource in the API hub. The following fields in the
      /// [API][] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Api.display_name]
      /// * [description][google.cloud.apihub.v1.Api.description]
      /// * [owner][google.cloud.apihub.v1.Api.owner]
      /// * [documentation][google.cloud.apihub.v1.Api.documentation]
      /// * [target_user][google.cloud.apihub.v1.Api.target_user]
      /// * [team][google.cloud.apihub.v1.Api.team]
      /// * [business_unit][google.cloud.apihub.v1.Api.business_unit]
      /// * [maturity_level][google.cloud.apihub.v1.Api.maturity_level]
      /// * [attributes][google.cloud.apihub.v1.Api.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      ///
      /// Updating the owner field requires complete owner message
      /// and updates both owner and email fields.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Api UpdateApi(global::Google.Cloud.ApiHub.V1.UpdateApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateApi, null, options, request);
      }
      /// <summary>
      /// Update an API resource in the API hub. The following fields in the
      /// [API][] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Api.display_name]
      /// * [description][google.cloud.apihub.v1.Api.description]
      /// * [owner][google.cloud.apihub.v1.Api.owner]
      /// * [documentation][google.cloud.apihub.v1.Api.documentation]
      /// * [target_user][google.cloud.apihub.v1.Api.target_user]
      /// * [team][google.cloud.apihub.v1.Api.team]
      /// * [business_unit][google.cloud.apihub.v1.Api.business_unit]
      /// * [maturity_level][google.cloud.apihub.v1.Api.maturity_level]
      /// * [attributes][google.cloud.apihub.v1.Api.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      ///
      /// Updating the owner field requires complete owner message
      /// and updates both owner and email fields.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Api> UpdateApiAsync(global::Google.Cloud.ApiHub.V1.UpdateApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateApiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an API resource in the API hub. The following fields in the
      /// [API][] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Api.display_name]
      /// * [description][google.cloud.apihub.v1.Api.description]
      /// * [owner][google.cloud.apihub.v1.Api.owner]
      /// * [documentation][google.cloud.apihub.v1.Api.documentation]
      /// * [target_user][google.cloud.apihub.v1.Api.target_user]
      /// * [team][google.cloud.apihub.v1.Api.team]
      /// * [business_unit][google.cloud.apihub.v1.Api.business_unit]
      /// * [maturity_level][google.cloud.apihub.v1.Api.maturity_level]
      /// * [attributes][google.cloud.apihub.v1.Api.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      ///
      /// Updating the owner field requires complete owner message
      /// and updates both owner and email fields.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Api> UpdateApiAsync(global::Google.Cloud.ApiHub.V1.UpdateApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateApi, null, options, request);
      }
      /// <summary>
      /// Delete an API resource in the API hub. API can only be deleted if all
      /// underlying versions are deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteApi(global::Google.Cloud.ApiHub.V1.DeleteApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteApi(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an API resource in the API hub. API can only be deleted if all
      /// underlying versions are deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteApi(global::Google.Cloud.ApiHub.V1.DeleteApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteApi, null, options, request);
      }
      /// <summary>
      /// Delete an API resource in the API hub. API can only be deleted if all
      /// underlying versions are deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteApiAsync(global::Google.Cloud.ApiHub.V1.DeleteApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteApiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an API resource in the API hub. API can only be deleted if all
      /// underlying versions are deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteApiAsync(global::Google.Cloud.ApiHub.V1.DeleteApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteApi, null, options, request);
      }
      /// <summary>
      /// Create an API version for an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Version CreateVersion(global::Google.Cloud.ApiHub.V1.CreateVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an API version for an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Version CreateVersion(global::Google.Cloud.ApiHub.V1.CreateVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateVersion, null, options, request);
      }
      /// <summary>
      /// Create an API version for an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Version> CreateVersionAsync(global::Google.Cloud.ApiHub.V1.CreateVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an API version for an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Version> CreateVersionAsync(global::Google.Cloud.ApiHub.V1.CreateVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateVersion, null, options, request);
      }
      /// <summary>
      /// Get details about the API version of an API resource. This will include
      /// information about the specs and operations present in the API
      /// version as well as the deployments linked to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Version GetVersion(global::Google.Cloud.ApiHub.V1.GetVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about the API version of an API resource. This will include
      /// information about the specs and operations present in the API
      /// version as well as the deployments linked to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Version GetVersion(global::Google.Cloud.ApiHub.V1.GetVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetVersion, null, options, request);
      }
      /// <summary>
      /// Get details about the API version of an API resource. This will include
      /// information about the specs and operations present in the API
      /// version as well as the deployments linked to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Version> GetVersionAsync(global::Google.Cloud.ApiHub.V1.GetVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about the API version of an API resource. This will include
      /// information about the specs and operations present in the API
      /// version as well as the deployments linked to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Version> GetVersionAsync(global::Google.Cloud.ApiHub.V1.GetVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetVersion, null, options, request);
      }
      /// <summary>
      /// List API versions of an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListVersionsResponse ListVersions(global::Google.Cloud.ApiHub.V1.ListVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List API versions of an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListVersionsResponse ListVersions(global::Google.Cloud.ApiHub.V1.ListVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListVersions, null, options, request);
      }
      /// <summary>
      /// List API versions of an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListVersionsResponse> ListVersionsAsync(global::Google.Cloud.ApiHub.V1.ListVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List API versions of an API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListVersionsResponse> ListVersionsAsync(global::Google.Cloud.ApiHub.V1.ListVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListVersions, null, options, request);
      }
      /// <summary>
      /// Update API version. The following fields in the
      /// [version][google.cloud.apihub.v1.Version] can be updated currently:
      ///
      /// * [display_name][google.cloud.apihub.v1.Version.display_name]
      /// * [description][google.cloud.apihub.v1.Version.description]
      /// * [documentation][google.cloud.apihub.v1.Version.documentation]
      /// * [deployments][google.cloud.apihub.v1.Version.deployments]
      /// * [lifecycle][google.cloud.apihub.v1.Version.lifecycle]
      /// * [compliance][google.cloud.apihub.v1.Version.compliance]
      /// * [accreditation][google.cloud.apihub.v1.Version.accreditation]
      /// * [attributes][google.cloud.apihub.v1.Version.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateVersionRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Version UpdateVersion(global::Google.Cloud.ApiHub.V1.UpdateVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update API version. The following fields in the
      /// [version][google.cloud.apihub.v1.Version] can be updated currently:
      ///
      /// * [display_name][google.cloud.apihub.v1.Version.display_name]
      /// * [description][google.cloud.apihub.v1.Version.description]
      /// * [documentation][google.cloud.apihub.v1.Version.documentation]
      /// * [deployments][google.cloud.apihub.v1.Version.deployments]
      /// * [lifecycle][google.cloud.apihub.v1.Version.lifecycle]
      /// * [compliance][google.cloud.apihub.v1.Version.compliance]
      /// * [accreditation][google.cloud.apihub.v1.Version.accreditation]
      /// * [attributes][google.cloud.apihub.v1.Version.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateVersionRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Version UpdateVersion(global::Google.Cloud.ApiHub.V1.UpdateVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateVersion, null, options, request);
      }
      /// <summary>
      /// Update API version. The following fields in the
      /// [version][google.cloud.apihub.v1.Version] can be updated currently:
      ///
      /// * [display_name][google.cloud.apihub.v1.Version.display_name]
      /// * [description][google.cloud.apihub.v1.Version.description]
      /// * [documentation][google.cloud.apihub.v1.Version.documentation]
      /// * [deployments][google.cloud.apihub.v1.Version.deployments]
      /// * [lifecycle][google.cloud.apihub.v1.Version.lifecycle]
      /// * [compliance][google.cloud.apihub.v1.Version.compliance]
      /// * [accreditation][google.cloud.apihub.v1.Version.accreditation]
      /// * [attributes][google.cloud.apihub.v1.Version.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateVersionRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Version> UpdateVersionAsync(global::Google.Cloud.ApiHub.V1.UpdateVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update API version. The following fields in the
      /// [version][google.cloud.apihub.v1.Version] can be updated currently:
      ///
      /// * [display_name][google.cloud.apihub.v1.Version.display_name]
      /// * [description][google.cloud.apihub.v1.Version.description]
      /// * [documentation][google.cloud.apihub.v1.Version.documentation]
      /// * [deployments][google.cloud.apihub.v1.Version.deployments]
      /// * [lifecycle][google.cloud.apihub.v1.Version.lifecycle]
      /// * [compliance][google.cloud.apihub.v1.Version.compliance]
      /// * [accreditation][google.cloud.apihub.v1.Version.accreditation]
      /// * [attributes][google.cloud.apihub.v1.Version.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateVersionRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Version> UpdateVersionAsync(global::Google.Cloud.ApiHub.V1.UpdateVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateVersion, null, options, request);
      }
      /// <summary>
      /// Delete an API version. Version can only be deleted if all underlying specs,
      /// operations, definitions and linked deployments are deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteVersion(global::Google.Cloud.ApiHub.V1.DeleteVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an API version. Version can only be deleted if all underlying specs,
      /// operations, definitions and linked deployments are deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteVersion(global::Google.Cloud.ApiHub.V1.DeleteVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteVersion, null, options, request);
      }
      /// <summary>
      /// Delete an API version. Version can only be deleted if all underlying specs,
      /// operations, definitions and linked deployments are deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVersionAsync(global::Google.Cloud.ApiHub.V1.DeleteVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an API version. Version can only be deleted if all underlying specs,
      /// operations, definitions and linked deployments are deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteVersionAsync(global::Google.Cloud.ApiHub.V1.DeleteVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteVersion, null, options, request);
      }
      /// <summary>
      /// Add a spec to an API version in the API hub.
      /// Multiple specs can be added to an API version.
      /// Note, while adding a spec, at least one of `contents` or `source_uri` must
      /// be provided. If `contents` is provided, then `spec_type` must also be
      /// provided.
      ///
      /// On adding a spec with contents to the version, the operations present in it
      /// will be added to the version.Note that the file contents in the spec should
      /// be of the same type as defined in the
      /// `projects/{project}/locations/{location}/attributes/system-spec-type`
      /// attribute associated with spec resource. Note that specs of various types
      /// can be uploaded, however parsing of details is supported for OpenAPI spec
      /// currently.
      ///
      /// In order to access the information parsed from the spec, use the
      /// [GetSpec][google.cloud.apihub.v1.ApiHub.GetSpec] method.
      /// In order to access the raw contents for a particular spec, use the
      /// [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method.
      /// In order to access the operations parsed from the spec, use the
      /// [ListAPIOperations][google.cloud.apihub.v1.ApiHub.ListApiOperations]
      /// method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Spec CreateSpec(global::Google.Cloud.ApiHub.V1.CreateSpecRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSpec(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a spec to an API version in the API hub.
      /// Multiple specs can be added to an API version.
      /// Note, while adding a spec, at least one of `contents` or `source_uri` must
      /// be provided. If `contents` is provided, then `spec_type` must also be
      /// provided.
      ///
      /// On adding a spec with contents to the version, the operations present in it
      /// will be added to the version.Note that the file contents in the spec should
      /// be of the same type as defined in the
      /// `projects/{project}/locations/{location}/attributes/system-spec-type`
      /// attribute associated with spec resource. Note that specs of various types
      /// can be uploaded, however parsing of details is supported for OpenAPI spec
      /// currently.
      ///
      /// In order to access the information parsed from the spec, use the
      /// [GetSpec][google.cloud.apihub.v1.ApiHub.GetSpec] method.
      /// In order to access the raw contents for a particular spec, use the
      /// [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method.
      /// In order to access the operations parsed from the spec, use the
      /// [ListAPIOperations][google.cloud.apihub.v1.ApiHub.ListApiOperations]
      /// method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Spec CreateSpec(global::Google.Cloud.ApiHub.V1.CreateSpecRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSpec, null, options, request);
      }
      /// <summary>
      /// Add a spec to an API version in the API hub.
      /// Multiple specs can be added to an API version.
      /// Note, while adding a spec, at least one of `contents` or `source_uri` must
      /// be provided. If `contents` is provided, then `spec_type` must also be
      /// provided.
      ///
      /// On adding a spec with contents to the version, the operations present in it
      /// will be added to the version.Note that the file contents in the spec should
      /// be of the same type as defined in the
      /// `projects/{project}/locations/{location}/attributes/system-spec-type`
      /// attribute associated with spec resource. Note that specs of various types
      /// can be uploaded, however parsing of details is supported for OpenAPI spec
      /// currently.
      ///
      /// In order to access the information parsed from the spec, use the
      /// [GetSpec][google.cloud.apihub.v1.ApiHub.GetSpec] method.
      /// In order to access the raw contents for a particular spec, use the
      /// [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method.
      /// In order to access the operations parsed from the spec, use the
      /// [ListAPIOperations][google.cloud.apihub.v1.ApiHub.ListApiOperations]
      /// method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Spec> CreateSpecAsync(global::Google.Cloud.ApiHub.V1.CreateSpecRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSpecAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a spec to an API version in the API hub.
      /// Multiple specs can be added to an API version.
      /// Note, while adding a spec, at least one of `contents` or `source_uri` must
      /// be provided. If `contents` is provided, then `spec_type` must also be
      /// provided.
      ///
      /// On adding a spec with contents to the version, the operations present in it
      /// will be added to the version.Note that the file contents in the spec should
      /// be of the same type as defined in the
      /// `projects/{project}/locations/{location}/attributes/system-spec-type`
      /// attribute associated with spec resource. Note that specs of various types
      /// can be uploaded, however parsing of details is supported for OpenAPI spec
      /// currently.
      ///
      /// In order to access the information parsed from the spec, use the
      /// [GetSpec][google.cloud.apihub.v1.ApiHub.GetSpec] method.
      /// In order to access the raw contents for a particular spec, use the
      /// [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method.
      /// In order to access the operations parsed from the spec, use the
      /// [ListAPIOperations][google.cloud.apihub.v1.ApiHub.ListApiOperations]
      /// method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Spec> CreateSpecAsync(global::Google.Cloud.ApiHub.V1.CreateSpecRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSpec, null, options, request);
      }
      /// <summary>
      /// Get details about the information parsed from a spec.
      /// Note that this method does not return the raw spec contents.
      /// Use [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method
      /// to retrieve the same.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Spec GetSpec(global::Google.Cloud.ApiHub.V1.GetSpecRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSpec(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about the information parsed from a spec.
      /// Note that this method does not return the raw spec contents.
      /// Use [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method
      /// to retrieve the same.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Spec GetSpec(global::Google.Cloud.ApiHub.V1.GetSpecRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSpec, null, options, request);
      }
      /// <summary>
      /// Get details about the information parsed from a spec.
      /// Note that this method does not return the raw spec contents.
      /// Use [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method
      /// to retrieve the same.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Spec> GetSpecAsync(global::Google.Cloud.ApiHub.V1.GetSpecRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSpecAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about the information parsed from a spec.
      /// Note that this method does not return the raw spec contents.
      /// Use [GetSpecContents][google.cloud.apihub.v1.ApiHub.GetSpecContents] method
      /// to retrieve the same.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Spec> GetSpecAsync(global::Google.Cloud.ApiHub.V1.GetSpecRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSpec, null, options, request);
      }
      /// <summary>
      /// Get spec contents.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.SpecContents GetSpecContents(global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSpecContents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get spec contents.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.SpecContents GetSpecContents(global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSpecContents, null, options, request);
      }
      /// <summary>
      /// Get spec contents.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.SpecContents> GetSpecContentsAsync(global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSpecContentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get spec contents.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.SpecContents> GetSpecContentsAsync(global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSpecContents, null, options, request);
      }
      /// <summary>
      /// List specs corresponding to a particular API resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListSpecsResponse ListSpecs(global::Google.Cloud.ApiHub.V1.ListSpecsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSpecs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List specs corresponding to a particular API resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListSpecsResponse ListSpecs(global::Google.Cloud.ApiHub.V1.ListSpecsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSpecs, null, options, request);
      }
      /// <summary>
      /// List specs corresponding to a particular API resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListSpecsResponse> ListSpecsAsync(global::Google.Cloud.ApiHub.V1.ListSpecsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSpecsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List specs corresponding to a particular API resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListSpecsResponse> ListSpecsAsync(global::Google.Cloud.ApiHub.V1.ListSpecsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSpecs, null, options, request);
      }
      /// <summary>
      /// Update spec. The following fields in the
      /// [spec][google.cloud.apihub.v1.Spec] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Spec.display_name]
      /// * [source_uri][google.cloud.apihub.v1.Spec.source_uri]
      /// * [lint_response][google.cloud.apihub.v1.Spec.lint_response]
      /// * [attributes][google.cloud.apihub.v1.Spec.attributes]
      /// * [contents][google.cloud.apihub.v1.Spec.contents]
      /// * [spec_type][google.cloud.apihub.v1.Spec.spec_type]
      ///
      /// In case of an OAS spec, updating spec contents can lead to:
      /// 1. Creation, deletion and update of operations.
      /// 2. Creation, deletion and update of definitions.
      /// 3. Update of other info parsed out from the new spec.
      ///
      /// In case of contents or source_uri being present in update mask, spec_type
      /// must also be present. Also, spec_type can not be present in update mask if
      /// contents or source_uri is not present.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateSpecRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Spec UpdateSpec(global::Google.Cloud.ApiHub.V1.UpdateSpecRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSpec(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update spec. The following fields in the
      /// [spec][google.cloud.apihub.v1.Spec] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Spec.display_name]
      /// * [source_uri][google.cloud.apihub.v1.Spec.source_uri]
      /// * [lint_response][google.cloud.apihub.v1.Spec.lint_response]
      /// * [attributes][google.cloud.apihub.v1.Spec.attributes]
      /// * [contents][google.cloud.apihub.v1.Spec.contents]
      /// * [spec_type][google.cloud.apihub.v1.Spec.spec_type]
      ///
      /// In case of an OAS spec, updating spec contents can lead to:
      /// 1. Creation, deletion and update of operations.
      /// 2. Creation, deletion and update of definitions.
      /// 3. Update of other info parsed out from the new spec.
      ///
      /// In case of contents or source_uri being present in update mask, spec_type
      /// must also be present. Also, spec_type can not be present in update mask if
      /// contents or source_uri is not present.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateSpecRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Spec UpdateSpec(global::Google.Cloud.ApiHub.V1.UpdateSpecRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSpec, null, options, request);
      }
      /// <summary>
      /// Update spec. The following fields in the
      /// [spec][google.cloud.apihub.v1.Spec] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Spec.display_name]
      /// * [source_uri][google.cloud.apihub.v1.Spec.source_uri]
      /// * [lint_response][google.cloud.apihub.v1.Spec.lint_response]
      /// * [attributes][google.cloud.apihub.v1.Spec.attributes]
      /// * [contents][google.cloud.apihub.v1.Spec.contents]
      /// * [spec_type][google.cloud.apihub.v1.Spec.spec_type]
      ///
      /// In case of an OAS spec, updating spec contents can lead to:
      /// 1. Creation, deletion and update of operations.
      /// 2. Creation, deletion and update of definitions.
      /// 3. Update of other info parsed out from the new spec.
      ///
      /// In case of contents or source_uri being present in update mask, spec_type
      /// must also be present. Also, spec_type can not be present in update mask if
      /// contents or source_uri is not present.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateSpecRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Spec> UpdateSpecAsync(global::Google.Cloud.ApiHub.V1.UpdateSpecRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSpecAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update spec. The following fields in the
      /// [spec][google.cloud.apihub.v1.Spec] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Spec.display_name]
      /// * [source_uri][google.cloud.apihub.v1.Spec.source_uri]
      /// * [lint_response][google.cloud.apihub.v1.Spec.lint_response]
      /// * [attributes][google.cloud.apihub.v1.Spec.attributes]
      /// * [contents][google.cloud.apihub.v1.Spec.contents]
      /// * [spec_type][google.cloud.apihub.v1.Spec.spec_type]
      ///
      /// In case of an OAS spec, updating spec contents can lead to:
      /// 1. Creation, deletion and update of operations.
      /// 2. Creation, deletion and update of definitions.
      /// 3. Update of other info parsed out from the new spec.
      ///
      /// In case of contents or source_uri being present in update mask, spec_type
      /// must also be present. Also, spec_type can not be present in update mask if
      /// contents or source_uri is not present.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateSpecRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Spec> UpdateSpecAsync(global::Google.Cloud.ApiHub.V1.UpdateSpecRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSpec, null, options, request);
      }
      /// <summary>
      /// Delete a spec.
      /// Deleting a spec will also delete the associated operations from the
      /// version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSpec(global::Google.Cloud.ApiHub.V1.DeleteSpecRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSpec(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a spec.
      /// Deleting a spec will also delete the associated operations from the
      /// version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSpec(global::Google.Cloud.ApiHub.V1.DeleteSpecRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSpec, null, options, request);
      }
      /// <summary>
      /// Delete a spec.
      /// Deleting a spec will also delete the associated operations from the
      /// version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSpecAsync(global::Google.Cloud.ApiHub.V1.DeleteSpecRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSpecAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a spec.
      /// Deleting a spec will also delete the associated operations from the
      /// version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSpecAsync(global::Google.Cloud.ApiHub.V1.DeleteSpecRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSpec, null, options, request);
      }
      /// <summary>
      /// Get details about a particular operation in API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ApiOperation GetApiOperation(global::Google.Cloud.ApiHub.V1.GetApiOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetApiOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about a particular operation in API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ApiOperation GetApiOperation(global::Google.Cloud.ApiHub.V1.GetApiOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetApiOperation, null, options, request);
      }
      /// <summary>
      /// Get details about a particular operation in API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ApiOperation> GetApiOperationAsync(global::Google.Cloud.ApiHub.V1.GetApiOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetApiOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about a particular operation in API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ApiOperation> GetApiOperationAsync(global::Google.Cloud.ApiHub.V1.GetApiOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetApiOperation, null, options, request);
      }
      /// <summary>
      /// List operations in an API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse ListApiOperations(global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListApiOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List operations in an API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse ListApiOperations(global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListApiOperations, null, options, request);
      }
      /// <summary>
      /// List operations in an API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse> ListApiOperationsAsync(global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListApiOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List operations in an API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse> ListApiOperationsAsync(global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListApiOperations, null, options, request);
      }
      /// <summary>
      /// Get details about a definition in an API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Definition GetDefinition(global::Google.Cloud.ApiHub.V1.GetDefinitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefinition(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about a definition in an API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Definition GetDefinition(global::Google.Cloud.ApiHub.V1.GetDefinitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefinition, null, options, request);
      }
      /// <summary>
      /// Get details about a definition in an API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Definition> GetDefinitionAsync(global::Google.Cloud.ApiHub.V1.GetDefinitionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefinitionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about a definition in an API version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Definition> GetDefinitionAsync(global::Google.Cloud.ApiHub.V1.GetDefinitionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefinition, null, options, request);
      }
      /// <summary>
      /// Create a deployment resource in the API hub.
      /// Once a deployment resource is created, it can be associated with API
      /// versions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Deployment CreateDeployment(global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a deployment resource in the API hub.
      /// Once a deployment resource is created, it can be associated with API
      /// versions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Deployment CreateDeployment(global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDeployment, null, options, request);
      }
      /// <summary>
      /// Create a deployment resource in the API hub.
      /// Once a deployment resource is created, it can be associated with API
      /// versions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Deployment> CreateDeploymentAsync(global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a deployment resource in the API hub.
      /// Once a deployment resource is created, it can be associated with API
      /// versions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Deployment> CreateDeploymentAsync(global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDeployment, null, options, request);
      }
      /// <summary>
      /// Get details about a deployment and the API versions linked to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Deployment GetDeployment(global::Google.Cloud.ApiHub.V1.GetDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about a deployment and the API versions linked to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Deployment GetDeployment(global::Google.Cloud.ApiHub.V1.GetDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeployment, null, options, request);
      }
      /// <summary>
      /// Get details about a deployment and the API versions linked to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Deployment> GetDeploymentAsync(global::Google.Cloud.ApiHub.V1.GetDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about a deployment and the API versions linked to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Deployment> GetDeploymentAsync(global::Google.Cloud.ApiHub.V1.GetDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeployment, null, options, request);
      }
      /// <summary>
      /// List deployment resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse ListDeployments(global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeployments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List deployment resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse ListDeployments(global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeployments, null, options, request);
      }
      /// <summary>
      /// List deployment resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse> ListDeploymentsAsync(global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeploymentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List deployment resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse> ListDeploymentsAsync(global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeployments, null, options, request);
      }
      /// <summary>
      /// Update a deployment resource in the API hub. The following fields in the
      /// [deployment resource][google.cloud.apihub.v1.Deployment] can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Deployment.display_name]
      /// * [description][google.cloud.apihub.v1.Deployment.description]
      /// * [documentation][google.cloud.apihub.v1.Deployment.documentation]
      /// * [deployment_type][google.cloud.apihub.v1.Deployment.deployment_type]
      /// * [resource_uri][google.cloud.apihub.v1.Deployment.resource_uri]
      /// * [endpoints][google.cloud.apihub.v1.Deployment.endpoints]
      /// * [slo][google.cloud.apihub.v1.Deployment.slo]
      /// * [environment][google.cloud.apihub.v1.Deployment.environment]
      /// * [attributes][google.cloud.apihub.v1.Deployment.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateDeploymentRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Deployment UpdateDeployment(global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a deployment resource in the API hub. The following fields in the
      /// [deployment resource][google.cloud.apihub.v1.Deployment] can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Deployment.display_name]
      /// * [description][google.cloud.apihub.v1.Deployment.description]
      /// * [documentation][google.cloud.apihub.v1.Deployment.documentation]
      /// * [deployment_type][google.cloud.apihub.v1.Deployment.deployment_type]
      /// * [resource_uri][google.cloud.apihub.v1.Deployment.resource_uri]
      /// * [endpoints][google.cloud.apihub.v1.Deployment.endpoints]
      /// * [slo][google.cloud.apihub.v1.Deployment.slo]
      /// * [environment][google.cloud.apihub.v1.Deployment.environment]
      /// * [attributes][google.cloud.apihub.v1.Deployment.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateDeploymentRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Deployment UpdateDeployment(global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDeployment, null, options, request);
      }
      /// <summary>
      /// Update a deployment resource in the API hub. The following fields in the
      /// [deployment resource][google.cloud.apihub.v1.Deployment] can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Deployment.display_name]
      /// * [description][google.cloud.apihub.v1.Deployment.description]
      /// * [documentation][google.cloud.apihub.v1.Deployment.documentation]
      /// * [deployment_type][google.cloud.apihub.v1.Deployment.deployment_type]
      /// * [resource_uri][google.cloud.apihub.v1.Deployment.resource_uri]
      /// * [endpoints][google.cloud.apihub.v1.Deployment.endpoints]
      /// * [slo][google.cloud.apihub.v1.Deployment.slo]
      /// * [environment][google.cloud.apihub.v1.Deployment.environment]
      /// * [attributes][google.cloud.apihub.v1.Deployment.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateDeploymentRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Deployment> UpdateDeploymentAsync(global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a deployment resource in the API hub. The following fields in the
      /// [deployment resource][google.cloud.apihub.v1.Deployment] can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Deployment.display_name]
      /// * [description][google.cloud.apihub.v1.Deployment.description]
      /// * [documentation][google.cloud.apihub.v1.Deployment.documentation]
      /// * [deployment_type][google.cloud.apihub.v1.Deployment.deployment_type]
      /// * [resource_uri][google.cloud.apihub.v1.Deployment.resource_uri]
      /// * [endpoints][google.cloud.apihub.v1.Deployment.endpoints]
      /// * [slo][google.cloud.apihub.v1.Deployment.slo]
      /// * [environment][google.cloud.apihub.v1.Deployment.environment]
      /// * [attributes][google.cloud.apihub.v1.Deployment.attributes]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateDeploymentRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Deployment> UpdateDeploymentAsync(global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDeployment, null, options, request);
      }
      /// <summary>
      /// Delete a deployment resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDeployment(global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDeployment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a deployment resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDeployment(global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDeployment, null, options, request);
      }
      /// <summary>
      /// Delete a deployment resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeploymentAsync(global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDeploymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a deployment resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDeploymentAsync(global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDeployment, null, options, request);
      }
      /// <summary>
      /// Create a user defined attribute.
      ///
      /// Certain pre defined attributes are already created by the API hub. These
      /// attributes will have type as `SYSTEM_DEFINED` and can be listed via
      /// [ListAttributes][google.cloud.apihub.v1.ApiHub.ListAttributes] method.
      /// Allowed values for the same can be updated via
      /// [UpdateAttribute][google.cloud.apihub.v1.ApiHub.UpdateAttribute] method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Attribute CreateAttribute(global::Google.Cloud.ApiHub.V1.CreateAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAttribute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a user defined attribute.
      ///
      /// Certain pre defined attributes are already created by the API hub. These
      /// attributes will have type as `SYSTEM_DEFINED` and can be listed via
      /// [ListAttributes][google.cloud.apihub.v1.ApiHub.ListAttributes] method.
      /// Allowed values for the same can be updated via
      /// [UpdateAttribute][google.cloud.apihub.v1.ApiHub.UpdateAttribute] method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Attribute CreateAttribute(global::Google.Cloud.ApiHub.V1.CreateAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAttribute, null, options, request);
      }
      /// <summary>
      /// Create a user defined attribute.
      ///
      /// Certain pre defined attributes are already created by the API hub. These
      /// attributes will have type as `SYSTEM_DEFINED` and can be listed via
      /// [ListAttributes][google.cloud.apihub.v1.ApiHub.ListAttributes] method.
      /// Allowed values for the same can be updated via
      /// [UpdateAttribute][google.cloud.apihub.v1.ApiHub.UpdateAttribute] method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Attribute> CreateAttributeAsync(global::Google.Cloud.ApiHub.V1.CreateAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAttributeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a user defined attribute.
      ///
      /// Certain pre defined attributes are already created by the API hub. These
      /// attributes will have type as `SYSTEM_DEFINED` and can be listed via
      /// [ListAttributes][google.cloud.apihub.v1.ApiHub.ListAttributes] method.
      /// Allowed values for the same can be updated via
      /// [UpdateAttribute][google.cloud.apihub.v1.ApiHub.UpdateAttribute] method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Attribute> CreateAttributeAsync(global::Google.Cloud.ApiHub.V1.CreateAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAttribute, null, options, request);
      }
      /// <summary>
      /// Get details about the attribute.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Attribute GetAttribute(global::Google.Cloud.ApiHub.V1.GetAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttribute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about the attribute.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Attribute GetAttribute(global::Google.Cloud.ApiHub.V1.GetAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttribute, null, options, request);
      }
      /// <summary>
      /// Get details about the attribute.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Attribute> GetAttributeAsync(global::Google.Cloud.ApiHub.V1.GetAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about the attribute.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Attribute> GetAttributeAsync(global::Google.Cloud.ApiHub.V1.GetAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttribute, null, options, request);
      }
      /// <summary>
      /// Update the attribute.  The following fields in the
      /// [Attribute resource][google.cloud.apihub.v1.Attribute] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Attribute.display_name]
      /// The display name can be updated for user defined attributes only.
      /// * [description][google.cloud.apihub.v1.Attribute.description]
      /// The description can be updated for user defined attributes only.
      /// * [allowed_values][google.cloud.apihub.v1.Attribute.allowed_values]
      /// To update the list of allowed values, clients need to use the fetched list
      /// of allowed values and add or remove values to or from the same list.
      /// The mutable allowed values can be updated for both user defined and System
      /// defined attributes. The immutable allowed values cannot be updated or
      /// deleted. The updated list of allowed values cannot be empty. If an allowed
      /// value that is already used by some resource's attribute is deleted, then
      /// the association between the resource and the attribute value will also be
      /// deleted.
      /// * [cardinality][google.cloud.apihub.v1.Attribute.cardinality]
      /// The cardinality can be updated for user defined attributes only.
      /// Cardinality can only be increased during an update.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateAttributeRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Attribute UpdateAttribute(global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAttribute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update the attribute.  The following fields in the
      /// [Attribute resource][google.cloud.apihub.v1.Attribute] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Attribute.display_name]
      /// The display name can be updated for user defined attributes only.
      /// * [description][google.cloud.apihub.v1.Attribute.description]
      /// The description can be updated for user defined attributes only.
      /// * [allowed_values][google.cloud.apihub.v1.Attribute.allowed_values]
      /// To update the list of allowed values, clients need to use the fetched list
      /// of allowed values and add or remove values to or from the same list.
      /// The mutable allowed values can be updated for both user defined and System
      /// defined attributes. The immutable allowed values cannot be updated or
      /// deleted. The updated list of allowed values cannot be empty. If an allowed
      /// value that is already used by some resource's attribute is deleted, then
      /// the association between the resource and the attribute value will also be
      /// deleted.
      /// * [cardinality][google.cloud.apihub.v1.Attribute.cardinality]
      /// The cardinality can be updated for user defined attributes only.
      /// Cardinality can only be increased during an update.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateAttributeRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Attribute UpdateAttribute(global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAttribute, null, options, request);
      }
      /// <summary>
      /// Update the attribute.  The following fields in the
      /// [Attribute resource][google.cloud.apihub.v1.Attribute] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Attribute.display_name]
      /// The display name can be updated for user defined attributes only.
      /// * [description][google.cloud.apihub.v1.Attribute.description]
      /// The description can be updated for user defined attributes only.
      /// * [allowed_values][google.cloud.apihub.v1.Attribute.allowed_values]
      /// To update the list of allowed values, clients need to use the fetched list
      /// of allowed values and add or remove values to or from the same list.
      /// The mutable allowed values can be updated for both user defined and System
      /// defined attributes. The immutable allowed values cannot be updated or
      /// deleted. The updated list of allowed values cannot be empty. If an allowed
      /// value that is already used by some resource's attribute is deleted, then
      /// the association between the resource and the attribute value will also be
      /// deleted.
      /// * [cardinality][google.cloud.apihub.v1.Attribute.cardinality]
      /// The cardinality can be updated for user defined attributes only.
      /// Cardinality can only be increased during an update.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateAttributeRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Attribute> UpdateAttributeAsync(global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAttributeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update the attribute.  The following fields in the
      /// [Attribute resource][google.cloud.apihub.v1.Attribute] can be updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.Attribute.display_name]
      /// The display name can be updated for user defined attributes only.
      /// * [description][google.cloud.apihub.v1.Attribute.description]
      /// The description can be updated for user defined attributes only.
      /// * [allowed_values][google.cloud.apihub.v1.Attribute.allowed_values]
      /// To update the list of allowed values, clients need to use the fetched list
      /// of allowed values and add or remove values to or from the same list.
      /// The mutable allowed values can be updated for both user defined and System
      /// defined attributes. The immutable allowed values cannot be updated or
      /// deleted. The updated list of allowed values cannot be empty. If an allowed
      /// value that is already used by some resource's attribute is deleted, then
      /// the association between the resource and the attribute value will also be
      /// deleted.
      /// * [cardinality][google.cloud.apihub.v1.Attribute.cardinality]
      /// The cardinality can be updated for user defined attributes only.
      /// Cardinality can only be increased during an update.
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateAttributeRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Attribute> UpdateAttributeAsync(global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAttribute, null, options, request);
      }
      /// <summary>
      /// Delete an attribute.
      ///
      /// Note: System defined attributes cannot be deleted. All
      /// associations of the attribute being deleted with any API hub resource will
      /// also get deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAttribute(global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAttribute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an attribute.
      ///
      /// Note: System defined attributes cannot be deleted. All
      /// associations of the attribute being deleted with any API hub resource will
      /// also get deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAttribute(global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAttribute, null, options, request);
      }
      /// <summary>
      /// Delete an attribute.
      ///
      /// Note: System defined attributes cannot be deleted. All
      /// associations of the attribute being deleted with any API hub resource will
      /// also get deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAttributeAsync(global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAttributeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an attribute.
      ///
      /// Note: System defined attributes cannot be deleted. All
      /// associations of the attribute being deleted with any API hub resource will
      /// also get deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAttributeAsync(global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAttribute, null, options, request);
      }
      /// <summary>
      /// List all attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListAttributesResponse ListAttributes(global::Google.Cloud.ApiHub.V1.ListAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAttributes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListAttributesResponse ListAttributes(global::Google.Cloud.ApiHub.V1.ListAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAttributes, null, options, request);
      }
      /// <summary>
      /// List all attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListAttributesResponse> ListAttributesAsync(global::Google.Cloud.ApiHub.V1.ListAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAttributesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListAttributesResponse> ListAttributesAsync(global::Google.Cloud.ApiHub.V1.ListAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAttributes, null, options, request);
      }
      /// <summary>
      /// Search across API-Hub resources.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.SearchResourcesResponse SearchResources(global::Google.Cloud.ApiHub.V1.SearchResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search across API-Hub resources.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.SearchResourcesResponse SearchResources(global::Google.Cloud.ApiHub.V1.SearchResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchResources, null, options, request);
      }
      /// <summary>
      /// Search across API-Hub resources.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.SearchResourcesResponse> SearchResourcesAsync(global::Google.Cloud.ApiHub.V1.SearchResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search across API-Hub resources.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.SearchResourcesResponse> SearchResourcesAsync(global::Google.Cloud.ApiHub.V1.SearchResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchResources, null, options, request);
      }
      /// <summary>
      /// Create an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ExternalApi CreateExternalApi(global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExternalApi(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ExternalApi CreateExternalApi(global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateExternalApi, null, options, request);
      }
      /// <summary>
      /// Create an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ExternalApi> CreateExternalApiAsync(global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateExternalApiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ExternalApi> CreateExternalApiAsync(global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateExternalApi, null, options, request);
      }
      /// <summary>
      /// Get details about an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ExternalApi GetExternalApi(global::Google.Cloud.ApiHub.V1.GetExternalApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExternalApi(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ExternalApi GetExternalApi(global::Google.Cloud.ApiHub.V1.GetExternalApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetExternalApi, null, options, request);
      }
      /// <summary>
      /// Get details about an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ExternalApi> GetExternalApiAsync(global::Google.Cloud.ApiHub.V1.GetExternalApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetExternalApiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ExternalApi> GetExternalApiAsync(global::Google.Cloud.ApiHub.V1.GetExternalApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetExternalApi, null, options, request);
      }
      /// <summary>
      /// Update an External API resource in the API hub. The following fields can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.ExternalApi.display_name]
      /// * [description][google.cloud.apihub.v1.ExternalApi.description]
      /// * [documentation][google.cloud.apihub.v1.ExternalApi.documentation]
      /// * [endpoints][google.cloud.apihub.v1.ExternalApi.endpoints]
      /// * [paths][google.cloud.apihub.v1.ExternalApi.paths]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateExternalApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ExternalApi UpdateExternalApi(global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExternalApi(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an External API resource in the API hub. The following fields can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.ExternalApi.display_name]
      /// * [description][google.cloud.apihub.v1.ExternalApi.description]
      /// * [documentation][google.cloud.apihub.v1.ExternalApi.documentation]
      /// * [endpoints][google.cloud.apihub.v1.ExternalApi.endpoints]
      /// * [paths][google.cloud.apihub.v1.ExternalApi.paths]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateExternalApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ExternalApi UpdateExternalApi(global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateExternalApi, null, options, request);
      }
      /// <summary>
      /// Update an External API resource in the API hub. The following fields can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.ExternalApi.display_name]
      /// * [description][google.cloud.apihub.v1.ExternalApi.description]
      /// * [documentation][google.cloud.apihub.v1.ExternalApi.documentation]
      /// * [endpoints][google.cloud.apihub.v1.ExternalApi.endpoints]
      /// * [paths][google.cloud.apihub.v1.ExternalApi.paths]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateExternalApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ExternalApi> UpdateExternalApiAsync(global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExternalApiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update an External API resource in the API hub. The following fields can be
      /// updated:
      ///
      /// * [display_name][google.cloud.apihub.v1.ExternalApi.display_name]
      /// * [description][google.cloud.apihub.v1.ExternalApi.description]
      /// * [documentation][google.cloud.apihub.v1.ExternalApi.documentation]
      /// * [endpoints][google.cloud.apihub.v1.ExternalApi.endpoints]
      /// * [paths][google.cloud.apihub.v1.ExternalApi.paths]
      ///
      /// The
      /// [update_mask][google.cloud.apihub.v1.UpdateExternalApiRequest.update_mask]
      /// should be used to specify the fields being updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ExternalApi> UpdateExternalApiAsync(global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateExternalApi, null, options, request);
      }
      /// <summary>
      /// Delete an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteExternalApi(global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExternalApi(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteExternalApi(global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteExternalApi, null, options, request);
      }
      /// <summary>
      /// Delete an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExternalApiAsync(global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteExternalApiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete an External API resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteExternalApiAsync(global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteExternalApi, null, options, request);
      }
      /// <summary>
      /// List External API resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListExternalApisResponse ListExternalApis(global::Google.Cloud.ApiHub.V1.ListExternalApisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExternalApis(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List External API resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListExternalApisResponse ListExternalApis(global::Google.Cloud.ApiHub.V1.ListExternalApisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListExternalApis, null, options, request);
      }
      /// <summary>
      /// List External API resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListExternalApisResponse> ListExternalApisAsync(global::Google.Cloud.ApiHub.V1.ListExternalApisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListExternalApisAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List External API resources in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListExternalApisResponse> ListExternalApisAsync(global::Google.Cloud.ApiHub.V1.ListExternalApisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListExternalApis, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ApiHubClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ApiHubClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ApiHubBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateApi, serviceImpl.CreateApi)
          .AddMethod(__Method_GetApi, serviceImpl.GetApi)
          .AddMethod(__Method_ListApis, serviceImpl.ListApis)
          .AddMethod(__Method_UpdateApi, serviceImpl.UpdateApi)
          .AddMethod(__Method_DeleteApi, serviceImpl.DeleteApi)
          .AddMethod(__Method_CreateVersion, serviceImpl.CreateVersion)
          .AddMethod(__Method_GetVersion, serviceImpl.GetVersion)
          .AddMethod(__Method_ListVersions, serviceImpl.ListVersions)
          .AddMethod(__Method_UpdateVersion, serviceImpl.UpdateVersion)
          .AddMethod(__Method_DeleteVersion, serviceImpl.DeleteVersion)
          .AddMethod(__Method_CreateSpec, serviceImpl.CreateSpec)
          .AddMethod(__Method_GetSpec, serviceImpl.GetSpec)
          .AddMethod(__Method_GetSpecContents, serviceImpl.GetSpecContents)
          .AddMethod(__Method_ListSpecs, serviceImpl.ListSpecs)
          .AddMethod(__Method_UpdateSpec, serviceImpl.UpdateSpec)
          .AddMethod(__Method_DeleteSpec, serviceImpl.DeleteSpec)
          .AddMethod(__Method_GetApiOperation, serviceImpl.GetApiOperation)
          .AddMethod(__Method_ListApiOperations, serviceImpl.ListApiOperations)
          .AddMethod(__Method_GetDefinition, serviceImpl.GetDefinition)
          .AddMethod(__Method_CreateDeployment, serviceImpl.CreateDeployment)
          .AddMethod(__Method_GetDeployment, serviceImpl.GetDeployment)
          .AddMethod(__Method_ListDeployments, serviceImpl.ListDeployments)
          .AddMethod(__Method_UpdateDeployment, serviceImpl.UpdateDeployment)
          .AddMethod(__Method_DeleteDeployment, serviceImpl.DeleteDeployment)
          .AddMethod(__Method_CreateAttribute, serviceImpl.CreateAttribute)
          .AddMethod(__Method_GetAttribute, serviceImpl.GetAttribute)
          .AddMethod(__Method_UpdateAttribute, serviceImpl.UpdateAttribute)
          .AddMethod(__Method_DeleteAttribute, serviceImpl.DeleteAttribute)
          .AddMethod(__Method_ListAttributes, serviceImpl.ListAttributes)
          .AddMethod(__Method_SearchResources, serviceImpl.SearchResources)
          .AddMethod(__Method_CreateExternalApi, serviceImpl.CreateExternalApi)
          .AddMethod(__Method_GetExternalApi, serviceImpl.GetExternalApi)
          .AddMethod(__Method_UpdateExternalApi, serviceImpl.UpdateExternalApi)
          .AddMethod(__Method_DeleteExternalApi, serviceImpl.DeleteExternalApi)
          .AddMethod(__Method_ListExternalApis, serviceImpl.ListExternalApis).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ApiHubBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateApi, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.CreateApiRequest, global::Google.Cloud.ApiHub.V1.Api>(serviceImpl.CreateApi));
      serviceBinder.AddMethod(__Method_GetApi, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetApiRequest, global::Google.Cloud.ApiHub.V1.Api>(serviceImpl.GetApi));
      serviceBinder.AddMethod(__Method_ListApis, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListApisRequest, global::Google.Cloud.ApiHub.V1.ListApisResponse>(serviceImpl.ListApis));
      serviceBinder.AddMethod(__Method_UpdateApi, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.UpdateApiRequest, global::Google.Cloud.ApiHub.V1.Api>(serviceImpl.UpdateApi));
      serviceBinder.AddMethod(__Method_DeleteApi, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.DeleteApiRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteApi));
      serviceBinder.AddMethod(__Method_CreateVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.CreateVersionRequest, global::Google.Cloud.ApiHub.V1.Version>(serviceImpl.CreateVersion));
      serviceBinder.AddMethod(__Method_GetVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetVersionRequest, global::Google.Cloud.ApiHub.V1.Version>(serviceImpl.GetVersion));
      serviceBinder.AddMethod(__Method_ListVersions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListVersionsRequest, global::Google.Cloud.ApiHub.V1.ListVersionsResponse>(serviceImpl.ListVersions));
      serviceBinder.AddMethod(__Method_UpdateVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.UpdateVersionRequest, global::Google.Cloud.ApiHub.V1.Version>(serviceImpl.UpdateVersion));
      serviceBinder.AddMethod(__Method_DeleteVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.DeleteVersionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteVersion));
      serviceBinder.AddMethod(__Method_CreateSpec, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.CreateSpecRequest, global::Google.Cloud.ApiHub.V1.Spec>(serviceImpl.CreateSpec));
      serviceBinder.AddMethod(__Method_GetSpec, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetSpecRequest, global::Google.Cloud.ApiHub.V1.Spec>(serviceImpl.GetSpec));
      serviceBinder.AddMethod(__Method_GetSpecContents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetSpecContentsRequest, global::Google.Cloud.ApiHub.V1.SpecContents>(serviceImpl.GetSpecContents));
      serviceBinder.AddMethod(__Method_ListSpecs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListSpecsRequest, global::Google.Cloud.ApiHub.V1.ListSpecsResponse>(serviceImpl.ListSpecs));
      serviceBinder.AddMethod(__Method_UpdateSpec, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.UpdateSpecRequest, global::Google.Cloud.ApiHub.V1.Spec>(serviceImpl.UpdateSpec));
      serviceBinder.AddMethod(__Method_DeleteSpec, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.DeleteSpecRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSpec));
      serviceBinder.AddMethod(__Method_GetApiOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetApiOperationRequest, global::Google.Cloud.ApiHub.V1.ApiOperation>(serviceImpl.GetApiOperation));
      serviceBinder.AddMethod(__Method_ListApiOperations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListApiOperationsRequest, global::Google.Cloud.ApiHub.V1.ListApiOperationsResponse>(serviceImpl.ListApiOperations));
      serviceBinder.AddMethod(__Method_GetDefinition, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetDefinitionRequest, global::Google.Cloud.ApiHub.V1.Definition>(serviceImpl.GetDefinition));
      serviceBinder.AddMethod(__Method_CreateDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.CreateDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment>(serviceImpl.CreateDeployment));
      serviceBinder.AddMethod(__Method_GetDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment>(serviceImpl.GetDeployment));
      serviceBinder.AddMethod(__Method_ListDeployments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListDeploymentsRequest, global::Google.Cloud.ApiHub.V1.ListDeploymentsResponse>(serviceImpl.ListDeployments));
      serviceBinder.AddMethod(__Method_UpdateDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.UpdateDeploymentRequest, global::Google.Cloud.ApiHub.V1.Deployment>(serviceImpl.UpdateDeployment));
      serviceBinder.AddMethod(__Method_DeleteDeployment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.DeleteDeploymentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDeployment));
      serviceBinder.AddMethod(__Method_CreateAttribute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.CreateAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute>(serviceImpl.CreateAttribute));
      serviceBinder.AddMethod(__Method_GetAttribute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute>(serviceImpl.GetAttribute));
      serviceBinder.AddMethod(__Method_UpdateAttribute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.UpdateAttributeRequest, global::Google.Cloud.ApiHub.V1.Attribute>(serviceImpl.UpdateAttribute));
      serviceBinder.AddMethod(__Method_DeleteAttribute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.DeleteAttributeRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAttribute));
      serviceBinder.AddMethod(__Method_ListAttributes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListAttributesRequest, global::Google.Cloud.ApiHub.V1.ListAttributesResponse>(serviceImpl.ListAttributes));
      serviceBinder.AddMethod(__Method_SearchResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.SearchResourcesRequest, global::Google.Cloud.ApiHub.V1.SearchResourcesResponse>(serviceImpl.SearchResources));
      serviceBinder.AddMethod(__Method_CreateExternalApi, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.CreateExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi>(serviceImpl.CreateExternalApi));
      serviceBinder.AddMethod(__Method_GetExternalApi, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi>(serviceImpl.GetExternalApi));
      serviceBinder.AddMethod(__Method_UpdateExternalApi, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.UpdateExternalApiRequest, global::Google.Cloud.ApiHub.V1.ExternalApi>(serviceImpl.UpdateExternalApi));
      serviceBinder.AddMethod(__Method_DeleteExternalApi, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.DeleteExternalApiRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteExternalApi));
      serviceBinder.AddMethod(__Method_ListExternalApis, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListExternalApisRequest, global::Google.Cloud.ApiHub.V1.ListExternalApisResponse>(serviceImpl.ListExternalApis));
    }

  }
  /// <summary>
  /// This service provides methods for various operations related to a
  /// [Dependency][google.cloud.apihub.v1.Dependency] in the API hub.
  /// </summary>
  public static partial class ApiHubDependencies
  {
    static readonly string __ServiceName = "google.cloud.apihub.v1.ApiHubDependencies";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.CreateDependencyRequest> __Marshaller_google_cloud_apihub_v1_CreateDependencyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.CreateDependencyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.Dependency> __Marshaller_google_cloud_apihub_v1_Dependency = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.Dependency.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.GetDependencyRequest> __Marshaller_google_cloud_apihub_v1_GetDependencyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.GetDependencyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest> __Marshaller_google_cloud_apihub_v1_UpdateDependencyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest> __Marshaller_google_cloud_apihub_v1_DeleteDependencyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListDependenciesRequest> __Marshaller_google_cloud_apihub_v1_ListDependenciesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListDependenciesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ApiHub.V1.ListDependenciesResponse> __Marshaller_google_cloud_apihub_v1_ListDependenciesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ApiHub.V1.ListDependenciesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.CreateDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency> __Method_CreateDependency = new grpc::Method<global::Google.Cloud.ApiHub.V1.CreateDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDependency",
        __Marshaller_google_cloud_apihub_v1_CreateDependencyRequest,
        __Marshaller_google_cloud_apihub_v1_Dependency);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.GetDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency> __Method_GetDependency = new grpc::Method<global::Google.Cloud.ApiHub.V1.GetDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDependency",
        __Marshaller_google_cloud_apihub_v1_GetDependencyRequest,
        __Marshaller_google_cloud_apihub_v1_Dependency);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency> __Method_UpdateDependency = new grpc::Method<global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDependency",
        __Marshaller_google_cloud_apihub_v1_UpdateDependencyRequest,
        __Marshaller_google_cloud_apihub_v1_Dependency);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDependency = new grpc::Method<global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDependency",
        __Marshaller_google_cloud_apihub_v1_DeleteDependencyRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ApiHub.V1.ListDependenciesRequest, global::Google.Cloud.ApiHub.V1.ListDependenciesResponse> __Method_ListDependencies = new grpc::Method<global::Google.Cloud.ApiHub.V1.ListDependenciesRequest, global::Google.Cloud.ApiHub.V1.ListDependenciesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDependencies",
        __Marshaller_google_cloud_apihub_v1_ListDependenciesRequest,
        __Marshaller_google_cloud_apihub_v1_ListDependenciesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ApiHub.V1.ApihubServiceReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of ApiHubDependencies</summary>
    [grpc::BindServiceMethod(typeof(ApiHubDependencies), "BindService")]
    public abstract partial class ApiHubDependenciesBase
    {
      /// <summary>
      /// Create a dependency between two entities in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Dependency> CreateDependency(global::Google.Cloud.ApiHub.V1.CreateDependencyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details about a dependency resource in the API hub.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Dependency> GetDependency(global::Google.Cloud.ApiHub.V1.GetDependencyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update a dependency based on the
      /// [update_mask][google.cloud.apihub.v1.UpdateDependencyRequest.update_mask]
      /// provided in the request.
      ///
      /// The following fields in the [dependency][google.cloud.apihub.v1.Dependency]
      /// can be updated:
      /// * [description][google.cloud.apihub.v1.Dependency.description]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.Dependency> UpdateDependency(global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete the dependency resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDependency(global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List dependencies based on the provided filter and pagination parameters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ApiHub.V1.ListDependenciesResponse> ListDependencies(global::Google.Cloud.ApiHub.V1.ListDependenciesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ApiHubDependencies</summary>
    public partial class ApiHubDependenciesClient : grpc::ClientBase<ApiHubDependenciesClient>
    {
      /// <summary>Creates a new client for ApiHubDependencies</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ApiHubDependenciesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ApiHubDependencies that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ApiHubDependenciesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ApiHubDependenciesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ApiHubDependenciesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create a dependency between two entities in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Dependency CreateDependency(global::Google.Cloud.ApiHub.V1.CreateDependencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDependency(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a dependency between two entities in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Dependency CreateDependency(global::Google.Cloud.ApiHub.V1.CreateDependencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDependency, null, options, request);
      }
      /// <summary>
      /// Create a dependency between two entities in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Dependency> CreateDependencyAsync(global::Google.Cloud.ApiHub.V1.CreateDependencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDependencyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a dependency between two entities in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Dependency> CreateDependencyAsync(global::Google.Cloud.ApiHub.V1.CreateDependencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDependency, null, options, request);
      }
      /// <summary>
      /// Get details about a dependency resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Dependency GetDependency(global::Google.Cloud.ApiHub.V1.GetDependencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDependency(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about a dependency resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Dependency GetDependency(global::Google.Cloud.ApiHub.V1.GetDependencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDependency, null, options, request);
      }
      /// <summary>
      /// Get details about a dependency resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Dependency> GetDependencyAsync(global::Google.Cloud.ApiHub.V1.GetDependencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDependencyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details about a dependency resource in the API hub.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Dependency> GetDependencyAsync(global::Google.Cloud.ApiHub.V1.GetDependencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDependency, null, options, request);
      }
      /// <summary>
      /// Update a dependency based on the
      /// [update_mask][google.cloud.apihub.v1.UpdateDependencyRequest.update_mask]
      /// provided in the request.
      ///
      /// The following fields in the [dependency][google.cloud.apihub.v1.Dependency]
      /// can be updated:
      /// * [description][google.cloud.apihub.v1.Dependency.description]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Dependency UpdateDependency(global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDependency(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a dependency based on the
      /// [update_mask][google.cloud.apihub.v1.UpdateDependencyRequest.update_mask]
      /// provided in the request.
      ///
      /// The following fields in the [dependency][google.cloud.apihub.v1.Dependency]
      /// can be updated:
      /// * [description][google.cloud.apihub.v1.Dependency.description]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.Dependency UpdateDependency(global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDependency, null, options, request);
      }
      /// <summary>
      /// Update a dependency based on the
      /// [update_mask][google.cloud.apihub.v1.UpdateDependencyRequest.update_mask]
      /// provided in the request.
      ///
      /// The following fields in the [dependency][google.cloud.apihub.v1.Dependency]
      /// can be updated:
      /// * [description][google.cloud.apihub.v1.Dependency.description]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Dependency> UpdateDependencyAsync(global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDependencyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update a dependency based on the
      /// [update_mask][google.cloud.apihub.v1.UpdateDependencyRequest.update_mask]
      /// provided in the request.
      ///
      /// The following fields in the [dependency][google.cloud.apihub.v1.Dependency]
      /// can be updated:
      /// * [description][google.cloud.apihub.v1.Dependency.description]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.Dependency> UpdateDependencyAsync(global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDependency, null, options, request);
      }
      /// <summary>
      /// Delete the dependency resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDependency(global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDependency(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete the dependency resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDependency(global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDependency, null, options, request);
      }
      /// <summary>
      /// Delete the dependency resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDependencyAsync(global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDependencyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete the dependency resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDependencyAsync(global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDependency, null, options, request);
      }
      /// <summary>
      /// List dependencies based on the provided filter and pagination parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListDependenciesResponse ListDependencies(global::Google.Cloud.ApiHub.V1.ListDependenciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDependencies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List dependencies based on the provided filter and pagination parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ApiHub.V1.ListDependenciesResponse ListDependencies(global::Google.Cloud.ApiHub.V1.ListDependenciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDependencies, null, options, request);
      }
      /// <summary>
      /// List dependencies based on the provided filter and pagination parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListDependenciesResponse> ListDependenciesAsync(global::Google.Cloud.ApiHub.V1.ListDependenciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDependenciesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List dependencies based on the provided filter and pagination parameters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ApiHub.V1.ListDependenciesResponse> ListDependenciesAsync(global::Google.Cloud.ApiHub.V1.ListDependenciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDependencies, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ApiHubDependenciesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ApiHubDependenciesClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ApiHubDependenciesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateDependency, serviceImpl.CreateDependency)
          .AddMethod(__Method_GetDependency, serviceImpl.GetDependency)
          .AddMethod(__Method_UpdateDependency, serviceImpl.UpdateDependency)
          .AddMethod(__Method_DeleteDependency, serviceImpl.DeleteDependency)
          .AddMethod(__Method_ListDependencies, serviceImpl.ListDependencies).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ApiHubDependenciesBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateDependency, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.CreateDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency>(serviceImpl.CreateDependency));
      serviceBinder.AddMethod(__Method_GetDependency, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.GetDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency>(serviceImpl.GetDependency));
      serviceBinder.AddMethod(__Method_UpdateDependency, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.UpdateDependencyRequest, global::Google.Cloud.ApiHub.V1.Dependency>(serviceImpl.UpdateDependency));
      serviceBinder.AddMethod(__Method_DeleteDependency, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.DeleteDependencyRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDependency));
      serviceBinder.AddMethod(__Method_ListDependencies, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ApiHub.V1.ListDependenciesRequest, global::Google.Cloud.ApiHub.V1.ListDependenciesResponse>(serviceImpl.ListDependencies));
    }

  }
}
#endregion
