// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/assuredworkloads/v1/assuredworkloads.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.AssuredWorkloads.V1 {
  /// <summary>
  /// Service to manage AssuredWorkloads.
  /// </summary>
  public static partial class AssuredWorkloadsService
  {
    static readonly string __ServiceName = "google.cloud.assuredworkloads.v1.AssuredWorkloadsService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest> __Marshaller_google_cloud_assuredworkloads_v1_CreateWorkloadRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest> __Marshaller_google_cloud_assuredworkloads_v1_UpdateWorkloadRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.Workload> __Marshaller_google_cloud_assuredworkloads_v1_Workload = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.Workload.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest> __Marshaller_google_cloud_assuredworkloads_v1_RestrictAllowedResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse> __Marshaller_google_cloud_assuredworkloads_v1_RestrictAllowedResourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest> __Marshaller_google_cloud_assuredworkloads_v1_DeleteWorkloadRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest> __Marshaller_google_cloud_assuredworkloads_v1_GetWorkloadRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest> __Marshaller_google_cloud_assuredworkloads_v1_ListWorkloadsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse> __Marshaller_google_cloud_assuredworkloads_v1_ListWorkloadsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest> __Marshaller_google_cloud_assuredworkloads_v1_ListViolationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse> __Marshaller_google_cloud_assuredworkloads_v1_ListViolationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest> __Marshaller_google_cloud_assuredworkloads_v1_GetViolationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.Violation> __Marshaller_google_cloud_assuredworkloads_v1_Violation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.Violation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest> __Marshaller_google_cloud_assuredworkloads_v1_AcknowledgeViolationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse> __Marshaller_google_cloud_assuredworkloads_v1_AcknowledgeViolationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest, global::Google.LongRunning.Operation> __Method_CreateWorkload = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWorkload",
        __Marshaller_google_cloud_assuredworkloads_v1_CreateWorkloadRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest, global::Google.Cloud.AssuredWorkloads.V1.Workload> __Method_UpdateWorkload = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest, global::Google.Cloud.AssuredWorkloads.V1.Workload>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkload",
        __Marshaller_google_cloud_assuredworkloads_v1_UpdateWorkloadRequest,
        __Marshaller_google_cloud_assuredworkloads_v1_Workload);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest, global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse> __Method_RestrictAllowedResources = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest, global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RestrictAllowedResources",
        __Marshaller_google_cloud_assuredworkloads_v1_RestrictAllowedResourcesRequest,
        __Marshaller_google_cloud_assuredworkloads_v1_RestrictAllowedResourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteWorkload = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWorkload",
        __Marshaller_google_cloud_assuredworkloads_v1_DeleteWorkloadRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest, global::Google.Cloud.AssuredWorkloads.V1.Workload> __Method_GetWorkload = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest, global::Google.Cloud.AssuredWorkloads.V1.Workload>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkload",
        __Marshaller_google_cloud_assuredworkloads_v1_GetWorkloadRequest,
        __Marshaller_google_cloud_assuredworkloads_v1_Workload);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest, global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse> __Method_ListWorkloads = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest, global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorkloads",
        __Marshaller_google_cloud_assuredworkloads_v1_ListWorkloadsRequest,
        __Marshaller_google_cloud_assuredworkloads_v1_ListWorkloadsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest, global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse> __Method_ListViolations = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest, global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListViolations",
        __Marshaller_google_cloud_assuredworkloads_v1_ListViolationsRequest,
        __Marshaller_google_cloud_assuredworkloads_v1_ListViolationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest, global::Google.Cloud.AssuredWorkloads.V1.Violation> __Method_GetViolation = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest, global::Google.Cloud.AssuredWorkloads.V1.Violation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetViolation",
        __Marshaller_google_cloud_assuredworkloads_v1_GetViolationRequest,
        __Marshaller_google_cloud_assuredworkloads_v1_Violation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest, global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse> __Method_AcknowledgeViolation = new grpc::Method<global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest, global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AcknowledgeViolation",
        __Marshaller_google_cloud_assuredworkloads_v1_AcknowledgeViolationRequest,
        __Marshaller_google_cloud_assuredworkloads_v1_AcknowledgeViolationResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.AssuredWorkloads.V1.AssuredworkloadsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AssuredWorkloadsService</summary>
    [grpc::BindServiceMethod(typeof(AssuredWorkloadsService), "BindService")]
    public abstract partial class AssuredWorkloadsServiceBase
    {
      /// <summary>
      /// Creates Assured Workload.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateWorkload(global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing workload.
      /// Currently allows updating of workload display_name and labels.
      /// For force updates don't set etag field in the Workload.
      /// Only one update operation per workload can be in progress.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AssuredWorkloads.V1.Workload> UpdateWorkload(global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Restrict the list of resources allowed in the Workload environment.
      /// The current list of allowed products can be found at
      /// https://cloud.google.com/assured-workloads/docs/supported-products
      /// In addition to assuredworkloads.workload.update permission, the user should
      /// also have orgpolicy.policy.set permission on the folder resource
      /// to use this functionality.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse> RestrictAllowedResources(global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the workload. Make sure that workload's direct children are already
      /// in a deleted state, otherwise the request will fail with a
      /// FAILED_PRECONDITION error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteWorkload(global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets Assured Workload associated with a CRM Node
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AssuredWorkloads.V1.Workload> GetWorkload(global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Assured Workloads under a CRM Node.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse> ListWorkloads(global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the Violations in the AssuredWorkload Environment.
      /// Callers may also choose to read across multiple Workloads as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of workload-id in the parent.
      /// Format `organizations/{org_id}/locations/{location}/workloads/-`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse> ListViolations(global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves Assured Workload Violation based on ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AssuredWorkloads.V1.Violation> GetViolation(global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Acknowledges an existing violation. By acknowledging a violation, users
      /// acknowledge the existence of a compliance violation in their workload and
      /// decide to ignore it due to a valid business justification. Acknowledgement
      /// is a permanent operation and it cannot be reverted.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse> AcknowledgeViolation(global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AssuredWorkloadsService</summary>
    public partial class AssuredWorkloadsServiceClient : grpc::ClientBase<AssuredWorkloadsServiceClient>
    {
      /// <summary>Creates a new client for AssuredWorkloadsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AssuredWorkloadsServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AssuredWorkloadsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AssuredWorkloadsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AssuredWorkloadsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AssuredWorkloadsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates Assured Workload.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkload(global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkload(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates Assured Workload.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkload(global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWorkload, null, options, request);
      }
      /// <summary>
      /// Creates Assured Workload.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkloadAsync(global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkloadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates Assured Workload.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkloadAsync(global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWorkload, null, options, request);
      }
      /// <summary>
      /// Updates an existing workload.
      /// Currently allows updating of workload display_name and labels.
      /// For force updates don't set etag field in the Workload.
      /// Only one update operation per workload can be in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.Workload UpdateWorkload(global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkload(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing workload.
      /// Currently allows updating of workload display_name and labels.
      /// For force updates don't set etag field in the Workload.
      /// Only one update operation per workload can be in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.Workload UpdateWorkload(global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWorkload, null, options, request);
      }
      /// <summary>
      /// Updates an existing workload.
      /// Currently allows updating of workload display_name and labels.
      /// For force updates don't set etag field in the Workload.
      /// Only one update operation per workload can be in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.Workload> UpdateWorkloadAsync(global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkloadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing workload.
      /// Currently allows updating of workload display_name and labels.
      /// For force updates don't set etag field in the Workload.
      /// Only one update operation per workload can be in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.Workload> UpdateWorkloadAsync(global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWorkload, null, options, request);
      }
      /// <summary>
      /// Restrict the list of resources allowed in the Workload environment.
      /// The current list of allowed products can be found at
      /// https://cloud.google.com/assured-workloads/docs/supported-products
      /// In addition to assuredworkloads.workload.update permission, the user should
      /// also have orgpolicy.policy.set permission on the folder resource
      /// to use this functionality.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse RestrictAllowedResources(global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestrictAllowedResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Restrict the list of resources allowed in the Workload environment.
      /// The current list of allowed products can be found at
      /// https://cloud.google.com/assured-workloads/docs/supported-products
      /// In addition to assuredworkloads.workload.update permission, the user should
      /// also have orgpolicy.policy.set permission on the folder resource
      /// to use this functionality.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse RestrictAllowedResources(global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RestrictAllowedResources, null, options, request);
      }
      /// <summary>
      /// Restrict the list of resources allowed in the Workload environment.
      /// The current list of allowed products can be found at
      /// https://cloud.google.com/assured-workloads/docs/supported-products
      /// In addition to assuredworkloads.workload.update permission, the user should
      /// also have orgpolicy.policy.set permission on the folder resource
      /// to use this functionality.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse> RestrictAllowedResourcesAsync(global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestrictAllowedResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Restrict the list of resources allowed in the Workload environment.
      /// The current list of allowed products can be found at
      /// https://cloud.google.com/assured-workloads/docs/supported-products
      /// In addition to assuredworkloads.workload.update permission, the user should
      /// also have orgpolicy.policy.set permission on the folder resource
      /// to use this functionality.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse> RestrictAllowedResourcesAsync(global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RestrictAllowedResources, null, options, request);
      }
      /// <summary>
      /// Deletes the workload. Make sure that workload's direct children are already
      /// in a deleted state, otherwise the request will fail with a
      /// FAILED_PRECONDITION error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteWorkload(global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkload(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the workload. Make sure that workload's direct children are already
      /// in a deleted state, otherwise the request will fail with a
      /// FAILED_PRECONDITION error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteWorkload(global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWorkload, null, options, request);
      }
      /// <summary>
      /// Deletes the workload. Make sure that workload's direct children are already
      /// in a deleted state, otherwise the request will fail with a
      /// FAILED_PRECONDITION error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteWorkloadAsync(global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkloadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the workload. Make sure that workload's direct children are already
      /// in a deleted state, otherwise the request will fail with a
      /// FAILED_PRECONDITION error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteWorkloadAsync(global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWorkload, null, options, request);
      }
      /// <summary>
      /// Gets Assured Workload associated with a CRM Node
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.Workload GetWorkload(global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkload(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets Assured Workload associated with a CRM Node
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.Workload GetWorkload(global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkload, null, options, request);
      }
      /// <summary>
      /// Gets Assured Workload associated with a CRM Node
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.Workload> GetWorkloadAsync(global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkloadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets Assured Workload associated with a CRM Node
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.Workload> GetWorkloadAsync(global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkload, null, options, request);
      }
      /// <summary>
      /// Lists Assured Workloads under a CRM Node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse ListWorkloads(global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkloads(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Assured Workloads under a CRM Node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse ListWorkloads(global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWorkloads, null, options, request);
      }
      /// <summary>
      /// Lists Assured Workloads under a CRM Node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse> ListWorkloadsAsync(global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkloadsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Assured Workloads under a CRM Node.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse> ListWorkloadsAsync(global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWorkloads, null, options, request);
      }
      /// <summary>
      /// Lists the Violations in the AssuredWorkload Environment.
      /// Callers may also choose to read across multiple Workloads as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of workload-id in the parent.
      /// Format `organizations/{org_id}/locations/{location}/workloads/-`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse ListViolations(global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListViolations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Violations in the AssuredWorkload Environment.
      /// Callers may also choose to read across multiple Workloads as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of workload-id in the parent.
      /// Format `organizations/{org_id}/locations/{location}/workloads/-`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse ListViolations(global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListViolations, null, options, request);
      }
      /// <summary>
      /// Lists the Violations in the AssuredWorkload Environment.
      /// Callers may also choose to read across multiple Workloads as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of workload-id in the parent.
      /// Format `organizations/{org_id}/locations/{location}/workloads/-`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse> ListViolationsAsync(global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListViolationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Violations in the AssuredWorkload Environment.
      /// Callers may also choose to read across multiple Workloads as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of workload-id in the parent.
      /// Format `organizations/{org_id}/locations/{location}/workloads/-`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse> ListViolationsAsync(global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListViolations, null, options, request);
      }
      /// <summary>
      /// Retrieves Assured Workload Violation based on ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.Violation GetViolation(global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetViolation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves Assured Workload Violation based on ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.Violation GetViolation(global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetViolation, null, options, request);
      }
      /// <summary>
      /// Retrieves Assured Workload Violation based on ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.Violation> GetViolationAsync(global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetViolationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves Assured Workload Violation based on ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.Violation> GetViolationAsync(global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetViolation, null, options, request);
      }
      /// <summary>
      /// Acknowledges an existing violation. By acknowledging a violation, users
      /// acknowledge the existence of a compliance violation in their workload and
      /// decide to ignore it due to a valid business justification. Acknowledgement
      /// is a permanent operation and it cannot be reverted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse AcknowledgeViolation(global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcknowledgeViolation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Acknowledges an existing violation. By acknowledging a violation, users
      /// acknowledge the existence of a compliance violation in their workload and
      /// decide to ignore it due to a valid business justification. Acknowledgement
      /// is a permanent operation and it cannot be reverted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse AcknowledgeViolation(global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AcknowledgeViolation, null, options, request);
      }
      /// <summary>
      /// Acknowledges an existing violation. By acknowledging a violation, users
      /// acknowledge the existence of a compliance violation in their workload and
      /// decide to ignore it due to a valid business justification. Acknowledgement
      /// is a permanent operation and it cannot be reverted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse> AcknowledgeViolationAsync(global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcknowledgeViolationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Acknowledges an existing violation. By acknowledging a violation, users
      /// acknowledge the existence of a compliance violation in their workload and
      /// decide to ignore it due to a valid business justification. Acknowledgement
      /// is a permanent operation and it cannot be reverted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse> AcknowledgeViolationAsync(global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AcknowledgeViolation, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AssuredWorkloadsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AssuredWorkloadsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AssuredWorkloadsServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateWorkload, serviceImpl.CreateWorkload)
          .AddMethod(__Method_UpdateWorkload, serviceImpl.UpdateWorkload)
          .AddMethod(__Method_RestrictAllowedResources, serviceImpl.RestrictAllowedResources)
          .AddMethod(__Method_DeleteWorkload, serviceImpl.DeleteWorkload)
          .AddMethod(__Method_GetWorkload, serviceImpl.GetWorkload)
          .AddMethod(__Method_ListWorkloads, serviceImpl.ListWorkloads)
          .AddMethod(__Method_ListViolations, serviceImpl.ListViolations)
          .AddMethod(__Method_GetViolation, serviceImpl.GetViolation)
          .AddMethod(__Method_AcknowledgeViolation, serviceImpl.AcknowledgeViolation).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AssuredWorkloadsServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateWorkload, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.CreateWorkloadRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateWorkload));
      serviceBinder.AddMethod(__Method_UpdateWorkload, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.UpdateWorkloadRequest, global::Google.Cloud.AssuredWorkloads.V1.Workload>(serviceImpl.UpdateWorkload));
      serviceBinder.AddMethod(__Method_RestrictAllowedResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesRequest, global::Google.Cloud.AssuredWorkloads.V1.RestrictAllowedResourcesResponse>(serviceImpl.RestrictAllowedResources));
      serviceBinder.AddMethod(__Method_DeleteWorkload, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.DeleteWorkloadRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteWorkload));
      serviceBinder.AddMethod(__Method_GetWorkload, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.GetWorkloadRequest, global::Google.Cloud.AssuredWorkloads.V1.Workload>(serviceImpl.GetWorkload));
      serviceBinder.AddMethod(__Method_ListWorkloads, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsRequest, global::Google.Cloud.AssuredWorkloads.V1.ListWorkloadsResponse>(serviceImpl.ListWorkloads));
      serviceBinder.AddMethod(__Method_ListViolations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.ListViolationsRequest, global::Google.Cloud.AssuredWorkloads.V1.ListViolationsResponse>(serviceImpl.ListViolations));
      serviceBinder.AddMethod(__Method_GetViolation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.GetViolationRequest, global::Google.Cloud.AssuredWorkloads.V1.Violation>(serviceImpl.GetViolation));
      serviceBinder.AddMethod(__Method_AcknowledgeViolation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationRequest, global::Google.Cloud.AssuredWorkloads.V1.AcknowledgeViolationResponse>(serviceImpl.AcknowledgeViolation));
    }

  }
}
#endregion
