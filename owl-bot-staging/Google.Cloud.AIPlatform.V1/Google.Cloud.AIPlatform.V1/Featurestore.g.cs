// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1/featurestore.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.AIPlatform.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/aiplatform/v1/featurestore.proto</summary>
  public static partial class FeaturestoreReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/aiplatform/v1/featurestore.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FeaturestoreReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9mZWF0dXJlc3RvcmUucHJv",
            "dG8SGmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxGh9nb29nbGUvYXBpL2Zp",
            "ZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3Rv",
            "GjBnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9lbmNyeXB0aW9uX3NwZWMu",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8igwgKDEZl",
            "YXR1cmVzdG9yZRIRCgRuYW1lGAEgASgJQgPgQQMSNAoLY3JlYXRlX3RpbWUY",
            "AyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBk",
            "YXRlX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPg",
            "QQMSEQoEZXRhZxgFIAEoCUID4EEBEkkKBmxhYmVscxgGIAMoCzI0Lmdvb2ds",
            "ZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZlYXR1cmVzdG9yZS5MYWJlbHNFbnRy",
            "eUID4EEBEmAKFW9ubGluZV9zZXJ2aW5nX2NvbmZpZxgHIAEoCzI8Lmdvb2ds",
            "ZS5jbG91ZC5haXBsYXRmb3JtLnYxLkZlYXR1cmVzdG9yZS5PbmxpbmVTZXJ2",
            "aW5nQ29uZmlnQgPgQQESQgoFc3RhdGUYCCABKA4yLi5nb29nbGUuY2xvdWQu",
            "YWlwbGF0Zm9ybS52MS5GZWF0dXJlc3RvcmUuU3RhdGVCA+BBAxIkChdvbmxp",
            "bmVfc3RvcmFnZV90dGxfZGF5cxgNIAEoBUID4EEBEkgKD2VuY3J5cHRpb25f",
            "c3BlYxgKIAEoCzIqLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLkVuY3J5",
            "cHRpb25TcGVjQgPgQQESGgoNc2F0aXNmaWVzX3B6cxgOIAEoCEID4EEDEhoK",
            "DXNhdGlzZmllc19wemkYDyABKAhCA+BBAxrrAQoTT25saW5lU2VydmluZ0Nv",
            "bmZpZxIYChBmaXhlZF9ub2RlX2NvdW50GAIgASgFElUKB3NjYWxpbmcYBCAB",
            "KAsyRC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5GZWF0dXJlc3RvcmUu",
            "T25saW5lU2VydmluZ0NvbmZpZy5TY2FsaW5nGmMKB1NjYWxpbmcSGwoObWlu",
            "X25vZGVfY291bnQYASABKAVCA+BBAhIWCg5tYXhfbm9kZV9jb3VudBgCIAEo",
            "BRIjChZjcHVfdXRpbGl6YXRpb25fdGFyZ2V0GAMgASgFQgPgQQEaLQoLTGFi",
            "ZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI4CgVT",
            "dGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgoKBlNUQUJMRRABEgwKCFVQ",
            "REFUSU5HEAI6cepBbgomYWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9GZWF0",
            "dXJlc3RvcmUSRHByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0",
            "aW9ufS9mZWF0dXJlc3RvcmVzL3tmZWF0dXJlc3RvcmV9Qs8BCh5jb20uZ29v",
            "Z2xlLmNsb3VkLmFpcGxhdGZvcm0udjFCEUZlYXR1cmVzdG9yZVByb3RvUAFa",
            "PmNsb3VkLmdvb2dsZS5jb20vZ28vYWlwbGF0Zm9ybS9hcGl2MS9haXBsYXRm",
            "b3JtcGI7YWlwbGF0Zm9ybXBiqgIaR29vZ2xlLkNsb3VkLkFJUGxhdGZvcm0u",
            "VjHKAhpHb29nbGVcQ2xvdWRcQUlQbGF0Zm9ybVxWMeoCHUdvb2dsZTo6Q2xv",
            "dWQ6OkFJUGxhdGZvcm06OlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.AIPlatform.V1.EncryptionSpecReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.Featurestore), global::Google.Cloud.AIPlatform.V1.Featurestore.Parser, new[]{ "Name", "CreateTime", "UpdateTime", "Etag", "Labels", "OnlineServingConfig", "State", "OnlineStorageTtlDays", "EncryptionSpec", "SatisfiesPzs", "SatisfiesPzi" }, null, new[]{ typeof(global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig), global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Parser, new[]{ "FixedNodeCount", "Scaling" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Types.Scaling), global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Types.Scaling.Parser, new[]{ "MinNodeCount", "MaxNodeCount", "CpuUtilizationTarget" }, null, null, null, null)}),
            null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Vertex AI Feature Store provides a centralized repository for organizing,
  /// storing, and serving ML features. The Featurestore is a top-level container
  /// for your features and their values.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Featurestore : pb::IMessage<Featurestore>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Featurestore> _parser = new pb::MessageParser<Featurestore>(() => new Featurestore());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Featurestore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1.FeaturestoreReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Featurestore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Featurestore(Featurestore other) : this() {
      name_ = other.name_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      etag_ = other.etag_;
      labels_ = other.labels_.Clone();
      onlineServingConfig_ = other.onlineServingConfig_ != null ? other.onlineServingConfig_.Clone() : null;
      state_ = other.state_;
      onlineStorageTtlDays_ = other.onlineStorageTtlDays_;
      encryptionSpec_ = other.encryptionSpec_ != null ? other.encryptionSpec_.Clone() : null;
      satisfiesPzs_ = other.satisfiesPzs_;
      satisfiesPzi_ = other.satisfiesPzi_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Featurestore Clone() {
      return new Featurestore(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Name of the Featurestore. Format:
    /// `projects/{project}/locations/{location}/featurestores/{featurestore}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Timestamp when this Featurestore was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. Timestamp when this Featurestore was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 5;
    private string etag_ = "";
    /// <summary>
    /// Optional. Used to perform consistent read-modify-write updates. If not set,
    /// a blind "overwrite" update happens.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The labels with user-defined metadata to organize your
    /// Featurestore.
    ///
    /// Label keys and values can be no longer than 64 characters
    /// (Unicode codepoints), can only contain lowercase letters, numeric
    /// characters, underscores and dashes. International characters are allowed.
    ///
    /// See https://goo.gl/xmQnxf for more information on and examples of labels.
    /// No more than 64 user labels can be associated with one Featurestore(System
    /// labels are excluded)."
    /// System reserved label keys are prefixed with "aiplatform.googleapis.com/"
    /// and are immutable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "online_serving_config" field.</summary>
    public const int OnlineServingConfigFieldNumber = 7;
    private global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig onlineServingConfig_;
    /// <summary>
    /// Optional. Config for online storage resources. The field should not
    /// co-exist with the field of `OnlineStoreReplicationConfig`. If both of it
    /// and OnlineStoreReplicationConfig are unset, the feature store will not have
    /// an online store and cannot be used for online serving.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig OnlineServingConfig {
      get { return onlineServingConfig_; }
      set {
        onlineServingConfig_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 8;
    private global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State state_ = global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State.Unspecified;
    /// <summary>
    /// Output only. State of the featurestore.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "online_storage_ttl_days" field.</summary>
    public const int OnlineStorageTtlDaysFieldNumber = 13;
    private int onlineStorageTtlDays_;
    /// <summary>
    /// Optional. TTL in days for feature values that will be stored in online
    /// serving storage. The Feature Store online storage periodically removes
    /// obsolete feature values older than `online_storage_ttl_days` since the
    /// feature generation time. Note that `online_storage_ttl_days` should be less
    /// than or equal to `offline_storage_ttl_days` for each EntityType under a
    /// featurestore. If not set, default to 4000 days
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OnlineStorageTtlDays {
      get { return onlineStorageTtlDays_; }
      set {
        onlineStorageTtlDays_ = value;
      }
    }

    /// <summary>Field number for the "encryption_spec" field.</summary>
    public const int EncryptionSpecFieldNumber = 10;
    private global::Google.Cloud.AIPlatform.V1.EncryptionSpec encryptionSpec_;
    /// <summary>
    /// Optional. Customer-managed encryption key spec for data storage. If set,
    /// both of the online and offline data storage will be secured by this key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.EncryptionSpec EncryptionSpec {
      get { return encryptionSpec_; }
      set {
        encryptionSpec_ = value;
      }
    }

    /// <summary>Field number for the "satisfies_pzs" field.</summary>
    public const int SatisfiesPzsFieldNumber = 14;
    private bool satisfiesPzs_;
    /// <summary>
    /// Output only. Reserved for future use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SatisfiesPzs {
      get { return satisfiesPzs_; }
      set {
        satisfiesPzs_ = value;
      }
    }

    /// <summary>Field number for the "satisfies_pzi" field.</summary>
    public const int SatisfiesPziFieldNumber = 15;
    private bool satisfiesPzi_;
    /// <summary>
    /// Output only. Reserved for future use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SatisfiesPzi {
      get { return satisfiesPzi_; }
      set {
        satisfiesPzi_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Featurestore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Featurestore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (Etag != other.Etag) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(OnlineServingConfig, other.OnlineServingConfig)) return false;
      if (State != other.State) return false;
      if (OnlineStorageTtlDays != other.OnlineStorageTtlDays) return false;
      if (!object.Equals(EncryptionSpec, other.EncryptionSpec)) return false;
      if (SatisfiesPzs != other.SatisfiesPzs) return false;
      if (SatisfiesPzi != other.SatisfiesPzi) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (onlineServingConfig_ != null) hash ^= OnlineServingConfig.GetHashCode();
      if (State != global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (OnlineStorageTtlDays != 0) hash ^= OnlineStorageTtlDays.GetHashCode();
      if (encryptionSpec_ != null) hash ^= EncryptionSpec.GetHashCode();
      if (SatisfiesPzs != false) hash ^= SatisfiesPzs.GetHashCode();
      if (SatisfiesPzi != false) hash ^= SatisfiesPzi.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Etag);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (onlineServingConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OnlineServingConfig);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) State);
      }
      if (encryptionSpec_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EncryptionSpec);
      }
      if (OnlineStorageTtlDays != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(OnlineStorageTtlDays);
      }
      if (SatisfiesPzs != false) {
        output.WriteRawTag(112);
        output.WriteBool(SatisfiesPzs);
      }
      if (SatisfiesPzi != false) {
        output.WriteRawTag(120);
        output.WriteBool(SatisfiesPzi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Etag);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (onlineServingConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OnlineServingConfig);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) State);
      }
      if (encryptionSpec_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EncryptionSpec);
      }
      if (OnlineStorageTtlDays != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(OnlineStorageTtlDays);
      }
      if (SatisfiesPzs != false) {
        output.WriteRawTag(112);
        output.WriteBool(SatisfiesPzs);
      }
      if (SatisfiesPzi != false) {
        output.WriteRawTag(120);
        output.WriteBool(SatisfiesPzi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (onlineServingConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnlineServingConfig);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (OnlineStorageTtlDays != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OnlineStorageTtlDays);
      }
      if (encryptionSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionSpec);
      }
      if (SatisfiesPzs != false) {
        size += 1 + 1;
      }
      if (SatisfiesPzi != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Featurestore other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      labels_.MergeFrom(other.labels_);
      if (other.onlineServingConfig_ != null) {
        if (onlineServingConfig_ == null) {
          OnlineServingConfig = new global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig();
        }
        OnlineServingConfig.MergeFrom(other.OnlineServingConfig);
      }
      if (other.State != global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.OnlineStorageTtlDays != 0) {
        OnlineStorageTtlDays = other.OnlineStorageTtlDays;
      }
      if (other.encryptionSpec_ != null) {
        if (encryptionSpec_ == null) {
          EncryptionSpec = new global::Google.Cloud.AIPlatform.V1.EncryptionSpec();
        }
        EncryptionSpec.MergeFrom(other.EncryptionSpec);
      }
      if (other.SatisfiesPzs != false) {
        SatisfiesPzs = other.SatisfiesPzs;
      }
      if (other.SatisfiesPzi != false) {
        SatisfiesPzi = other.SatisfiesPzi;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 42: {
            Etag = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 58: {
            if (onlineServingConfig_ == null) {
              OnlineServingConfig = new global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig();
            }
            input.ReadMessage(OnlineServingConfig);
            break;
          }
          case 64: {
            State = (global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State) input.ReadEnum();
            break;
          }
          case 82: {
            if (encryptionSpec_ == null) {
              EncryptionSpec = new global::Google.Cloud.AIPlatform.V1.EncryptionSpec();
            }
            input.ReadMessage(EncryptionSpec);
            break;
          }
          case 104: {
            OnlineStorageTtlDays = input.ReadInt32();
            break;
          }
          case 112: {
            SatisfiesPzs = input.ReadBool();
            break;
          }
          case 120: {
            SatisfiesPzi = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 42: {
            Etag = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 58: {
            if (onlineServingConfig_ == null) {
              OnlineServingConfig = new global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig();
            }
            input.ReadMessage(OnlineServingConfig);
            break;
          }
          case 64: {
            State = (global::Google.Cloud.AIPlatform.V1.Featurestore.Types.State) input.ReadEnum();
            break;
          }
          case 82: {
            if (encryptionSpec_ == null) {
              EncryptionSpec = new global::Google.Cloud.AIPlatform.V1.EncryptionSpec();
            }
            input.ReadMessage(EncryptionSpec);
            break;
          }
          case 104: {
            OnlineStorageTtlDays = input.ReadInt32();
            break;
          }
          case 112: {
            SatisfiesPzs = input.ReadBool();
            break;
          }
          case 120: {
            SatisfiesPzi = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Featurestore message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Possible states a featurestore can have.
      /// </summary>
      public enum State {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// State when the featurestore configuration is not being updated and the
        /// fields reflect the current configuration of the featurestore. The
        /// featurestore is usable in this state.
        /// </summary>
        [pbr::OriginalName("STABLE")] Stable = 1,
        /// <summary>
        /// The state of the featurestore configuration when it is being updated.
        /// During an update, the fields reflect either the original configuration
        /// or the updated configuration of the featurestore. For example,
        /// `online_serving_config.fixed_node_count` can take minutes to update.
        /// While the update is in progress, the featurestore is in the UPDATING
        /// state, and the value of `fixed_node_count` can be the original value or
        /// the updated value, depending on the progress of the operation. Until the
        /// update completes, the actual number of nodes can still be the original
        /// value of `fixed_node_count`. The featurestore is still usable in this
        /// state.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 2,
      }

      /// <summary>
      /// OnlineServingConfig specifies the details for provisioning online serving
      /// resources.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class OnlineServingConfig : pb::IMessage<OnlineServingConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OnlineServingConfig> _parser = new pb::MessageParser<OnlineServingConfig>(() => new OnlineServingConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OnlineServingConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.AIPlatform.V1.Featurestore.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OnlineServingConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OnlineServingConfig(OnlineServingConfig other) : this() {
          fixedNodeCount_ = other.fixedNodeCount_;
          scaling_ = other.scaling_ != null ? other.scaling_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OnlineServingConfig Clone() {
          return new OnlineServingConfig(this);
        }

        /// <summary>Field number for the "fixed_node_count" field.</summary>
        public const int FixedNodeCountFieldNumber = 2;
        private int fixedNodeCount_;
        /// <summary>
        /// The number of nodes for the online store. The number of nodes doesn't
        /// scale automatically, but you can manually update the number of
        /// nodes. If set to 0, the featurestore will not have an
        /// online store and cannot be used for online serving.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int FixedNodeCount {
          get { return fixedNodeCount_; }
          set {
            fixedNodeCount_ = value;
          }
        }

        /// <summary>Field number for the "scaling" field.</summary>
        public const int ScalingFieldNumber = 4;
        private global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Types.Scaling scaling_;
        /// <summary>
        /// Online serving scaling configuration.
        /// Only one of `fixed_node_count` and `scaling` can be set. Setting one will
        /// reset the other.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Types.Scaling Scaling {
          get { return scaling_; }
          set {
            scaling_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OnlineServingConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OnlineServingConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FixedNodeCount != other.FixedNodeCount) return false;
          if (!object.Equals(Scaling, other.Scaling)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (FixedNodeCount != 0) hash ^= FixedNodeCount.GetHashCode();
          if (scaling_ != null) hash ^= Scaling.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (FixedNodeCount != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(FixedNodeCount);
          }
          if (scaling_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Scaling);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (FixedNodeCount != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(FixedNodeCount);
          }
          if (scaling_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Scaling);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (FixedNodeCount != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(FixedNodeCount);
          }
          if (scaling_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scaling);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OnlineServingConfig other) {
          if (other == null) {
            return;
          }
          if (other.FixedNodeCount != 0) {
            FixedNodeCount = other.FixedNodeCount;
          }
          if (other.scaling_ != null) {
            if (scaling_ == null) {
              Scaling = new global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Types.Scaling();
            }
            Scaling.MergeFrom(other.Scaling);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 16: {
                FixedNodeCount = input.ReadInt32();
                break;
              }
              case 34: {
                if (scaling_ == null) {
                  Scaling = new global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Types.Scaling();
                }
                input.ReadMessage(Scaling);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 16: {
                FixedNodeCount = input.ReadInt32();
                break;
              }
              case 34: {
                if (scaling_ == null) {
                  Scaling = new global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Types.Scaling();
                }
                input.ReadMessage(Scaling);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the OnlineServingConfig message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Online serving scaling configuration. If min_node_count and
          /// max_node_count are set to the same value, the cluster will be configured
          /// with the fixed number of node (no auto-scaling).
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Scaling : pb::IMessage<Scaling>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Scaling> _parser = new pb::MessageParser<Scaling>(() => new Scaling());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Scaling> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.AIPlatform.V1.Featurestore.Types.OnlineServingConfig.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Scaling() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Scaling(Scaling other) : this() {
              minNodeCount_ = other.minNodeCount_;
              maxNodeCount_ = other.maxNodeCount_;
              cpuUtilizationTarget_ = other.cpuUtilizationTarget_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Scaling Clone() {
              return new Scaling(this);
            }

            /// <summary>Field number for the "min_node_count" field.</summary>
            public const int MinNodeCountFieldNumber = 1;
            private int minNodeCount_;
            /// <summary>
            /// Required. The minimum number of nodes to scale down to. Must be greater
            /// than or equal to 1.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int MinNodeCount {
              get { return minNodeCount_; }
              set {
                minNodeCount_ = value;
              }
            }

            /// <summary>Field number for the "max_node_count" field.</summary>
            public const int MaxNodeCountFieldNumber = 2;
            private int maxNodeCount_;
            /// <summary>
            /// The maximum number of nodes to scale up to. Must be greater than
            /// min_node_count, and less than or equal to 10 times of 'min_node_count'.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int MaxNodeCount {
              get { return maxNodeCount_; }
              set {
                maxNodeCount_ = value;
              }
            }

            /// <summary>Field number for the "cpu_utilization_target" field.</summary>
            public const int CpuUtilizationTargetFieldNumber = 3;
            private int cpuUtilizationTarget_;
            /// <summary>
            /// Optional. The cpu utilization that the Autoscaler should be trying to
            /// achieve. This number is on a scale from 0 (no utilization) to 100
            /// (total utilization), and is limited between 10 and 80. When a cluster's
            /// CPU utilization exceeds the target that you have set, Bigtable
            /// immediately adds nodes to the cluster. When CPU utilization is
            /// substantially lower than the target, Bigtable removes nodes. If not set
            /// or set to 0, default to 50.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CpuUtilizationTarget {
              get { return cpuUtilizationTarget_; }
              set {
                cpuUtilizationTarget_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Scaling);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Scaling other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MinNodeCount != other.MinNodeCount) return false;
              if (MaxNodeCount != other.MaxNodeCount) return false;
              if (CpuUtilizationTarget != other.CpuUtilizationTarget) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (MinNodeCount != 0) hash ^= MinNodeCount.GetHashCode();
              if (MaxNodeCount != 0) hash ^= MaxNodeCount.GetHashCode();
              if (CpuUtilizationTarget != 0) hash ^= CpuUtilizationTarget.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (MinNodeCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(MinNodeCount);
              }
              if (MaxNodeCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MaxNodeCount);
              }
              if (CpuUtilizationTarget != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(CpuUtilizationTarget);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (MinNodeCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(MinNodeCount);
              }
              if (MaxNodeCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MaxNodeCount);
              }
              if (CpuUtilizationTarget != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(CpuUtilizationTarget);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (MinNodeCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinNodeCount);
              }
              if (MaxNodeCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNodeCount);
              }
              if (CpuUtilizationTarget != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(CpuUtilizationTarget);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Scaling other) {
              if (other == null) {
                return;
              }
              if (other.MinNodeCount != 0) {
                MinNodeCount = other.MinNodeCount;
              }
              if (other.MaxNodeCount != 0) {
                MaxNodeCount = other.MaxNodeCount;
              }
              if (other.CpuUtilizationTarget != 0) {
                CpuUtilizationTarget = other.CpuUtilizationTarget;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    MinNodeCount = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    MaxNodeCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    CpuUtilizationTarget = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    MinNodeCount = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    MaxNodeCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    CpuUtilizationTarget = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
