// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1/nas_job.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.AIPlatform.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/aiplatform/v1/nas_job.proto</summary>
  public static partial class NasJobReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/aiplatform/v1/nas_job.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NasJobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9uYXNfam9iLnByb3RvEhpn",
            "b29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MRofZ29vZ2xlL2FwaS9maWVsZF9i",
            "ZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxorZ29v",
            "Z2xlL2Nsb3VkL2FpcGxhdGZvcm0vdjEvY3VzdG9tX2pvYi5wcm90bxowZ29v",
            "Z2xlL2Nsb3VkL2FpcGxhdGZvcm0vdjEvZW5jcnlwdGlvbl9zcGVjLnByb3Rv",
            "Gipnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9qb2Jfc3RhdGUucHJvdG8a",
            "Jmdvb2dsZS9jbG91ZC9haXBsYXRmb3JtL3YxL3N0dWR5LnByb3RvGh9nb29n",
            "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhdnb29nbGUvcnBjL3N0YXR1",
            "cy5wcm90byL1BgoGTmFzSm9iEhEKBG5hbWUYASABKAlCA+BBAxIZCgxkaXNw",
            "bGF5X25hbWUYAiABKAlCA+BBAhJBCgxuYXNfam9iX3NwZWMYBCABKAsyJi5n",
            "b29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5OYXNKb2JTcGVjQgPgQQISRQoO",
            "bmFzX2pvYl9vdXRwdXQYBSABKAsyKC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9y",
            "bS52MS5OYXNKb2JPdXRwdXRCA+BBAxI4CgVzdGF0ZRgGIAEoDjIkLmdvb2ds",
            "ZS5jbG91ZC5haXBsYXRmb3JtLnYxLkpvYlN0YXRlQgPgQQMSNAoLY3JlYXRl",
            "X3RpbWUYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMS",
            "MwoKc3RhcnRfdGltZRgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXBCA+BBAxIxCghlbmRfdGltZRgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgKIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXBCA+BBAxImCgVlcnJvchgLIAEoCzISLmdvb2ds",
            "ZS5ycGMuU3RhdHVzQgPgQQMSPgoGbGFiZWxzGAwgAygLMi4uZ29vZ2xlLmNs",
            "b3VkLmFpcGxhdGZvcm0udjEuTmFzSm9iLkxhYmVsc0VudHJ5EkMKD2VuY3J5",
            "cHRpb25fc3BlYxgNIAEoCzIqLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYx",
            "LkVuY3J5cHRpb25TcGVjEi8KIGVuYWJsZV9yZXN0cmljdGVkX2ltYWdlX3Ry",
            "YWluaW5nGA4gASgIQgUYAeBBARIaCg1zYXRpc2ZpZXNfcHpzGA8gASgIQgPg",
            "QQMSGgoNc2F0aXNmaWVzX3B6aRgQIAEoCEID4EEDGi0KC0xhYmVsc0VudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6YOpBXQogYWlwbGF0",
            "Zm9ybS5nb29nbGVhcGlzLmNvbS9OYXNKb2ISOXByb2plY3RzL3twcm9qZWN0",
            "fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9uYXNKb2JzL3tuYXNfam9ifSK9AgoO",
            "TmFzVHJpYWxEZXRhaWwSEQoEbmFtZRgBIAEoCUID4EEDEhIKCnBhcmFtZXRl",
            "cnMYAiABKAkSOgoMc2VhcmNoX3RyaWFsGAMgASgLMiQuZ29vZ2xlLmNsb3Vk",
            "LmFpcGxhdGZvcm0udjEuTmFzVHJpYWwSOQoLdHJhaW5fdHJpYWwYBCABKAsy",
            "JC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5OYXNUcmlhbDqMAepBiAEK",
            "KGFpcGxhdGZvcm0uZ29vZ2xlYXBpcy5jb20vTmFzVHJpYWxEZXRhaWwSXHBy",
            "b2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9uYXNKb2Jz",
            "L3tuYXNfam9ifS9uYXNUcmlhbERldGFpbHMve25hc190cmlhbF9kZXRhaWx9",
            "IqUKCgpOYXNKb2JTcGVjEmQKGm11bHRpX3RyaWFsX2FsZ29yaXRobV9zcGVj",
            "GAIgASgLMj4uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmFzSm9iU3Bl",
            "Yy5NdWx0aVRyaWFsQWxnb3JpdGhtU3BlY0gAEhkKEXJlc3VtZV9uYXNfam9i",
            "X2lkGAMgASgJEhkKEXNlYXJjaF9zcGFjZV9zcGVjGAEgASgJGuQIChdNdWx0",
            "aVRyaWFsQWxnb3JpdGhtU3BlYxJxChVtdWx0aV90cmlhbF9hbGdvcml0aG0Y",
            "ASABKA4yUi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5OYXNKb2JTcGVj",
            "Lk11bHRpVHJpYWxBbGdvcml0aG1TcGVjLk11bHRpVHJpYWxBbGdvcml0aG0S",
            "WQoGbWV0cmljGAIgASgLMkkuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEu",
            "TmFzSm9iU3BlYy5NdWx0aVRyaWFsQWxnb3JpdGhtU3BlYy5NZXRyaWNTcGVj",
            "Em4KEXNlYXJjaF90cmlhbF9zcGVjGAMgASgLMk4uZ29vZ2xlLmNsb3VkLmFp",
            "cGxhdGZvcm0udjEuTmFzSm9iU3BlYy5NdWx0aVRyaWFsQWxnb3JpdGhtU3Bl",
            "Yy5TZWFyY2hUcmlhbFNwZWNCA+BBAhJnChB0cmFpbl90cmlhbF9zcGVjGAQg",
            "ASgLMk0uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmFzSm9iU3BlYy5N",
            "dWx0aVRyaWFsQWxnb3JpdGhtU3BlYy5UcmFpblRyaWFsU3BlYxrOAQoKTWV0",
            "cmljU3BlYxIWCgltZXRyaWNfaWQYASABKAlCA+BBAhJlCgRnb2FsGAIgASgO",
            "MlIuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmFzSm9iU3BlYy5NdWx0",
            "aVRyaWFsQWxnb3JpdGhtU3BlYy5NZXRyaWNTcGVjLkdvYWxUeXBlQgPgQQIi",
            "QQoIR29hbFR5cGUSGQoVR09BTF9UWVBFX1VOU1BFQ0lGSUVEEAASDAoITUFY",
            "SU1JWkUQARIMCghNSU5JTUlaRRACGsUBCg9TZWFyY2hUcmlhbFNwZWMSTQoV",
            "c2VhcmNoX3RyaWFsX2pvYl9zcGVjGAEgASgLMikuZ29vZ2xlLmNsb3VkLmFp",
            "cGxhdGZvcm0udjEuQ3VzdG9tSm9iU3BlY0ID4EECEhwKD21heF90cmlhbF9j",
            "b3VudBgCIAEoBUID4EECEiUKGG1heF9wYXJhbGxlbF90cmlhbF9jb3VudBgD",
            "IAEoBUID4EECEh4KFm1heF9mYWlsZWRfdHJpYWxfY291bnQYBCABKAUanQEK",
            "DlRyYWluVHJpYWxTcGVjEkwKFHRyYWluX3RyaWFsX2pvYl9zcGVjGAEgASgL",
            "MikuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuQ3VzdG9tSm9iU3BlY0ID",
            "4EECEiUKGG1heF9wYXJhbGxlbF90cmlhbF9jb3VudBgCIAEoBUID4EECEhYK",
            "CWZyZXF1ZW5jeRgDIAEoBUID4EECImkKE011bHRpVHJpYWxBbGdvcml0aG0S",
            "JQohTVVMVElfVFJJQUxfQUxHT1JJVEhNX1VOU1BFQ0lGSUVEEAASGgoWUkVJ",
            "TkZPUkNFTUVOVF9MRUFSTklORxABEg8KC0dSSURfU0VBUkNIEAJCFAoSbmFz",
            "X2FsZ29yaXRobV9zcGVjIpgCCgxOYXNKb2JPdXRwdXQSYwoWbXVsdGlfdHJp",
            "YWxfam9iX291dHB1dBgBIAEoCzI8Lmdvb2dsZS5jbG91ZC5haXBsYXRmb3Jt",
            "LnYxLk5hc0pvYk91dHB1dC5NdWx0aVRyaWFsSm9iT3V0cHV0QgPgQQNIABqY",
            "AQoTTXVsdGlUcmlhbEpvYk91dHB1dBJACg1zZWFyY2hfdHJpYWxzGAEgAygL",
            "MiQuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEuTmFzVHJpYWxCA+BBAxI/",
            "Cgx0cmFpbl90cmlhbHMYAiADKAsyJC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9y",
            "bS52MS5OYXNUcmlhbEID4EEDQggKBm91dHB1dCL0AgoITmFzVHJpYWwSDwoC",
            "aWQYASABKAlCA+BBAxI+CgVzdGF0ZRgCIAEoDjIqLmdvb2dsZS5jbG91ZC5h",
            "aXBsYXRmb3JtLnYxLk5hc1RyaWFsLlN0YXRlQgPgQQMSRwoRZmluYWxfbWVh",
            "c3VyZW1lbnQYAyABKAsyJy5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5N",
            "ZWFzdXJlbWVudEID4EEDEjMKCnN0YXJ0X3RpbWUYBCABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wQgPgQQMSMQoIZW5kX3RpbWUYBSABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMiZgoFU3RhdGUSFQoRU1RB",
            "VEVfVU5TUEVDSUZJRUQQABINCglSRVFVRVNURUQQARIKCgZBQ1RJVkUQAhIM",
            "CghTVE9QUElORxADEg0KCVNVQ0NFRURFRBAEEg4KCklORkVBU0lCTEUQBULJ",
            "AQoeY29tLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxQgtOYXNKb2JQcm90",
            "b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2FpcGxhdGZvcm0vYXBpdjEvYWlw",
            "bGF0Zm9ybXBiO2FpcGxhdGZvcm1wYqoCGkdvb2dsZS5DbG91ZC5BSVBsYXRm",
            "b3JtLlYxygIaR29vZ2xlXENsb3VkXEFJUGxhdGZvcm1cVjHqAh1Hb29nbGU6",
            "OkNsb3VkOjpBSVBsYXRmb3JtOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.AIPlatform.V1.CustomJobReflection.Descriptor, global::Google.Cloud.AIPlatform.V1.EncryptionSpecReflection.Descriptor, global::Google.Cloud.AIPlatform.V1.JobStateReflection.Descriptor, global::Google.Cloud.AIPlatform.V1.StudyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasJob), global::Google.Cloud.AIPlatform.V1.NasJob.Parser, new[]{ "Name", "DisplayName", "NasJobSpec", "NasJobOutput", "State", "CreateTime", "StartTime", "EndTime", "UpdateTime", "Error", "Labels", "EncryptionSpec", "EnableRestrictedImageTraining", "SatisfiesPzs", "SatisfiesPzi" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasTrialDetail), global::Google.Cloud.AIPlatform.V1.NasTrialDetail.Parser, new[]{ "Name", "Parameters", "SearchTrial", "TrainTrial" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasJobSpec), global::Google.Cloud.AIPlatform.V1.NasJobSpec.Parser, new[]{ "MultiTrialAlgorithmSpec", "ResumeNasJobId", "SearchSpaceSpec" }, new[]{ "NasAlgorithmSpec" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec), global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Parser, new[]{ "MultiTrialAlgorithm", "Metric", "SearchTrialSpec", "TrainTrialSpec" }, null, new[]{ typeof(global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec), global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Parser, new[]{ "MetricId", "Goal" }, null, new[]{ typeof(global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.SearchTrialSpec), global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.SearchTrialSpec.Parser, new[]{ "SearchTrialJobSpec", "MaxTrialCount", "MaxParallelTrialCount", "MaxFailedTrialCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.TrainTrialSpec), global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.TrainTrialSpec.Parser, new[]{ "TrainTrialJobSpec", "MaxParallelTrialCount", "Frequency" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasJobOutput), global::Google.Cloud.AIPlatform.V1.NasJobOutput.Parser, new[]{ "MultiTrialJobOutput" }, new[]{ "Output" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput), global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput.Parser, new[]{ "SearchTrials", "TrainTrials" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.NasTrial), global::Google.Cloud.AIPlatform.V1.NasTrial.Parser, new[]{ "Id", "State", "FinalMeasurement", "StartTime", "EndTime" }, null, new[]{ typeof(global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents a Neural Architecture Search (NAS) job.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NasJob : pb::IMessage<NasJob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NasJob> _parser = new pb::MessageParser<NasJob>(() => new NasJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NasJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1.NasJobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJob(NasJob other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      nasJobSpec_ = other.nasJobSpec_ != null ? other.nasJobSpec_.Clone() : null;
      nasJobOutput_ = other.nasJobOutput_ != null ? other.nasJobOutput_.Clone() : null;
      state_ = other.state_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      labels_ = other.labels_.Clone();
      encryptionSpec_ = other.encryptionSpec_ != null ? other.encryptionSpec_.Clone() : null;
      enableRestrictedImageTraining_ = other.enableRestrictedImageTraining_;
      satisfiesPzs_ = other.satisfiesPzs_;
      satisfiesPzi_ = other.satisfiesPzi_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJob Clone() {
      return new NasJob(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Resource name of the NasJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Required. The display name of the NasJob.
    /// The name can be up to 128 characters long and can consist of any UTF-8
    /// characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nas_job_spec" field.</summary>
    public const int NasJobSpecFieldNumber = 4;
    private global::Google.Cloud.AIPlatform.V1.NasJobSpec nasJobSpec_;
    /// <summary>
    /// Required. The specification of a NasJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.NasJobSpec NasJobSpec {
      get { return nasJobSpec_; }
      set {
        nasJobSpec_ = value;
      }
    }

    /// <summary>Field number for the "nas_job_output" field.</summary>
    public const int NasJobOutputFieldNumber = 5;
    private global::Google.Cloud.AIPlatform.V1.NasJobOutput nasJobOutput_;
    /// <summary>
    /// Output only. Output of the NasJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.NasJobOutput NasJobOutput {
      get { return nasJobOutput_; }
      set {
        nasJobOutput_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private global::Google.Cloud.AIPlatform.V1.JobState state_ = global::Google.Cloud.AIPlatform.V1.JobState.Unspecified;
    /// <summary>
    /// Output only. The detailed state of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.JobState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Time when the NasJob was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Output only. Time when the NasJob for the first time entered the
    /// `JOB_STATE_RUNNING` state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. Time when the NasJob entered any of the following states:
    /// `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. Time when the NasJob was most recently updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 11;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// Output only. Only populated when job's state is JOB_STATE_FAILED or
    /// JOB_STATE_CANCELLED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 12;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 98);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The labels with user-defined metadata to organize NasJobs.
    ///
    /// Label keys and values can be no longer than 64 characters
    /// (Unicode codepoints), can only contain lowercase letters, numeric
    /// characters, underscores and dashes. International characters are allowed.
    ///
    /// See https://goo.gl/xmQnxf for more information and examples of labels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "encryption_spec" field.</summary>
    public const int EncryptionSpecFieldNumber = 13;
    private global::Google.Cloud.AIPlatform.V1.EncryptionSpec encryptionSpec_;
    /// <summary>
    /// Customer-managed encryption key options for a NasJob.
    /// If this is set, then all resources created by the NasJob
    /// will be encrypted with the provided encryption key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.EncryptionSpec EncryptionSpec {
      get { return encryptionSpec_; }
      set {
        encryptionSpec_ = value;
      }
    }

    /// <summary>Field number for the "enable_restricted_image_training" field.</summary>
    public const int EnableRestrictedImageTrainingFieldNumber = 14;
    private bool enableRestrictedImageTraining_;
    /// <summary>
    /// Optional. Enable a separation of Custom model training
    /// and restricted image training for tenant project.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableRestrictedImageTraining {
      get { return enableRestrictedImageTraining_; }
      set {
        enableRestrictedImageTraining_ = value;
      }
    }

    /// <summary>Field number for the "satisfies_pzs" field.</summary>
    public const int SatisfiesPzsFieldNumber = 15;
    private bool satisfiesPzs_;
    /// <summary>
    /// Output only. Reserved for future use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SatisfiesPzs {
      get { return satisfiesPzs_; }
      set {
        satisfiesPzs_ = value;
      }
    }

    /// <summary>Field number for the "satisfies_pzi" field.</summary>
    public const int SatisfiesPziFieldNumber = 16;
    private bool satisfiesPzi_;
    /// <summary>
    /// Output only. Reserved for future use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SatisfiesPzi {
      get { return satisfiesPzi_; }
      set {
        satisfiesPzi_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NasJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NasJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(NasJobSpec, other.NasJobSpec)) return false;
      if (!object.Equals(NasJobOutput, other.NasJobOutput)) return false;
      if (State != other.State) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(EncryptionSpec, other.EncryptionSpec)) return false;
      if (EnableRestrictedImageTraining != other.EnableRestrictedImageTraining) return false;
      if (SatisfiesPzs != other.SatisfiesPzs) return false;
      if (SatisfiesPzi != other.SatisfiesPzi) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (nasJobSpec_ != null) hash ^= NasJobSpec.GetHashCode();
      if (nasJobOutput_ != null) hash ^= NasJobOutput.GetHashCode();
      if (State != global::Google.Cloud.AIPlatform.V1.JobState.Unspecified) hash ^= State.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (encryptionSpec_ != null) hash ^= EncryptionSpec.GetHashCode();
      if (EnableRestrictedImageTraining != false) hash ^= EnableRestrictedImageTraining.GetHashCode();
      if (SatisfiesPzs != false) hash ^= SatisfiesPzs.GetHashCode();
      if (SatisfiesPzi != false) hash ^= SatisfiesPzi.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (nasJobSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NasJobSpec);
      }
      if (nasJobOutput_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NasJobOutput);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.JobState.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EndTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateTime);
      }
      if (error_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Error);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (encryptionSpec_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(EncryptionSpec);
      }
      if (EnableRestrictedImageTraining != false) {
        output.WriteRawTag(112);
        output.WriteBool(EnableRestrictedImageTraining);
      }
      if (SatisfiesPzs != false) {
        output.WriteRawTag(120);
        output.WriteBool(SatisfiesPzs);
      }
      if (SatisfiesPzi != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(SatisfiesPzi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (nasJobSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NasJobSpec);
      }
      if (nasJobOutput_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NasJobOutput);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.JobState.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EndTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateTime);
      }
      if (error_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Error);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (encryptionSpec_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(EncryptionSpec);
      }
      if (EnableRestrictedImageTraining != false) {
        output.WriteRawTag(112);
        output.WriteBool(EnableRestrictedImageTraining);
      }
      if (SatisfiesPzs != false) {
        output.WriteRawTag(120);
        output.WriteBool(SatisfiesPzs);
      }
      if (SatisfiesPzi != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(SatisfiesPzi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (nasJobSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NasJobSpec);
      }
      if (nasJobOutput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NasJobOutput);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.JobState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (encryptionSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionSpec);
      }
      if (EnableRestrictedImageTraining != false) {
        size += 1 + 1;
      }
      if (SatisfiesPzs != false) {
        size += 1 + 1;
      }
      if (SatisfiesPzi != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NasJob other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.nasJobSpec_ != null) {
        if (nasJobSpec_ == null) {
          NasJobSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec();
        }
        NasJobSpec.MergeFrom(other.NasJobSpec);
      }
      if (other.nasJobOutput_ != null) {
        if (nasJobOutput_ == null) {
          NasJobOutput = new global::Google.Cloud.AIPlatform.V1.NasJobOutput();
        }
        NasJobOutput.MergeFrom(other.NasJobOutput);
      }
      if (other.State != global::Google.Cloud.AIPlatform.V1.JobState.Unspecified) {
        State = other.State;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
      labels_.MergeFrom(other.labels_);
      if (other.encryptionSpec_ != null) {
        if (encryptionSpec_ == null) {
          EncryptionSpec = new global::Google.Cloud.AIPlatform.V1.EncryptionSpec();
        }
        EncryptionSpec.MergeFrom(other.EncryptionSpec);
      }
      if (other.EnableRestrictedImageTraining != false) {
        EnableRestrictedImageTraining = other.EnableRestrictedImageTraining;
      }
      if (other.SatisfiesPzs != false) {
        SatisfiesPzs = other.SatisfiesPzs;
      }
      if (other.SatisfiesPzi != false) {
        SatisfiesPzi = other.SatisfiesPzi;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            if (nasJobSpec_ == null) {
              NasJobSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec();
            }
            input.ReadMessage(NasJobSpec);
            break;
          }
          case 42: {
            if (nasJobOutput_ == null) {
              NasJobOutput = new global::Google.Cloud.AIPlatform.V1.NasJobOutput();
            }
            input.ReadMessage(NasJobOutput);
            break;
          }
          case 48: {
            State = (global::Google.Cloud.AIPlatform.V1.JobState) input.ReadEnum();
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 74: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 82: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 90: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 98: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 106: {
            if (encryptionSpec_ == null) {
              EncryptionSpec = new global::Google.Cloud.AIPlatform.V1.EncryptionSpec();
            }
            input.ReadMessage(EncryptionSpec);
            break;
          }
          case 112: {
            EnableRestrictedImageTraining = input.ReadBool();
            break;
          }
          case 120: {
            SatisfiesPzs = input.ReadBool();
            break;
          }
          case 128: {
            SatisfiesPzi = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            if (nasJobSpec_ == null) {
              NasJobSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec();
            }
            input.ReadMessage(NasJobSpec);
            break;
          }
          case 42: {
            if (nasJobOutput_ == null) {
              NasJobOutput = new global::Google.Cloud.AIPlatform.V1.NasJobOutput();
            }
            input.ReadMessage(NasJobOutput);
            break;
          }
          case 48: {
            State = (global::Google.Cloud.AIPlatform.V1.JobState) input.ReadEnum();
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 74: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 82: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 90: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 98: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 106: {
            if (encryptionSpec_ == null) {
              EncryptionSpec = new global::Google.Cloud.AIPlatform.V1.EncryptionSpec();
            }
            input.ReadMessage(EncryptionSpec);
            break;
          }
          case 112: {
            EnableRestrictedImageTraining = input.ReadBool();
            break;
          }
          case 120: {
            SatisfiesPzs = input.ReadBool();
            break;
          }
          case 128: {
            SatisfiesPzi = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a NasTrial details along with its parameters. If there is a
  /// corresponding train NasTrial, the train NasTrial is also returned.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NasTrialDetail : pb::IMessage<NasTrialDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NasTrialDetail> _parser = new pb::MessageParser<NasTrialDetail>(() => new NasTrialDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NasTrialDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1.NasJobReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasTrialDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasTrialDetail(NasTrialDetail other) : this() {
      name_ = other.name_;
      parameters_ = other.parameters_;
      searchTrial_ = other.searchTrial_ != null ? other.searchTrial_.Clone() : null;
      trainTrial_ = other.trainTrial_ != null ? other.trainTrial_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasTrialDetail Clone() {
      return new NasTrialDetail(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Resource name of the NasTrialDetail.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 2;
    private string parameters_ = "";
    /// <summary>
    /// The parameters for the NasJob NasTrial.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parameters {
      get { return parameters_; }
      set {
        parameters_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "search_trial" field.</summary>
    public const int SearchTrialFieldNumber = 3;
    private global::Google.Cloud.AIPlatform.V1.NasTrial searchTrial_;
    /// <summary>
    /// The requested search NasTrial.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.NasTrial SearchTrial {
      get { return searchTrial_; }
      set {
        searchTrial_ = value;
      }
    }

    /// <summary>Field number for the "train_trial" field.</summary>
    public const int TrainTrialFieldNumber = 4;
    private global::Google.Cloud.AIPlatform.V1.NasTrial trainTrial_;
    /// <summary>
    /// The train NasTrial corresponding to
    /// [search_trial][google.cloud.aiplatform.v1.NasTrialDetail.search_trial].
    /// Only populated if
    /// [search_trial][google.cloud.aiplatform.v1.NasTrialDetail.search_trial] is
    /// used for training.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.NasTrial TrainTrial {
      get { return trainTrial_; }
      set {
        trainTrial_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NasTrialDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NasTrialDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Parameters != other.Parameters) return false;
      if (!object.Equals(SearchTrial, other.SearchTrial)) return false;
      if (!object.Equals(TrainTrial, other.TrainTrial)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Parameters.Length != 0) hash ^= Parameters.GetHashCode();
      if (searchTrial_ != null) hash ^= SearchTrial.GetHashCode();
      if (trainTrial_ != null) hash ^= TrainTrial.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Parameters.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parameters);
      }
      if (searchTrial_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SearchTrial);
      }
      if (trainTrial_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TrainTrial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Parameters.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Parameters);
      }
      if (searchTrial_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SearchTrial);
      }
      if (trainTrial_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TrainTrial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Parameters.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parameters);
      }
      if (searchTrial_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchTrial);
      }
      if (trainTrial_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainTrial);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NasTrialDetail other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Parameters.Length != 0) {
        Parameters = other.Parameters;
      }
      if (other.searchTrial_ != null) {
        if (searchTrial_ == null) {
          SearchTrial = new global::Google.Cloud.AIPlatform.V1.NasTrial();
        }
        SearchTrial.MergeFrom(other.SearchTrial);
      }
      if (other.trainTrial_ != null) {
        if (trainTrial_ == null) {
          TrainTrial = new global::Google.Cloud.AIPlatform.V1.NasTrial();
        }
        TrainTrial.MergeFrom(other.TrainTrial);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Parameters = input.ReadString();
            break;
          }
          case 26: {
            if (searchTrial_ == null) {
              SearchTrial = new global::Google.Cloud.AIPlatform.V1.NasTrial();
            }
            input.ReadMessage(SearchTrial);
            break;
          }
          case 34: {
            if (trainTrial_ == null) {
              TrainTrial = new global::Google.Cloud.AIPlatform.V1.NasTrial();
            }
            input.ReadMessage(TrainTrial);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Parameters = input.ReadString();
            break;
          }
          case 26: {
            if (searchTrial_ == null) {
              SearchTrial = new global::Google.Cloud.AIPlatform.V1.NasTrial();
            }
            input.ReadMessage(SearchTrial);
            break;
          }
          case 34: {
            if (trainTrial_ == null) {
              TrainTrial = new global::Google.Cloud.AIPlatform.V1.NasTrial();
            }
            input.ReadMessage(TrainTrial);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents the spec of a NasJob.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NasJobSpec : pb::IMessage<NasJobSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NasJobSpec> _parser = new pb::MessageParser<NasJobSpec>(() => new NasJobSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NasJobSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1.NasJobReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJobSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJobSpec(NasJobSpec other) : this() {
      resumeNasJobId_ = other.resumeNasJobId_;
      searchSpaceSpec_ = other.searchSpaceSpec_;
      switch (other.NasAlgorithmSpecCase) {
        case NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec:
          MultiTrialAlgorithmSpec = other.MultiTrialAlgorithmSpec.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJobSpec Clone() {
      return new NasJobSpec(this);
    }

    /// <summary>Field number for the "multi_trial_algorithm_spec" field.</summary>
    public const int MultiTrialAlgorithmSpecFieldNumber = 2;
    /// <summary>
    /// The spec of multi-trial algorithms.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec MultiTrialAlgorithmSpec {
      get { return nasAlgorithmSpecCase_ == NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec ? (global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec) nasAlgorithmSpec_ : null; }
      set {
        nasAlgorithmSpec_ = value;
        nasAlgorithmSpecCase_ = value == null ? NasAlgorithmSpecOneofCase.None : NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec;
      }
    }

    /// <summary>Field number for the "resume_nas_job_id" field.</summary>
    public const int ResumeNasJobIdFieldNumber = 3;
    private string resumeNasJobId_ = "";
    /// <summary>
    /// The ID of the existing NasJob in the same Project and Location
    /// which will be used to resume search. search_space_spec and
    /// nas_algorithm_spec are obtained from previous NasJob hence should not
    /// provide them again for this NasJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResumeNasJobId {
      get { return resumeNasJobId_; }
      set {
        resumeNasJobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "search_space_spec" field.</summary>
    public const int SearchSpaceSpecFieldNumber = 1;
    private string searchSpaceSpec_ = "";
    /// <summary>
    /// It defines the search space for Neural Architecture Search (NAS).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SearchSpaceSpec {
      get { return searchSpaceSpec_; }
      set {
        searchSpaceSpec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object nasAlgorithmSpec_;
    /// <summary>Enum of possible cases for the "nas_algorithm_spec" oneof.</summary>
    public enum NasAlgorithmSpecOneofCase {
      None = 0,
      MultiTrialAlgorithmSpec = 2,
    }
    private NasAlgorithmSpecOneofCase nasAlgorithmSpecCase_ = NasAlgorithmSpecOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasAlgorithmSpecOneofCase NasAlgorithmSpecCase {
      get { return nasAlgorithmSpecCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNasAlgorithmSpec() {
      nasAlgorithmSpecCase_ = NasAlgorithmSpecOneofCase.None;
      nasAlgorithmSpec_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NasJobSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NasJobSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MultiTrialAlgorithmSpec, other.MultiTrialAlgorithmSpec)) return false;
      if (ResumeNasJobId != other.ResumeNasJobId) return false;
      if (SearchSpaceSpec != other.SearchSpaceSpec) return false;
      if (NasAlgorithmSpecCase != other.NasAlgorithmSpecCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nasAlgorithmSpecCase_ == NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec) hash ^= MultiTrialAlgorithmSpec.GetHashCode();
      if (ResumeNasJobId.Length != 0) hash ^= ResumeNasJobId.GetHashCode();
      if (SearchSpaceSpec.Length != 0) hash ^= SearchSpaceSpec.GetHashCode();
      hash ^= (int) nasAlgorithmSpecCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SearchSpaceSpec.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SearchSpaceSpec);
      }
      if (nasAlgorithmSpecCase_ == NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec) {
        output.WriteRawTag(18);
        output.WriteMessage(MultiTrialAlgorithmSpec);
      }
      if (ResumeNasJobId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResumeNasJobId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SearchSpaceSpec.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SearchSpaceSpec);
      }
      if (nasAlgorithmSpecCase_ == NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec) {
        output.WriteRawTag(18);
        output.WriteMessage(MultiTrialAlgorithmSpec);
      }
      if (ResumeNasJobId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResumeNasJobId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nasAlgorithmSpecCase_ == NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiTrialAlgorithmSpec);
      }
      if (ResumeNasJobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResumeNasJobId);
      }
      if (SearchSpaceSpec.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SearchSpaceSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NasJobSpec other) {
      if (other == null) {
        return;
      }
      if (other.ResumeNasJobId.Length != 0) {
        ResumeNasJobId = other.ResumeNasJobId;
      }
      if (other.SearchSpaceSpec.Length != 0) {
        SearchSpaceSpec = other.SearchSpaceSpec;
      }
      switch (other.NasAlgorithmSpecCase) {
        case NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec:
          if (MultiTrialAlgorithmSpec == null) {
            MultiTrialAlgorithmSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec();
          }
          MultiTrialAlgorithmSpec.MergeFrom(other.MultiTrialAlgorithmSpec);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SearchSpaceSpec = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec subBuilder = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec();
            if (nasAlgorithmSpecCase_ == NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec) {
              subBuilder.MergeFrom(MultiTrialAlgorithmSpec);
            }
            input.ReadMessage(subBuilder);
            MultiTrialAlgorithmSpec = subBuilder;
            break;
          }
          case 26: {
            ResumeNasJobId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SearchSpaceSpec = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec subBuilder = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec();
            if (nasAlgorithmSpecCase_ == NasAlgorithmSpecOneofCase.MultiTrialAlgorithmSpec) {
              subBuilder.MergeFrom(MultiTrialAlgorithmSpec);
            }
            input.ReadMessage(subBuilder);
            MultiTrialAlgorithmSpec = subBuilder;
            break;
          }
          case 26: {
            ResumeNasJobId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NasJobSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The spec of multi-trial Neural Architecture Search (NAS).
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class MultiTrialAlgorithmSpec : pb::IMessage<MultiTrialAlgorithmSpec>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MultiTrialAlgorithmSpec> _parser = new pb::MessageParser<MultiTrialAlgorithmSpec>(() => new MultiTrialAlgorithmSpec());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MultiTrialAlgorithmSpec> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.AIPlatform.V1.NasJobSpec.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultiTrialAlgorithmSpec() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultiTrialAlgorithmSpec(MultiTrialAlgorithmSpec other) : this() {
          multiTrialAlgorithm_ = other.multiTrialAlgorithm_;
          metric_ = other.metric_ != null ? other.metric_.Clone() : null;
          searchTrialSpec_ = other.searchTrialSpec_ != null ? other.searchTrialSpec_.Clone() : null;
          trainTrialSpec_ = other.trainTrialSpec_ != null ? other.trainTrialSpec_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultiTrialAlgorithmSpec Clone() {
          return new MultiTrialAlgorithmSpec(this);
        }

        /// <summary>Field number for the "multi_trial_algorithm" field.</summary>
        public const int MultiTrialAlgorithmFieldNumber = 1;
        private global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm multiTrialAlgorithm_ = global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm.Unspecified;
        /// <summary>
        /// The multi-trial Neural Architecture Search (NAS) algorithm
        /// type. Defaults to `REINFORCEMENT_LEARNING`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm MultiTrialAlgorithm {
          get { return multiTrialAlgorithm_; }
          set {
            multiTrialAlgorithm_ = value;
          }
        }

        /// <summary>Field number for the "metric" field.</summary>
        public const int MetricFieldNumber = 2;
        private global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec metric_;
        /// <summary>
        /// Metric specs for the NAS job.
        /// Validation for this field is done at `multi_trial_algorithm_spec` field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec Metric {
          get { return metric_; }
          set {
            metric_ = value;
          }
        }

        /// <summary>Field number for the "search_trial_spec" field.</summary>
        public const int SearchTrialSpecFieldNumber = 3;
        private global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.SearchTrialSpec searchTrialSpec_;
        /// <summary>
        /// Required. Spec for search trials.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.SearchTrialSpec SearchTrialSpec {
          get { return searchTrialSpec_; }
          set {
            searchTrialSpec_ = value;
          }
        }

        /// <summary>Field number for the "train_trial_spec" field.</summary>
        public const int TrainTrialSpecFieldNumber = 4;
        private global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.TrainTrialSpec trainTrialSpec_;
        /// <summary>
        /// Spec for train trials. Top N [TrainTrialSpec.max_parallel_trial_count]
        /// search trials will be trained for every M
        /// [TrainTrialSpec.frequency] trials searched.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.TrainTrialSpec TrainTrialSpec {
          get { return trainTrialSpec_; }
          set {
            trainTrialSpec_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MultiTrialAlgorithmSpec);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MultiTrialAlgorithmSpec other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MultiTrialAlgorithm != other.MultiTrialAlgorithm) return false;
          if (!object.Equals(Metric, other.Metric)) return false;
          if (!object.Equals(SearchTrialSpec, other.SearchTrialSpec)) return false;
          if (!object.Equals(TrainTrialSpec, other.TrainTrialSpec)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (MultiTrialAlgorithm != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm.Unspecified) hash ^= MultiTrialAlgorithm.GetHashCode();
          if (metric_ != null) hash ^= Metric.GetHashCode();
          if (searchTrialSpec_ != null) hash ^= SearchTrialSpec.GetHashCode();
          if (trainTrialSpec_ != null) hash ^= TrainTrialSpec.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MultiTrialAlgorithm != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) MultiTrialAlgorithm);
          }
          if (metric_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Metric);
          }
          if (searchTrialSpec_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(SearchTrialSpec);
          }
          if (trainTrialSpec_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(TrainTrialSpec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MultiTrialAlgorithm != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) MultiTrialAlgorithm);
          }
          if (metric_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Metric);
          }
          if (searchTrialSpec_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(SearchTrialSpec);
          }
          if (trainTrialSpec_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(TrainTrialSpec);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (MultiTrialAlgorithm != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MultiTrialAlgorithm);
          }
          if (metric_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metric);
          }
          if (searchTrialSpec_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchTrialSpec);
          }
          if (trainTrialSpec_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainTrialSpec);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MultiTrialAlgorithmSpec other) {
          if (other == null) {
            return;
          }
          if (other.MultiTrialAlgorithm != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm.Unspecified) {
            MultiTrialAlgorithm = other.MultiTrialAlgorithm;
          }
          if (other.metric_ != null) {
            if (metric_ == null) {
              Metric = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec();
            }
            Metric.MergeFrom(other.Metric);
          }
          if (other.searchTrialSpec_ != null) {
            if (searchTrialSpec_ == null) {
              SearchTrialSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.SearchTrialSpec();
            }
            SearchTrialSpec.MergeFrom(other.SearchTrialSpec);
          }
          if (other.trainTrialSpec_ != null) {
            if (trainTrialSpec_ == null) {
              TrainTrialSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.TrainTrialSpec();
            }
            TrainTrialSpec.MergeFrom(other.TrainTrialSpec);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MultiTrialAlgorithm = (global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm) input.ReadEnum();
                break;
              }
              case 18: {
                if (metric_ == null) {
                  Metric = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec();
                }
                input.ReadMessage(Metric);
                break;
              }
              case 26: {
                if (searchTrialSpec_ == null) {
                  SearchTrialSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.SearchTrialSpec();
                }
                input.ReadMessage(SearchTrialSpec);
                break;
              }
              case 34: {
                if (trainTrialSpec_ == null) {
                  TrainTrialSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.TrainTrialSpec();
                }
                input.ReadMessage(TrainTrialSpec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MultiTrialAlgorithm = (global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MultiTrialAlgorithm) input.ReadEnum();
                break;
              }
              case 18: {
                if (metric_ == null) {
                  Metric = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec();
                }
                input.ReadMessage(Metric);
                break;
              }
              case 26: {
                if (searchTrialSpec_ == null) {
                  SearchTrialSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.SearchTrialSpec();
                }
                input.ReadMessage(SearchTrialSpec);
                break;
              }
              case 34: {
                if (trainTrialSpec_ == null) {
                  TrainTrialSpec = new global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.TrainTrialSpec();
                }
                input.ReadMessage(TrainTrialSpec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the MultiTrialAlgorithmSpec message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// The available types of multi-trial algorithms.
          /// </summary>
          public enum MultiTrialAlgorithm {
            /// <summary>
            /// Defaults to `REINFORCEMENT_LEARNING`.
            /// </summary>
            [pbr::OriginalName("MULTI_TRIAL_ALGORITHM_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The Reinforcement Learning Algorithm for Multi-trial Neural
            /// Architecture Search (NAS).
            /// </summary>
            [pbr::OriginalName("REINFORCEMENT_LEARNING")] ReinforcementLearning = 1,
            /// <summary>
            /// The Grid Search Algorithm for Multi-trial Neural
            /// Architecture Search (NAS).
            /// </summary>
            [pbr::OriginalName("GRID_SEARCH")] GridSearch = 2,
          }

          /// <summary>
          /// Represents a metric to optimize.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class MetricSpec : pb::IMessage<MetricSpec>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MetricSpec> _parser = new pb::MessageParser<MetricSpec>(() => new MetricSpec());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MetricSpec> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricSpec() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricSpec(MetricSpec other) : this() {
              metricId_ = other.metricId_;
              goal_ = other.goal_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricSpec Clone() {
              return new MetricSpec(this);
            }

            /// <summary>Field number for the "metric_id" field.</summary>
            public const int MetricIdFieldNumber = 1;
            private string metricId_ = "";
            /// <summary>
            /// Required. The ID of the metric. Must not contain whitespaces.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string MetricId {
              get { return metricId_; }
              set {
                metricId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "goal" field.</summary>
            public const int GoalFieldNumber = 2;
            private global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType goal_ = global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType.Unspecified;
            /// <summary>
            /// Required. The optimization goal of the metric.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType Goal {
              get { return goal_; }
              set {
                goal_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MetricSpec);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MetricSpec other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MetricId != other.MetricId) return false;
              if (Goal != other.Goal) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (MetricId.Length != 0) hash ^= MetricId.GetHashCode();
              if (Goal != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType.Unspecified) hash ^= Goal.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (MetricId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MetricId);
              }
              if (Goal != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType.Unspecified) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Goal);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (MetricId.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MetricId);
              }
              if (Goal != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType.Unspecified) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Goal);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (MetricId.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MetricId);
              }
              if (Goal != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType.Unspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Goal);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MetricSpec other) {
              if (other == null) {
                return;
              }
              if (other.MetricId.Length != 0) {
                MetricId = other.MetricId;
              }
              if (other.Goal != global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType.Unspecified) {
                Goal = other.Goal;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    MetricId = input.ReadString();
                    break;
                  }
                  case 16: {
                    Goal = (global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    MetricId = input.ReadString();
                    break;
                  }
                  case 16: {
                    Goal = (global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Types.MetricSpec.Types.GoalType) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the MetricSpec message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              /// <summary>
              /// The available types of optimization goals.
              /// </summary>
              public enum GoalType {
                /// <summary>
                /// Goal Type will default to maximize.
                /// </summary>
                [pbr::OriginalName("GOAL_TYPE_UNSPECIFIED")] Unspecified = 0,
                /// <summary>
                /// Maximize the goal metric.
                /// </summary>
                [pbr::OriginalName("MAXIMIZE")] Maximize = 1,
                /// <summary>
                /// Minimize the goal metric.
                /// </summary>
                [pbr::OriginalName("MINIMIZE")] Minimize = 2,
              }

            }
            #endregion

          }

          /// <summary>
          /// Represent spec for search trials.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class SearchTrialSpec : pb::IMessage<SearchTrialSpec>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<SearchTrialSpec> _parser = new pb::MessageParser<SearchTrialSpec>(() => new SearchTrialSpec());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<SearchTrialSpec> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SearchTrialSpec() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SearchTrialSpec(SearchTrialSpec other) : this() {
              searchTrialJobSpec_ = other.searchTrialJobSpec_ != null ? other.searchTrialJobSpec_.Clone() : null;
              maxTrialCount_ = other.maxTrialCount_;
              maxParallelTrialCount_ = other.maxParallelTrialCount_;
              maxFailedTrialCount_ = other.maxFailedTrialCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SearchTrialSpec Clone() {
              return new SearchTrialSpec(this);
            }

            /// <summary>Field number for the "search_trial_job_spec" field.</summary>
            public const int SearchTrialJobSpecFieldNumber = 1;
            private global::Google.Cloud.AIPlatform.V1.CustomJobSpec searchTrialJobSpec_;
            /// <summary>
            /// Required. The spec of a search trial job. The same spec applies to
            /// all search trials.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.AIPlatform.V1.CustomJobSpec SearchTrialJobSpec {
              get { return searchTrialJobSpec_; }
              set {
                searchTrialJobSpec_ = value;
              }
            }

            /// <summary>Field number for the "max_trial_count" field.</summary>
            public const int MaxTrialCountFieldNumber = 2;
            private int maxTrialCount_;
            /// <summary>
            /// Required. The maximum number of Neural Architecture Search (NAS) trials
            /// to run.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int MaxTrialCount {
              get { return maxTrialCount_; }
              set {
                maxTrialCount_ = value;
              }
            }

            /// <summary>Field number for the "max_parallel_trial_count" field.</summary>
            public const int MaxParallelTrialCountFieldNumber = 3;
            private int maxParallelTrialCount_;
            /// <summary>
            /// Required. The maximum number of trials to run in parallel.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int MaxParallelTrialCount {
              get { return maxParallelTrialCount_; }
              set {
                maxParallelTrialCount_ = value;
              }
            }

            /// <summary>Field number for the "max_failed_trial_count" field.</summary>
            public const int MaxFailedTrialCountFieldNumber = 4;
            private int maxFailedTrialCount_;
            /// <summary>
            /// The number of failed trials that need to be seen before failing
            /// the NasJob.
            ///
            /// If set to 0, Vertex AI decides how many trials must fail
            /// before the whole job fails.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int MaxFailedTrialCount {
              get { return maxFailedTrialCount_; }
              set {
                maxFailedTrialCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as SearchTrialSpec);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(SearchTrialSpec other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(SearchTrialJobSpec, other.SearchTrialJobSpec)) return false;
              if (MaxTrialCount != other.MaxTrialCount) return false;
              if (MaxParallelTrialCount != other.MaxParallelTrialCount) return false;
              if (MaxFailedTrialCount != other.MaxFailedTrialCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (searchTrialJobSpec_ != null) hash ^= SearchTrialJobSpec.GetHashCode();
              if (MaxTrialCount != 0) hash ^= MaxTrialCount.GetHashCode();
              if (MaxParallelTrialCount != 0) hash ^= MaxParallelTrialCount.GetHashCode();
              if (MaxFailedTrialCount != 0) hash ^= MaxFailedTrialCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (searchTrialJobSpec_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(SearchTrialJobSpec);
              }
              if (MaxTrialCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MaxTrialCount);
              }
              if (MaxParallelTrialCount != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(MaxParallelTrialCount);
              }
              if (MaxFailedTrialCount != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(MaxFailedTrialCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (searchTrialJobSpec_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(SearchTrialJobSpec);
              }
              if (MaxTrialCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MaxTrialCount);
              }
              if (MaxParallelTrialCount != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(MaxParallelTrialCount);
              }
              if (MaxFailedTrialCount != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(MaxFailedTrialCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (searchTrialJobSpec_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchTrialJobSpec);
              }
              if (MaxTrialCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxTrialCount);
              }
              if (MaxParallelTrialCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxParallelTrialCount);
              }
              if (MaxFailedTrialCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxFailedTrialCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(SearchTrialSpec other) {
              if (other == null) {
                return;
              }
              if (other.searchTrialJobSpec_ != null) {
                if (searchTrialJobSpec_ == null) {
                  SearchTrialJobSpec = new global::Google.Cloud.AIPlatform.V1.CustomJobSpec();
                }
                SearchTrialJobSpec.MergeFrom(other.SearchTrialJobSpec);
              }
              if (other.MaxTrialCount != 0) {
                MaxTrialCount = other.MaxTrialCount;
              }
              if (other.MaxParallelTrialCount != 0) {
                MaxParallelTrialCount = other.MaxParallelTrialCount;
              }
              if (other.MaxFailedTrialCount != 0) {
                MaxFailedTrialCount = other.MaxFailedTrialCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (searchTrialJobSpec_ == null) {
                      SearchTrialJobSpec = new global::Google.Cloud.AIPlatform.V1.CustomJobSpec();
                    }
                    input.ReadMessage(SearchTrialJobSpec);
                    break;
                  }
                  case 16: {
                    MaxTrialCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    MaxParallelTrialCount = input.ReadInt32();
                    break;
                  }
                  case 32: {
                    MaxFailedTrialCount = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (searchTrialJobSpec_ == null) {
                      SearchTrialJobSpec = new global::Google.Cloud.AIPlatform.V1.CustomJobSpec();
                    }
                    input.ReadMessage(SearchTrialJobSpec);
                    break;
                  }
                  case 16: {
                    MaxTrialCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    MaxParallelTrialCount = input.ReadInt32();
                    break;
                  }
                  case 32: {
                    MaxFailedTrialCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Represent spec for train trials.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class TrainTrialSpec : pb::IMessage<TrainTrialSpec>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<TrainTrialSpec> _parser = new pb::MessageParser<TrainTrialSpec>(() => new TrainTrialSpec());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<TrainTrialSpec> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.AIPlatform.V1.NasJobSpec.Types.MultiTrialAlgorithmSpec.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public TrainTrialSpec() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public TrainTrialSpec(TrainTrialSpec other) : this() {
              trainTrialJobSpec_ = other.trainTrialJobSpec_ != null ? other.trainTrialJobSpec_.Clone() : null;
              maxParallelTrialCount_ = other.maxParallelTrialCount_;
              frequency_ = other.frequency_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public TrainTrialSpec Clone() {
              return new TrainTrialSpec(this);
            }

            /// <summary>Field number for the "train_trial_job_spec" field.</summary>
            public const int TrainTrialJobSpecFieldNumber = 1;
            private global::Google.Cloud.AIPlatform.V1.CustomJobSpec trainTrialJobSpec_;
            /// <summary>
            /// Required. The spec of a train trial job. The same spec applies to
            /// all train trials.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.AIPlatform.V1.CustomJobSpec TrainTrialJobSpec {
              get { return trainTrialJobSpec_; }
              set {
                trainTrialJobSpec_ = value;
              }
            }

            /// <summary>Field number for the "max_parallel_trial_count" field.</summary>
            public const int MaxParallelTrialCountFieldNumber = 2;
            private int maxParallelTrialCount_;
            /// <summary>
            /// Required. The maximum number of trials to run in parallel.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int MaxParallelTrialCount {
              get { return maxParallelTrialCount_; }
              set {
                maxParallelTrialCount_ = value;
              }
            }

            /// <summary>Field number for the "frequency" field.</summary>
            public const int FrequencyFieldNumber = 3;
            private int frequency_;
            /// <summary>
            /// Required. Frequency of search trials to start train stage. Top N
            /// [TrainTrialSpec.max_parallel_trial_count]
            /// search trials will be trained for every M
            /// [TrainTrialSpec.frequency] trials searched.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int Frequency {
              get { return frequency_; }
              set {
                frequency_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as TrainTrialSpec);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(TrainTrialSpec other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(TrainTrialJobSpec, other.TrainTrialJobSpec)) return false;
              if (MaxParallelTrialCount != other.MaxParallelTrialCount) return false;
              if (Frequency != other.Frequency) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (trainTrialJobSpec_ != null) hash ^= TrainTrialJobSpec.GetHashCode();
              if (MaxParallelTrialCount != 0) hash ^= MaxParallelTrialCount.GetHashCode();
              if (Frequency != 0) hash ^= Frequency.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (trainTrialJobSpec_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(TrainTrialJobSpec);
              }
              if (MaxParallelTrialCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MaxParallelTrialCount);
              }
              if (Frequency != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Frequency);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (trainTrialJobSpec_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(TrainTrialJobSpec);
              }
              if (MaxParallelTrialCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MaxParallelTrialCount);
              }
              if (Frequency != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(Frequency);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (trainTrialJobSpec_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainTrialJobSpec);
              }
              if (MaxParallelTrialCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxParallelTrialCount);
              }
              if (Frequency != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Frequency);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(TrainTrialSpec other) {
              if (other == null) {
                return;
              }
              if (other.trainTrialJobSpec_ != null) {
                if (trainTrialJobSpec_ == null) {
                  TrainTrialJobSpec = new global::Google.Cloud.AIPlatform.V1.CustomJobSpec();
                }
                TrainTrialJobSpec.MergeFrom(other.TrainTrialJobSpec);
              }
              if (other.MaxParallelTrialCount != 0) {
                MaxParallelTrialCount = other.MaxParallelTrialCount;
              }
              if (other.Frequency != 0) {
                Frequency = other.Frequency;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (trainTrialJobSpec_ == null) {
                      TrainTrialJobSpec = new global::Google.Cloud.AIPlatform.V1.CustomJobSpec();
                    }
                    input.ReadMessage(TrainTrialJobSpec);
                    break;
                  }
                  case 16: {
                    MaxParallelTrialCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Frequency = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (trainTrialJobSpec_ == null) {
                      TrainTrialJobSpec = new global::Google.Cloud.AIPlatform.V1.CustomJobSpec();
                    }
                    input.ReadMessage(TrainTrialJobSpec);
                    break;
                  }
                  case 16: {
                    MaxParallelTrialCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    Frequency = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Represents a uCAIP NasJob output.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NasJobOutput : pb::IMessage<NasJobOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NasJobOutput> _parser = new pb::MessageParser<NasJobOutput>(() => new NasJobOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NasJobOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1.NasJobReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJobOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJobOutput(NasJobOutput other) : this() {
      switch (other.OutputCase) {
        case OutputOneofCase.MultiTrialJobOutput:
          MultiTrialJobOutput = other.MultiTrialJobOutput.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasJobOutput Clone() {
      return new NasJobOutput(this);
    }

    /// <summary>Field number for the "multi_trial_job_output" field.</summary>
    public const int MultiTrialJobOutputFieldNumber = 1;
    /// <summary>
    /// Output only. The output of this multi-trial Neural Architecture Search
    /// (NAS) job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput MultiTrialJobOutput {
      get { return outputCase_ == OutputOneofCase.MultiTrialJobOutput ? (global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput) output_ : null; }
      set {
        output_ = value;
        outputCase_ = value == null ? OutputOneofCase.None : OutputOneofCase.MultiTrialJobOutput;
      }
    }

    private object output_;
    /// <summary>Enum of possible cases for the "output" oneof.</summary>
    public enum OutputOneofCase {
      None = 0,
      MultiTrialJobOutput = 1,
    }
    private OutputOneofCase outputCase_ = OutputOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OutputOneofCase OutputCase {
      get { return outputCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOutput() {
      outputCase_ = OutputOneofCase.None;
      output_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NasJobOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NasJobOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MultiTrialJobOutput, other.MultiTrialJobOutput)) return false;
      if (OutputCase != other.OutputCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (outputCase_ == OutputOneofCase.MultiTrialJobOutput) hash ^= MultiTrialJobOutput.GetHashCode();
      hash ^= (int) outputCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (outputCase_ == OutputOneofCase.MultiTrialJobOutput) {
        output.WriteRawTag(10);
        output.WriteMessage(MultiTrialJobOutput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (outputCase_ == OutputOneofCase.MultiTrialJobOutput) {
        output.WriteRawTag(10);
        output.WriteMessage(MultiTrialJobOutput);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (outputCase_ == OutputOneofCase.MultiTrialJobOutput) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiTrialJobOutput);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NasJobOutput other) {
      if (other == null) {
        return;
      }
      switch (other.OutputCase) {
        case OutputOneofCase.MultiTrialJobOutput:
          if (MultiTrialJobOutput == null) {
            MultiTrialJobOutput = new global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput();
          }
          MultiTrialJobOutput.MergeFrom(other.MultiTrialJobOutput);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput subBuilder = new global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput();
            if (outputCase_ == OutputOneofCase.MultiTrialJobOutput) {
              subBuilder.MergeFrom(MultiTrialJobOutput);
            }
            input.ReadMessage(subBuilder);
            MultiTrialJobOutput = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput subBuilder = new global::Google.Cloud.AIPlatform.V1.NasJobOutput.Types.MultiTrialJobOutput();
            if (outputCase_ == OutputOneofCase.MultiTrialJobOutput) {
              subBuilder.MergeFrom(MultiTrialJobOutput);
            }
            input.ReadMessage(subBuilder);
            MultiTrialJobOutput = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NasJobOutput message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The output of a multi-trial Neural Architecture Search (NAS) jobs.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class MultiTrialJobOutput : pb::IMessage<MultiTrialJobOutput>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MultiTrialJobOutput> _parser = new pb::MessageParser<MultiTrialJobOutput>(() => new MultiTrialJobOutput());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MultiTrialJobOutput> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.AIPlatform.V1.NasJobOutput.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultiTrialJobOutput() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultiTrialJobOutput(MultiTrialJobOutput other) : this() {
          searchTrials_ = other.searchTrials_.Clone();
          trainTrials_ = other.trainTrials_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MultiTrialJobOutput Clone() {
          return new MultiTrialJobOutput(this);
        }

        /// <summary>Field number for the "search_trials" field.</summary>
        public const int SearchTrialsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.AIPlatform.V1.NasTrial> _repeated_searchTrials_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.AIPlatform.V1.NasTrial.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.AIPlatform.V1.NasTrial> searchTrials_ = new pbc::RepeatedField<global::Google.Cloud.AIPlatform.V1.NasTrial>();
        /// <summary>
        /// Output only. List of NasTrials that were started as part of search stage.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.AIPlatform.V1.NasTrial> SearchTrials {
          get { return searchTrials_; }
        }

        /// <summary>Field number for the "train_trials" field.</summary>
        public const int TrainTrialsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Cloud.AIPlatform.V1.NasTrial> _repeated_trainTrials_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Cloud.AIPlatform.V1.NasTrial.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.AIPlatform.V1.NasTrial> trainTrials_ = new pbc::RepeatedField<global::Google.Cloud.AIPlatform.V1.NasTrial>();
        /// <summary>
        /// Output only. List of NasTrials that were started as part of train stage.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.AIPlatform.V1.NasTrial> TrainTrials {
          get { return trainTrials_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MultiTrialJobOutput);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MultiTrialJobOutput other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!searchTrials_.Equals(other.searchTrials_)) return false;
          if(!trainTrials_.Equals(other.trainTrials_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= searchTrials_.GetHashCode();
          hash ^= trainTrials_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          searchTrials_.WriteTo(output, _repeated_searchTrials_codec);
          trainTrials_.WriteTo(output, _repeated_trainTrials_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          searchTrials_.WriteTo(ref output, _repeated_searchTrials_codec);
          trainTrials_.WriteTo(ref output, _repeated_trainTrials_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += searchTrials_.CalculateSize(_repeated_searchTrials_codec);
          size += trainTrials_.CalculateSize(_repeated_trainTrials_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MultiTrialJobOutput other) {
          if (other == null) {
            return;
          }
          searchTrials_.Add(other.searchTrials_);
          trainTrials_.Add(other.trainTrials_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                searchTrials_.AddEntriesFrom(input, _repeated_searchTrials_codec);
                break;
              }
              case 18: {
                trainTrials_.AddEntriesFrom(input, _repeated_trainTrials_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                searchTrials_.AddEntriesFrom(ref input, _repeated_searchTrials_codec);
                break;
              }
              case 18: {
                trainTrials_.AddEntriesFrom(ref input, _repeated_trainTrials_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Represents a uCAIP NasJob trial.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NasTrial : pb::IMessage<NasTrial>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NasTrial> _parser = new pb::MessageParser<NasTrial>(() => new NasTrial());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NasTrial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1.NasJobReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasTrial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasTrial(NasTrial other) : this() {
      id_ = other.id_;
      state_ = other.state_;
      finalMeasurement_ = other.finalMeasurement_ != null ? other.finalMeasurement_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NasTrial Clone() {
      return new NasTrial(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Output only. The identifier of the NasTrial assigned by the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State state_ = global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State.Unspecified;
    /// <summary>
    /// Output only. The detailed state of the NasTrial.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "final_measurement" field.</summary>
    public const int FinalMeasurementFieldNumber = 3;
    private global::Google.Cloud.AIPlatform.V1.Measurement finalMeasurement_;
    /// <summary>
    /// Output only. The final measurement containing the objective value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.Measurement FinalMeasurement {
      get { return finalMeasurement_; }
      set {
        finalMeasurement_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Output only. Time when the NasTrial was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. Time when the NasTrial's status changed to `SUCCEEDED` or
    /// `INFEASIBLE`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NasTrial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NasTrial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (State != other.State) return false;
      if (!object.Equals(FinalMeasurement, other.FinalMeasurement)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (State != global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (finalMeasurement_ != null) hash ^= FinalMeasurement.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (finalMeasurement_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FinalMeasurement);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (finalMeasurement_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FinalMeasurement);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (finalMeasurement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinalMeasurement);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NasTrial other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.State != global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.finalMeasurement_ != null) {
        if (finalMeasurement_ == null) {
          FinalMeasurement = new global::Google.Cloud.AIPlatform.V1.Measurement();
        }
        FinalMeasurement.MergeFrom(other.FinalMeasurement);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (finalMeasurement_ == null) {
              FinalMeasurement = new global::Google.Cloud.AIPlatform.V1.Measurement();
            }
            input.ReadMessage(FinalMeasurement);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.AIPlatform.V1.NasTrial.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (finalMeasurement_ == null) {
              FinalMeasurement = new global::Google.Cloud.AIPlatform.V1.Measurement();
            }
            input.ReadMessage(FinalMeasurement);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the NasTrial message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Describes a NasTrial state.
      /// </summary>
      public enum State {
        /// <summary>
        /// The NasTrial state is unspecified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Indicates that a specific NasTrial has been requested, but it has not yet
        /// been suggested by the service.
        /// </summary>
        [pbr::OriginalName("REQUESTED")] Requested = 1,
        /// <summary>
        /// Indicates that the NasTrial has been suggested.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 2,
        /// <summary>
        /// Indicates that the NasTrial should stop according to the service.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 3,
        /// <summary>
        /// Indicates that the NasTrial is completed successfully.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 4,
        /// <summary>
        /// Indicates that the NasTrial should not be attempted again.
        /// The service will set a NasTrial to INFEASIBLE when it's done but missing
        /// the final_measurement.
        /// </summary>
        [pbr::OriginalName("INFEASIBLE")] Infeasible = 5,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
