// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1/schedule.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.AIPlatform.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/aiplatform/v1/schedule.proto</summary>
  public static partial class ScheduleReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/aiplatform/v1/schedule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ScheduleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MS9zY2hlZHVsZS5wcm90bxIa",
            "Z29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjEaH2dvb2dsZS9hcGkvZmllbGRf",
            "YmVoYXZpb3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aMWdv",
            "b2dsZS9jbG91ZC9haXBsYXRmb3JtL3YxL25vdGVib29rX3NlcnZpY2UucHJv",
            "dG8aMWdvb2dsZS9jbG91ZC9haXBsYXRmb3JtL3YxL3BpcGVsaW5lX3NlcnZp",
            "Y2UucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i9QkK",
            "CFNjaGVkdWxlEg4KBGNyb24YCiABKAlIABJbChtjcmVhdGVfcGlwZWxpbmVf",
            "am9iX3JlcXVlc3QYDiABKAsyNC5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52",
            "MS5DcmVhdGVQaXBlbGluZUpvYlJlcXVlc3RIARJuCiVjcmVhdGVfbm90ZWJv",
            "b2tfZXhlY3V0aW9uX2pvYl9yZXF1ZXN0GBQgASgLMj0uZ29vZ2xlLmNsb3Vk",
            "LmFpcGxhdGZvcm0udjEuQ3JlYXRlTm90ZWJvb2tFeGVjdXRpb25Kb2JSZXF1",
            "ZXN0SAESEQoEbmFtZRgBIAEoCUID4EEFEhkKDGRpc3BsYXlfbmFtZRgCIAEo",
            "CUID4EECEjMKCnN0YXJ0X3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wQgPgQQESMQoIZW5kX3RpbWUYBCABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wQgPgQQESGgoNbWF4X3J1bl9jb3VudBgQIAEoA0ID",
            "4EEBEh4KEXN0YXJ0ZWRfcnVuX2NvdW50GBEgASgDQgPgQQMSPgoFc3RhdGUY",
            "BSABKA4yKi5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MS5TY2hlZHVsZS5T",
            "dGF0ZUID4EEDEjQKC2NyZWF0ZV90aW1lGAYgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGBMgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjYKDW5leHRfcnVuX3RpbWUY",
            "ByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSOAoPbGFz",
            "dF9wYXVzZV90aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cEID4EEDEjkKEGxhc3RfcmVzdW1lX3RpbWUYCSABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wQgPgQQMSJQoYbWF4X2NvbmN1cnJlbnRfcnVuX2Nv",
            "dW50GAsgASgDQgPgQQISGwoOYWxsb3dfcXVldWVpbmcYDCABKAhCA+BBARIV",
            "CghjYXRjaF91cBgNIAEoCEID4EEDEloKG2xhc3Rfc2NoZWR1bGVkX3J1bl9y",
            "ZXNwb25zZRgSIAEoCzIwLmdvb2dsZS5jbG91ZC5haXBsYXRmb3JtLnYxLlNj",
            "aGVkdWxlLlJ1blJlc3BvbnNlQgPgQQMaWwoLUnVuUmVzcG9uc2USNgoSc2No",
            "ZWR1bGVkX3J1bl90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIUCgxydW5fcmVzcG9uc2UYAiABKAkiRQoFU3RhdGUSFQoRU1RBVEVf",
            "VU5TUEVDSUZJRUQQABIKCgZBQ1RJVkUQARIKCgZQQVVTRUQQAhINCglDT01Q",
            "TEVURUQQAzpl6kFiCiJhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL1NjaGVk",
            "dWxlEjxwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0v",
            "c2NoZWR1bGVzL3tzY2hlZHVsZX1CFAoSdGltZV9zcGVjaWZpY2F0aW9uQgkK",
            "B3JlcXVlc3RCywEKHmNvbS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MUIN",
            "U2NoZWR1bGVQcm90b1ABWj5jbG91ZC5nb29nbGUuY29tL2dvL2FpcGxhdGZv",
            "cm0vYXBpdjEvYWlwbGF0Zm9ybXBiO2FpcGxhdGZvcm1wYqoCGkdvb2dsZS5D",
            "bG91ZC5BSVBsYXRmb3JtLlYxygIaR29vZ2xlXENsb3VkXEFJUGxhdGZvcm1c",
            "VjHqAh1Hb29nbGU6OkNsb3VkOjpBSVBsYXRmb3JtOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.AIPlatform.V1.NotebookServiceReflection.Descriptor, global::Google.Cloud.AIPlatform.V1.PipelineServiceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.Schedule), global::Google.Cloud.AIPlatform.V1.Schedule.Parser, new[]{ "Cron", "CreatePipelineJobRequest", "CreateNotebookExecutionJobRequest", "Name", "DisplayName", "StartTime", "EndTime", "MaxRunCount", "StartedRunCount", "State", "CreateTime", "UpdateTime", "NextRunTime", "LastPauseTime", "LastResumeTime", "MaxConcurrentRunCount", "AllowQueueing", "CatchUp", "LastScheduledRunResponse" }, new[]{ "TimeSpecification", "Request" }, new[]{ typeof(global::Google.Cloud.AIPlatform.V1.Schedule.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1.Schedule.Types.RunResponse), global::Google.Cloud.AIPlatform.V1.Schedule.Types.RunResponse.Parser, new[]{ "ScheduledRunTime", "RunResponse_" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An instance of a Schedule periodically schedules runs to make API calls based
  /// on user specified time specification and API request type.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1.ScheduleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule(Schedule other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      maxRunCount_ = other.maxRunCount_;
      startedRunCount_ = other.startedRunCount_;
      state_ = other.state_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      nextRunTime_ = other.nextRunTime_ != null ? other.nextRunTime_.Clone() : null;
      lastPauseTime_ = other.lastPauseTime_ != null ? other.lastPauseTime_.Clone() : null;
      lastResumeTime_ = other.lastResumeTime_ != null ? other.lastResumeTime_.Clone() : null;
      maxConcurrentRunCount_ = other.maxConcurrentRunCount_;
      allowQueueing_ = other.allowQueueing_;
      catchUp_ = other.catchUp_;
      lastScheduledRunResponse_ = other.lastScheduledRunResponse_ != null ? other.lastScheduledRunResponse_.Clone() : null;
      switch (other.TimeSpecificationCase) {
        case TimeSpecificationOneofCase.Cron:
          Cron = other.Cron;
          break;
      }

      switch (other.RequestCase) {
        case RequestOneofCase.CreatePipelineJobRequest:
          CreatePipelineJobRequest = other.CreatePipelineJobRequest.Clone();
          break;
        case RequestOneofCase.CreateNotebookExecutionJobRequest:
          CreateNotebookExecutionJobRequest = other.CreateNotebookExecutionJobRequest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "cron" field.</summary>
    public const int CronFieldNumber = 10;
    /// <summary>
    /// Cron schedule (https://en.wikipedia.org/wiki/Cron) to launch scheduled
    /// runs. To explicitly set a timezone to the cron tab, apply a prefix in the
    /// cron tab: "CRON_TZ=${IANA_TIME_ZONE}" or "TZ=${IANA_TIME_ZONE}".
    /// The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone
    /// database. For example, "CRON_TZ=America/New_York 1 * * * *", or
    /// "TZ=America/New_York 1 * * * *".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Cron {
      get { return HasCron ? (string) timeSpecification_ : ""; }
      set {
        timeSpecification_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        timeSpecificationCase_ = TimeSpecificationOneofCase.Cron;
      }
    }
    /// <summary>Gets whether the "cron" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCron {
      get { return timeSpecificationCase_ == TimeSpecificationOneofCase.Cron; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "cron" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCron() {
      if (HasCron) {
        ClearTimeSpecification();
      }
    }

    /// <summary>Field number for the "create_pipeline_job_request" field.</summary>
    public const int CreatePipelineJobRequestFieldNumber = 14;
    /// <summary>
    /// Request for
    /// [PipelineService.CreatePipelineJob][google.cloud.aiplatform.v1.PipelineService.CreatePipelineJob].
    /// CreatePipelineJobRequest.parent field is required (format:
    /// projects/{project}/locations/{location}).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.CreatePipelineJobRequest CreatePipelineJobRequest {
      get { return requestCase_ == RequestOneofCase.CreatePipelineJobRequest ? (global::Google.Cloud.AIPlatform.V1.CreatePipelineJobRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.CreatePipelineJobRequest;
      }
    }

    /// <summary>Field number for the "create_notebook_execution_job_request" field.</summary>
    public const int CreateNotebookExecutionJobRequestFieldNumber = 20;
    /// <summary>
    /// Request for
    /// [NotebookService.CreateNotebookExecutionJob][google.cloud.aiplatform.v1.NotebookService.CreateNotebookExecutionJob].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.CreateNotebookExecutionJobRequest CreateNotebookExecutionJobRequest {
      get { return requestCase_ == RequestOneofCase.CreateNotebookExecutionJobRequest ? (global::Google.Cloud.AIPlatform.V1.CreateNotebookExecutionJobRequest) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.CreateNotebookExecutionJobRequest;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Immutable. The resource name of the Schedule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Required. User provided name of the Schedule.
    /// The name can be up to 128 characters long and can consist of any UTF-8
    /// characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Optional. Timestamp after which the first run can be scheduled.
    /// Default to Schedule create time if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Optional. Timestamp after which no new runs can be scheduled.
    /// If specified, The schedule will be completed when either
    /// end_time is reached or when scheduled_run_count >= max_run_count.
    /// If not specified, new runs will keep getting scheduled until this Schedule
    /// is paused or deleted. Already scheduled runs will be allowed to complete.
    /// Unset if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "max_run_count" field.</summary>
    public const int MaxRunCountFieldNumber = 16;
    private long maxRunCount_;
    /// <summary>
    /// Optional. Maximum run count of the schedule.
    /// If specified, The schedule will be completed when either
    /// started_run_count >= max_run_count or when end_time is reached.
    /// If not specified, new runs will keep getting scheduled until this Schedule
    /// is paused or deleted. Already scheduled runs will be allowed to complete.
    /// Unset if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxRunCount {
      get { return maxRunCount_; }
      set {
        maxRunCount_ = value;
      }
    }

    /// <summary>Field number for the "started_run_count" field.</summary>
    public const int StartedRunCountFieldNumber = 17;
    private long startedRunCount_;
    /// <summary>
    /// Output only. The number of runs started by this schedule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartedRunCount {
      get { return startedRunCount_; }
      set {
        startedRunCount_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::Google.Cloud.AIPlatform.V1.Schedule.Types.State state_ = global::Google.Cloud.AIPlatform.V1.Schedule.Types.State.Unspecified;
    /// <summary>
    /// Output only. The state of this Schedule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.Schedule.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Timestamp when this Schedule was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 19;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. Timestamp when this Schedule was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "next_run_time" field.</summary>
    public const int NextRunTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp nextRunTime_;
    /// <summary>
    /// Output only. Timestamp when this Schedule should schedule the next run.
    /// Having a next_run_time in the past means the runs are being started
    /// behind schedule.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NextRunTime {
      get { return nextRunTime_; }
      set {
        nextRunTime_ = value;
      }
    }

    /// <summary>Field number for the "last_pause_time" field.</summary>
    public const int LastPauseTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastPauseTime_;
    /// <summary>
    /// Output only. Timestamp when this Schedule was last paused.
    /// Unset if never paused.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastPauseTime {
      get { return lastPauseTime_; }
      set {
        lastPauseTime_ = value;
      }
    }

    /// <summary>Field number for the "last_resume_time" field.</summary>
    public const int LastResumeTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastResumeTime_;
    /// <summary>
    /// Output only. Timestamp when this Schedule was last resumed.
    /// Unset if never resumed from pause.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastResumeTime {
      get { return lastResumeTime_; }
      set {
        lastResumeTime_ = value;
      }
    }

    /// <summary>Field number for the "max_concurrent_run_count" field.</summary>
    public const int MaxConcurrentRunCountFieldNumber = 11;
    private long maxConcurrentRunCount_;
    /// <summary>
    /// Required. Maximum number of runs that can be started concurrently for this
    /// Schedule. This is the limit for starting the scheduled requests and not the
    /// execution of the operations/jobs created by the requests (if applicable).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxConcurrentRunCount {
      get { return maxConcurrentRunCount_; }
      set {
        maxConcurrentRunCount_ = value;
      }
    }

    /// <summary>Field number for the "allow_queueing" field.</summary>
    public const int AllowQueueingFieldNumber = 12;
    private bool allowQueueing_;
    /// <summary>
    /// Optional. Whether new scheduled runs can be queued when max_concurrent_runs
    /// limit is reached. If set to true, new runs will be queued instead of
    /// skipped. Default to false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowQueueing {
      get { return allowQueueing_; }
      set {
        allowQueueing_ = value;
      }
    }

    /// <summary>Field number for the "catch_up" field.</summary>
    public const int CatchUpFieldNumber = 13;
    private bool catchUp_;
    /// <summary>
    /// Output only. Whether to backfill missed runs when the schedule is resumed
    /// from PAUSED state. If set to true, all missed runs will be scheduled. New
    /// runs will be scheduled after the backfill is complete. Default to false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CatchUp {
      get { return catchUp_; }
      set {
        catchUp_ = value;
      }
    }

    /// <summary>Field number for the "last_scheduled_run_response" field.</summary>
    public const int LastScheduledRunResponseFieldNumber = 18;
    private global::Google.Cloud.AIPlatform.V1.Schedule.Types.RunResponse lastScheduledRunResponse_;
    /// <summary>
    /// Output only. Response of the last scheduled run.
    /// This is the response for starting the scheduled requests and not the
    /// execution of the operations/jobs created by the requests (if applicable).
    /// Unset if no run has been scheduled yet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1.Schedule.Types.RunResponse LastScheduledRunResponse {
      get { return lastScheduledRunResponse_; }
      set {
        lastScheduledRunResponse_ = value;
      }
    }

    private object timeSpecification_;
    /// <summary>Enum of possible cases for the "time_specification" oneof.</summary>
    public enum TimeSpecificationOneofCase {
      None = 0,
      Cron = 10,
    }
    private TimeSpecificationOneofCase timeSpecificationCase_ = TimeSpecificationOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimeSpecificationOneofCase TimeSpecificationCase {
      get { return timeSpecificationCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeSpecification() {
      timeSpecificationCase_ = TimeSpecificationOneofCase.None;
      timeSpecification_ = null;
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      CreatePipelineJobRequest = 14,
      CreateNotebookExecutionJobRequest = 20,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cron != other.Cron) return false;
      if (!object.Equals(CreatePipelineJobRequest, other.CreatePipelineJobRequest)) return false;
      if (!object.Equals(CreateNotebookExecutionJobRequest, other.CreateNotebookExecutionJobRequest)) return false;
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (MaxRunCount != other.MaxRunCount) return false;
      if (StartedRunCount != other.StartedRunCount) return false;
      if (State != other.State) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(NextRunTime, other.NextRunTime)) return false;
      if (!object.Equals(LastPauseTime, other.LastPauseTime)) return false;
      if (!object.Equals(LastResumeTime, other.LastResumeTime)) return false;
      if (MaxConcurrentRunCount != other.MaxConcurrentRunCount) return false;
      if (AllowQueueing != other.AllowQueueing) return false;
      if (CatchUp != other.CatchUp) return false;
      if (!object.Equals(LastScheduledRunResponse, other.LastScheduledRunResponse)) return false;
      if (TimeSpecificationCase != other.TimeSpecificationCase) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCron) hash ^= Cron.GetHashCode();
      if (requestCase_ == RequestOneofCase.CreatePipelineJobRequest) hash ^= CreatePipelineJobRequest.GetHashCode();
      if (requestCase_ == RequestOneofCase.CreateNotebookExecutionJobRequest) hash ^= CreateNotebookExecutionJobRequest.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (MaxRunCount != 0L) hash ^= MaxRunCount.GetHashCode();
      if (StartedRunCount != 0L) hash ^= StartedRunCount.GetHashCode();
      if (State != global::Google.Cloud.AIPlatform.V1.Schedule.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (nextRunTime_ != null) hash ^= NextRunTime.GetHashCode();
      if (lastPauseTime_ != null) hash ^= LastPauseTime.GetHashCode();
      if (lastResumeTime_ != null) hash ^= LastResumeTime.GetHashCode();
      if (MaxConcurrentRunCount != 0L) hash ^= MaxConcurrentRunCount.GetHashCode();
      if (AllowQueueing != false) hash ^= AllowQueueing.GetHashCode();
      if (CatchUp != false) hash ^= CatchUp.GetHashCode();
      if (lastScheduledRunResponse_ != null) hash ^= LastScheduledRunResponse.GetHashCode();
      hash ^= (int) timeSpecificationCase_;
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (startTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndTime);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.Schedule.Types.State.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (nextRunTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NextRunTime);
      }
      if (lastPauseTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LastPauseTime);
      }
      if (lastResumeTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LastResumeTime);
      }
      if (HasCron) {
        output.WriteRawTag(82);
        output.WriteString(Cron);
      }
      if (MaxConcurrentRunCount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MaxConcurrentRunCount);
      }
      if (AllowQueueing != false) {
        output.WriteRawTag(96);
        output.WriteBool(AllowQueueing);
      }
      if (CatchUp != false) {
        output.WriteRawTag(104);
        output.WriteBool(CatchUp);
      }
      if (requestCase_ == RequestOneofCase.CreatePipelineJobRequest) {
        output.WriteRawTag(114);
        output.WriteMessage(CreatePipelineJobRequest);
      }
      if (MaxRunCount != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(MaxRunCount);
      }
      if (StartedRunCount != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(StartedRunCount);
      }
      if (lastScheduledRunResponse_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LastScheduledRunResponse);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(UpdateTime);
      }
      if (requestCase_ == RequestOneofCase.CreateNotebookExecutionJobRequest) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CreateNotebookExecutionJobRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (startTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndTime);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.Schedule.Types.State.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateTime);
      }
      if (nextRunTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NextRunTime);
      }
      if (lastPauseTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LastPauseTime);
      }
      if (lastResumeTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LastResumeTime);
      }
      if (HasCron) {
        output.WriteRawTag(82);
        output.WriteString(Cron);
      }
      if (MaxConcurrentRunCount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(MaxConcurrentRunCount);
      }
      if (AllowQueueing != false) {
        output.WriteRawTag(96);
        output.WriteBool(AllowQueueing);
      }
      if (CatchUp != false) {
        output.WriteRawTag(104);
        output.WriteBool(CatchUp);
      }
      if (requestCase_ == RequestOneofCase.CreatePipelineJobRequest) {
        output.WriteRawTag(114);
        output.WriteMessage(CreatePipelineJobRequest);
      }
      if (MaxRunCount != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(MaxRunCount);
      }
      if (StartedRunCount != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(StartedRunCount);
      }
      if (lastScheduledRunResponse_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LastScheduledRunResponse);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(UpdateTime);
      }
      if (requestCase_ == RequestOneofCase.CreateNotebookExecutionJobRequest) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CreateNotebookExecutionJobRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCron) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cron);
      }
      if (requestCase_ == RequestOneofCase.CreatePipelineJobRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatePipelineJobRequest);
      }
      if (requestCase_ == RequestOneofCase.CreateNotebookExecutionJobRequest) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateNotebookExecutionJobRequest);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (MaxRunCount != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MaxRunCount);
      }
      if (StartedRunCount != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StartedRunCount);
      }
      if (State != global::Google.Cloud.AIPlatform.V1.Schedule.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (nextRunTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextRunTime);
      }
      if (lastPauseTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastPauseTime);
      }
      if (lastResumeTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastResumeTime);
      }
      if (MaxConcurrentRunCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxConcurrentRunCount);
      }
      if (AllowQueueing != false) {
        size += 1 + 1;
      }
      if (CatchUp != false) {
        size += 1 + 1;
      }
      if (lastScheduledRunResponse_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastScheduledRunResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.MaxRunCount != 0L) {
        MaxRunCount = other.MaxRunCount;
      }
      if (other.StartedRunCount != 0L) {
        StartedRunCount = other.StartedRunCount;
      }
      if (other.State != global::Google.Cloud.AIPlatform.V1.Schedule.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.nextRunTime_ != null) {
        if (nextRunTime_ == null) {
          NextRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NextRunTime.MergeFrom(other.NextRunTime);
      }
      if (other.lastPauseTime_ != null) {
        if (lastPauseTime_ == null) {
          LastPauseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastPauseTime.MergeFrom(other.LastPauseTime);
      }
      if (other.lastResumeTime_ != null) {
        if (lastResumeTime_ == null) {
          LastResumeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastResumeTime.MergeFrom(other.LastResumeTime);
      }
      if (other.MaxConcurrentRunCount != 0L) {
        MaxConcurrentRunCount = other.MaxConcurrentRunCount;
      }
      if (other.AllowQueueing != false) {
        AllowQueueing = other.AllowQueueing;
      }
      if (other.CatchUp != false) {
        CatchUp = other.CatchUp;
      }
      if (other.lastScheduledRunResponse_ != null) {
        if (lastScheduledRunResponse_ == null) {
          LastScheduledRunResponse = new global::Google.Cloud.AIPlatform.V1.Schedule.Types.RunResponse();
        }
        LastScheduledRunResponse.MergeFrom(other.LastScheduledRunResponse);
      }
      switch (other.TimeSpecificationCase) {
        case TimeSpecificationOneofCase.Cron:
          Cron = other.Cron;
          break;
      }

      switch (other.RequestCase) {
        case RequestOneofCase.CreatePipelineJobRequest:
          if (CreatePipelineJobRequest == null) {
            CreatePipelineJobRequest = new global::Google.Cloud.AIPlatform.V1.CreatePipelineJobRequest();
          }
          CreatePipelineJobRequest.MergeFrom(other.CreatePipelineJobRequest);
          break;
        case RequestOneofCase.CreateNotebookExecutionJobRequest:
          if (CreateNotebookExecutionJobRequest == null) {
            CreateNotebookExecutionJobRequest = new global::Google.Cloud.AIPlatform.V1.CreateNotebookExecutionJobRequest();
          }
          CreateNotebookExecutionJobRequest.MergeFrom(other.CreateNotebookExecutionJobRequest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 34: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 40: {
            State = (global::Google.Cloud.AIPlatform.V1.Schedule.Types.State) input.ReadEnum();
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (nextRunTime_ == null) {
              NextRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextRunTime);
            break;
          }
          case 66: {
            if (lastPauseTime_ == null) {
              LastPauseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastPauseTime);
            break;
          }
          case 74: {
            if (lastResumeTime_ == null) {
              LastResumeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastResumeTime);
            break;
          }
          case 82: {
            Cron = input.ReadString();
            break;
          }
          case 88: {
            MaxConcurrentRunCount = input.ReadInt64();
            break;
          }
          case 96: {
            AllowQueueing = input.ReadBool();
            break;
          }
          case 104: {
            CatchUp = input.ReadBool();
            break;
          }
          case 114: {
            global::Google.Cloud.AIPlatform.V1.CreatePipelineJobRequest subBuilder = new global::Google.Cloud.AIPlatform.V1.CreatePipelineJobRequest();
            if (requestCase_ == RequestOneofCase.CreatePipelineJobRequest) {
              subBuilder.MergeFrom(CreatePipelineJobRequest);
            }
            input.ReadMessage(subBuilder);
            CreatePipelineJobRequest = subBuilder;
            break;
          }
          case 128: {
            MaxRunCount = input.ReadInt64();
            break;
          }
          case 136: {
            StartedRunCount = input.ReadInt64();
            break;
          }
          case 146: {
            if (lastScheduledRunResponse_ == null) {
              LastScheduledRunResponse = new global::Google.Cloud.AIPlatform.V1.Schedule.Types.RunResponse();
            }
            input.ReadMessage(LastScheduledRunResponse);
            break;
          }
          case 154: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 162: {
            global::Google.Cloud.AIPlatform.V1.CreateNotebookExecutionJobRequest subBuilder = new global::Google.Cloud.AIPlatform.V1.CreateNotebookExecutionJobRequest();
            if (requestCase_ == RequestOneofCase.CreateNotebookExecutionJobRequest) {
              subBuilder.MergeFrom(CreateNotebookExecutionJobRequest);
            }
            input.ReadMessage(subBuilder);
            CreateNotebookExecutionJobRequest = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 34: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 40: {
            State = (global::Google.Cloud.AIPlatform.V1.Schedule.Types.State) input.ReadEnum();
            break;
          }
          case 50: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (nextRunTime_ == null) {
              NextRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextRunTime);
            break;
          }
          case 66: {
            if (lastPauseTime_ == null) {
              LastPauseTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastPauseTime);
            break;
          }
          case 74: {
            if (lastResumeTime_ == null) {
              LastResumeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastResumeTime);
            break;
          }
          case 82: {
            Cron = input.ReadString();
            break;
          }
          case 88: {
            MaxConcurrentRunCount = input.ReadInt64();
            break;
          }
          case 96: {
            AllowQueueing = input.ReadBool();
            break;
          }
          case 104: {
            CatchUp = input.ReadBool();
            break;
          }
          case 114: {
            global::Google.Cloud.AIPlatform.V1.CreatePipelineJobRequest subBuilder = new global::Google.Cloud.AIPlatform.V1.CreatePipelineJobRequest();
            if (requestCase_ == RequestOneofCase.CreatePipelineJobRequest) {
              subBuilder.MergeFrom(CreatePipelineJobRequest);
            }
            input.ReadMessage(subBuilder);
            CreatePipelineJobRequest = subBuilder;
            break;
          }
          case 128: {
            MaxRunCount = input.ReadInt64();
            break;
          }
          case 136: {
            StartedRunCount = input.ReadInt64();
            break;
          }
          case 146: {
            if (lastScheduledRunResponse_ == null) {
              LastScheduledRunResponse = new global::Google.Cloud.AIPlatform.V1.Schedule.Types.RunResponse();
            }
            input.ReadMessage(LastScheduledRunResponse);
            break;
          }
          case 154: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 162: {
            global::Google.Cloud.AIPlatform.V1.CreateNotebookExecutionJobRequest subBuilder = new global::Google.Cloud.AIPlatform.V1.CreateNotebookExecutionJobRequest();
            if (requestCase_ == RequestOneofCase.CreateNotebookExecutionJobRequest) {
              subBuilder.MergeFrom(CreateNotebookExecutionJobRequest);
            }
            input.ReadMessage(subBuilder);
            CreateNotebookExecutionJobRequest = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Schedule message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Possible state of the schedule.
      /// </summary>
      public enum State {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The Schedule is active. Runs are being scheduled on the user-specified
        /// timespec.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 1,
        /// <summary>
        /// The schedule is paused. No new runs will be created until the schedule
        /// is resumed. Already started runs will be allowed to complete.
        /// </summary>
        [pbr::OriginalName("PAUSED")] Paused = 2,
        /// <summary>
        /// The Schedule is completed. No new runs will be scheduled. Already started
        /// runs will be allowed to complete. Schedules in completed state cannot be
        /// paused or resumed.
        /// </summary>
        [pbr::OriginalName("COMPLETED")] Completed = 3,
      }

      /// <summary>
      /// Status of a scheduled run.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class RunResponse : pb::IMessage<RunResponse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RunResponse> _parser = new pb::MessageParser<RunResponse>(() => new RunResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RunResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.AIPlatform.V1.Schedule.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RunResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RunResponse(RunResponse other) : this() {
          scheduledRunTime_ = other.scheduledRunTime_ != null ? other.scheduledRunTime_.Clone() : null;
          runResponse_ = other.runResponse_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RunResponse Clone() {
          return new RunResponse(this);
        }

        /// <summary>Field number for the "scheduled_run_time" field.</summary>
        public const int ScheduledRunTimeFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledRunTime_;
        /// <summary>
        /// The scheduled run time based on the user-specified schedule.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledRunTime {
          get { return scheduledRunTime_; }
          set {
            scheduledRunTime_ = value;
          }
        }

        /// <summary>Field number for the "run_response" field.</summary>
        public const int RunResponse_FieldNumber = 2;
        private string runResponse_ = "";
        /// <summary>
        /// The response of the scheduled run.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RunResponse_ {
          get { return runResponse_; }
          set {
            runResponse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RunResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RunResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ScheduledRunTime, other.ScheduledRunTime)) return false;
          if (RunResponse_ != other.RunResponse_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (scheduledRunTime_ != null) hash ^= ScheduledRunTime.GetHashCode();
          if (RunResponse_.Length != 0) hash ^= RunResponse_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (scheduledRunTime_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ScheduledRunTime);
          }
          if (RunResponse_.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RunResponse_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (scheduledRunTime_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ScheduledRunTime);
          }
          if (RunResponse_.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RunResponse_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (scheduledRunTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledRunTime);
          }
          if (RunResponse_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RunResponse_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RunResponse other) {
          if (other == null) {
            return;
          }
          if (other.scheduledRunTime_ != null) {
            if (scheduledRunTime_ == null) {
              ScheduledRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            ScheduledRunTime.MergeFrom(other.ScheduledRunTime);
          }
          if (other.RunResponse_.Length != 0) {
            RunResponse_ = other.RunResponse_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (scheduledRunTime_ == null) {
                  ScheduledRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(ScheduledRunTime);
                break;
              }
              case 18: {
                RunResponse_ = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (scheduledRunTime_ == null) {
                  ScheduledRunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(ScheduledRunTime);
                break;
              }
              case 18: {
                RunResponse_ = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
