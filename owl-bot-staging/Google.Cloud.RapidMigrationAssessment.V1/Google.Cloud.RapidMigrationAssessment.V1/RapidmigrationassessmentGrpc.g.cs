// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/rapidmigrationassessment/v1/rapidmigrationassessment.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.RapidMigrationAssessment.V1 {
  /// <summary>
  /// Service describing handlers for resources.
  /// </summary>
  public static partial class RapidMigrationAssessment
  {
    static readonly string __ServiceName = "google.cloud.rapidmigrationassessment.v1.RapidMigrationAssessment";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_CreateCollectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_CreateAnnotationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_GetAnnotationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.Annotation> __Marshaller_google_cloud_rapidmigrationassessment_v1_Annotation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.Annotation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_ListCollectorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse> __Marshaller_google_cloud_rapidmigrationassessment_v1_ListCollectorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_GetCollectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.Collector> __Marshaller_google_cloud_rapidmigrationassessment_v1_Collector = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.Collector.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_UpdateCollectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_DeleteCollectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_ResumeCollectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_RegisterCollectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest> __Marshaller_google_cloud_rapidmigrationassessment_v1_PauseCollectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest, global::Google.LongRunning.Operation> __Method_CreateCollector = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCollector",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_CreateCollectorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest, global::Google.LongRunning.Operation> __Method_CreateAnnotation = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAnnotation",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_CreateAnnotationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest, global::Google.Cloud.RapidMigrationAssessment.V1.Annotation> __Method_GetAnnotation = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest, global::Google.Cloud.RapidMigrationAssessment.V1.Annotation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAnnotation",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_GetAnnotationRequest,
        __Marshaller_google_cloud_rapidmigrationassessment_v1_Annotation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest, global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse> __Method_ListCollectors = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest, global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCollectors",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_ListCollectorsRequest,
        __Marshaller_google_cloud_rapidmigrationassessment_v1_ListCollectorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest, global::Google.Cloud.RapidMigrationAssessment.V1.Collector> __Method_GetCollector = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest, global::Google.Cloud.RapidMigrationAssessment.V1.Collector>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCollector",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_GetCollectorRequest,
        __Marshaller_google_cloud_rapidmigrationassessment_v1_Collector);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest, global::Google.LongRunning.Operation> __Method_UpdateCollector = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCollector",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_UpdateCollectorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest, global::Google.LongRunning.Operation> __Method_DeleteCollector = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCollector",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_DeleteCollectorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest, global::Google.LongRunning.Operation> __Method_ResumeCollector = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResumeCollector",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_ResumeCollectorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest, global::Google.LongRunning.Operation> __Method_RegisterCollector = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterCollector",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_RegisterCollectorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest, global::Google.LongRunning.Operation> __Method_PauseCollector = new grpc::Method<global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PauseCollector",
        __Marshaller_google_cloud_rapidmigrationassessment_v1_PauseCollectorRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.RapidMigrationAssessment.V1.RapidmigrationassessmentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RapidMigrationAssessment</summary>
    [grpc::BindServiceMethod(typeof(RapidMigrationAssessment), "BindService")]
    public abstract partial class RapidMigrationAssessmentBase
    {
      /// <summary>
      /// Create a Collector to manage the on-prem appliance which collects
      /// information about Customer assets.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateCollector(global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an Annotation
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateAnnotation(global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Annotation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.RapidMigrationAssessment.V1.Annotation> GetAnnotation(global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Collectors in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse> ListCollectors(global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Collector.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.RapidMigrationAssessment.V1.Collector> GetCollector(global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single Collector.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateCollector(global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Collector - changes state of collector to "Deleting".
      /// Background jobs does final deletion thorugh producer api.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteCollector(global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resumes the given collector.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ResumeCollector(global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Registers the given collector.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RegisterCollector(global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Pauses the given collector.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> PauseCollector(global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RapidMigrationAssessment</summary>
    public partial class RapidMigrationAssessmentClient : grpc::ClientBase<RapidMigrationAssessmentClient>
    {
      /// <summary>Creates a new client for RapidMigrationAssessment</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RapidMigrationAssessmentClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RapidMigrationAssessment that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RapidMigrationAssessmentClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RapidMigrationAssessmentClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RapidMigrationAssessmentClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create a Collector to manage the on-prem appliance which collects
      /// information about Customer assets.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCollector(global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCollector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a Collector to manage the on-prem appliance which collects
      /// information about Customer assets.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCollector(global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCollector, null, options, request);
      }
      /// <summary>
      /// Create a Collector to manage the on-prem appliance which collects
      /// information about Customer assets.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCollectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a Collector to manage the on-prem appliance which collects
      /// information about Customer assets.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCollector, null, options, request);
      }
      /// <summary>
      /// Creates an Annotation
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAnnotation(global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAnnotation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an Annotation
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAnnotation(global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAnnotation, null, options, request);
      }
      /// <summary>
      /// Creates an Annotation
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAnnotationAsync(global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAnnotationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an Annotation
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAnnotationAsync(global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAnnotation, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Annotation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.RapidMigrationAssessment.V1.Annotation GetAnnotation(global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnnotation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Annotation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.RapidMigrationAssessment.V1.Annotation GetAnnotation(global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAnnotation, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Annotation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.RapidMigrationAssessment.V1.Annotation> GetAnnotationAsync(global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAnnotationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Annotation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.RapidMigrationAssessment.V1.Annotation> GetAnnotationAsync(global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAnnotation, null, options, request);
      }
      /// <summary>
      /// Lists Collectors in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse ListCollectors(global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCollectors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Collectors in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse ListCollectors(global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCollectors, null, options, request);
      }
      /// <summary>
      /// Lists Collectors in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse> ListCollectorsAsync(global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCollectorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Collectors in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse> ListCollectorsAsync(global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCollectors, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.RapidMigrationAssessment.V1.Collector GetCollector(global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCollector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.RapidMigrationAssessment.V1.Collector GetCollector(global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCollector, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.RapidMigrationAssessment.V1.Collector> GetCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCollectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.RapidMigrationAssessment.V1.Collector> GetCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCollector, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateCollector(global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCollector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateCollector(global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCollector, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCollectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCollector, null, options, request);
      }
      /// <summary>
      /// Deletes a single Collector - changes state of collector to "Deleting".
      /// Background jobs does final deletion thorugh producer api.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteCollector(global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCollector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Collector - changes state of collector to "Deleting".
      /// Background jobs does final deletion thorugh producer api.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteCollector(global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCollector, null, options, request);
      }
      /// <summary>
      /// Deletes a single Collector - changes state of collector to "Deleting".
      /// Background jobs does final deletion thorugh producer api.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCollectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Collector - changes state of collector to "Deleting".
      /// Background jobs does final deletion thorugh producer api.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCollector, null, options, request);
      }
      /// <summary>
      /// Resumes the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ResumeCollector(global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeCollector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ResumeCollector(global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResumeCollector, null, options, request);
      }
      /// <summary>
      /// Resumes the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ResumeCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeCollectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ResumeCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResumeCollector, null, options, request);
      }
      /// <summary>
      /// Registers the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RegisterCollector(global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterCollector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Registers the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RegisterCollector(global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterCollector, null, options, request);
      }
      /// <summary>
      /// Registers the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RegisterCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterCollectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Registers the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RegisterCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterCollector, null, options, request);
      }
      /// <summary>
      /// Pauses the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation PauseCollector(global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseCollector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation PauseCollector(global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PauseCollector, null, options, request);
      }
      /// <summary>
      /// Pauses the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> PauseCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseCollectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses the given collector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> PauseCollectorAsync(global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PauseCollector, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override RapidMigrationAssessmentClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RapidMigrationAssessmentClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(RapidMigrationAssessmentBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateCollector, serviceImpl.CreateCollector)
          .AddMethod(__Method_CreateAnnotation, serviceImpl.CreateAnnotation)
          .AddMethod(__Method_GetAnnotation, serviceImpl.GetAnnotation)
          .AddMethod(__Method_ListCollectors, serviceImpl.ListCollectors)
          .AddMethod(__Method_GetCollector, serviceImpl.GetCollector)
          .AddMethod(__Method_UpdateCollector, serviceImpl.UpdateCollector)
          .AddMethod(__Method_DeleteCollector, serviceImpl.DeleteCollector)
          .AddMethod(__Method_ResumeCollector, serviceImpl.ResumeCollector)
          .AddMethod(__Method_RegisterCollector, serviceImpl.RegisterCollector)
          .AddMethod(__Method_PauseCollector, serviceImpl.PauseCollector).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RapidMigrationAssessmentBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateCollector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.CreateCollectorRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateCollector));
      serviceBinder.AddMethod(__Method_CreateAnnotation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.CreateAnnotationRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateAnnotation));
      serviceBinder.AddMethod(__Method_GetAnnotation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.GetAnnotationRequest, global::Google.Cloud.RapidMigrationAssessment.V1.Annotation>(serviceImpl.GetAnnotation));
      serviceBinder.AddMethod(__Method_ListCollectors, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsRequest, global::Google.Cloud.RapidMigrationAssessment.V1.ListCollectorsResponse>(serviceImpl.ListCollectors));
      serviceBinder.AddMethod(__Method_GetCollector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.GetCollectorRequest, global::Google.Cloud.RapidMigrationAssessment.V1.Collector>(serviceImpl.GetCollector));
      serviceBinder.AddMethod(__Method_UpdateCollector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.UpdateCollectorRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateCollector));
      serviceBinder.AddMethod(__Method_DeleteCollector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.DeleteCollectorRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteCollector));
      serviceBinder.AddMethod(__Method_ResumeCollector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.ResumeCollectorRequest, global::Google.LongRunning.Operation>(serviceImpl.ResumeCollector));
      serviceBinder.AddMethod(__Method_RegisterCollector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.RegisterCollectorRequest, global::Google.LongRunning.Operation>(serviceImpl.RegisterCollector));
      serviceBinder.AddMethod(__Method_PauseCollector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.RapidMigrationAssessment.V1.PauseCollectorRequest, global::Google.LongRunning.Operation>(serviceImpl.PauseCollector));
    }

  }
}
#endregion
