// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/api/servicemanagement/v1/servicemanager.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ServiceManagement.V1 {
  /// <summary>
  /// [Google Service Management
  /// API](https://cloud.google.com/service-infrastructure/docs/overview)
  /// </summary>
  public static partial class ServiceManager
  {
    static readonly string __ServiceName = "google.api.servicemanagement.v1.ServiceManager";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.ListServicesRequest> __Marshaller_google_api_servicemanagement_v1_ListServicesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.ListServicesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.ListServicesResponse> __Marshaller_google_api_servicemanagement_v1_ListServicesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.ListServicesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.GetServiceRequest> __Marshaller_google_api_servicemanagement_v1_GetServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.GetServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.ManagedService> __Marshaller_google_api_servicemanagement_v1_ManagedService = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.ManagedService.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest> __Marshaller_google_api_servicemanagement_v1_CreateServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest> __Marshaller_google_api_servicemanagement_v1_DeleteServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest> __Marshaller_google_api_servicemanagement_v1_UndeleteServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest> __Marshaller_google_api_servicemanagement_v1_ListServiceConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse> __Marshaller_google_api_servicemanagement_v1_ListServiceConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest> __Marshaller_google_api_servicemanagement_v1_GetServiceConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Api.Service> __Marshaller_google_api_Service = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Api.Service.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest> __Marshaller_google_api_servicemanagement_v1_CreateServiceConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest> __Marshaller_google_api_servicemanagement_v1_SubmitConfigSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest> __Marshaller_google_api_servicemanagement_v1_ListServiceRolloutsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse> __Marshaller_google_api_servicemanagement_v1_ListServiceRolloutsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest> __Marshaller_google_api_servicemanagement_v1_GetServiceRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.Rollout> __Marshaller_google_api_servicemanagement_v1_Rollout = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.Rollout.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest> __Marshaller_google_api_servicemanagement_v1_CreateServiceRolloutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest> __Marshaller_google_api_servicemanagement_v1_GenerateConfigReportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse> __Marshaller_google_api_servicemanagement_v1_GenerateConfigReportResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.ListServicesRequest, global::Google.Cloud.ServiceManagement.V1.ListServicesResponse> __Method_ListServices = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.ListServicesRequest, global::Google.Cloud.ServiceManagement.V1.ListServicesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListServices",
        __Marshaller_google_api_servicemanagement_v1_ListServicesRequest,
        __Marshaller_google_api_servicemanagement_v1_ListServicesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.GetServiceRequest, global::Google.Cloud.ServiceManagement.V1.ManagedService> __Method_GetService = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.GetServiceRequest, global::Google.Cloud.ServiceManagement.V1.ManagedService>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetService",
        __Marshaller_google_api_servicemanagement_v1_GetServiceRequest,
        __Marshaller_google_api_servicemanagement_v1_ManagedService);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest, global::Google.LongRunning.Operation> __Method_CreateService = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateService",
        __Marshaller_google_api_servicemanagement_v1_CreateServiceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest, global::Google.LongRunning.Operation> __Method_DeleteService = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteService",
        __Marshaller_google_api_servicemanagement_v1_DeleteServiceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest, global::Google.LongRunning.Operation> __Method_UndeleteService = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UndeleteService",
        __Marshaller_google_api_servicemanagement_v1_UndeleteServiceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest, global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse> __Method_ListServiceConfigs = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest, global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListServiceConfigs",
        __Marshaller_google_api_servicemanagement_v1_ListServiceConfigsRequest,
        __Marshaller_google_api_servicemanagement_v1_ListServiceConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest, global::Google.Api.Service> __Method_GetServiceConfig = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest, global::Google.Api.Service>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetServiceConfig",
        __Marshaller_google_api_servicemanagement_v1_GetServiceConfigRequest,
        __Marshaller_google_api_Service);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest, global::Google.Api.Service> __Method_CreateServiceConfig = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest, global::Google.Api.Service>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateServiceConfig",
        __Marshaller_google_api_servicemanagement_v1_CreateServiceConfigRequest,
        __Marshaller_google_api_Service);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest, global::Google.LongRunning.Operation> __Method_SubmitConfigSource = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubmitConfigSource",
        __Marshaller_google_api_servicemanagement_v1_SubmitConfigSourceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest, global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse> __Method_ListServiceRollouts = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest, global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListServiceRollouts",
        __Marshaller_google_api_servicemanagement_v1_ListServiceRolloutsRequest,
        __Marshaller_google_api_servicemanagement_v1_ListServiceRolloutsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest, global::Google.Cloud.ServiceManagement.V1.Rollout> __Method_GetServiceRollout = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest, global::Google.Cloud.ServiceManagement.V1.Rollout>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetServiceRollout",
        __Marshaller_google_api_servicemanagement_v1_GetServiceRolloutRequest,
        __Marshaller_google_api_servicemanagement_v1_Rollout);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest, global::Google.LongRunning.Operation> __Method_CreateServiceRollout = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateServiceRollout",
        __Marshaller_google_api_servicemanagement_v1_CreateServiceRolloutRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest, global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse> __Method_GenerateConfigReport = new grpc::Method<global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest, global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateConfigReport",
        __Marshaller_google_api_servicemanagement_v1_GenerateConfigReportRequest,
        __Marshaller_google_api_servicemanagement_v1_GenerateConfigReportResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ServiceManagement.V1.ServicemanagerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ServiceManager</summary>
    [grpc::BindServiceMethod(typeof(ServiceManager), "BindService")]
    public abstract partial class ServiceManagerBase
    {
      /// <summary>
      /// Lists managed services.
      ///
      /// Returns all public services. For authenticated users, also returns all
      /// services the calling user has "servicemanagement.services.get" permission
      /// for.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceManagement.V1.ListServicesResponse> ListServices(global::Google.Cloud.ServiceManagement.V1.ListServicesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a managed service. Authentication is required unless the service is
      /// public.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceManagement.V1.ManagedService> GetService(global::Google.Cloud.ServiceManagement.V1.GetServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new managed service.
      ///
      /// A managed service is immutable, and is subject to mandatory 30-day
      /// data retention. You cannot move a service or recreate it within 30 days
      /// after deletion.
      ///
      /// One producer project can own no more than 500 services. For security and
      /// reliability purposes, a production service should be hosted in a
      /// dedicated producer project.
      ///
      /// Operation&lt;response: ManagedService>
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateService(global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a managed service. This method will change the service to the
      /// `Soft-Delete` state for 30 days. Within this period, service producers may
      /// call
      /// [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService]
      /// to restore the service. After 30 days, the service will be permanently
      /// deleted.
      ///
      /// Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteService(global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Revives a previously deleted managed service. The method restores the
      /// service using the configuration at the time the service was deleted.
      /// The target service must exist and must have been deleted within the
      /// last 30 days.
      ///
      /// Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UndeleteService(global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the history of the service configuration for a managed service,
      /// from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse> ListServiceConfigs(global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a service configuration (version) for a managed service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Service> GetServiceConfig(global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new service configuration (version) for a managed service.
      /// This method only stores the service configuration. To roll out the service
      /// configuration to backend systems please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent service configurations and ones referenced by
      /// existing rollouts are kept for each service. The rest will be deleted
      /// eventually.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Api.Service> CreateServiceConfig(global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new service configuration (version) for a managed service based
      /// on
      /// user-supplied configuration source files (for example: OpenAPI
      /// Specification). This method stores the source configurations as well as the
      /// generated service configuration. To rollout the service configuration to
      /// other services,
      /// please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent configuration sources and ones referenced by
      /// existing service configurtions are kept for each service. The rest will be
      /// deleted eventually.
      ///
      /// Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> SubmitConfigSource(global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the history of the service configuration rollouts for a managed
      /// service, from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse> ListServiceRollouts(global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a service configuration
      /// [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceManagement.V1.Rollout> GetServiceRollout(global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new service configuration rollout. Based on rollout, the
      /// Google Service Management will roll out the service configurations to
      /// different backend services. For example, the logging configuration will be
      /// pushed to Google Cloud Logging.
      ///
      /// Please note that any previous pending and running Rollouts and associated
      /// Operations will be automatically cancelled so that the latest Rollout will
      /// not be blocked by previous Rollouts.
      ///
      /// Only the 100 most recent (in any state) and the last 10 successful (if not
      /// already part of the set of 100 most recent) rollouts are kept for each
      /// service. The rest will be deleted eventually.
      ///
      /// Operation&lt;response: Rollout>
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateServiceRollout(global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generates and returns a report (errors, warnings and changes from
      /// existing configurations) associated with
      /// GenerateConfigReportRequest.new_value
      ///
      /// If GenerateConfigReportRequest.old_value is specified,
      /// GenerateConfigReportRequest will contain a single ChangeReport based on the
      /// comparison between GenerateConfigReportRequest.new_value and
      /// GenerateConfigReportRequest.old_value.
      /// If GenerateConfigReportRequest.old_value is not specified, this method
      /// will compare GenerateConfigReportRequest.new_value with the last pushed
      /// service configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse> GenerateConfigReport(global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ServiceManager</summary>
    public partial class ServiceManagerClient : grpc::ClientBase<ServiceManagerClient>
    {
      /// <summary>Creates a new client for ServiceManager</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServiceManagerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ServiceManager that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServiceManagerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServiceManagerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServiceManagerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists managed services.
      ///
      /// Returns all public services. For authenticated users, also returns all
      /// services the calling user has "servicemanagement.services.get" permission
      /// for.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.ListServicesResponse ListServices(global::Google.Cloud.ServiceManagement.V1.ListServicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServices(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists managed services.
      ///
      /// Returns all public services. For authenticated users, also returns all
      /// services the calling user has "servicemanagement.services.get" permission
      /// for.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.ListServicesResponse ListServices(global::Google.Cloud.ServiceManagement.V1.ListServicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServices, null, options, request);
      }
      /// <summary>
      /// Lists managed services.
      ///
      /// Returns all public services. For authenticated users, also returns all
      /// services the calling user has "servicemanagement.services.get" permission
      /// for.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.ListServicesResponse> ListServicesAsync(global::Google.Cloud.ServiceManagement.V1.ListServicesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServicesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists managed services.
      ///
      /// Returns all public services. For authenticated users, also returns all
      /// services the calling user has "servicemanagement.services.get" permission
      /// for.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.ListServicesResponse> ListServicesAsync(global::Google.Cloud.ServiceManagement.V1.ListServicesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServices, null, options, request);
      }
      /// <summary>
      /// Gets a managed service. Authentication is required unless the service is
      /// public.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.ManagedService GetService(global::Google.Cloud.ServiceManagement.V1.GetServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a managed service. Authentication is required unless the service is
      /// public.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.ManagedService GetService(global::Google.Cloud.ServiceManagement.V1.GetServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetService, null, options, request);
      }
      /// <summary>
      /// Gets a managed service. Authentication is required unless the service is
      /// public.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.ManagedService> GetServiceAsync(global::Google.Cloud.ServiceManagement.V1.GetServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a managed service. Authentication is required unless the service is
      /// public.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.ManagedService> GetServiceAsync(global::Google.Cloud.ServiceManagement.V1.GetServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetService, null, options, request);
      }
      /// <summary>
      /// Creates a new managed service.
      ///
      /// A managed service is immutable, and is subject to mandatory 30-day
      /// data retention. You cannot move a service or recreate it within 30 days
      /// after deletion.
      ///
      /// One producer project can own no more than 500 services. For security and
      /// reliability purposes, a production service should be hosted in a
      /// dedicated producer project.
      ///
      /// Operation&lt;response: ManagedService>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateService(global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new managed service.
      ///
      /// A managed service is immutable, and is subject to mandatory 30-day
      /// data retention. You cannot move a service or recreate it within 30 days
      /// after deletion.
      ///
      /// One producer project can own no more than 500 services. For security and
      /// reliability purposes, a production service should be hosted in a
      /// dedicated producer project.
      ///
      /// Operation&lt;response: ManagedService>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateService(global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateService, null, options, request);
      }
      /// <summary>
      /// Creates a new managed service.
      ///
      /// A managed service is immutable, and is subject to mandatory 30-day
      /// data retention. You cannot move a service or recreate it within 30 days
      /// after deletion.
      ///
      /// One producer project can own no more than 500 services. For security and
      /// reliability purposes, a production service should be hosted in a
      /// dedicated producer project.
      ///
      /// Operation&lt;response: ManagedService>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServiceAsync(global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new managed service.
      ///
      /// A managed service is immutable, and is subject to mandatory 30-day
      /// data retention. You cannot move a service or recreate it within 30 days
      /// after deletion.
      ///
      /// One producer project can own no more than 500 services. For security and
      /// reliability purposes, a production service should be hosted in a
      /// dedicated producer project.
      ///
      /// Operation&lt;response: ManagedService>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServiceAsync(global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateService, null, options, request);
      }
      /// <summary>
      /// Deletes a managed service. This method will change the service to the
      /// `Soft-Delete` state for 30 days. Within this period, service producers may
      /// call
      /// [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService]
      /// to restore the service. After 30 days, the service will be permanently
      /// deleted.
      ///
      /// Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteService(global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a managed service. This method will change the service to the
      /// `Soft-Delete` state for 30 days. Within this period, service producers may
      /// call
      /// [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService]
      /// to restore the service. After 30 days, the service will be permanently
      /// deleted.
      ///
      /// Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteService(global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteService, null, options, request);
      }
      /// <summary>
      /// Deletes a managed service. This method will change the service to the
      /// `Soft-Delete` state for 30 days. Within this period, service producers may
      /// call
      /// [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService]
      /// to restore the service. After 30 days, the service will be permanently
      /// deleted.
      ///
      /// Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteServiceAsync(global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a managed service. This method will change the service to the
      /// `Soft-Delete` state for 30 days. Within this period, service producers may
      /// call
      /// [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService]
      /// to restore the service. After 30 days, the service will be permanently
      /// deleted.
      ///
      /// Operation&lt;response: google.protobuf.Empty>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteServiceAsync(global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteService, null, options, request);
      }
      /// <summary>
      /// Revives a previously deleted managed service. The method restores the
      /// service using the configuration at the time the service was deleted.
      /// The target service must exist and must have been deleted within the
      /// last 30 days.
      ///
      /// Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UndeleteService(global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndeleteService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Revives a previously deleted managed service. The method restores the
      /// service using the configuration at the time the service was deleted.
      /// The target service must exist and must have been deleted within the
      /// last 30 days.
      ///
      /// Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UndeleteService(global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UndeleteService, null, options, request);
      }
      /// <summary>
      /// Revives a previously deleted managed service. The method restores the
      /// service using the configuration at the time the service was deleted.
      /// The target service must exist and must have been deleted within the
      /// last 30 days.
      ///
      /// Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UndeleteServiceAsync(global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndeleteServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Revives a previously deleted managed service. The method restores the
      /// service using the configuration at the time the service was deleted.
      /// The target service must exist and must have been deleted within the
      /// last 30 days.
      ///
      /// Operation&lt;response: UndeleteServiceResponse>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UndeleteServiceAsync(global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UndeleteService, null, options, request);
      }
      /// <summary>
      /// Lists the history of the service configuration for a managed service,
      /// from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse ListServiceConfigs(global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServiceConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the history of the service configuration for a managed service,
      /// from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse ListServiceConfigs(global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServiceConfigs, null, options, request);
      }
      /// <summary>
      /// Lists the history of the service configuration for a managed service,
      /// from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse> ListServiceConfigsAsync(global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServiceConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the history of the service configuration for a managed service,
      /// from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse> ListServiceConfigsAsync(global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServiceConfigs, null, options, request);
      }
      /// <summary>
      /// Gets a service configuration (version) for a managed service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.Service GetServiceConfig(global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServiceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a service configuration (version) for a managed service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.Service GetServiceConfig(global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetServiceConfig, null, options, request);
      }
      /// <summary>
      /// Gets a service configuration (version) for a managed service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.Service> GetServiceConfigAsync(global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServiceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a service configuration (version) for a managed service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.Service> GetServiceConfigAsync(global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetServiceConfig, null, options, request);
      }
      /// <summary>
      /// Creates a new service configuration (version) for a managed service.
      /// This method only stores the service configuration. To roll out the service
      /// configuration to backend systems please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent service configurations and ones referenced by
      /// existing rollouts are kept for each service. The rest will be deleted
      /// eventually.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.Service CreateServiceConfig(global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServiceConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new service configuration (version) for a managed service.
      /// This method only stores the service configuration. To roll out the service
      /// configuration to backend systems please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent service configurations and ones referenced by
      /// existing rollouts are kept for each service. The rest will be deleted
      /// eventually.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Api.Service CreateServiceConfig(global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateServiceConfig, null, options, request);
      }
      /// <summary>
      /// Creates a new service configuration (version) for a managed service.
      /// This method only stores the service configuration. To roll out the service
      /// configuration to backend systems please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent service configurations and ones referenced by
      /// existing rollouts are kept for each service. The rest will be deleted
      /// eventually.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.Service> CreateServiceConfigAsync(global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServiceConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new service configuration (version) for a managed service.
      /// This method only stores the service configuration. To roll out the service
      /// configuration to backend systems please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent service configurations and ones referenced by
      /// existing rollouts are kept for each service. The rest will be deleted
      /// eventually.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Api.Service> CreateServiceConfigAsync(global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateServiceConfig, null, options, request);
      }
      /// <summary>
      /// Creates a new service configuration (version) for a managed service based
      /// on
      /// user-supplied configuration source files (for example: OpenAPI
      /// Specification). This method stores the source configurations as well as the
      /// generated service configuration. To rollout the service configuration to
      /// other services,
      /// please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent configuration sources and ones referenced by
      /// existing service configurtions are kept for each service. The rest will be
      /// deleted eventually.
      ///
      /// Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SubmitConfigSource(global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitConfigSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new service configuration (version) for a managed service based
      /// on
      /// user-supplied configuration source files (for example: OpenAPI
      /// Specification). This method stores the source configurations as well as the
      /// generated service configuration. To rollout the service configuration to
      /// other services,
      /// please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent configuration sources and ones referenced by
      /// existing service configurtions are kept for each service. The rest will be
      /// deleted eventually.
      ///
      /// Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SubmitConfigSource(global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubmitConfigSource, null, options, request);
      }
      /// <summary>
      /// Creates a new service configuration (version) for a managed service based
      /// on
      /// user-supplied configuration source files (for example: OpenAPI
      /// Specification). This method stores the source configurations as well as the
      /// generated service configuration. To rollout the service configuration to
      /// other services,
      /// please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent configuration sources and ones referenced by
      /// existing service configurtions are kept for each service. The rest will be
      /// deleted eventually.
      ///
      /// Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SubmitConfigSourceAsync(global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubmitConfigSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new service configuration (version) for a managed service based
      /// on
      /// user-supplied configuration source files (for example: OpenAPI
      /// Specification). This method stores the source configurations as well as the
      /// generated service configuration. To rollout the service configuration to
      /// other services,
      /// please call
      /// [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].
      ///
      /// Only the 100 most recent configuration sources and ones referenced by
      /// existing service configurtions are kept for each service. The rest will be
      /// deleted eventually.
      ///
      /// Operation&lt;response: SubmitConfigSourceResponse>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SubmitConfigSourceAsync(global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubmitConfigSource, null, options, request);
      }
      /// <summary>
      /// Lists the history of the service configuration rollouts for a managed
      /// service, from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse ListServiceRollouts(global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServiceRollouts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the history of the service configuration rollouts for a managed
      /// service, from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse ListServiceRollouts(global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServiceRollouts, null, options, request);
      }
      /// <summary>
      /// Lists the history of the service configuration rollouts for a managed
      /// service, from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse> ListServiceRolloutsAsync(global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServiceRolloutsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the history of the service configuration rollouts for a managed
      /// service, from the newest to the oldest.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse> ListServiceRolloutsAsync(global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServiceRollouts, null, options, request);
      }
      /// <summary>
      /// Gets a service configuration
      /// [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.Rollout GetServiceRollout(global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServiceRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a service configuration
      /// [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.Rollout GetServiceRollout(global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetServiceRollout, null, options, request);
      }
      /// <summary>
      /// Gets a service configuration
      /// [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.Rollout> GetServiceRolloutAsync(global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServiceRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a service configuration
      /// [rollout][google.api.servicemanagement.v1.Rollout].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.Rollout> GetServiceRolloutAsync(global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetServiceRollout, null, options, request);
      }
      /// <summary>
      /// Creates a new service configuration rollout. Based on rollout, the
      /// Google Service Management will roll out the service configurations to
      /// different backend services. For example, the logging configuration will be
      /// pushed to Google Cloud Logging.
      ///
      /// Please note that any previous pending and running Rollouts and associated
      /// Operations will be automatically cancelled so that the latest Rollout will
      /// not be blocked by previous Rollouts.
      ///
      /// Only the 100 most recent (in any state) and the last 10 successful (if not
      /// already part of the set of 100 most recent) rollouts are kept for each
      /// service. The rest will be deleted eventually.
      ///
      /// Operation&lt;response: Rollout>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateServiceRollout(global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServiceRollout(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new service configuration rollout. Based on rollout, the
      /// Google Service Management will roll out the service configurations to
      /// different backend services. For example, the logging configuration will be
      /// pushed to Google Cloud Logging.
      ///
      /// Please note that any previous pending and running Rollouts and associated
      /// Operations will be automatically cancelled so that the latest Rollout will
      /// not be blocked by previous Rollouts.
      ///
      /// Only the 100 most recent (in any state) and the last 10 successful (if not
      /// already part of the set of 100 most recent) rollouts are kept for each
      /// service. The rest will be deleted eventually.
      ///
      /// Operation&lt;response: Rollout>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateServiceRollout(global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateServiceRollout, null, options, request);
      }
      /// <summary>
      /// Creates a new service configuration rollout. Based on rollout, the
      /// Google Service Management will roll out the service configurations to
      /// different backend services. For example, the logging configuration will be
      /// pushed to Google Cloud Logging.
      ///
      /// Please note that any previous pending and running Rollouts and associated
      /// Operations will be automatically cancelled so that the latest Rollout will
      /// not be blocked by previous Rollouts.
      ///
      /// Only the 100 most recent (in any state) and the last 10 successful (if not
      /// already part of the set of 100 most recent) rollouts are kept for each
      /// service. The rest will be deleted eventually.
      ///
      /// Operation&lt;response: Rollout>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServiceRolloutAsync(global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServiceRolloutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new service configuration rollout. Based on rollout, the
      /// Google Service Management will roll out the service configurations to
      /// different backend services. For example, the logging configuration will be
      /// pushed to Google Cloud Logging.
      ///
      /// Please note that any previous pending and running Rollouts and associated
      /// Operations will be automatically cancelled so that the latest Rollout will
      /// not be blocked by previous Rollouts.
      ///
      /// Only the 100 most recent (in any state) and the last 10 successful (if not
      /// already part of the set of 100 most recent) rollouts are kept for each
      /// service. The rest will be deleted eventually.
      ///
      /// Operation&lt;response: Rollout>
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServiceRolloutAsync(global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateServiceRollout, null, options, request);
      }
      /// <summary>
      /// Generates and returns a report (errors, warnings and changes from
      /// existing configurations) associated with
      /// GenerateConfigReportRequest.new_value
      ///
      /// If GenerateConfigReportRequest.old_value is specified,
      /// GenerateConfigReportRequest will contain a single ChangeReport based on the
      /// comparison between GenerateConfigReportRequest.new_value and
      /// GenerateConfigReportRequest.old_value.
      /// If GenerateConfigReportRequest.old_value is not specified, this method
      /// will compare GenerateConfigReportRequest.new_value with the last pushed
      /// service configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse GenerateConfigReport(global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateConfigReport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates and returns a report (errors, warnings and changes from
      /// existing configurations) associated with
      /// GenerateConfigReportRequest.new_value
      ///
      /// If GenerateConfigReportRequest.old_value is specified,
      /// GenerateConfigReportRequest will contain a single ChangeReport based on the
      /// comparison between GenerateConfigReportRequest.new_value and
      /// GenerateConfigReportRequest.old_value.
      /// If GenerateConfigReportRequest.old_value is not specified, this method
      /// will compare GenerateConfigReportRequest.new_value with the last pushed
      /// service configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse GenerateConfigReport(global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateConfigReport, null, options, request);
      }
      /// <summary>
      /// Generates and returns a report (errors, warnings and changes from
      /// existing configurations) associated with
      /// GenerateConfigReportRequest.new_value
      ///
      /// If GenerateConfigReportRequest.old_value is specified,
      /// GenerateConfigReportRequest will contain a single ChangeReport based on the
      /// comparison between GenerateConfigReportRequest.new_value and
      /// GenerateConfigReportRequest.old_value.
      /// If GenerateConfigReportRequest.old_value is not specified, this method
      /// will compare GenerateConfigReportRequest.new_value with the last pushed
      /// service configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse> GenerateConfigReportAsync(global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateConfigReportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generates and returns a report (errors, warnings and changes from
      /// existing configurations) associated with
      /// GenerateConfigReportRequest.new_value
      ///
      /// If GenerateConfigReportRequest.old_value is specified,
      /// GenerateConfigReportRequest will contain a single ChangeReport based on the
      /// comparison between GenerateConfigReportRequest.new_value and
      /// GenerateConfigReportRequest.old_value.
      /// If GenerateConfigReportRequest.old_value is not specified, this method
      /// will compare GenerateConfigReportRequest.new_value with the last pushed
      /// service configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse> GenerateConfigReportAsync(global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateConfigReport, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ServiceManagerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ServiceManagerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ServiceManagerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListServices, serviceImpl.ListServices)
          .AddMethod(__Method_GetService, serviceImpl.GetService)
          .AddMethod(__Method_CreateService, serviceImpl.CreateService)
          .AddMethod(__Method_DeleteService, serviceImpl.DeleteService)
          .AddMethod(__Method_UndeleteService, serviceImpl.UndeleteService)
          .AddMethod(__Method_ListServiceConfigs, serviceImpl.ListServiceConfigs)
          .AddMethod(__Method_GetServiceConfig, serviceImpl.GetServiceConfig)
          .AddMethod(__Method_CreateServiceConfig, serviceImpl.CreateServiceConfig)
          .AddMethod(__Method_SubmitConfigSource, serviceImpl.SubmitConfigSource)
          .AddMethod(__Method_ListServiceRollouts, serviceImpl.ListServiceRollouts)
          .AddMethod(__Method_GetServiceRollout, serviceImpl.GetServiceRollout)
          .AddMethod(__Method_CreateServiceRollout, serviceImpl.CreateServiceRollout)
          .AddMethod(__Method_GenerateConfigReport, serviceImpl.GenerateConfigReport).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ServiceManagerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListServices, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.ListServicesRequest, global::Google.Cloud.ServiceManagement.V1.ListServicesResponse>(serviceImpl.ListServices));
      serviceBinder.AddMethod(__Method_GetService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.GetServiceRequest, global::Google.Cloud.ServiceManagement.V1.ManagedService>(serviceImpl.GetService));
      serviceBinder.AddMethod(__Method_CreateService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.CreateServiceRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateService));
      serviceBinder.AddMethod(__Method_DeleteService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.DeleteServiceRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteService));
      serviceBinder.AddMethod(__Method_UndeleteService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.UndeleteServiceRequest, global::Google.LongRunning.Operation>(serviceImpl.UndeleteService));
      serviceBinder.AddMethod(__Method_ListServiceConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsRequest, global::Google.Cloud.ServiceManagement.V1.ListServiceConfigsResponse>(serviceImpl.ListServiceConfigs));
      serviceBinder.AddMethod(__Method_GetServiceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.GetServiceConfigRequest, global::Google.Api.Service>(serviceImpl.GetServiceConfig));
      serviceBinder.AddMethod(__Method_CreateServiceConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.CreateServiceConfigRequest, global::Google.Api.Service>(serviceImpl.CreateServiceConfig));
      serviceBinder.AddMethod(__Method_SubmitConfigSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.SubmitConfigSourceRequest, global::Google.LongRunning.Operation>(serviceImpl.SubmitConfigSource));
      serviceBinder.AddMethod(__Method_ListServiceRollouts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsRequest, global::Google.Cloud.ServiceManagement.V1.ListServiceRolloutsResponse>(serviceImpl.ListServiceRollouts));
      serviceBinder.AddMethod(__Method_GetServiceRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.GetServiceRolloutRequest, global::Google.Cloud.ServiceManagement.V1.Rollout>(serviceImpl.GetServiceRollout));
      serviceBinder.AddMethod(__Method_CreateServiceRollout, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.CreateServiceRolloutRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateServiceRollout));
      serviceBinder.AddMethod(__Method_GenerateConfigReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportRequest, global::Google.Cloud.ServiceManagement.V1.GenerateConfigReportResponse>(serviceImpl.GenerateConfigReport));
    }

  }
}
#endregion
