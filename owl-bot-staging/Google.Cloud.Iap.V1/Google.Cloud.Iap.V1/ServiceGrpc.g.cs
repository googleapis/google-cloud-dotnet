// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/iap/v1/service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Iap.V1 {
  /// <summary>
  /// APIs for Identity-Aware Proxy Admin configurations.
  /// </summary>
  public static partial class IdentityAwareProxyAdminService
  {
    static readonly string __ServiceName = "google.cloud.iap.v1.IdentityAwareProxyAdminService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.GetIapSettingsRequest> __Marshaller_google_cloud_iap_v1_GetIapSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.GetIapSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.IapSettings> __Marshaller_google_cloud_iap_v1_IapSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.IapSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest> __Marshaller_google_cloud_iap_v1_UpdateIapSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest> __Marshaller_google_cloud_iap_v1_ListTunnelDestGroupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse> __Marshaller_google_cloud_iap_v1_ListTunnelDestGroupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest> __Marshaller_google_cloud_iap_v1_CreateTunnelDestGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.TunnelDestGroup> __Marshaller_google_cloud_iap_v1_TunnelDestGroup = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.TunnelDestGroup.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest> __Marshaller_google_cloud_iap_v1_GetTunnelDestGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest> __Marshaller_google_cloud_iap_v1_DeleteTunnelDestGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest> __Marshaller_google_cloud_iap_v1_UpdateTunnelDestGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.GetIapSettingsRequest, global::Google.Cloud.Iap.V1.IapSettings> __Method_GetIapSettings = new grpc::Method<global::Google.Cloud.Iap.V1.GetIapSettingsRequest, global::Google.Cloud.Iap.V1.IapSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIapSettings",
        __Marshaller_google_cloud_iap_v1_GetIapSettingsRequest,
        __Marshaller_google_cloud_iap_v1_IapSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest, global::Google.Cloud.Iap.V1.IapSettings> __Method_UpdateIapSettings = new grpc::Method<global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest, global::Google.Cloud.Iap.V1.IapSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateIapSettings",
        __Marshaller_google_cloud_iap_v1_UpdateIapSettingsRequest,
        __Marshaller_google_cloud_iap_v1_IapSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest, global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse> __Method_ListTunnelDestGroups = new grpc::Method<global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest, global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTunnelDestGroups",
        __Marshaller_google_cloud_iap_v1_ListTunnelDestGroupsRequest,
        __Marshaller_google_cloud_iap_v1_ListTunnelDestGroupsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup> __Method_CreateTunnelDestGroup = new grpc::Method<global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTunnelDestGroup",
        __Marshaller_google_cloud_iap_v1_CreateTunnelDestGroupRequest,
        __Marshaller_google_cloud_iap_v1_TunnelDestGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup> __Method_GetTunnelDestGroup = new grpc::Method<global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTunnelDestGroup",
        __Marshaller_google_cloud_iap_v1_GetTunnelDestGroupRequest,
        __Marshaller_google_cloud_iap_v1_TunnelDestGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTunnelDestGroup = new grpc::Method<global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTunnelDestGroup",
        __Marshaller_google_cloud_iap_v1_DeleteTunnelDestGroupRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup> __Method_UpdateTunnelDestGroup = new grpc::Method<global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTunnelDestGroup",
        __Marshaller_google_cloud_iap_v1_UpdateTunnelDestGroupRequest,
        __Marshaller_google_cloud_iap_v1_TunnelDestGroup);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Iap.V1.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of IdentityAwareProxyAdminService</summary>
    [grpc::BindServiceMethod(typeof(IdentityAwareProxyAdminService), "BindService")]
    public abstract partial class IdentityAwareProxyAdminServiceBase
    {
      /// <summary>
      /// Sets the access control policy for an Identity-Aware Proxy protected
      /// resource. Replaces any existing policy.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the access control policy for an Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns permissions that a caller has on the Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the IAP settings on a particular IAP protected resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.IapSettings> GetIapSettings(global::Google.Cloud.Iap.V1.GetIapSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the IAP settings on a particular IAP protected resource. It
      /// replaces all fields unless the `update_mask` is set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.IapSettings> UpdateIapSettings(global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the existing TunnelDestGroups. To group across all locations, use a
      /// `-` as the location ID. For example:
      /// `/v1/projects/123/iap_tunnel/locations/-/destGroups`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse> ListTunnelDestGroups(global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.TunnelDestGroup> CreateTunnelDestGroup(global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves an existing TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.TunnelDestGroup> GetTunnelDestGroup(global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTunnelDestGroup(global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.TunnelDestGroup> UpdateTunnelDestGroup(global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for IdentityAwareProxyAdminService</summary>
    public partial class IdentityAwareProxyAdminServiceClient : grpc::ClientBase<IdentityAwareProxyAdminServiceClient>
    {
      /// <summary>Creates a new client for IdentityAwareProxyAdminService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IdentityAwareProxyAdminServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for IdentityAwareProxyAdminService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IdentityAwareProxyAdminServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IdentityAwareProxyAdminServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IdentityAwareProxyAdminServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sets the access control policy for an Identity-Aware Proxy protected
      /// resource. Replaces any existing policy.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy for an Identity-Aware Proxy protected
      /// resource. Replaces any existing policy.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy for an Identity-Aware Proxy protected
      /// resource. Replaces any existing policy.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy for an Identity-Aware Proxy protected
      /// resource. Replaces any existing policy.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for an Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for an Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for an Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for an Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Returns permissions that a caller has on the Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns permissions that a caller has on the Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Returns permissions that a caller has on the Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns permissions that a caller has on the Identity-Aware Proxy protected
      /// resource.
      /// More information about managing access via IAP can be found at:
      /// https://cloud.google.com/iap/docs/managing-access#managing_access_via_the_api
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Gets the IAP settings on a particular IAP protected resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IapSettings GetIapSettings(global::Google.Cloud.Iap.V1.GetIapSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIapSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the IAP settings on a particular IAP protected resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IapSettings GetIapSettings(global::Google.Cloud.Iap.V1.GetIapSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIapSettings, null, options, request);
      }
      /// <summary>
      /// Gets the IAP settings on a particular IAP protected resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IapSettings> GetIapSettingsAsync(global::Google.Cloud.Iap.V1.GetIapSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIapSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the IAP settings on a particular IAP protected resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IapSettings> GetIapSettingsAsync(global::Google.Cloud.Iap.V1.GetIapSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIapSettings, null, options, request);
      }
      /// <summary>
      /// Updates the IAP settings on a particular IAP protected resource. It
      /// replaces all fields unless the `update_mask` is set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IapSettings UpdateIapSettings(global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateIapSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the IAP settings on a particular IAP protected resource. It
      /// replaces all fields unless the `update_mask` is set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IapSettings UpdateIapSettings(global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateIapSettings, null, options, request);
      }
      /// <summary>
      /// Updates the IAP settings on a particular IAP protected resource. It
      /// replaces all fields unless the `update_mask` is set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IapSettings> UpdateIapSettingsAsync(global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateIapSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the IAP settings on a particular IAP protected resource. It
      /// replaces all fields unless the `update_mask` is set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IapSettings> UpdateIapSettingsAsync(global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateIapSettings, null, options, request);
      }
      /// <summary>
      /// Lists the existing TunnelDestGroups. To group across all locations, use a
      /// `-` as the location ID. For example:
      /// `/v1/projects/123/iap_tunnel/locations/-/destGroups`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse ListTunnelDestGroups(global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTunnelDestGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the existing TunnelDestGroups. To group across all locations, use a
      /// `-` as the location ID. For example:
      /// `/v1/projects/123/iap_tunnel/locations/-/destGroups`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse ListTunnelDestGroups(global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTunnelDestGroups, null, options, request);
      }
      /// <summary>
      /// Lists the existing TunnelDestGroups. To group across all locations, use a
      /// `-` as the location ID. For example:
      /// `/v1/projects/123/iap_tunnel/locations/-/destGroups`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse> ListTunnelDestGroupsAsync(global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTunnelDestGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the existing TunnelDestGroups. To group across all locations, use a
      /// `-` as the location ID. For example:
      /// `/v1/projects/123/iap_tunnel/locations/-/destGroups`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse> ListTunnelDestGroupsAsync(global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTunnelDestGroups, null, options, request);
      }
      /// <summary>
      /// Creates a new TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.TunnelDestGroup CreateTunnelDestGroup(global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTunnelDestGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.TunnelDestGroup CreateTunnelDestGroup(global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTunnelDestGroup, null, options, request);
      }
      /// <summary>
      /// Creates a new TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.TunnelDestGroup> CreateTunnelDestGroupAsync(global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTunnelDestGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.TunnelDestGroup> CreateTunnelDestGroupAsync(global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTunnelDestGroup, null, options, request);
      }
      /// <summary>
      /// Retrieves an existing TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.TunnelDestGroup GetTunnelDestGroup(global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTunnelDestGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves an existing TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.TunnelDestGroup GetTunnelDestGroup(global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTunnelDestGroup, null, options, request);
      }
      /// <summary>
      /// Retrieves an existing TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.TunnelDestGroup> GetTunnelDestGroupAsync(global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTunnelDestGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves an existing TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.TunnelDestGroup> GetTunnelDestGroupAsync(global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTunnelDestGroup, null, options, request);
      }
      /// <summary>
      /// Deletes a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTunnelDestGroup(global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTunnelDestGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTunnelDestGroup(global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTunnelDestGroup, null, options, request);
      }
      /// <summary>
      /// Deletes a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTunnelDestGroupAsync(global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTunnelDestGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTunnelDestGroupAsync(global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTunnelDestGroup, null, options, request);
      }
      /// <summary>
      /// Updates a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.TunnelDestGroup UpdateTunnelDestGroup(global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTunnelDestGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.TunnelDestGroup UpdateTunnelDestGroup(global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTunnelDestGroup, null, options, request);
      }
      /// <summary>
      /// Updates a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.TunnelDestGroup> UpdateTunnelDestGroupAsync(global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTunnelDestGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a TunnelDestGroup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.TunnelDestGroup> UpdateTunnelDestGroupAsync(global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTunnelDestGroup, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override IdentityAwareProxyAdminServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IdentityAwareProxyAdminServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(IdentityAwareProxyAdminServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions)
          .AddMethod(__Method_GetIapSettings, serviceImpl.GetIapSettings)
          .AddMethod(__Method_UpdateIapSettings, serviceImpl.UpdateIapSettings)
          .AddMethod(__Method_ListTunnelDestGroups, serviceImpl.ListTunnelDestGroups)
          .AddMethod(__Method_CreateTunnelDestGroup, serviceImpl.CreateTunnelDestGroup)
          .AddMethod(__Method_GetTunnelDestGroup, serviceImpl.GetTunnelDestGroup)
          .AddMethod(__Method_DeleteTunnelDestGroup, serviceImpl.DeleteTunnelDestGroup)
          .AddMethod(__Method_UpdateTunnelDestGroup, serviceImpl.UpdateTunnelDestGroup).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IdentityAwareProxyAdminServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
      serviceBinder.AddMethod(__Method_GetIapSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.GetIapSettingsRequest, global::Google.Cloud.Iap.V1.IapSettings>(serviceImpl.GetIapSettings));
      serviceBinder.AddMethod(__Method_UpdateIapSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.UpdateIapSettingsRequest, global::Google.Cloud.Iap.V1.IapSettings>(serviceImpl.UpdateIapSettings));
      serviceBinder.AddMethod(__Method_ListTunnelDestGroups, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.ListTunnelDestGroupsRequest, global::Google.Cloud.Iap.V1.ListTunnelDestGroupsResponse>(serviceImpl.ListTunnelDestGroups));
      serviceBinder.AddMethod(__Method_CreateTunnelDestGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.CreateTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup>(serviceImpl.CreateTunnelDestGroup));
      serviceBinder.AddMethod(__Method_GetTunnelDestGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.GetTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup>(serviceImpl.GetTunnelDestGroup));
      serviceBinder.AddMethod(__Method_DeleteTunnelDestGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.DeleteTunnelDestGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTunnelDestGroup));
      serviceBinder.AddMethod(__Method_UpdateTunnelDestGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.UpdateTunnelDestGroupRequest, global::Google.Cloud.Iap.V1.TunnelDestGroup>(serviceImpl.UpdateTunnelDestGroup));
    }

  }
  /// <summary>
  /// API to programmatically create, list and retrieve Identity Aware Proxy (IAP)
  /// OAuth brands; and create, retrieve, delete and reset-secret of IAP OAuth
  /// clients.
  /// </summary>
  public static partial class IdentityAwareProxyOAuthService
  {
    static readonly string __ServiceName = "google.cloud.iap.v1.IdentityAwareProxyOAuthService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.ListBrandsRequest> __Marshaller_google_cloud_iap_v1_ListBrandsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.ListBrandsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.ListBrandsResponse> __Marshaller_google_cloud_iap_v1_ListBrandsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.ListBrandsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.CreateBrandRequest> __Marshaller_google_cloud_iap_v1_CreateBrandRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.CreateBrandRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.Brand> __Marshaller_google_cloud_iap_v1_Brand = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.Brand.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.GetBrandRequest> __Marshaller_google_cloud_iap_v1_GetBrandRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.GetBrandRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest> __Marshaller_google_cloud_iap_v1_CreateIdentityAwareProxyClientRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> __Marshaller_google_cloud_iap_v1_IdentityAwareProxyClient = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest> __Marshaller_google_cloud_iap_v1_ListIdentityAwareProxyClientsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse> __Marshaller_google_cloud_iap_v1_ListIdentityAwareProxyClientsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest> __Marshaller_google_cloud_iap_v1_GetIdentityAwareProxyClientRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest> __Marshaller_google_cloud_iap_v1_ResetIdentityAwareProxyClientSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest> __Marshaller_google_cloud_iap_v1_DeleteIdentityAwareProxyClientRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.ListBrandsRequest, global::Google.Cloud.Iap.V1.ListBrandsResponse> __Method_ListBrands = new grpc::Method<global::Google.Cloud.Iap.V1.ListBrandsRequest, global::Google.Cloud.Iap.V1.ListBrandsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBrands",
        __Marshaller_google_cloud_iap_v1_ListBrandsRequest,
        __Marshaller_google_cloud_iap_v1_ListBrandsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.CreateBrandRequest, global::Google.Cloud.Iap.V1.Brand> __Method_CreateBrand = new grpc::Method<global::Google.Cloud.Iap.V1.CreateBrandRequest, global::Google.Cloud.Iap.V1.Brand>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBrand",
        __Marshaller_google_cloud_iap_v1_CreateBrandRequest,
        __Marshaller_google_cloud_iap_v1_Brand);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.GetBrandRequest, global::Google.Cloud.Iap.V1.Brand> __Method_GetBrand = new grpc::Method<global::Google.Cloud.Iap.V1.GetBrandRequest, global::Google.Cloud.Iap.V1.Brand>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBrand",
        __Marshaller_google_cloud_iap_v1_GetBrandRequest,
        __Marshaller_google_cloud_iap_v1_Brand);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> __Method_CreateIdentityAwareProxyClient = new grpc::Method<global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateIdentityAwareProxyClient",
        __Marshaller_google_cloud_iap_v1_CreateIdentityAwareProxyClientRequest,
        __Marshaller_google_cloud_iap_v1_IdentityAwareProxyClient);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest, global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse> __Method_ListIdentityAwareProxyClients = new grpc::Method<global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest, global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListIdentityAwareProxyClients",
        __Marshaller_google_cloud_iap_v1_ListIdentityAwareProxyClientsRequest,
        __Marshaller_google_cloud_iap_v1_ListIdentityAwareProxyClientsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> __Method_GetIdentityAwareProxyClient = new grpc::Method<global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIdentityAwareProxyClient",
        __Marshaller_google_cloud_iap_v1_GetIdentityAwareProxyClientRequest,
        __Marshaller_google_cloud_iap_v1_IdentityAwareProxyClient);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> __Method_ResetIdentityAwareProxyClientSecret = new grpc::Method<global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetIdentityAwareProxyClientSecret",
        __Marshaller_google_cloud_iap_v1_ResetIdentityAwareProxyClientSecretRequest,
        __Marshaller_google_cloud_iap_v1_IdentityAwareProxyClient);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteIdentityAwareProxyClient = new grpc::Method<global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteIdentityAwareProxyClient",
        __Marshaller_google_cloud_iap_v1_DeleteIdentityAwareProxyClientRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Iap.V1.ServiceReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of IdentityAwareProxyOAuthService</summary>
    [grpc::BindServiceMethod(typeof(IdentityAwareProxyOAuthService), "BindService")]
    public abstract partial class IdentityAwareProxyOAuthServiceBase
    {
      /// <summary>
      /// Lists the existing brands for the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.ListBrandsResponse> ListBrands(global::Google.Cloud.Iap.V1.ListBrandsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Constructs a new OAuth brand for the project if one does not exist.
      /// The created brand is "internal only", meaning that OAuth clients created
      /// under it only accept requests from users who belong to the same Google
      /// Workspace organization as the project. The brand is created in an
      /// un-reviewed status. NOTE: The "internal only" status can be manually
      /// changed in the Google Cloud Console. Requires that a brand does not already
      /// exist for the project, and that the specified support email is owned by the
      /// caller.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.Brand> CreateBrand(global::Google.Cloud.Iap.V1.CreateBrandRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the OAuth brand of the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.Brand> GetBrand(global::Google.Cloud.Iap.V1.GetBrandRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an Identity Aware Proxy (IAP) OAuth client. The client is owned
      /// by IAP. Requires that the brand for the project exists and that it is
      /// set for internal-only use.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> CreateIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the existing clients for the brand.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse> ListIdentityAwareProxyClients(global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves an Identity Aware Proxy (IAP) OAuth client.
      /// Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> GetIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resets an Identity Aware Proxy (IAP) OAuth client secret. Useful if the
      /// secret was compromised. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> ResetIdentityAwareProxyClientSecret(global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an Identity Aware Proxy (IAP) OAuth client. Useful for removing
      /// obsolete clients, managing the number of clients in a given project, and
      /// cleaning up after tests. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for IdentityAwareProxyOAuthService</summary>
    public partial class IdentityAwareProxyOAuthServiceClient : grpc::ClientBase<IdentityAwareProxyOAuthServiceClient>
    {
      /// <summary>Creates a new client for IdentityAwareProxyOAuthService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IdentityAwareProxyOAuthServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for IdentityAwareProxyOAuthService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IdentityAwareProxyOAuthServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IdentityAwareProxyOAuthServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IdentityAwareProxyOAuthServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists the existing brands for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.ListBrandsResponse ListBrands(global::Google.Cloud.Iap.V1.ListBrandsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBrands(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the existing brands for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.ListBrandsResponse ListBrands(global::Google.Cloud.Iap.V1.ListBrandsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBrands, null, options, request);
      }
      /// <summary>
      /// Lists the existing brands for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.ListBrandsResponse> ListBrandsAsync(global::Google.Cloud.Iap.V1.ListBrandsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBrandsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the existing brands for the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.ListBrandsResponse> ListBrandsAsync(global::Google.Cloud.Iap.V1.ListBrandsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBrands, null, options, request);
      }
      /// <summary>
      /// Constructs a new OAuth brand for the project if one does not exist.
      /// The created brand is "internal only", meaning that OAuth clients created
      /// under it only accept requests from users who belong to the same Google
      /// Workspace organization as the project. The brand is created in an
      /// un-reviewed status. NOTE: The "internal only" status can be manually
      /// changed in the Google Cloud Console. Requires that a brand does not already
      /// exist for the project, and that the specified support email is owned by the
      /// caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.Brand CreateBrand(global::Google.Cloud.Iap.V1.CreateBrandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBrand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Constructs a new OAuth brand for the project if one does not exist.
      /// The created brand is "internal only", meaning that OAuth clients created
      /// under it only accept requests from users who belong to the same Google
      /// Workspace organization as the project. The brand is created in an
      /// un-reviewed status. NOTE: The "internal only" status can be manually
      /// changed in the Google Cloud Console. Requires that a brand does not already
      /// exist for the project, and that the specified support email is owned by the
      /// caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.Brand CreateBrand(global::Google.Cloud.Iap.V1.CreateBrandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBrand, null, options, request);
      }
      /// <summary>
      /// Constructs a new OAuth brand for the project if one does not exist.
      /// The created brand is "internal only", meaning that OAuth clients created
      /// under it only accept requests from users who belong to the same Google
      /// Workspace organization as the project. The brand is created in an
      /// un-reviewed status. NOTE: The "internal only" status can be manually
      /// changed in the Google Cloud Console. Requires that a brand does not already
      /// exist for the project, and that the specified support email is owned by the
      /// caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.Brand> CreateBrandAsync(global::Google.Cloud.Iap.V1.CreateBrandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBrandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Constructs a new OAuth brand for the project if one does not exist.
      /// The created brand is "internal only", meaning that OAuth clients created
      /// under it only accept requests from users who belong to the same Google
      /// Workspace organization as the project. The brand is created in an
      /// un-reviewed status. NOTE: The "internal only" status can be manually
      /// changed in the Google Cloud Console. Requires that a brand does not already
      /// exist for the project, and that the specified support email is owned by the
      /// caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.Brand> CreateBrandAsync(global::Google.Cloud.Iap.V1.CreateBrandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBrand, null, options, request);
      }
      /// <summary>
      /// Retrieves the OAuth brand of the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.Brand GetBrand(global::Google.Cloud.Iap.V1.GetBrandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBrand(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the OAuth brand of the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.Brand GetBrand(global::Google.Cloud.Iap.V1.GetBrandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBrand, null, options, request);
      }
      /// <summary>
      /// Retrieves the OAuth brand of the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.Brand> GetBrandAsync(global::Google.Cloud.Iap.V1.GetBrandRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBrandAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the OAuth brand of the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.Brand> GetBrandAsync(global::Google.Cloud.Iap.V1.GetBrandRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBrand, null, options, request);
      }
      /// <summary>
      /// Creates an Identity Aware Proxy (IAP) OAuth client. The client is owned
      /// by IAP. Requires that the brand for the project exists and that it is
      /// set for internal-only use.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IdentityAwareProxyClient CreateIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateIdentityAwareProxyClient(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an Identity Aware Proxy (IAP) OAuth client. The client is owned
      /// by IAP. Requires that the brand for the project exists and that it is
      /// set for internal-only use.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IdentityAwareProxyClient CreateIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateIdentityAwareProxyClient, null, options, request);
      }
      /// <summary>
      /// Creates an Identity Aware Proxy (IAP) OAuth client. The client is owned
      /// by IAP. Requires that the brand for the project exists and that it is
      /// set for internal-only use.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> CreateIdentityAwareProxyClientAsync(global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateIdentityAwareProxyClientAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an Identity Aware Proxy (IAP) OAuth client. The client is owned
      /// by IAP. Requires that the brand for the project exists and that it is
      /// set for internal-only use.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> CreateIdentityAwareProxyClientAsync(global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateIdentityAwareProxyClient, null, options, request);
      }
      /// <summary>
      /// Lists the existing clients for the brand.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse ListIdentityAwareProxyClients(global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListIdentityAwareProxyClients(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the existing clients for the brand.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse ListIdentityAwareProxyClients(global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListIdentityAwareProxyClients, null, options, request);
      }
      /// <summary>
      /// Lists the existing clients for the brand.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse> ListIdentityAwareProxyClientsAsync(global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListIdentityAwareProxyClientsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the existing clients for the brand.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse> ListIdentityAwareProxyClientsAsync(global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListIdentityAwareProxyClients, null, options, request);
      }
      /// <summary>
      /// Retrieves an Identity Aware Proxy (IAP) OAuth client.
      /// Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IdentityAwareProxyClient GetIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIdentityAwareProxyClient(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves an Identity Aware Proxy (IAP) OAuth client.
      /// Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IdentityAwareProxyClient GetIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIdentityAwareProxyClient, null, options, request);
      }
      /// <summary>
      /// Retrieves an Identity Aware Proxy (IAP) OAuth client.
      /// Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> GetIdentityAwareProxyClientAsync(global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIdentityAwareProxyClientAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves an Identity Aware Proxy (IAP) OAuth client.
      /// Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> GetIdentityAwareProxyClientAsync(global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIdentityAwareProxyClient, null, options, request);
      }
      /// <summary>
      /// Resets an Identity Aware Proxy (IAP) OAuth client secret. Useful if the
      /// secret was compromised. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IdentityAwareProxyClient ResetIdentityAwareProxyClientSecret(global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetIdentityAwareProxyClientSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resets an Identity Aware Proxy (IAP) OAuth client secret. Useful if the
      /// secret was compromised. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iap.V1.IdentityAwareProxyClient ResetIdentityAwareProxyClientSecret(global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetIdentityAwareProxyClientSecret, null, options, request);
      }
      /// <summary>
      /// Resets an Identity Aware Proxy (IAP) OAuth client secret. Useful if the
      /// secret was compromised. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> ResetIdentityAwareProxyClientSecretAsync(global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetIdentityAwareProxyClientSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resets an Identity Aware Proxy (IAP) OAuth client secret. Useful if the
      /// secret was compromised. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iap.V1.IdentityAwareProxyClient> ResetIdentityAwareProxyClientSecretAsync(global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetIdentityAwareProxyClientSecret, null, options, request);
      }
      /// <summary>
      /// Deletes an Identity Aware Proxy (IAP) OAuth client. Useful for removing
      /// obsolete clients, managing the number of clients in a given project, and
      /// cleaning up after tests. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteIdentityAwareProxyClient(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an Identity Aware Proxy (IAP) OAuth client. Useful for removing
      /// obsolete clients, managing the number of clients in a given project, and
      /// cleaning up after tests. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteIdentityAwareProxyClient(global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteIdentityAwareProxyClient, null, options, request);
      }
      /// <summary>
      /// Deletes an Identity Aware Proxy (IAP) OAuth client. Useful for removing
      /// obsolete clients, managing the number of clients in a given project, and
      /// cleaning up after tests. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteIdentityAwareProxyClientAsync(global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteIdentityAwareProxyClientAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an Identity Aware Proxy (IAP) OAuth client. Useful for removing
      /// obsolete clients, managing the number of clients in a given project, and
      /// cleaning up after tests. Requires that the client is owned by IAP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteIdentityAwareProxyClientAsync(global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteIdentityAwareProxyClient, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override IdentityAwareProxyOAuthServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IdentityAwareProxyOAuthServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(IdentityAwareProxyOAuthServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListBrands, serviceImpl.ListBrands)
          .AddMethod(__Method_CreateBrand, serviceImpl.CreateBrand)
          .AddMethod(__Method_GetBrand, serviceImpl.GetBrand)
          .AddMethod(__Method_CreateIdentityAwareProxyClient, serviceImpl.CreateIdentityAwareProxyClient)
          .AddMethod(__Method_ListIdentityAwareProxyClients, serviceImpl.ListIdentityAwareProxyClients)
          .AddMethod(__Method_GetIdentityAwareProxyClient, serviceImpl.GetIdentityAwareProxyClient)
          .AddMethod(__Method_ResetIdentityAwareProxyClientSecret, serviceImpl.ResetIdentityAwareProxyClientSecret)
          .AddMethod(__Method_DeleteIdentityAwareProxyClient, serviceImpl.DeleteIdentityAwareProxyClient).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IdentityAwareProxyOAuthServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListBrands, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.ListBrandsRequest, global::Google.Cloud.Iap.V1.ListBrandsResponse>(serviceImpl.ListBrands));
      serviceBinder.AddMethod(__Method_CreateBrand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.CreateBrandRequest, global::Google.Cloud.Iap.V1.Brand>(serviceImpl.CreateBrand));
      serviceBinder.AddMethod(__Method_GetBrand, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.GetBrandRequest, global::Google.Cloud.Iap.V1.Brand>(serviceImpl.GetBrand));
      serviceBinder.AddMethod(__Method_CreateIdentityAwareProxyClient, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.CreateIdentityAwareProxyClientRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient>(serviceImpl.CreateIdentityAwareProxyClient));
      serviceBinder.AddMethod(__Method_ListIdentityAwareProxyClients, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsRequest, global::Google.Cloud.Iap.V1.ListIdentityAwareProxyClientsResponse>(serviceImpl.ListIdentityAwareProxyClients));
      serviceBinder.AddMethod(__Method_GetIdentityAwareProxyClient, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.GetIdentityAwareProxyClientRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient>(serviceImpl.GetIdentityAwareProxyClient));
      serviceBinder.AddMethod(__Method_ResetIdentityAwareProxyClientSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.ResetIdentityAwareProxyClientSecretRequest, global::Google.Cloud.Iap.V1.IdentityAwareProxyClient>(serviceImpl.ResetIdentityAwareProxyClientSecret));
      serviceBinder.AddMethod(__Method_DeleteIdentityAwareProxyClient, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iap.V1.DeleteIdentityAwareProxyClientRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteIdentityAwareProxyClient));
    }

  }
}
#endregion
