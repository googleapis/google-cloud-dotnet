// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/run/v2/execution_template.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Run.V2 {

  /// <summary>Holder for reflection information generated from google/cloud/run/v2/execution_template.proto</summary>
  public static partial class ExecutionTemplateReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/run/v2/execution_template.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExecutionTemplateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvY2xvdWQvcnVuL3YyL2V4ZWN1dGlvbl90ZW1wbGF0ZS5wcm90",
            "bxITZ29vZ2xlLmNsb3VkLnJ1bi52MhofZ29vZ2xlL2FwaS9maWVsZF9iZWhh",
            "dmlvci5wcm90bxonZ29vZ2xlL2Nsb3VkL3J1bi92Mi90YXNrX3RlbXBsYXRl",
            "LnByb3RvIusCChFFeGVjdXRpb25UZW1wbGF0ZRJCCgZsYWJlbHMYASADKAsy",
            "Mi5nb29nbGUuY2xvdWQucnVuLnYyLkV4ZWN1dGlvblRlbXBsYXRlLkxhYmVs",
            "c0VudHJ5EkwKC2Fubm90YXRpb25zGAIgAygLMjcuZ29vZ2xlLmNsb3VkLnJ1",
            "bi52Mi5FeGVjdXRpb25UZW1wbGF0ZS5Bbm5vdGF0aW9uc0VudHJ5EhMKC3Bh",
            "cmFsbGVsaXNtGAMgASgFEhIKCnRhc2tfY291bnQYBCABKAUSOAoIdGVtcGxh",
            "dGUYBSABKAsyIS5nb29nbGUuY2xvdWQucnVuLnYyLlRhc2tUZW1wbGF0ZUID",
            "4EECGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "CToCOAEaMgoQQW5ub3RhdGlvbnNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFs",
            "dWUYAiABKAk6AjgBQl4KF2NvbS5nb29nbGUuY2xvdWQucnVuLnYyQhZFeGVj",
            "dXRpb25UZW1wbGF0ZVByb3RvUAFaKWNsb3VkLmdvb2dsZS5jb20vZ28vcnVu",
            "L2FwaXYyL3J1bnBiO3J1bnBiYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Cloud.Run.V2.TaskTemplateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Run.V2.ExecutionTemplate), global::Google.Cloud.Run.V2.ExecutionTemplate.Parser, new[]{ "Labels", "Annotations", "Parallelism", "TaskCount", "Template" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// ExecutionTemplate describes the data an execution should have when created
  /// from a template.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ExecutionTemplate : pb::IMessage<ExecutionTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutionTemplate> _parser = new pb::MessageParser<ExecutionTemplate>(() => new ExecutionTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExecutionTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Run.V2.ExecutionTemplateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionTemplate(ExecutionTemplate other) : this() {
      labels_ = other.labels_.Clone();
      annotations_ = other.annotations_.Clone();
      parallelism_ = other.parallelism_;
      taskCount_ = other.taskCount_;
      template_ = other.template_ != null ? other.template_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExecutionTemplate Clone() {
      return new ExecutionTemplate(this);
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Unstructured key value map that can be used to organize and categorize
    /// objects.
    /// User-provided labels are shared with Google's billing system, so they can
    /// be used to filter, or break down billing charges by team, component,
    /// environment, state, etc. For more information, visit
    /// https://cloud.google.com/resource-manager/docs/creating-managing-labels or
    /// https://cloud.google.com/run/docs/configuring/labels.
    ///
    /// &lt;p>Cloud Run API v2 does not support labels with `run.googleapis.com`,
    /// `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev`
    /// namespaces, and they will be rejected. All system labels in v1 now have a
    /// corresponding field in v2 ExecutionTemplate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_annotations_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> annotations_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Unstructured key value map that may be set by external tools to store and
    /// arbitrary metadata. They are not queryable and should be preserved
    /// when modifying objects.
    ///
    /// &lt;p>Cloud Run API v2 does not support annotations with `run.googleapis.com`,
    /// `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev`
    /// namespaces, and they will be rejected. All system annotations in v1 now
    /// have a corresponding field in v2 ExecutionTemplate.
    ///
    /// &lt;p>This field follows Kubernetes annotations' namespacing, limits, and
    /// rules.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Annotations {
      get { return annotations_; }
    }

    /// <summary>Field number for the "parallelism" field.</summary>
    public const int ParallelismFieldNumber = 3;
    private int parallelism_;
    /// <summary>
    /// Specifies the maximum desired number of tasks the execution should run at
    /// given time. Must be &lt;= task_count.
    /// When the job is run, if this field is 0 or unset, the maximum possible
    /// value will be used for that execution.
    /// The actual number of tasks running in steady state will be less than this
    /// number when there are fewer tasks waiting to be completed remaining,
    /// i.e. when the work left to do is less than max parallelism.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Parallelism {
      get { return parallelism_; }
      set {
        parallelism_ = value;
      }
    }

    /// <summary>Field number for the "task_count" field.</summary>
    public const int TaskCountFieldNumber = 4;
    private int taskCount_;
    /// <summary>
    /// Specifies the desired number of tasks the execution should run.
    /// Setting to 1 means that parallelism is limited to 1 and the success of
    /// that task signals the success of the execution. Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TaskCount {
      get { return taskCount_; }
      set {
        taskCount_ = value;
      }
    }

    /// <summary>Field number for the "template" field.</summary>
    public const int TemplateFieldNumber = 5;
    private global::Google.Cloud.Run.V2.TaskTemplate template_;
    /// <summary>
    /// Required. Describes the task(s) that will be created when executing an
    /// execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Run.V2.TaskTemplate Template {
      get { return template_; }
      set {
        template_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExecutionTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExecutionTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Labels.Equals(other.Labels)) return false;
      if (!Annotations.Equals(other.Annotations)) return false;
      if (Parallelism != other.Parallelism) return false;
      if (TaskCount != other.TaskCount) return false;
      if (!object.Equals(Template, other.Template)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Labels.GetHashCode();
      hash ^= Annotations.GetHashCode();
      if (Parallelism != 0) hash ^= Parallelism.GetHashCode();
      if (TaskCount != 0) hash ^= TaskCount.GetHashCode();
      if (template_ != null) hash ^= Template.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      labels_.WriteTo(output, _map_labels_codec);
      annotations_.WriteTo(output, _map_annotations_codec);
      if (Parallelism != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Parallelism);
      }
      if (TaskCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TaskCount);
      }
      if (template_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Template);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      labels_.WriteTo(ref output, _map_labels_codec);
      annotations_.WriteTo(ref output, _map_annotations_codec);
      if (Parallelism != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Parallelism);
      }
      if (TaskCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TaskCount);
      }
      if (template_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Template);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += labels_.CalculateSize(_map_labels_codec);
      size += annotations_.CalculateSize(_map_annotations_codec);
      if (Parallelism != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Parallelism);
      }
      if (TaskCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskCount);
      }
      if (template_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Template);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExecutionTemplate other) {
      if (other == null) {
        return;
      }
      labels_.MergeFrom(other.labels_);
      annotations_.MergeFrom(other.annotations_);
      if (other.Parallelism != 0) {
        Parallelism = other.Parallelism;
      }
      if (other.TaskCount != 0) {
        TaskCount = other.TaskCount;
      }
      if (other.template_ != null) {
        if (template_ == null) {
          Template = new global::Google.Cloud.Run.V2.TaskTemplate();
        }
        Template.MergeFrom(other.Template);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 18: {
            annotations_.AddEntriesFrom(input, _map_annotations_codec);
            break;
          }
          case 24: {
            Parallelism = input.ReadInt32();
            break;
          }
          case 32: {
            TaskCount = input.ReadInt32();
            break;
          }
          case 42: {
            if (template_ == null) {
              Template = new global::Google.Cloud.Run.V2.TaskTemplate();
            }
            input.ReadMessage(Template);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 18: {
            annotations_.AddEntriesFrom(ref input, _map_annotations_codec);
            break;
          }
          case 24: {
            Parallelism = input.ReadInt32();
            break;
          }
          case 32: {
            TaskCount = input.ReadInt32();
            break;
          }
          case 42: {
            if (template_ == null) {
              Template = new global::Google.Cloud.Run.V2.TaskTemplate();
            }
            input.ReadMessage(Template);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
