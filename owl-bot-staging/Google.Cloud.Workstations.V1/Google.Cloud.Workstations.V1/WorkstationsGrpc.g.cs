// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/workstations/v1/workstations.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Workstations.V1 {
  /// <summary>
  /// Service for interacting with Cloud Workstations.
  /// </summary>
  public static partial class Workstations
  {
    static readonly string __ServiceName = "google.cloud.workstations.v1.Workstations";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest> __Marshaller_google_cloud_workstations_v1_GetWorkstationClusterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.WorkstationCluster> __Marshaller_google_cloud_workstations_v1_WorkstationCluster = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.WorkstationCluster.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest> __Marshaller_google_cloud_workstations_v1_ListWorkstationClustersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse> __Marshaller_google_cloud_workstations_v1_ListWorkstationClustersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest> __Marshaller_google_cloud_workstations_v1_CreateWorkstationClusterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest> __Marshaller_google_cloud_workstations_v1_UpdateWorkstationClusterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest> __Marshaller_google_cloud_workstations_v1_DeleteWorkstationClusterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest> __Marshaller_google_cloud_workstations_v1_GetWorkstationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.WorkstationConfig> __Marshaller_google_cloud_workstations_v1_WorkstationConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.WorkstationConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest> __Marshaller_google_cloud_workstations_v1_ListWorkstationConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse> __Marshaller_google_cloud_workstations_v1_ListWorkstationConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest> __Marshaller_google_cloud_workstations_v1_ListUsableWorkstationConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse> __Marshaller_google_cloud_workstations_v1_ListUsableWorkstationConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest> __Marshaller_google_cloud_workstations_v1_CreateWorkstationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest> __Marshaller_google_cloud_workstations_v1_UpdateWorkstationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest> __Marshaller_google_cloud_workstations_v1_DeleteWorkstationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.GetWorkstationRequest> __Marshaller_google_cloud_workstations_v1_GetWorkstationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.GetWorkstationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.Workstation> __Marshaller_google_cloud_workstations_v1_Workstation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.Workstation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListWorkstationsRequest> __Marshaller_google_cloud_workstations_v1_ListWorkstationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListWorkstationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListWorkstationsResponse> __Marshaller_google_cloud_workstations_v1_ListWorkstationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListWorkstationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest> __Marshaller_google_cloud_workstations_v1_ListUsableWorkstationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse> __Marshaller_google_cloud_workstations_v1_ListUsableWorkstationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.CreateWorkstationRequest> __Marshaller_google_cloud_workstations_v1_CreateWorkstationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.CreateWorkstationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest> __Marshaller_google_cloud_workstations_v1_UpdateWorkstationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest> __Marshaller_google_cloud_workstations_v1_DeleteWorkstationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.StartWorkstationRequest> __Marshaller_google_cloud_workstations_v1_StartWorkstationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.StartWorkstationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.StopWorkstationRequest> __Marshaller_google_cloud_workstations_v1_StopWorkstationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.StopWorkstationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest> __Marshaller_google_cloud_workstations_v1_GenerateAccessTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse> __Marshaller_google_cloud_workstations_v1_GenerateAccessTokenResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest, global::Google.Cloud.Workstations.V1.WorkstationCluster> __Method_GetWorkstationCluster = new grpc::Method<global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest, global::Google.Cloud.Workstations.V1.WorkstationCluster>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkstationCluster",
        __Marshaller_google_cloud_workstations_v1_GetWorkstationClusterRequest,
        __Marshaller_google_cloud_workstations_v1_WorkstationCluster);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest, global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse> __Method_ListWorkstationClusters = new grpc::Method<global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest, global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorkstationClusters",
        __Marshaller_google_cloud_workstations_v1_ListWorkstationClustersRequest,
        __Marshaller_google_cloud_workstations_v1_ListWorkstationClustersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest, global::Google.LongRunning.Operation> __Method_CreateWorkstationCluster = new grpc::Method<global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWorkstationCluster",
        __Marshaller_google_cloud_workstations_v1_CreateWorkstationClusterRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest, global::Google.LongRunning.Operation> __Method_UpdateWorkstationCluster = new grpc::Method<global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkstationCluster",
        __Marshaller_google_cloud_workstations_v1_UpdateWorkstationClusterRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest, global::Google.LongRunning.Operation> __Method_DeleteWorkstationCluster = new grpc::Method<global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWorkstationCluster",
        __Marshaller_google_cloud_workstations_v1_DeleteWorkstationClusterRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest, global::Google.Cloud.Workstations.V1.WorkstationConfig> __Method_GetWorkstationConfig = new grpc::Method<global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest, global::Google.Cloud.Workstations.V1.WorkstationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkstationConfig",
        __Marshaller_google_cloud_workstations_v1_GetWorkstationConfigRequest,
        __Marshaller_google_cloud_workstations_v1_WorkstationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest, global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse> __Method_ListWorkstationConfigs = new grpc::Method<global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest, global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorkstationConfigs",
        __Marshaller_google_cloud_workstations_v1_ListWorkstationConfigsRequest,
        __Marshaller_google_cloud_workstations_v1_ListWorkstationConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest, global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse> __Method_ListUsableWorkstationConfigs = new grpc::Method<global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest, global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUsableWorkstationConfigs",
        __Marshaller_google_cloud_workstations_v1_ListUsableWorkstationConfigsRequest,
        __Marshaller_google_cloud_workstations_v1_ListUsableWorkstationConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest, global::Google.LongRunning.Operation> __Method_CreateWorkstationConfig = new grpc::Method<global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWorkstationConfig",
        __Marshaller_google_cloud_workstations_v1_CreateWorkstationConfigRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest, global::Google.LongRunning.Operation> __Method_UpdateWorkstationConfig = new grpc::Method<global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkstationConfig",
        __Marshaller_google_cloud_workstations_v1_UpdateWorkstationConfigRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest, global::Google.LongRunning.Operation> __Method_DeleteWorkstationConfig = new grpc::Method<global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWorkstationConfig",
        __Marshaller_google_cloud_workstations_v1_DeleteWorkstationConfigRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.GetWorkstationRequest, global::Google.Cloud.Workstations.V1.Workstation> __Method_GetWorkstation = new grpc::Method<global::Google.Cloud.Workstations.V1.GetWorkstationRequest, global::Google.Cloud.Workstations.V1.Workstation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkstation",
        __Marshaller_google_cloud_workstations_v1_GetWorkstationRequest,
        __Marshaller_google_cloud_workstations_v1_Workstation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.ListWorkstationsRequest, global::Google.Cloud.Workstations.V1.ListWorkstationsResponse> __Method_ListWorkstations = new grpc::Method<global::Google.Cloud.Workstations.V1.ListWorkstationsRequest, global::Google.Cloud.Workstations.V1.ListWorkstationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorkstations",
        __Marshaller_google_cloud_workstations_v1_ListWorkstationsRequest,
        __Marshaller_google_cloud_workstations_v1_ListWorkstationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest, global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse> __Method_ListUsableWorkstations = new grpc::Method<global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest, global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUsableWorkstations",
        __Marshaller_google_cloud_workstations_v1_ListUsableWorkstationsRequest,
        __Marshaller_google_cloud_workstations_v1_ListUsableWorkstationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.CreateWorkstationRequest, global::Google.LongRunning.Operation> __Method_CreateWorkstation = new grpc::Method<global::Google.Cloud.Workstations.V1.CreateWorkstationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWorkstation",
        __Marshaller_google_cloud_workstations_v1_CreateWorkstationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest, global::Google.LongRunning.Operation> __Method_UpdateWorkstation = new grpc::Method<global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkstation",
        __Marshaller_google_cloud_workstations_v1_UpdateWorkstationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest, global::Google.LongRunning.Operation> __Method_DeleteWorkstation = new grpc::Method<global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWorkstation",
        __Marshaller_google_cloud_workstations_v1_DeleteWorkstationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.StartWorkstationRequest, global::Google.LongRunning.Operation> __Method_StartWorkstation = new grpc::Method<global::Google.Cloud.Workstations.V1.StartWorkstationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartWorkstation",
        __Marshaller_google_cloud_workstations_v1_StartWorkstationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.StopWorkstationRequest, global::Google.LongRunning.Operation> __Method_StopWorkstation = new grpc::Method<global::Google.Cloud.Workstations.V1.StopWorkstationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopWorkstation",
        __Marshaller_google_cloud_workstations_v1_StopWorkstationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest, global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse> __Method_GenerateAccessToken = new grpc::Method<global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest, global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateAccessToken",
        __Marshaller_google_cloud_workstations_v1_GenerateAccessTokenRequest,
        __Marshaller_google_cloud_workstations_v1_GenerateAccessTokenResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Workstations.V1.WorkstationsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Workstations</summary>
    [grpc::BindServiceMethod(typeof(Workstations), "BindService")]
    public abstract partial class WorkstationsBase
    {
      /// <summary>
      /// Returns the requested workstation cluster.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.WorkstationCluster> GetWorkstationCluster(global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all workstation clusters in the specified location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse> ListWorkstationClusters(global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new workstation cluster.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateWorkstationCluster(global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing workstation cluster.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateWorkstationCluster(global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified workstation cluster.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteWorkstationCluster(global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the requested workstation configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.WorkstationConfig> GetWorkstationConfig(global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all workstation configurations in the specified cluster.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse> ListWorkstationConfigs(global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all workstation configurations in the specified cluster on which
      /// the caller has the "workstations.workstation.create" permission.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse> ListUsableWorkstationConfigs(global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new workstation configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateWorkstationConfig(global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing workstation configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateWorkstationConfig(global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteWorkstationConfig(global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the requested workstation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.Workstation> GetWorkstation(global::Google.Cloud.Workstations.V1.GetWorkstationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all Workstations using the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.ListWorkstationsResponse> ListWorkstations(global::Google.Cloud.Workstations.V1.ListWorkstationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all workstations using the specified workstation configuration
      /// on which the caller has the "workstations.workstations.use" permission.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse> ListUsableWorkstations(global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new workstation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateWorkstation(global::Google.Cloud.Workstations.V1.CreateWorkstationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing workstation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateWorkstation(global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified workstation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteWorkstation(global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts running a workstation so that users can connect to it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StartWorkstation(global::Google.Cloud.Workstations.V1.StartWorkstationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stops running a workstation, reducing costs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StopWorkstation(global::Google.Cloud.Workstations.V1.StopWorkstationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a short-lived credential that can be used to send authenticated and
      /// authorized traffic to a workstation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse> GenerateAccessToken(global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Workstations</summary>
    public partial class WorkstationsClient : grpc::ClientBase<WorkstationsClient>
    {
      /// <summary>Creates a new client for Workstations</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public WorkstationsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Workstations that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public WorkstationsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected WorkstationsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected WorkstationsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the requested workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.WorkstationCluster GetWorkstationCluster(global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkstationCluster(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.WorkstationCluster GetWorkstationCluster(global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkstationCluster, null, options, request);
      }
      /// <summary>
      /// Returns the requested workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.WorkstationCluster> GetWorkstationClusterAsync(global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkstationClusterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.WorkstationCluster> GetWorkstationClusterAsync(global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkstationCluster, null, options, request);
      }
      /// <summary>
      /// Returns all workstation clusters in the specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse ListWorkstationClusters(global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkstationClusters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all workstation clusters in the specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse ListWorkstationClusters(global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWorkstationClusters, null, options, request);
      }
      /// <summary>
      /// Returns all workstation clusters in the specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse> ListWorkstationClustersAsync(global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkstationClustersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all workstation clusters in the specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse> ListWorkstationClustersAsync(global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWorkstationClusters, null, options, request);
      }
      /// <summary>
      /// Creates a new workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkstationCluster(global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkstationCluster(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkstationCluster(global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWorkstationCluster, null, options, request);
      }
      /// <summary>
      /// Creates a new workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkstationClusterAsync(global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkstationClusterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkstationClusterAsync(global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWorkstationCluster, null, options, request);
      }
      /// <summary>
      /// Updates an existing workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateWorkstationCluster(global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkstationCluster(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateWorkstationCluster(global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWorkstationCluster, null, options, request);
      }
      /// <summary>
      /// Updates an existing workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateWorkstationClusterAsync(global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkstationClusterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateWorkstationClusterAsync(global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWorkstationCluster, null, options, request);
      }
      /// <summary>
      /// Deletes the specified workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteWorkstationCluster(global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkstationCluster(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteWorkstationCluster(global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWorkstationCluster, null, options, request);
      }
      /// <summary>
      /// Deletes the specified workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteWorkstationClusterAsync(global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkstationClusterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified workstation cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteWorkstationClusterAsync(global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWorkstationCluster, null, options, request);
      }
      /// <summary>
      /// Returns the requested workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.WorkstationConfig GetWorkstationConfig(global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkstationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.WorkstationConfig GetWorkstationConfig(global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkstationConfig, null, options, request);
      }
      /// <summary>
      /// Returns the requested workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.WorkstationConfig> GetWorkstationConfigAsync(global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkstationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.WorkstationConfig> GetWorkstationConfigAsync(global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkstationConfig, null, options, request);
      }
      /// <summary>
      /// Returns all workstation configurations in the specified cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse ListWorkstationConfigs(global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkstationConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all workstation configurations in the specified cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse ListWorkstationConfigs(global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWorkstationConfigs, null, options, request);
      }
      /// <summary>
      /// Returns all workstation configurations in the specified cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse> ListWorkstationConfigsAsync(global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkstationConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all workstation configurations in the specified cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse> ListWorkstationConfigsAsync(global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWorkstationConfigs, null, options, request);
      }
      /// <summary>
      /// Returns all workstation configurations in the specified cluster on which
      /// the caller has the "workstations.workstation.create" permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse ListUsableWorkstationConfigs(global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsableWorkstationConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all workstation configurations in the specified cluster on which
      /// the caller has the "workstations.workstation.create" permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse ListUsableWorkstationConfigs(global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUsableWorkstationConfigs, null, options, request);
      }
      /// <summary>
      /// Returns all workstation configurations in the specified cluster on which
      /// the caller has the "workstations.workstation.create" permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse> ListUsableWorkstationConfigsAsync(global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsableWorkstationConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all workstation configurations in the specified cluster on which
      /// the caller has the "workstations.workstation.create" permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse> ListUsableWorkstationConfigsAsync(global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUsableWorkstationConfigs, null, options, request);
      }
      /// <summary>
      /// Creates a new workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkstationConfig(global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkstationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkstationConfig(global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWorkstationConfig, null, options, request);
      }
      /// <summary>
      /// Creates a new workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkstationConfigAsync(global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkstationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkstationConfigAsync(global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWorkstationConfig, null, options, request);
      }
      /// <summary>
      /// Updates an existing workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateWorkstationConfig(global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkstationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateWorkstationConfig(global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWorkstationConfig, null, options, request);
      }
      /// <summary>
      /// Updates an existing workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateWorkstationConfigAsync(global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkstationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateWorkstationConfigAsync(global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWorkstationConfig, null, options, request);
      }
      /// <summary>
      /// Deletes the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteWorkstationConfig(global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkstationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteWorkstationConfig(global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWorkstationConfig, null, options, request);
      }
      /// <summary>
      /// Deletes the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteWorkstationConfigAsync(global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkstationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteWorkstationConfigAsync(global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWorkstationConfig, null, options, request);
      }
      /// <summary>
      /// Returns the requested workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.Workstation GetWorkstation(global::Google.Cloud.Workstations.V1.GetWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkstation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.Workstation GetWorkstation(global::Google.Cloud.Workstations.V1.GetWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkstation, null, options, request);
      }
      /// <summary>
      /// Returns the requested workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.Workstation> GetWorkstationAsync(global::Google.Cloud.Workstations.V1.GetWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkstationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.Workstation> GetWorkstationAsync(global::Google.Cloud.Workstations.V1.GetWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkstation, null, options, request);
      }
      /// <summary>
      /// Returns all Workstations using the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListWorkstationsResponse ListWorkstations(global::Google.Cloud.Workstations.V1.ListWorkstationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkstations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all Workstations using the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListWorkstationsResponse ListWorkstations(global::Google.Cloud.Workstations.V1.ListWorkstationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWorkstations, null, options, request);
      }
      /// <summary>
      /// Returns all Workstations using the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListWorkstationsResponse> ListWorkstationsAsync(global::Google.Cloud.Workstations.V1.ListWorkstationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkstationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all Workstations using the specified workstation configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListWorkstationsResponse> ListWorkstationsAsync(global::Google.Cloud.Workstations.V1.ListWorkstationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWorkstations, null, options, request);
      }
      /// <summary>
      /// Returns all workstations using the specified workstation configuration
      /// on which the caller has the "workstations.workstations.use" permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse ListUsableWorkstations(global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsableWorkstations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all workstations using the specified workstation configuration
      /// on which the caller has the "workstations.workstations.use" permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse ListUsableWorkstations(global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUsableWorkstations, null, options, request);
      }
      /// <summary>
      /// Returns all workstations using the specified workstation configuration
      /// on which the caller has the "workstations.workstations.use" permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse> ListUsableWorkstationsAsync(global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsableWorkstationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all workstations using the specified workstation configuration
      /// on which the caller has the "workstations.workstations.use" permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse> ListUsableWorkstationsAsync(global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUsableWorkstations, null, options, request);
      }
      /// <summary>
      /// Creates a new workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkstation(global::Google.Cloud.Workstations.V1.CreateWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkstation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkstation(global::Google.Cloud.Workstations.V1.CreateWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWorkstation, null, options, request);
      }
      /// <summary>
      /// Creates a new workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkstationAsync(global::Google.Cloud.Workstations.V1.CreateWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkstationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkstationAsync(global::Google.Cloud.Workstations.V1.CreateWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWorkstation, null, options, request);
      }
      /// <summary>
      /// Updates an existing workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateWorkstation(global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkstation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateWorkstation(global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWorkstation, null, options, request);
      }
      /// <summary>
      /// Updates an existing workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateWorkstationAsync(global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkstationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateWorkstationAsync(global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWorkstation, null, options, request);
      }
      /// <summary>
      /// Deletes the specified workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteWorkstation(global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkstation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteWorkstation(global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWorkstation, null, options, request);
      }
      /// <summary>
      /// Deletes the specified workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteWorkstationAsync(global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkstationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteWorkstationAsync(global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWorkstation, null, options, request);
      }
      /// <summary>
      /// Starts running a workstation so that users can connect to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartWorkstation(global::Google.Cloud.Workstations.V1.StartWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartWorkstation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts running a workstation so that users can connect to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartWorkstation(global::Google.Cloud.Workstations.V1.StartWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartWorkstation, null, options, request);
      }
      /// <summary>
      /// Starts running a workstation so that users can connect to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartWorkstationAsync(global::Google.Cloud.Workstations.V1.StartWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartWorkstationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts running a workstation so that users can connect to it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartWorkstationAsync(global::Google.Cloud.Workstations.V1.StartWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartWorkstation, null, options, request);
      }
      /// <summary>
      /// Stops running a workstation, reducing costs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StopWorkstation(global::Google.Cloud.Workstations.V1.StopWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopWorkstation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops running a workstation, reducing costs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StopWorkstation(global::Google.Cloud.Workstations.V1.StopWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopWorkstation, null, options, request);
      }
      /// <summary>
      /// Stops running a workstation, reducing costs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StopWorkstationAsync(global::Google.Cloud.Workstations.V1.StopWorkstationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopWorkstationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops running a workstation, reducing costs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StopWorkstationAsync(global::Google.Cloud.Workstations.V1.StopWorkstationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopWorkstation, null, options, request);
      }
      /// <summary>
      /// Returns a short-lived credential that can be used to send authenticated and
      /// authorized traffic to a workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse GenerateAccessToken(global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateAccessToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a short-lived credential that can be used to send authenticated and
      /// authorized traffic to a workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse GenerateAccessToken(global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateAccessToken, null, options, request);
      }
      /// <summary>
      /// Returns a short-lived credential that can be used to send authenticated and
      /// authorized traffic to a workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse> GenerateAccessTokenAsync(global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateAccessTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a short-lived credential that can be used to send authenticated and
      /// authorized traffic to a workstation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse> GenerateAccessTokenAsync(global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateAccessToken, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override WorkstationsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new WorkstationsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(WorkstationsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetWorkstationCluster, serviceImpl.GetWorkstationCluster)
          .AddMethod(__Method_ListWorkstationClusters, serviceImpl.ListWorkstationClusters)
          .AddMethod(__Method_CreateWorkstationCluster, serviceImpl.CreateWorkstationCluster)
          .AddMethod(__Method_UpdateWorkstationCluster, serviceImpl.UpdateWorkstationCluster)
          .AddMethod(__Method_DeleteWorkstationCluster, serviceImpl.DeleteWorkstationCluster)
          .AddMethod(__Method_GetWorkstationConfig, serviceImpl.GetWorkstationConfig)
          .AddMethod(__Method_ListWorkstationConfigs, serviceImpl.ListWorkstationConfigs)
          .AddMethod(__Method_ListUsableWorkstationConfigs, serviceImpl.ListUsableWorkstationConfigs)
          .AddMethod(__Method_CreateWorkstationConfig, serviceImpl.CreateWorkstationConfig)
          .AddMethod(__Method_UpdateWorkstationConfig, serviceImpl.UpdateWorkstationConfig)
          .AddMethod(__Method_DeleteWorkstationConfig, serviceImpl.DeleteWorkstationConfig)
          .AddMethod(__Method_GetWorkstation, serviceImpl.GetWorkstation)
          .AddMethod(__Method_ListWorkstations, serviceImpl.ListWorkstations)
          .AddMethod(__Method_ListUsableWorkstations, serviceImpl.ListUsableWorkstations)
          .AddMethod(__Method_CreateWorkstation, serviceImpl.CreateWorkstation)
          .AddMethod(__Method_UpdateWorkstation, serviceImpl.UpdateWorkstation)
          .AddMethod(__Method_DeleteWorkstation, serviceImpl.DeleteWorkstation)
          .AddMethod(__Method_StartWorkstation, serviceImpl.StartWorkstation)
          .AddMethod(__Method_StopWorkstation, serviceImpl.StopWorkstation)
          .AddMethod(__Method_GenerateAccessToken, serviceImpl.GenerateAccessToken).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, WorkstationsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetWorkstationCluster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.GetWorkstationClusterRequest, global::Google.Cloud.Workstations.V1.WorkstationCluster>(serviceImpl.GetWorkstationCluster));
      serviceBinder.AddMethod(__Method_ListWorkstationClusters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.ListWorkstationClustersRequest, global::Google.Cloud.Workstations.V1.ListWorkstationClustersResponse>(serviceImpl.ListWorkstationClusters));
      serviceBinder.AddMethod(__Method_CreateWorkstationCluster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.CreateWorkstationClusterRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateWorkstationCluster));
      serviceBinder.AddMethod(__Method_UpdateWorkstationCluster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.UpdateWorkstationClusterRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateWorkstationCluster));
      serviceBinder.AddMethod(__Method_DeleteWorkstationCluster, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.DeleteWorkstationClusterRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteWorkstationCluster));
      serviceBinder.AddMethod(__Method_GetWorkstationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.GetWorkstationConfigRequest, global::Google.Cloud.Workstations.V1.WorkstationConfig>(serviceImpl.GetWorkstationConfig));
      serviceBinder.AddMethod(__Method_ListWorkstationConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.ListWorkstationConfigsRequest, global::Google.Cloud.Workstations.V1.ListWorkstationConfigsResponse>(serviceImpl.ListWorkstationConfigs));
      serviceBinder.AddMethod(__Method_ListUsableWorkstationConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsRequest, global::Google.Cloud.Workstations.V1.ListUsableWorkstationConfigsResponse>(serviceImpl.ListUsableWorkstationConfigs));
      serviceBinder.AddMethod(__Method_CreateWorkstationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.CreateWorkstationConfigRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateWorkstationConfig));
      serviceBinder.AddMethod(__Method_UpdateWorkstationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.UpdateWorkstationConfigRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateWorkstationConfig));
      serviceBinder.AddMethod(__Method_DeleteWorkstationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.DeleteWorkstationConfigRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteWorkstationConfig));
      serviceBinder.AddMethod(__Method_GetWorkstation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.GetWorkstationRequest, global::Google.Cloud.Workstations.V1.Workstation>(serviceImpl.GetWorkstation));
      serviceBinder.AddMethod(__Method_ListWorkstations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.ListWorkstationsRequest, global::Google.Cloud.Workstations.V1.ListWorkstationsResponse>(serviceImpl.ListWorkstations));
      serviceBinder.AddMethod(__Method_ListUsableWorkstations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.ListUsableWorkstationsRequest, global::Google.Cloud.Workstations.V1.ListUsableWorkstationsResponse>(serviceImpl.ListUsableWorkstations));
      serviceBinder.AddMethod(__Method_CreateWorkstation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.CreateWorkstationRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateWorkstation));
      serviceBinder.AddMethod(__Method_UpdateWorkstation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.UpdateWorkstationRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateWorkstation));
      serviceBinder.AddMethod(__Method_DeleteWorkstation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.DeleteWorkstationRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteWorkstation));
      serviceBinder.AddMethod(__Method_StartWorkstation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.StartWorkstationRequest, global::Google.LongRunning.Operation>(serviceImpl.StartWorkstation));
      serviceBinder.AddMethod(__Method_StopWorkstation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.StopWorkstationRequest, global::Google.LongRunning.Operation>(serviceImpl.StopWorkstation));
      serviceBinder.AddMethod(__Method_GenerateAccessToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Workstations.V1.GenerateAccessTokenRequest, global::Google.Cloud.Workstations.V1.GenerateAccessTokenResponse>(serviceImpl.GenerateAccessToken));
    }

  }
}
#endregion
