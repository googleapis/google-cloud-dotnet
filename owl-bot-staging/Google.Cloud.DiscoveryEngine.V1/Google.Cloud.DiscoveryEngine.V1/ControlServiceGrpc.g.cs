// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/discoveryengine/v1/control_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.DiscoveryEngine.V1 {
  /// <summary>
  /// Service for performing CRUD operations on Controls.
  /// Controls allow for custom logic to be implemented in the serving path.
  /// Controls need to be attached to a Serving Config to be considered during a
  /// request.
  /// </summary>
  public static partial class ControlService
  {
    static readonly string __ServiceName = "google.cloud.discoveryengine.v1.ControlService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest> __Marshaller_google_cloud_discoveryengine_v1_CreateControlRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.Control> __Marshaller_google_cloud_discoveryengine_v1_Control = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.Control.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest> __Marshaller_google_cloud_discoveryengine_v1_DeleteControlRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest> __Marshaller_google_cloud_discoveryengine_v1_UpdateControlRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest> __Marshaller_google_cloud_discoveryengine_v1_GetControlRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest> __Marshaller_google_cloud_discoveryengine_v1_ListControlsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse> __Marshaller_google_cloud_discoveryengine_v1_ListControlsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control> __Method_CreateControl = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateControl",
        __Marshaller_google_cloud_discoveryengine_v1_CreateControlRequest,
        __Marshaller_google_cloud_discoveryengine_v1_Control);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteControl = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteControl",
        __Marshaller_google_cloud_discoveryengine_v1_DeleteControlRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control> __Method_UpdateControl = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateControl",
        __Marshaller_google_cloud_discoveryengine_v1_UpdateControlRequest,
        __Marshaller_google_cloud_discoveryengine_v1_Control);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control> __Method_GetControl = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetControl",
        __Marshaller_google_cloud_discoveryengine_v1_GetControlRequest,
        __Marshaller_google_cloud_discoveryengine_v1_Control);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest, global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse> __Method_ListControls = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest, global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListControls",
        __Marshaller_google_cloud_discoveryengine_v1_ListControlsRequest,
        __Marshaller_google_cloud_discoveryengine_v1_ListControlsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.DiscoveryEngine.V1.ControlServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ControlService</summary>
    [grpc::BindServiceMethod(typeof(ControlService), "BindService")]
    public abstract partial class ControlServiceBase
    {
      /// <summary>
      /// Creates a Control.
      ///
      /// By default 1000 controls are allowed for a data store.
      /// A request can be submitted to adjust this limit.
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to create already
      /// exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1.Control> CreateControl(global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a Control.
      ///
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to delete does
      /// not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteControl(global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a Control.
      ///
      /// [Control][google.cloud.discoveryengine.v1.Control] action type cannot be
      /// changed. If the [Control][google.cloud.discoveryengine.v1.Control] to
      /// update does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1.Control> UpdateControl(global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a Control.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1.Control> GetControl(global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all Controls by their parent
      /// [DataStore][google.cloud.discoveryengine.v1.DataStore].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse> ListControls(global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ControlService</summary>
    public partial class ControlServiceClient : grpc::ClientBase<ControlServiceClient>
    {
      /// <summary>Creates a new client for ControlService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ControlServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ControlService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ControlServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ControlServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ControlServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a Control.
      ///
      /// By default 1000 controls are allowed for a data store.
      /// A request can be submitted to adjust this limit.
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to create already
      /// exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.Control CreateControl(global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateControl(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Control.
      ///
      /// By default 1000 controls are allowed for a data store.
      /// A request can be submitted to adjust this limit.
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to create already
      /// exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.Control CreateControl(global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateControl, null, options, request);
      }
      /// <summary>
      /// Creates a Control.
      ///
      /// By default 1000 controls are allowed for a data store.
      /// A request can be submitted to adjust this limit.
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to create already
      /// exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.Control> CreateControlAsync(global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateControlAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Control.
      ///
      /// By default 1000 controls are allowed for a data store.
      /// A request can be submitted to adjust this limit.
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to create already
      /// exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.Control> CreateControlAsync(global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateControl, null, options, request);
      }
      /// <summary>
      /// Deletes a Control.
      ///
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to delete does
      /// not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteControl(global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteControl(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Control.
      ///
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to delete does
      /// not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteControl(global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteControl, null, options, request);
      }
      /// <summary>
      /// Deletes a Control.
      ///
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to delete does
      /// not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteControlAsync(global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteControlAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Control.
      ///
      /// If the [Control][google.cloud.discoveryengine.v1.Control] to delete does
      /// not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteControlAsync(global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteControl, null, options, request);
      }
      /// <summary>
      /// Updates a Control.
      ///
      /// [Control][google.cloud.discoveryengine.v1.Control] action type cannot be
      /// changed. If the [Control][google.cloud.discoveryengine.v1.Control] to
      /// update does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.Control UpdateControl(global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateControl(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a Control.
      ///
      /// [Control][google.cloud.discoveryengine.v1.Control] action type cannot be
      /// changed. If the [Control][google.cloud.discoveryengine.v1.Control] to
      /// update does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.Control UpdateControl(global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateControl, null, options, request);
      }
      /// <summary>
      /// Updates a Control.
      ///
      /// [Control][google.cloud.discoveryengine.v1.Control] action type cannot be
      /// changed. If the [Control][google.cloud.discoveryengine.v1.Control] to
      /// update does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.Control> UpdateControlAsync(global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateControlAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a Control.
      ///
      /// [Control][google.cloud.discoveryengine.v1.Control] action type cannot be
      /// changed. If the [Control][google.cloud.discoveryengine.v1.Control] to
      /// update does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.Control> UpdateControlAsync(global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateControl, null, options, request);
      }
      /// <summary>
      /// Gets a Control.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.Control GetControl(global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetControl(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a Control.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.Control GetControl(global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetControl, null, options, request);
      }
      /// <summary>
      /// Gets a Control.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.Control> GetControlAsync(global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetControlAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a Control.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.Control> GetControlAsync(global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetControl, null, options, request);
      }
      /// <summary>
      /// Lists all Controls by their parent
      /// [DataStore][google.cloud.discoveryengine.v1.DataStore].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse ListControls(global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListControls(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all Controls by their parent
      /// [DataStore][google.cloud.discoveryengine.v1.DataStore].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse ListControls(global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListControls, null, options, request);
      }
      /// <summary>
      /// Lists all Controls by their parent
      /// [DataStore][google.cloud.discoveryengine.v1.DataStore].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse> ListControlsAsync(global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListControlsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all Controls by their parent
      /// [DataStore][google.cloud.discoveryengine.v1.DataStore].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse> ListControlsAsync(global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListControls, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ControlServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ControlServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ControlServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateControl, serviceImpl.CreateControl)
          .AddMethod(__Method_DeleteControl, serviceImpl.DeleteControl)
          .AddMethod(__Method_UpdateControl, serviceImpl.UpdateControl)
          .AddMethod(__Method_GetControl, serviceImpl.GetControl)
          .AddMethod(__Method_ListControls, serviceImpl.ListControls).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ControlServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateControl, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.CreateControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control>(serviceImpl.CreateControl));
      serviceBinder.AddMethod(__Method_DeleteControl, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.DeleteControlRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteControl));
      serviceBinder.AddMethod(__Method_UpdateControl, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.UpdateControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control>(serviceImpl.UpdateControl));
      serviceBinder.AddMethod(__Method_GetControl, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.GetControlRequest, global::Google.Cloud.DiscoveryEngine.V1.Control>(serviceImpl.GetControl));
      serviceBinder.AddMethod(__Method_ListControls, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.ListControlsRequest, global::Google.Cloud.DiscoveryEngine.V1.ListControlsResponse>(serviceImpl.ListControls));
    }

  }
}
#endregion
