// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/discoveryengine/v1/site_search_engine_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.DiscoveryEngine.V1 {
  /// <summary>
  /// Service for managing site search related resources.
  /// </summary>
  public static partial class SiteSearchEngineService
  {
    static readonly string __ServiceName = "google.cloud.discoveryengine.v1.SiteSearchEngineService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest> __Marshaller_google_cloud_discoveryengine_v1_GetSiteSearchEngineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine> __Marshaller_google_cloud_discoveryengine_v1_SiteSearchEngine = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest> __Marshaller_google_cloud_discoveryengine_v1_CreateTargetSiteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest> __Marshaller_google_cloud_discoveryengine_v1_BatchCreateTargetSitesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest> __Marshaller_google_cloud_discoveryengine_v1_GetTargetSiteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.TargetSite> __Marshaller_google_cloud_discoveryengine_v1_TargetSite = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.TargetSite.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest> __Marshaller_google_cloud_discoveryengine_v1_UpdateTargetSiteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest> __Marshaller_google_cloud_discoveryengine_v1_DeleteTargetSiteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest> __Marshaller_google_cloud_discoveryengine_v1_ListTargetSitesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse> __Marshaller_google_cloud_discoveryengine_v1_ListTargetSitesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest> __Marshaller_google_cloud_discoveryengine_v1_EnableAdvancedSiteSearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest> __Marshaller_google_cloud_discoveryengine_v1_DisableAdvancedSiteSearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest> __Marshaller_google_cloud_discoveryengine_v1_RecrawlUrisRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest> __Marshaller_google_cloud_discoveryengine_v1_BatchVerifyTargetSitesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest> __Marshaller_google_cloud_discoveryengine_v1_FetchDomainVerificationStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse> __Marshaller_google_cloud_discoveryengine_v1_FetchDomainVerificationStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest, global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine> __Method_GetSiteSearchEngine = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest, global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSiteSearchEngine",
        __Marshaller_google_cloud_discoveryengine_v1_GetSiteSearchEngineRequest,
        __Marshaller_google_cloud_discoveryengine_v1_SiteSearchEngine);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest, global::Google.LongRunning.Operation> __Method_CreateTargetSite = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTargetSite",
        __Marshaller_google_cloud_discoveryengine_v1_CreateTargetSiteRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest, global::Google.LongRunning.Operation> __Method_BatchCreateTargetSites = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchCreateTargetSites",
        __Marshaller_google_cloud_discoveryengine_v1_BatchCreateTargetSitesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest, global::Google.Cloud.DiscoveryEngine.V1.TargetSite> __Method_GetTargetSite = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest, global::Google.Cloud.DiscoveryEngine.V1.TargetSite>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTargetSite",
        __Marshaller_google_cloud_discoveryengine_v1_GetTargetSiteRequest,
        __Marshaller_google_cloud_discoveryengine_v1_TargetSite);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest, global::Google.LongRunning.Operation> __Method_UpdateTargetSite = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTargetSite",
        __Marshaller_google_cloud_discoveryengine_v1_UpdateTargetSiteRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest, global::Google.LongRunning.Operation> __Method_DeleteTargetSite = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTargetSite",
        __Marshaller_google_cloud_discoveryengine_v1_DeleteTargetSiteRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest, global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse> __Method_ListTargetSites = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest, global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTargetSites",
        __Marshaller_google_cloud_discoveryengine_v1_ListTargetSitesRequest,
        __Marshaller_google_cloud_discoveryengine_v1_ListTargetSitesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest, global::Google.LongRunning.Operation> __Method_EnableAdvancedSiteSearch = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnableAdvancedSiteSearch",
        __Marshaller_google_cloud_discoveryengine_v1_EnableAdvancedSiteSearchRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest, global::Google.LongRunning.Operation> __Method_DisableAdvancedSiteSearch = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableAdvancedSiteSearch",
        __Marshaller_google_cloud_discoveryengine_v1_DisableAdvancedSiteSearchRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest, global::Google.LongRunning.Operation> __Method_RecrawlUris = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RecrawlUris",
        __Marshaller_google_cloud_discoveryengine_v1_RecrawlUrisRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest, global::Google.LongRunning.Operation> __Method_BatchVerifyTargetSites = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchVerifyTargetSites",
        __Marshaller_google_cloud_discoveryengine_v1_BatchVerifyTargetSitesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest, global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse> __Method_FetchDomainVerificationStatus = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest, global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchDomainVerificationStatus",
        __Marshaller_google_cloud_discoveryengine_v1_FetchDomainVerificationStatusRequest,
        __Marshaller_google_cloud_discoveryengine_v1_FetchDomainVerificationStatusResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngineServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SiteSearchEngineService</summary>
    [grpc::BindServiceMethod(typeof(SiteSearchEngineService), "BindService")]
    public abstract partial class SiteSearchEngineServiceBase
    {
      /// <summary>
      /// Gets the
      /// [SiteSearchEngine][google.cloud.discoveryengine.v1.SiteSearchEngine].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine> GetSiteSearchEngine(global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateTargetSite(global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates [TargetSite][google.cloud.discoveryengine.v1.TargetSite] in a
      /// batch.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> BatchCreateTargetSites(global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1.TargetSite> GetTargetSite(global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateTargetSite(global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteTargetSite(global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a list of [TargetSite][google.cloud.discoveryengine.v1.TargetSite]s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse> ListTargetSites(global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Upgrade from basic site search to advanced site search.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> EnableAdvancedSiteSearch(global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Downgrade from advanced site search to basic site search.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DisableAdvancedSiteSearch(global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Request on-demand recrawl for a list of URIs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RecrawlUris(global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify target sites' ownership and validity.
      /// This API sends all the target sites under site search engine for
      /// verification.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> BatchVerifyTargetSites(global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns list of target sites with its domain verification status.
      /// This method can only be called under data store with BASIC_SITE_SEARCH
      /// state at the moment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse> FetchDomainVerificationStatus(global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SiteSearchEngineService</summary>
    public partial class SiteSearchEngineServiceClient : grpc::ClientBase<SiteSearchEngineServiceClient>
    {
      /// <summary>Creates a new client for SiteSearchEngineService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SiteSearchEngineServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SiteSearchEngineService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SiteSearchEngineServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SiteSearchEngineServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SiteSearchEngineServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Gets the
      /// [SiteSearchEngine][google.cloud.discoveryengine.v1.SiteSearchEngine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine GetSiteSearchEngine(global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSiteSearchEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the
      /// [SiteSearchEngine][google.cloud.discoveryengine.v1.SiteSearchEngine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine GetSiteSearchEngine(global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSiteSearchEngine, null, options, request);
      }
      /// <summary>
      /// Gets the
      /// [SiteSearchEngine][google.cloud.discoveryengine.v1.SiteSearchEngine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine> GetSiteSearchEngineAsync(global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSiteSearchEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the
      /// [SiteSearchEngine][google.cloud.discoveryengine.v1.SiteSearchEngine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine> GetSiteSearchEngineAsync(global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSiteSearchEngine, null, options, request);
      }
      /// <summary>
      /// Creates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateTargetSite(global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTargetSite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateTargetSite(global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTargetSite, null, options, request);
      }
      /// <summary>
      /// Creates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateTargetSiteAsync(global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTargetSiteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateTargetSiteAsync(global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTargetSite, null, options, request);
      }
      /// <summary>
      /// Creates [TargetSite][google.cloud.discoveryengine.v1.TargetSite] in a
      /// batch.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchCreateTargetSites(global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateTargetSites(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates [TargetSite][google.cloud.discoveryengine.v1.TargetSite] in a
      /// batch.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchCreateTargetSites(global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchCreateTargetSites, null, options, request);
      }
      /// <summary>
      /// Creates [TargetSite][google.cloud.discoveryengine.v1.TargetSite] in a
      /// batch.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchCreateTargetSitesAsync(global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateTargetSitesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates [TargetSite][google.cloud.discoveryengine.v1.TargetSite] in a
      /// batch.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchCreateTargetSitesAsync(global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchCreateTargetSites, null, options, request);
      }
      /// <summary>
      /// Gets a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.TargetSite GetTargetSite(global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTargetSite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.TargetSite GetTargetSite(global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTargetSite, null, options, request);
      }
      /// <summary>
      /// Gets a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.TargetSite> GetTargetSiteAsync(global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTargetSiteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.TargetSite> GetTargetSiteAsync(global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTargetSite, null, options, request);
      }
      /// <summary>
      /// Updates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateTargetSite(global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTargetSite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateTargetSite(global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTargetSite, null, options, request);
      }
      /// <summary>
      /// Updates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateTargetSiteAsync(global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTargetSiteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateTargetSiteAsync(global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTargetSite, null, options, request);
      }
      /// <summary>
      /// Deletes a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteTargetSite(global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTargetSite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteTargetSite(global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTargetSite, null, options, request);
      }
      /// <summary>
      /// Deletes a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteTargetSiteAsync(global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTargetSiteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [TargetSite][google.cloud.discoveryengine.v1.TargetSite].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteTargetSiteAsync(global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTargetSite, null, options, request);
      }
      /// <summary>
      /// Gets a list of [TargetSite][google.cloud.discoveryengine.v1.TargetSite]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse ListTargetSites(global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTargetSites(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of [TargetSite][google.cloud.discoveryengine.v1.TargetSite]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse ListTargetSites(global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTargetSites, null, options, request);
      }
      /// <summary>
      /// Gets a list of [TargetSite][google.cloud.discoveryengine.v1.TargetSite]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse> ListTargetSitesAsync(global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTargetSitesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of [TargetSite][google.cloud.discoveryengine.v1.TargetSite]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse> ListTargetSitesAsync(global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTargetSites, null, options, request);
      }
      /// <summary>
      /// Upgrade from basic site search to advanced site search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation EnableAdvancedSiteSearch(global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableAdvancedSiteSearch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upgrade from basic site search to advanced site search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation EnableAdvancedSiteSearch(global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnableAdvancedSiteSearch, null, options, request);
      }
      /// <summary>
      /// Upgrade from basic site search to advanced site search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> EnableAdvancedSiteSearchAsync(global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableAdvancedSiteSearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upgrade from basic site search to advanced site search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> EnableAdvancedSiteSearchAsync(global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnableAdvancedSiteSearch, null, options, request);
      }
      /// <summary>
      /// Downgrade from advanced site search to basic site search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DisableAdvancedSiteSearch(global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableAdvancedSiteSearch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Downgrade from advanced site search to basic site search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DisableAdvancedSiteSearch(global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableAdvancedSiteSearch, null, options, request);
      }
      /// <summary>
      /// Downgrade from advanced site search to basic site search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DisableAdvancedSiteSearchAsync(global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableAdvancedSiteSearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Downgrade from advanced site search to basic site search.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DisableAdvancedSiteSearchAsync(global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableAdvancedSiteSearch, null, options, request);
      }
      /// <summary>
      /// Request on-demand recrawl for a list of URIs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RecrawlUris(global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RecrawlUris(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Request on-demand recrawl for a list of URIs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RecrawlUris(global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RecrawlUris, null, options, request);
      }
      /// <summary>
      /// Request on-demand recrawl for a list of URIs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RecrawlUrisAsync(global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RecrawlUrisAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Request on-demand recrawl for a list of URIs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RecrawlUrisAsync(global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RecrawlUris, null, options, request);
      }
      /// <summary>
      /// Verify target sites' ownership and validity.
      /// This API sends all the target sites under site search engine for
      /// verification.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchVerifyTargetSites(global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchVerifyTargetSites(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify target sites' ownership and validity.
      /// This API sends all the target sites under site search engine for
      /// verification.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchVerifyTargetSites(global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchVerifyTargetSites, null, options, request);
      }
      /// <summary>
      /// Verify target sites' ownership and validity.
      /// This API sends all the target sites under site search engine for
      /// verification.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchVerifyTargetSitesAsync(global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchVerifyTargetSitesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify target sites' ownership and validity.
      /// This API sends all the target sites under site search engine for
      /// verification.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchVerifyTargetSitesAsync(global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchVerifyTargetSites, null, options, request);
      }
      /// <summary>
      /// Returns list of target sites with its domain verification status.
      /// This method can only be called under data store with BASIC_SITE_SEARCH
      /// state at the moment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse FetchDomainVerificationStatus(global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchDomainVerificationStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns list of target sites with its domain verification status.
      /// This method can only be called under data store with BASIC_SITE_SEARCH
      /// state at the moment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse FetchDomainVerificationStatus(global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchDomainVerificationStatus, null, options, request);
      }
      /// <summary>
      /// Returns list of target sites with its domain verification status.
      /// This method can only be called under data store with BASIC_SITE_SEARCH
      /// state at the moment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse> FetchDomainVerificationStatusAsync(global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchDomainVerificationStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns list of target sites with its domain verification status.
      /// This method can only be called under data store with BASIC_SITE_SEARCH
      /// state at the moment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse> FetchDomainVerificationStatusAsync(global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchDomainVerificationStatus, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SiteSearchEngineServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SiteSearchEngineServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SiteSearchEngineServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSiteSearchEngine, serviceImpl.GetSiteSearchEngine)
          .AddMethod(__Method_CreateTargetSite, serviceImpl.CreateTargetSite)
          .AddMethod(__Method_BatchCreateTargetSites, serviceImpl.BatchCreateTargetSites)
          .AddMethod(__Method_GetTargetSite, serviceImpl.GetTargetSite)
          .AddMethod(__Method_UpdateTargetSite, serviceImpl.UpdateTargetSite)
          .AddMethod(__Method_DeleteTargetSite, serviceImpl.DeleteTargetSite)
          .AddMethod(__Method_ListTargetSites, serviceImpl.ListTargetSites)
          .AddMethod(__Method_EnableAdvancedSiteSearch, serviceImpl.EnableAdvancedSiteSearch)
          .AddMethod(__Method_DisableAdvancedSiteSearch, serviceImpl.DisableAdvancedSiteSearch)
          .AddMethod(__Method_RecrawlUris, serviceImpl.RecrawlUris)
          .AddMethod(__Method_BatchVerifyTargetSites, serviceImpl.BatchVerifyTargetSites)
          .AddMethod(__Method_FetchDomainVerificationStatus, serviceImpl.FetchDomainVerificationStatus).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SiteSearchEngineServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSiteSearchEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.GetSiteSearchEngineRequest, global::Google.Cloud.DiscoveryEngine.V1.SiteSearchEngine>(serviceImpl.GetSiteSearchEngine));
      serviceBinder.AddMethod(__Method_CreateTargetSite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.CreateTargetSiteRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateTargetSite));
      serviceBinder.AddMethod(__Method_BatchCreateTargetSites, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.BatchCreateTargetSitesRequest, global::Google.LongRunning.Operation>(serviceImpl.BatchCreateTargetSites));
      serviceBinder.AddMethod(__Method_GetTargetSite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.GetTargetSiteRequest, global::Google.Cloud.DiscoveryEngine.V1.TargetSite>(serviceImpl.GetTargetSite));
      serviceBinder.AddMethod(__Method_UpdateTargetSite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.UpdateTargetSiteRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateTargetSite));
      serviceBinder.AddMethod(__Method_DeleteTargetSite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.DeleteTargetSiteRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteTargetSite));
      serviceBinder.AddMethod(__Method_ListTargetSites, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesRequest, global::Google.Cloud.DiscoveryEngine.V1.ListTargetSitesResponse>(serviceImpl.ListTargetSites));
      serviceBinder.AddMethod(__Method_EnableAdvancedSiteSearch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.EnableAdvancedSiteSearchRequest, global::Google.LongRunning.Operation>(serviceImpl.EnableAdvancedSiteSearch));
      serviceBinder.AddMethod(__Method_DisableAdvancedSiteSearch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.DisableAdvancedSiteSearchRequest, global::Google.LongRunning.Operation>(serviceImpl.DisableAdvancedSiteSearch));
      serviceBinder.AddMethod(__Method_RecrawlUris, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.RecrawlUrisRequest, global::Google.LongRunning.Operation>(serviceImpl.RecrawlUris));
      serviceBinder.AddMethod(__Method_BatchVerifyTargetSites, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.BatchVerifyTargetSitesRequest, global::Google.LongRunning.Operation>(serviceImpl.BatchVerifyTargetSites));
      serviceBinder.AddMethod(__Method_FetchDomainVerificationStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusRequest, global::Google.Cloud.DiscoveryEngine.V1.FetchDomainVerificationStatusResponse>(serviceImpl.FetchDomainVerificationStatus));
    }

  }
}
#endregion
