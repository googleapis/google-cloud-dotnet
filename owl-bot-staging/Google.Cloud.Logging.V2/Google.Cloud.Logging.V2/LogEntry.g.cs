// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/logging/v2/log_entry.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Logging.V2 {

  /// <summary>Holder for reflection information generated from google/logging/v2/log_entry.proto</summary>
  public static partial class LogEntryReflection {

    #region Descriptor
    /// <summary>File descriptor for google/logging/v2/log_entry.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LogEntryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFnb29nbGUvbG9nZ2luZy92Mi9sb2dfZW50cnkucHJvdG8SEWdvb2dsZS5s",
            "b2dnaW5nLnYyGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGiNn",
            "b29nbGUvYXBpL21vbml0b3JlZF9yZXNvdXJjZS5wcm90bxoZZ29vZ2xlL2Fw",
            "aS9yZXNvdXJjZS5wcm90bxomZ29vZ2xlL2xvZ2dpbmcvdHlwZS9odHRwX3Jl",
            "cXVlc3QucHJvdG8aJmdvb2dsZS9sb2dnaW5nL3R5cGUvbG9nX3NldmVyaXR5",
            "LnByb3RvGhlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvGhxnb29nbGUvcHJv",
            "dG9idWYvc3RydWN0LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1w",
            "LnByb3RvIoMICghMb2dFbnRyeRIVCghsb2dfbmFtZRgMIAEoCUID4EECEjQK",
            "CHJlc291cmNlGAggASgLMh0uZ29vZ2xlLmFwaS5Nb25pdG9yZWRSZXNvdXJj",
            "ZUID4EECEi0KDXByb3RvX3BheWxvYWQYAiABKAsyFC5nb29nbGUucHJvdG9i",
            "dWYuQW55SAASFgoMdGV4dF9wYXlsb2FkGAMgASgJSAASLwoManNvbl9wYXls",
            "b2FkGAYgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdEgAEjIKCXRpbWVz",
            "dGFtcBgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBARI6",
            "ChFyZWNlaXZlX3RpbWVzdGFtcBgYIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXBCA+BBAxI3CghzZXZlcml0eRgKIAEoDjIgLmdvb2dsZS5sb2dn",
            "aW5nLnR5cGUuTG9nU2V2ZXJpdHlCA+BBARIWCglpbnNlcnRfaWQYBCABKAlC",
            "A+BBARI7CgxodHRwX3JlcXVlc3QYByABKAsyIC5nb29nbGUubG9nZ2luZy50",
            "eXBlLkh0dHBSZXF1ZXN0QgPgQQESPAoGbGFiZWxzGAsgAygLMicuZ29vZ2xl",
            "LmxvZ2dpbmcudjIuTG9nRW50cnkuTGFiZWxzRW50cnlCA+BBARI8CglvcGVy",
            "YXRpb24YDyABKAsyJC5nb29nbGUubG9nZ2luZy52Mi5Mb2dFbnRyeU9wZXJh",
            "dGlvbkID4EEBEhIKBXRyYWNlGBYgASgJQgPgQQESFAoHc3Bhbl9pZBgbIAEo",
            "CUID4EEBEhoKDXRyYWNlX3NhbXBsZWQYHiABKAhCA+BBARJHCg9zb3VyY2Vf",
            "bG9jYXRpb24YFyABKAsyKS5nb29nbGUubG9nZ2luZy52Mi5Mb2dFbnRyeVNv",
            "dXJjZUxvY2F0aW9uQgPgQQESLwoFc3BsaXQYIyABKAsyGy5nb29nbGUubG9n",
            "Z2luZy52Mi5Mb2dTcGxpdEID4EEBGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6vQHqQbkBChpsb2dnaW5nLmdvb2ds",
            "ZWFwaXMuY29tL0xvZxIdcHJvamVjdHMve3Byb2plY3R9L2xvZ3Mve2xvZ30S",
            "J29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbn0vbG9ncy97bG9nfRIbZm9s",
            "ZGVycy97Zm9sZGVyfS9sb2dzL3tsb2d9EixiaWxsaW5nQWNjb3VudHMve2Jp",
            "bGxpbmdfYWNjb3VudH0vbG9ncy97bG9nfRoIbG9nX25hbWVCCQoHcGF5bG9h",
            "ZCJiChFMb2dFbnRyeU9wZXJhdGlvbhIPCgJpZBgBIAEoCUID4EEBEhUKCHBy",
            "b2R1Y2VyGAIgASgJQgPgQQESEgoFZmlyc3QYAyABKAhCA+BBARIRCgRsYXN0",
            "GAQgASgIQgPgQQEiVQoWTG9nRW50cnlTb3VyY2VMb2NhdGlvbhIRCgRmaWxl",
            "GAEgASgJQgPgQQESEQoEbGluZRgCIAEoA0ID4EEBEhUKCGZ1bmN0aW9uGAMg",
            "ASgJQgPgQQEiPAoITG9nU3BsaXQSCwoDdWlkGAEgASgJEg0KBWluZGV4GAIg",
            "ASgFEhQKDHRvdGFsX3NwbGl0cxgDIAEoBUKzAQoVY29tLmdvb2dsZS5sb2dn",
            "aW5nLnYyQg1Mb2dFbnRyeVByb3RvUAFaNWNsb3VkLmdvb2dsZS5jb20vZ28v",
            "bG9nZ2luZy9hcGl2Mi9sb2dnaW5ncGI7bG9nZ2luZ3Bi+AEBqgIXR29vZ2xl",
            "LkNsb3VkLkxvZ2dpbmcuVjLKAhdHb29nbGVcQ2xvdWRcTG9nZ2luZ1xWMuoC",
            "Gkdvb2dsZTo6Q2xvdWQ6OkxvZ2dpbmc6OlYyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.MonitoredResourceReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Logging.Type.HttpRequestReflection.Descriptor, global::Google.Cloud.Logging.Type.LogSeverityReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Logging.V2.LogEntry), global::Google.Cloud.Logging.V2.LogEntry.Parser, new[]{ "LogName", "Resource", "ProtoPayload", "TextPayload", "JsonPayload", "Timestamp", "ReceiveTimestamp", "Severity", "InsertId", "HttpRequest", "Labels", "Operation", "Trace", "SpanId", "TraceSampled", "SourceLocation", "Split" }, new[]{ "Payload" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Logging.V2.LogEntryOperation), global::Google.Cloud.Logging.V2.LogEntryOperation.Parser, new[]{ "Id", "Producer", "First", "Last" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Logging.V2.LogEntrySourceLocation), global::Google.Cloud.Logging.V2.LogEntrySourceLocation.Parser, new[]{ "File", "Line", "Function" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Logging.V2.LogSplit), global::Google.Cloud.Logging.V2.LogSplit.Parser, new[]{ "Uid", "Index", "TotalSplits" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An individual entry in a log.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogEntry : pb::IMessage<LogEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogEntry> _parser = new pb::MessageParser<LogEntry>(() => new LogEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Logging.V2.LogEntryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntry(LogEntry other) : this() {
      logName_ = other.logName_;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      receiveTimestamp_ = other.receiveTimestamp_ != null ? other.receiveTimestamp_.Clone() : null;
      severity_ = other.severity_;
      insertId_ = other.insertId_;
      httpRequest_ = other.httpRequest_ != null ? other.httpRequest_.Clone() : null;
      labels_ = other.labels_.Clone();
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      trace_ = other.trace_;
      spanId_ = other.spanId_;
      traceSampled_ = other.traceSampled_;
      sourceLocation_ = other.sourceLocation_ != null ? other.sourceLocation_.Clone() : null;
      split_ = other.split_ != null ? other.split_.Clone() : null;
      switch (other.PayloadCase) {
        case PayloadOneofCase.ProtoPayload:
          ProtoPayload = other.ProtoPayload.Clone();
          break;
        case PayloadOneofCase.TextPayload:
          TextPayload = other.TextPayload;
          break;
        case PayloadOneofCase.JsonPayload:
          JsonPayload = other.JsonPayload.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntry Clone() {
      return new LogEntry(this);
    }

    /// <summary>Field number for the "log_name" field.</summary>
    public const int LogNameFieldNumber = 12;
    private string logName_ = "";
    /// <summary>
    /// Required. The resource name of the log to which this log entry belongs:
    ///
    ///     "projects/[PROJECT_ID]/logs/[LOG_ID]"
    ///     "organizations/[ORGANIZATION_ID]/logs/[LOG_ID]"
    ///     "billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]"
    ///     "folders/[FOLDER_ID]/logs/[LOG_ID]"
    ///
    /// A project number may be used in place of PROJECT_ID. The project number is
    /// translated to its corresponding PROJECT_ID internally and the `log_name`
    /// field will contain PROJECT_ID in queries and exports.
    ///
    /// `[LOG_ID]` must be URL-encoded within `log_name`. Example:
    /// `"organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity"`.
    ///
    /// `[LOG_ID]` must be less than 512 characters long and can only include the
    /// following characters: upper and lower case alphanumeric characters,
    /// forward-slash, underscore, hyphen, and period.
    ///
    /// For backward compatibility, if `log_name` begins with a forward-slash, such
    /// as `/projects/...`, then the log entry is ingested as usual, but the
    /// forward-slash is removed. Listing the log entry will not show the leading
    /// slash and filtering for a log name with a leading slash will never return
    /// any results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogName {
      get { return logName_; }
      set {
        logName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 8;
    private global::Google.Api.MonitoredResource resource_;
    /// <summary>
    /// Required. The monitored resource that produced this log entry.
    ///
    /// Example: a log entry that reports a database error would be associated with
    /// the monitored resource designating the particular database that reported
    /// the error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Api.MonitoredResource Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "proto_payload" field.</summary>
    public const int ProtoPayloadFieldNumber = 2;
    /// <summary>
    /// The log entry payload, represented as a protocol buffer. Some Google
    /// Cloud Platform services use this field for their log entry payloads.
    ///
    /// The following protocol buffer types are supported; user-defined types
    /// are not supported:
    ///
    ///   "type.googleapis.com/google.cloud.audit.AuditLog"
    ///   "type.googleapis.com/google.appengine.logging.v1.RequestLog"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any ProtoPayload {
      get { return payloadCase_ == PayloadOneofCase.ProtoPayload ? (global::Google.Protobuf.WellKnownTypes.Any) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ProtoPayload;
      }
    }

    /// <summary>Field number for the "text_payload" field.</summary>
    public const int TextPayloadFieldNumber = 3;
    /// <summary>
    /// The log entry payload, represented as a Unicode string (UTF-8).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TextPayload {
      get { return HasTextPayload ? (string) payload_ : ""; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadCase_ = PayloadOneofCase.TextPayload;
      }
    }
    /// <summary>Gets whether the "text_payload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextPayload {
      get { return payloadCase_ == PayloadOneofCase.TextPayload; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "text_payload" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextPayload() {
      if (HasTextPayload) {
        ClearPayload();
      }
    }

    /// <summary>Field number for the "json_payload" field.</summary>
    public const int JsonPayloadFieldNumber = 6;
    /// <summary>
    /// The log entry payload, represented as a structure that is
    /// expressed as a JSON object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Struct JsonPayload {
      get { return payloadCase_ == PayloadOneofCase.JsonPayload ? (global::Google.Protobuf.WellKnownTypes.Struct) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JsonPayload;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Optional. The time the event described by the log entry occurred. This time
    /// is used to compute the log entry's age and to enforce the logs retention
    /// period. If this field is omitted in a new log entry, then Logging assigns
    /// it the current time. Timestamps have nanosecond accuracy, but trailing
    /// zeros in the fractional seconds might be omitted when the timestamp is
    /// displayed.
    ///
    /// Incoming log entries must have timestamps that don't exceed the
    /// [logs retention
    /// period](https://cloud.google.com/logging/quotas#logs_retention_periods) in
    /// the past, and that don't exceed 24 hours in the future. Log entries outside
    /// those time boundaries aren't ingested by Logging.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "receive_timestamp" field.</summary>
    public const int ReceiveTimestampFieldNumber = 24;
    private global::Google.Protobuf.WellKnownTypes.Timestamp receiveTimestamp_;
    /// <summary>
    /// Output only. The time the log entry was received by Logging.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ReceiveTimestamp {
      get { return receiveTimestamp_; }
      set {
        receiveTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 10;
    private global::Google.Cloud.Logging.Type.LogSeverity severity_ = global::Google.Cloud.Logging.Type.LogSeverity.Default;
    /// <summary>
    /// Optional. The severity of the log entry. The default value is
    /// `LogSeverity.DEFAULT`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Logging.Type.LogSeverity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "insert_id" field.</summary>
    public const int InsertIdFieldNumber = 4;
    private string insertId_ = "";
    /// <summary>
    /// Optional. A unique identifier for the log entry. If you provide a value,
    /// then Logging considers other log entries in the same project, with the same
    /// `timestamp`, and with the same `insert_id` to be duplicates which are
    /// removed in a single query result. However, there are no guarantees of
    /// de-duplication in the export of logs.
    ///
    /// If the `insert_id` is omitted when writing a log entry, the Logging API
    /// assigns its own unique identifier in this field.
    ///
    /// In queries, the `insert_id` is also used to order log entries that have
    /// the same `log_name` and `timestamp` values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InsertId {
      get { return insertId_; }
      set {
        insertId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "http_request" field.</summary>
    public const int HttpRequestFieldNumber = 7;
    private global::Google.Cloud.Logging.Type.HttpRequest httpRequest_;
    /// <summary>
    /// Optional. Information about the HTTP request associated with this log
    /// entry, if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Logging.Type.HttpRequest HttpRequest {
      get { return httpRequest_; }
      set {
        httpRequest_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 90);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. A map of key, value pairs that provides additional information
    /// about the log entry. The labels can be user-defined or system-defined.
    ///
    /// User-defined labels are arbitrary key, value pairs that you can use to
    /// classify logs.
    ///
    /// System-defined labels are defined by GCP services for platform logs.
    /// They have two components - a service namespace component and the
    /// attribute name. For example: `compute.googleapis.com/resource_name`.
    ///
    /// Cloud Logging truncates label keys that exceed 512 B and label
    /// values that exceed 64 KB upon their associated log entry being
    /// written. The truncation is indicated by an ellipsis at the
    /// end of the character string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 15;
    private global::Google.Cloud.Logging.V2.LogEntryOperation operation_;
    /// <summary>
    /// Optional. Information about an operation associated with the log entry, if
    /// applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Logging.V2.LogEntryOperation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "trace" field.</summary>
    public const int TraceFieldNumber = 22;
    private string trace_ = "";
    /// <summary>
    /// Optional. The REST resource name of the trace being written to
    /// [Cloud Trace](https://cloud.google.com/trace) in
    /// association with this log entry. For example, if your trace data is stored
    /// in the Cloud project "my-trace-project" and if the service that is creating
    /// the log entry receives a trace header that includes the trace ID "12345",
    /// then the service should use "projects/my-tracing-project/traces/12345".
    ///
    /// The `trace` field provides the link between logs and traces. By using
    /// this field, you can navigate from a log entry to a trace.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Trace {
      get { return trace_; }
      set {
        trace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "span_id" field.</summary>
    public const int SpanIdFieldNumber = 27;
    private string spanId_ = "";
    /// <summary>
    /// Optional. The ID of the [Cloud Trace](https://cloud.google.com/trace) span
    /// associated with the current operation in which the log is being written.
    /// For example, if a span has the REST resource name of
    /// "projects/some-project/traces/some-trace/spans/some-span-id", then the
    /// `span_id` field is "some-span-id".
    ///
    /// A
    /// [Span](https://cloud.google.com/trace/docs/reference/v2/rest/v2/projects.traces/batchWrite#Span)
    /// represents a single operation within a trace. Whereas a trace may involve
    /// multiple different microservices running on multiple different machines,
    /// a span generally corresponds to a single logical operation being performed
    /// in a single instance of a microservice on one specific machine. Spans
    /// are the nodes within the tree that is a trace.
    ///
    /// Applications that are [instrumented for
    /// tracing](https://cloud.google.com/trace/docs/setup) will generally assign a
    /// new, unique span ID on each incoming request. It is also common to create
    /// and record additional spans corresponding to internal processing elements
    /// as well as issuing requests to dependencies.
    ///
    /// The span ID is expected to be a 16-character, hexadecimal encoding of an
    /// 8-byte array and should not be zero. It should be unique within the trace
    /// and should, ideally, be generated in a manner that is uniformly random.
    ///
    /// Example values:
    ///
    ///   - `000000000000004a`
    ///   - `7a2190356c3fc94b`
    ///   - `0000f00300090021`
    ///   - `d39223e101960076`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpanId {
      get { return spanId_; }
      set {
        spanId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trace_sampled" field.</summary>
    public const int TraceSampledFieldNumber = 30;
    private bool traceSampled_;
    /// <summary>
    /// Optional. The sampling decision of the trace associated with the log entry.
    ///
    /// True means that the trace resource name in the `trace` field was sampled
    /// for storage in a trace backend. False means that the trace was not sampled
    /// for storage when this log entry was written, or the sampling decision was
    /// unknown at the time. A non-sampled `trace` value is still useful as a
    /// request correlation identifier. The default is False.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TraceSampled {
      get { return traceSampled_; }
      set {
        traceSampled_ = value;
      }
    }

    /// <summary>Field number for the "source_location" field.</summary>
    public const int SourceLocationFieldNumber = 23;
    private global::Google.Cloud.Logging.V2.LogEntrySourceLocation sourceLocation_;
    /// <summary>
    /// Optional. Source code location information associated with the log entry,
    /// if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Logging.V2.LogEntrySourceLocation SourceLocation {
      get { return sourceLocation_; }
      set {
        sourceLocation_ = value;
      }
    }

    /// <summary>Field number for the "split" field.</summary>
    public const int SplitFieldNumber = 35;
    private global::Google.Cloud.Logging.V2.LogSplit split_;
    /// <summary>
    /// Optional. Information indicating this LogEntry is part of a sequence of
    /// multiple log entries split from a single LogEntry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Logging.V2.LogSplit Split {
      get { return split_; }
      set {
        split_ = value;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      ProtoPayload = 2,
      TextPayload = 3,
      JsonPayload = 6,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LogName != other.LogName) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      if (!object.Equals(ProtoPayload, other.ProtoPayload)) return false;
      if (TextPayload != other.TextPayload) return false;
      if (!object.Equals(JsonPayload, other.JsonPayload)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(ReceiveTimestamp, other.ReceiveTimestamp)) return false;
      if (Severity != other.Severity) return false;
      if (InsertId != other.InsertId) return false;
      if (!object.Equals(HttpRequest, other.HttpRequest)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(Operation, other.Operation)) return false;
      if (Trace != other.Trace) return false;
      if (SpanId != other.SpanId) return false;
      if (TraceSampled != other.TraceSampled) return false;
      if (!object.Equals(SourceLocation, other.SourceLocation)) return false;
      if (!object.Equals(Split, other.Split)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LogName.Length != 0) hash ^= LogName.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ProtoPayload) hash ^= ProtoPayload.GetHashCode();
      if (HasTextPayload) hash ^= TextPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JsonPayload) hash ^= JsonPayload.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (receiveTimestamp_ != null) hash ^= ReceiveTimestamp.GetHashCode();
      if (Severity != global::Google.Cloud.Logging.Type.LogSeverity.Default) hash ^= Severity.GetHashCode();
      if (InsertId.Length != 0) hash ^= InsertId.GetHashCode();
      if (httpRequest_ != null) hash ^= HttpRequest.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (Trace.Length != 0) hash ^= Trace.GetHashCode();
      if (SpanId.Length != 0) hash ^= SpanId.GetHashCode();
      if (TraceSampled != false) hash ^= TraceSampled.GetHashCode();
      if (sourceLocation_ != null) hash ^= SourceLocation.GetHashCode();
      if (split_ != null) hash ^= Split.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (payloadCase_ == PayloadOneofCase.ProtoPayload) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtoPayload);
      }
      if (HasTextPayload) {
        output.WriteRawTag(26);
        output.WriteString(TextPayload);
      }
      if (InsertId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InsertId);
      }
      if (payloadCase_ == PayloadOneofCase.JsonPayload) {
        output.WriteRawTag(50);
        output.WriteMessage(JsonPayload);
      }
      if (httpRequest_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(HttpRequest);
      }
      if (resource_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Resource);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Timestamp);
      }
      if (Severity != global::Google.Cloud.Logging.Type.LogSeverity.Default) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Severity);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (LogName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LogName);
      }
      if (operation_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Operation);
      }
      if (Trace.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Trace);
      }
      if (sourceLocation_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(SourceLocation);
      }
      if (receiveTimestamp_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ReceiveTimestamp);
      }
      if (SpanId.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(SpanId);
      }
      if (TraceSampled != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(TraceSampled);
      }
      if (split_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(Split);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (payloadCase_ == PayloadOneofCase.ProtoPayload) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtoPayload);
      }
      if (HasTextPayload) {
        output.WriteRawTag(26);
        output.WriteString(TextPayload);
      }
      if (InsertId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InsertId);
      }
      if (payloadCase_ == PayloadOneofCase.JsonPayload) {
        output.WriteRawTag(50);
        output.WriteMessage(JsonPayload);
      }
      if (httpRequest_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(HttpRequest);
      }
      if (resource_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Resource);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Timestamp);
      }
      if (Severity != global::Google.Cloud.Logging.Type.LogSeverity.Default) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Severity);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (LogName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LogName);
      }
      if (operation_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Operation);
      }
      if (Trace.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Trace);
      }
      if (sourceLocation_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(SourceLocation);
      }
      if (receiveTimestamp_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ReceiveTimestamp);
      }
      if (SpanId.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(SpanId);
      }
      if (TraceSampled != false) {
        output.WriteRawTag(240, 1);
        output.WriteBool(TraceSampled);
      }
      if (split_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(Split);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LogName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogName);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (payloadCase_ == PayloadOneofCase.ProtoPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtoPayload);
      }
      if (HasTextPayload) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TextPayload);
      }
      if (payloadCase_ == PayloadOneofCase.JsonPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JsonPayload);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (receiveTimestamp_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReceiveTimestamp);
      }
      if (Severity != global::Google.Cloud.Logging.Type.LogSeverity.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      if (InsertId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InsertId);
      }
      if (httpRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpRequest);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (Trace.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Trace);
      }
      if (SpanId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SpanId);
      }
      if (TraceSampled != false) {
        size += 2 + 1;
      }
      if (sourceLocation_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SourceLocation);
      }
      if (split_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Split);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogEntry other) {
      if (other == null) {
        return;
      }
      if (other.LogName.Length != 0) {
        LogName = other.LogName;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Google.Api.MonitoredResource();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.receiveTimestamp_ != null) {
        if (receiveTimestamp_ == null) {
          ReceiveTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ReceiveTimestamp.MergeFrom(other.ReceiveTimestamp);
      }
      if (other.Severity != global::Google.Cloud.Logging.Type.LogSeverity.Default) {
        Severity = other.Severity;
      }
      if (other.InsertId.Length != 0) {
        InsertId = other.InsertId;
      }
      if (other.httpRequest_ != null) {
        if (httpRequest_ == null) {
          HttpRequest = new global::Google.Cloud.Logging.Type.HttpRequest();
        }
        HttpRequest.MergeFrom(other.HttpRequest);
      }
      labels_.MergeFrom(other.labels_);
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Google.Cloud.Logging.V2.LogEntryOperation();
        }
        Operation.MergeFrom(other.Operation);
      }
      if (other.Trace.Length != 0) {
        Trace = other.Trace;
      }
      if (other.SpanId.Length != 0) {
        SpanId = other.SpanId;
      }
      if (other.TraceSampled != false) {
        TraceSampled = other.TraceSampled;
      }
      if (other.sourceLocation_ != null) {
        if (sourceLocation_ == null) {
          SourceLocation = new global::Google.Cloud.Logging.V2.LogEntrySourceLocation();
        }
        SourceLocation.MergeFrom(other.SourceLocation);
      }
      if (other.split_ != null) {
        if (split_ == null) {
          Split = new global::Google.Cloud.Logging.V2.LogSplit();
        }
        Split.MergeFrom(other.Split);
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.ProtoPayload:
          if (ProtoPayload == null) {
            ProtoPayload = new global::Google.Protobuf.WellKnownTypes.Any();
          }
          ProtoPayload.MergeFrom(other.ProtoPayload);
          break;
        case PayloadOneofCase.TextPayload:
          TextPayload = other.TextPayload;
          break;
        case PayloadOneofCase.JsonPayload:
          if (JsonPayload == null) {
            JsonPayload = new global::Google.Protobuf.WellKnownTypes.Struct();
          }
          JsonPayload.MergeFrom(other.JsonPayload);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (payloadCase_ == PayloadOneofCase.ProtoPayload) {
              subBuilder.MergeFrom(ProtoPayload);
            }
            input.ReadMessage(subBuilder);
            ProtoPayload = subBuilder;
            break;
          }
          case 26: {
            TextPayload = input.ReadString();
            break;
          }
          case 34: {
            InsertId = input.ReadString();
            break;
          }
          case 50: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (payloadCase_ == PayloadOneofCase.JsonPayload) {
              subBuilder.MergeFrom(JsonPayload);
            }
            input.ReadMessage(subBuilder);
            JsonPayload = subBuilder;
            break;
          }
          case 58: {
            if (httpRequest_ == null) {
              HttpRequest = new global::Google.Cloud.Logging.Type.HttpRequest();
            }
            input.ReadMessage(HttpRequest);
            break;
          }
          case 66: {
            if (resource_ == null) {
              Resource = new global::Google.Api.MonitoredResource();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 74: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 80: {
            Severity = (global::Google.Cloud.Logging.Type.LogSeverity) input.ReadEnum();
            break;
          }
          case 90: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 98: {
            LogName = input.ReadString();
            break;
          }
          case 122: {
            if (operation_ == null) {
              Operation = new global::Google.Cloud.Logging.V2.LogEntryOperation();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 178: {
            Trace = input.ReadString();
            break;
          }
          case 186: {
            if (sourceLocation_ == null) {
              SourceLocation = new global::Google.Cloud.Logging.V2.LogEntrySourceLocation();
            }
            input.ReadMessage(SourceLocation);
            break;
          }
          case 194: {
            if (receiveTimestamp_ == null) {
              ReceiveTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ReceiveTimestamp);
            break;
          }
          case 218: {
            SpanId = input.ReadString();
            break;
          }
          case 240: {
            TraceSampled = input.ReadBool();
            break;
          }
          case 282: {
            if (split_ == null) {
              Split = new global::Google.Cloud.Logging.V2.LogSplit();
            }
            input.ReadMessage(Split);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (payloadCase_ == PayloadOneofCase.ProtoPayload) {
              subBuilder.MergeFrom(ProtoPayload);
            }
            input.ReadMessage(subBuilder);
            ProtoPayload = subBuilder;
            break;
          }
          case 26: {
            TextPayload = input.ReadString();
            break;
          }
          case 34: {
            InsertId = input.ReadString();
            break;
          }
          case 50: {
            global::Google.Protobuf.WellKnownTypes.Struct subBuilder = new global::Google.Protobuf.WellKnownTypes.Struct();
            if (payloadCase_ == PayloadOneofCase.JsonPayload) {
              subBuilder.MergeFrom(JsonPayload);
            }
            input.ReadMessage(subBuilder);
            JsonPayload = subBuilder;
            break;
          }
          case 58: {
            if (httpRequest_ == null) {
              HttpRequest = new global::Google.Cloud.Logging.Type.HttpRequest();
            }
            input.ReadMessage(HttpRequest);
            break;
          }
          case 66: {
            if (resource_ == null) {
              Resource = new global::Google.Api.MonitoredResource();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 74: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 80: {
            Severity = (global::Google.Cloud.Logging.Type.LogSeverity) input.ReadEnum();
            break;
          }
          case 90: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 98: {
            LogName = input.ReadString();
            break;
          }
          case 122: {
            if (operation_ == null) {
              Operation = new global::Google.Cloud.Logging.V2.LogEntryOperation();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 178: {
            Trace = input.ReadString();
            break;
          }
          case 186: {
            if (sourceLocation_ == null) {
              SourceLocation = new global::Google.Cloud.Logging.V2.LogEntrySourceLocation();
            }
            input.ReadMessage(SourceLocation);
            break;
          }
          case 194: {
            if (receiveTimestamp_ == null) {
              ReceiveTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ReceiveTimestamp);
            break;
          }
          case 218: {
            SpanId = input.ReadString();
            break;
          }
          case 240: {
            TraceSampled = input.ReadBool();
            break;
          }
          case 282: {
            if (split_ == null) {
              Split = new global::Google.Cloud.Logging.V2.LogSplit();
            }
            input.ReadMessage(Split);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Additional information about a potentially long-running operation with which
  /// a log entry is associated.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogEntryOperation : pb::IMessage<LogEntryOperation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogEntryOperation> _parser = new pb::MessageParser<LogEntryOperation>(() => new LogEntryOperation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogEntryOperation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Logging.V2.LogEntryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntryOperation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntryOperation(LogEntryOperation other) : this() {
      id_ = other.id_;
      producer_ = other.producer_;
      first_ = other.first_;
      last_ = other.last_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntryOperation Clone() {
      return new LogEntryOperation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Optional. An arbitrary operation identifier. Log entries with the same
    /// identifier are assumed to be part of the same operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "producer" field.</summary>
    public const int ProducerFieldNumber = 2;
    private string producer_ = "";
    /// <summary>
    /// Optional. An arbitrary producer identifier. The combination of `id` and
    /// `producer` must be globally unique. Examples for `producer`:
    /// `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Producer {
      get { return producer_; }
      set {
        producer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first" field.</summary>
    public const int FirstFieldNumber = 3;
    private bool first_;
    /// <summary>
    /// Optional. Set this to True if this is the first log entry in the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool First {
      get { return first_; }
      set {
        first_ = value;
      }
    }

    /// <summary>Field number for the "last" field.</summary>
    public const int LastFieldNumber = 4;
    private bool last_;
    /// <summary>
    /// Optional. Set this to True if this is the last log entry in the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Last {
      get { return last_; }
      set {
        last_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogEntryOperation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogEntryOperation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Producer != other.Producer) return false;
      if (First != other.First) return false;
      if (Last != other.Last) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Producer.Length != 0) hash ^= Producer.GetHashCode();
      if (First != false) hash ^= First.GetHashCode();
      if (Last != false) hash ^= Last.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Producer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Producer);
      }
      if (First != false) {
        output.WriteRawTag(24);
        output.WriteBool(First);
      }
      if (Last != false) {
        output.WriteRawTag(32);
        output.WriteBool(Last);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Producer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Producer);
      }
      if (First != false) {
        output.WriteRawTag(24);
        output.WriteBool(First);
      }
      if (Last != false) {
        output.WriteRawTag(32);
        output.WriteBool(Last);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Producer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Producer);
      }
      if (First != false) {
        size += 1 + 1;
      }
      if (Last != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogEntryOperation other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Producer.Length != 0) {
        Producer = other.Producer;
      }
      if (other.First != false) {
        First = other.First;
      }
      if (other.Last != false) {
        Last = other.Last;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Producer = input.ReadString();
            break;
          }
          case 24: {
            First = input.ReadBool();
            break;
          }
          case 32: {
            Last = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Producer = input.ReadString();
            break;
          }
          case 24: {
            First = input.ReadBool();
            break;
          }
          case 32: {
            Last = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Additional information about the source code location that produced the log
  /// entry.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogEntrySourceLocation : pb::IMessage<LogEntrySourceLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogEntrySourceLocation> _parser = new pb::MessageParser<LogEntrySourceLocation>(() => new LogEntrySourceLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogEntrySourceLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Logging.V2.LogEntryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntrySourceLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntrySourceLocation(LogEntrySourceLocation other) : this() {
      file_ = other.file_;
      line_ = other.line_;
      function_ = other.function_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogEntrySourceLocation Clone() {
      return new LogEntrySourceLocation(this);
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 1;
    private string file_ = "";
    /// <summary>
    /// Optional. Source file name. Depending on the runtime environment, this
    /// might be a simple name or a fully-qualified name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string File {
      get { return file_; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "line" field.</summary>
    public const int LineFieldNumber = 2;
    private long line_;
    /// <summary>
    /// Optional. Line within the source file. 1-based; 0 indicates no line number
    /// available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Line {
      get { return line_; }
      set {
        line_ = value;
      }
    }

    /// <summary>Field number for the "function" field.</summary>
    public const int FunctionFieldNumber = 3;
    private string function_ = "";
    /// <summary>
    /// Optional. Human-readable name of the function or method being invoked, with
    /// optional context such as the class or package name. This information may be
    /// used in contexts such as the logs viewer, where a file and line number are
    /// less meaningful. The format can vary by language. For example:
    /// `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`
    /// (Python).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Function {
      get { return function_; }
      set {
        function_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogEntrySourceLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogEntrySourceLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (File != other.File) return false;
      if (Line != other.Line) return false;
      if (Function != other.Function) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (File.Length != 0) hash ^= File.GetHashCode();
      if (Line != 0L) hash ^= Line.GetHashCode();
      if (Function.Length != 0) hash ^= Function.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (File.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(File);
      }
      if (Line != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Line);
      }
      if (Function.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Function);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (File.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(File);
      }
      if (Line != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Line);
      }
      if (Function.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Function);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (File.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(File);
      }
      if (Line != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Line);
      }
      if (Function.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Function);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogEntrySourceLocation other) {
      if (other == null) {
        return;
      }
      if (other.File.Length != 0) {
        File = other.File;
      }
      if (other.Line != 0L) {
        Line = other.Line;
      }
      if (other.Function.Length != 0) {
        Function = other.Function;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            File = input.ReadString();
            break;
          }
          case 16: {
            Line = input.ReadInt64();
            break;
          }
          case 26: {
            Function = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            File = input.ReadString();
            break;
          }
          case 16: {
            Line = input.ReadInt64();
            break;
          }
          case 26: {
            Function = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Additional information used to correlate multiple log entries. Used when a
  /// single LogEntry would exceed the Google Cloud Logging size limit and is
  /// split across multiple log entries.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogSplit : pb::IMessage<LogSplit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogSplit> _parser = new pb::MessageParser<LogSplit>(() => new LogSplit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogSplit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Logging.V2.LogEntryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogSplit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogSplit(LogSplit other) : this() {
      uid_ = other.uid_;
      index_ = other.index_;
      totalSplits_ = other.totalSplits_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogSplit Clone() {
      return new LogSplit(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private string uid_ = "";
    /// <summary>
    /// A globally unique identifier for all log entries in a sequence of split log
    /// entries. All log entries with the same |LogSplit.uid| are assumed to be
    /// part of the same sequence of split log entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    /// <summary>
    /// The index of this LogEntry in the sequence of split log entries. Log
    /// entries are given |index| values 0, 1, ..., n-1 for a sequence of n log
    /// entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "total_splits" field.</summary>
    public const int TotalSplitsFieldNumber = 3;
    private int totalSplits_;
    /// <summary>
    /// The total number of log entries that the original LogEntry was split into.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalSplits {
      get { return totalSplits_; }
      set {
        totalSplits_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogSplit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogSplit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Index != other.Index) return false;
      if (TotalSplits != other.TotalSplits) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (TotalSplits != 0) hash ^= TotalSplits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (TotalSplits != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalSplits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uid);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (TotalSplits != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalSplits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (TotalSplits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalSplits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogSplit other) {
      if (other == null) {
        return;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.TotalSplits != 0) {
        TotalSplits = other.TotalSplits;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 24: {
            TotalSplits = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Uid = input.ReadString();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 24: {
            TotalSplits = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
