// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/vmmigration/v1/vmmigration.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.VMMigration.V1 {
  /// <summary>
  /// VM Migration Service
  /// </summary>
  public static partial class VmMigration
  {
    static readonly string __ServiceName = "google.cloud.vmmigration.v1.VmMigration";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListSourcesRequest> __Marshaller_google_cloud_vmmigration_v1_ListSourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListSourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListSourcesResponse> __Marshaller_google_cloud_vmmigration_v1_ListSourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListSourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetSourceRequest> __Marshaller_google_cloud_vmmigration_v1_GetSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.Source> __Marshaller_google_cloud_vmmigration_v1_Source = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.Source.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CreateSourceRequest> __Marshaller_google_cloud_vmmigration_v1_CreateSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CreateSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.UpdateSourceRequest> __Marshaller_google_cloud_vmmigration_v1_UpdateSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.UpdateSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.DeleteSourceRequest> __Marshaller_google_cloud_vmmigration_v1_DeleteSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.DeleteSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.FetchInventoryRequest> __Marshaller_google_cloud_vmmigration_v1_FetchInventoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.FetchInventoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.FetchInventoryResponse> __Marshaller_google_cloud_vmmigration_v1_FetchInventoryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.FetchInventoryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest> __Marshaller_google_cloud_vmmigration_v1_ListUtilizationReportsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse> __Marshaller_google_cloud_vmmigration_v1_ListUtilizationReportsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest> __Marshaller_google_cloud_vmmigration_v1_GetUtilizationReportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.UtilizationReport> __Marshaller_google_cloud_vmmigration_v1_UtilizationReport = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.UtilizationReport.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest> __Marshaller_google_cloud_vmmigration_v1_CreateUtilizationReportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest> __Marshaller_google_cloud_vmmigration_v1_DeleteUtilizationReportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest> __Marshaller_google_cloud_vmmigration_v1_ListDatacenterConnectorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse> __Marshaller_google_cloud_vmmigration_v1_ListDatacenterConnectorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest> __Marshaller_google_cloud_vmmigration_v1_GetDatacenterConnectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.DatacenterConnector> __Marshaller_google_cloud_vmmigration_v1_DatacenterConnector = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.DatacenterConnector.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest> __Marshaller_google_cloud_vmmigration_v1_CreateDatacenterConnectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest> __Marshaller_google_cloud_vmmigration_v1_DeleteDatacenterConnectorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest> __Marshaller_google_cloud_vmmigration_v1_UpgradeApplianceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest> __Marshaller_google_cloud_vmmigration_v1_CreateMigratingVmRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest> __Marshaller_google_cloud_vmmigration_v1_ListMigratingVmsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse> __Marshaller_google_cloud_vmmigration_v1_ListMigratingVmsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest> __Marshaller_google_cloud_vmmigration_v1_GetMigratingVmRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.MigratingVm> __Marshaller_google_cloud_vmmigration_v1_MigratingVm = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.MigratingVm.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest> __Marshaller_google_cloud_vmmigration_v1_UpdateMigratingVmRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest> __Marshaller_google_cloud_vmmigration_v1_DeleteMigratingVmRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.StartMigrationRequest> __Marshaller_google_cloud_vmmigration_v1_StartMigrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.StartMigrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest> __Marshaller_google_cloud_vmmigration_v1_ResumeMigrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.PauseMigrationRequest> __Marshaller_google_cloud_vmmigration_v1_PauseMigrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.PauseMigrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest> __Marshaller_google_cloud_vmmigration_v1_FinalizeMigrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest> __Marshaller_google_cloud_vmmigration_v1_CreateCloneJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest> __Marshaller_google_cloud_vmmigration_v1_CancelCloneJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest> __Marshaller_google_cloud_vmmigration_v1_ListCloneJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse> __Marshaller_google_cloud_vmmigration_v1_ListCloneJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetCloneJobRequest> __Marshaller_google_cloud_vmmigration_v1_GetCloneJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetCloneJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CloneJob> __Marshaller_google_cloud_vmmigration_v1_CloneJob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CloneJob.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest> __Marshaller_google_cloud_vmmigration_v1_CreateCutoverJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest> __Marshaller_google_cloud_vmmigration_v1_CancelCutoverJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest> __Marshaller_google_cloud_vmmigration_v1_ListCutoverJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse> __Marshaller_google_cloud_vmmigration_v1_ListCutoverJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest> __Marshaller_google_cloud_vmmigration_v1_GetCutoverJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CutoverJob> __Marshaller_google_cloud_vmmigration_v1_CutoverJob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CutoverJob.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListGroupsRequest> __Marshaller_google_cloud_vmmigration_v1_ListGroupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListGroupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListGroupsResponse> __Marshaller_google_cloud_vmmigration_v1_ListGroupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListGroupsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetGroupRequest> __Marshaller_google_cloud_vmmigration_v1_GetGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.Group> __Marshaller_google_cloud_vmmigration_v1_Group = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.Group.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CreateGroupRequest> __Marshaller_google_cloud_vmmigration_v1_CreateGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CreateGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.UpdateGroupRequest> __Marshaller_google_cloud_vmmigration_v1_UpdateGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.UpdateGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.DeleteGroupRequest> __Marshaller_google_cloud_vmmigration_v1_DeleteGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.DeleteGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest> __Marshaller_google_cloud_vmmigration_v1_AddGroupMigrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest> __Marshaller_google_cloud_vmmigration_v1_RemoveGroupMigrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest> __Marshaller_google_cloud_vmmigration_v1_ListTargetProjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse> __Marshaller_google_cloud_vmmigration_v1_ListTargetProjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest> __Marshaller_google_cloud_vmmigration_v1_GetTargetProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.TargetProject> __Marshaller_google_cloud_vmmigration_v1_TargetProject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.TargetProject.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest> __Marshaller_google_cloud_vmmigration_v1_CreateTargetProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest> __Marshaller_google_cloud_vmmigration_v1_UpdateTargetProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest> __Marshaller_google_cloud_vmmigration_v1_DeleteTargetProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest> __Marshaller_google_cloud_vmmigration_v1_ListReplicationCyclesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse> __Marshaller_google_cloud_vmmigration_v1_ListReplicationCyclesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest> __Marshaller_google_cloud_vmmigration_v1_GetReplicationCycleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.VMMigration.V1.ReplicationCycle> __Marshaller_google_cloud_vmmigration_v1_ReplicationCycle = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.VMMigration.V1.ReplicationCycle.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListSourcesRequest, global::Google.Cloud.VMMigration.V1.ListSourcesResponse> __Method_ListSources = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListSourcesRequest, global::Google.Cloud.VMMigration.V1.ListSourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSources",
        __Marshaller_google_cloud_vmmigration_v1_ListSourcesRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListSourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetSourceRequest, global::Google.Cloud.VMMigration.V1.Source> __Method_GetSource = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetSourceRequest, global::Google.Cloud.VMMigration.V1.Source>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSource",
        __Marshaller_google_cloud_vmmigration_v1_GetSourceRequest,
        __Marshaller_google_cloud_vmmigration_v1_Source);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CreateSourceRequest, global::Google.LongRunning.Operation> __Method_CreateSource = new grpc::Method<global::Google.Cloud.VMMigration.V1.CreateSourceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSource",
        __Marshaller_google_cloud_vmmigration_v1_CreateSourceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.UpdateSourceRequest, global::Google.LongRunning.Operation> __Method_UpdateSource = new grpc::Method<global::Google.Cloud.VMMigration.V1.UpdateSourceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSource",
        __Marshaller_google_cloud_vmmigration_v1_UpdateSourceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteSourceRequest, global::Google.LongRunning.Operation> __Method_DeleteSource = new grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteSourceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSource",
        __Marshaller_google_cloud_vmmigration_v1_DeleteSourceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.FetchInventoryRequest, global::Google.Cloud.VMMigration.V1.FetchInventoryResponse> __Method_FetchInventory = new grpc::Method<global::Google.Cloud.VMMigration.V1.FetchInventoryRequest, global::Google.Cloud.VMMigration.V1.FetchInventoryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchInventory",
        __Marshaller_google_cloud_vmmigration_v1_FetchInventoryRequest,
        __Marshaller_google_cloud_vmmigration_v1_FetchInventoryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest, global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse> __Method_ListUtilizationReports = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest, global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUtilizationReports",
        __Marshaller_google_cloud_vmmigration_v1_ListUtilizationReportsRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListUtilizationReportsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest, global::Google.Cloud.VMMigration.V1.UtilizationReport> __Method_GetUtilizationReport = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest, global::Google.Cloud.VMMigration.V1.UtilizationReport>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUtilizationReport",
        __Marshaller_google_cloud_vmmigration_v1_GetUtilizationReportRequest,
        __Marshaller_google_cloud_vmmigration_v1_UtilizationReport);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest, global::Google.LongRunning.Operation> __Method_CreateUtilizationReport = new grpc::Method<global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateUtilizationReport",
        __Marshaller_google_cloud_vmmigration_v1_CreateUtilizationReportRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest, global::Google.LongRunning.Operation> __Method_DeleteUtilizationReport = new grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUtilizationReport",
        __Marshaller_google_cloud_vmmigration_v1_DeleteUtilizationReportRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest, global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse> __Method_ListDatacenterConnectors = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest, global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDatacenterConnectors",
        __Marshaller_google_cloud_vmmigration_v1_ListDatacenterConnectorsRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListDatacenterConnectorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest, global::Google.Cloud.VMMigration.V1.DatacenterConnector> __Method_GetDatacenterConnector = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest, global::Google.Cloud.VMMigration.V1.DatacenterConnector>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDatacenterConnector",
        __Marshaller_google_cloud_vmmigration_v1_GetDatacenterConnectorRequest,
        __Marshaller_google_cloud_vmmigration_v1_DatacenterConnector);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest, global::Google.LongRunning.Operation> __Method_CreateDatacenterConnector = new grpc::Method<global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDatacenterConnector",
        __Marshaller_google_cloud_vmmigration_v1_CreateDatacenterConnectorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest, global::Google.LongRunning.Operation> __Method_DeleteDatacenterConnector = new grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDatacenterConnector",
        __Marshaller_google_cloud_vmmigration_v1_DeleteDatacenterConnectorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest, global::Google.LongRunning.Operation> __Method_UpgradeAppliance = new grpc::Method<global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpgradeAppliance",
        __Marshaller_google_cloud_vmmigration_v1_UpgradeApplianceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest, global::Google.LongRunning.Operation> __Method_CreateMigratingVm = new grpc::Method<global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateMigratingVm",
        __Marshaller_google_cloud_vmmigration_v1_CreateMigratingVmRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest, global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse> __Method_ListMigratingVms = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest, global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMigratingVms",
        __Marshaller_google_cloud_vmmigration_v1_ListMigratingVmsRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListMigratingVmsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest, global::Google.Cloud.VMMigration.V1.MigratingVm> __Method_GetMigratingVm = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest, global::Google.Cloud.VMMigration.V1.MigratingVm>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMigratingVm",
        __Marshaller_google_cloud_vmmigration_v1_GetMigratingVmRequest,
        __Marshaller_google_cloud_vmmigration_v1_MigratingVm);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest, global::Google.LongRunning.Operation> __Method_UpdateMigratingVm = new grpc::Method<global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMigratingVm",
        __Marshaller_google_cloud_vmmigration_v1_UpdateMigratingVmRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest, global::Google.LongRunning.Operation> __Method_DeleteMigratingVm = new grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteMigratingVm",
        __Marshaller_google_cloud_vmmigration_v1_DeleteMigratingVmRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.StartMigrationRequest, global::Google.LongRunning.Operation> __Method_StartMigration = new grpc::Method<global::Google.Cloud.VMMigration.V1.StartMigrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartMigration",
        __Marshaller_google_cloud_vmmigration_v1_StartMigrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest, global::Google.LongRunning.Operation> __Method_ResumeMigration = new grpc::Method<global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResumeMigration",
        __Marshaller_google_cloud_vmmigration_v1_ResumeMigrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.PauseMigrationRequest, global::Google.LongRunning.Operation> __Method_PauseMigration = new grpc::Method<global::Google.Cloud.VMMigration.V1.PauseMigrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PauseMigration",
        __Marshaller_google_cloud_vmmigration_v1_PauseMigrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest, global::Google.LongRunning.Operation> __Method_FinalizeMigration = new grpc::Method<global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FinalizeMigration",
        __Marshaller_google_cloud_vmmigration_v1_FinalizeMigrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest, global::Google.LongRunning.Operation> __Method_CreateCloneJob = new grpc::Method<global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCloneJob",
        __Marshaller_google_cloud_vmmigration_v1_CreateCloneJobRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest, global::Google.LongRunning.Operation> __Method_CancelCloneJob = new grpc::Method<global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelCloneJob",
        __Marshaller_google_cloud_vmmigration_v1_CancelCloneJobRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest, global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse> __Method_ListCloneJobs = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest, global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCloneJobs",
        __Marshaller_google_cloud_vmmigration_v1_ListCloneJobsRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListCloneJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetCloneJobRequest, global::Google.Cloud.VMMigration.V1.CloneJob> __Method_GetCloneJob = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetCloneJobRequest, global::Google.Cloud.VMMigration.V1.CloneJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCloneJob",
        __Marshaller_google_cloud_vmmigration_v1_GetCloneJobRequest,
        __Marshaller_google_cloud_vmmigration_v1_CloneJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest, global::Google.LongRunning.Operation> __Method_CreateCutoverJob = new grpc::Method<global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCutoverJob",
        __Marshaller_google_cloud_vmmigration_v1_CreateCutoverJobRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest, global::Google.LongRunning.Operation> __Method_CancelCutoverJob = new grpc::Method<global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelCutoverJob",
        __Marshaller_google_cloud_vmmigration_v1_CancelCutoverJobRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest, global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse> __Method_ListCutoverJobs = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest, global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCutoverJobs",
        __Marshaller_google_cloud_vmmigration_v1_ListCutoverJobsRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListCutoverJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest, global::Google.Cloud.VMMigration.V1.CutoverJob> __Method_GetCutoverJob = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest, global::Google.Cloud.VMMigration.V1.CutoverJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCutoverJob",
        __Marshaller_google_cloud_vmmigration_v1_GetCutoverJobRequest,
        __Marshaller_google_cloud_vmmigration_v1_CutoverJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListGroupsRequest, global::Google.Cloud.VMMigration.V1.ListGroupsResponse> __Method_ListGroups = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListGroupsRequest, global::Google.Cloud.VMMigration.V1.ListGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGroups",
        __Marshaller_google_cloud_vmmigration_v1_ListGroupsRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListGroupsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetGroupRequest, global::Google.Cloud.VMMigration.V1.Group> __Method_GetGroup = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetGroupRequest, global::Google.Cloud.VMMigration.V1.Group>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroup",
        __Marshaller_google_cloud_vmmigration_v1_GetGroupRequest,
        __Marshaller_google_cloud_vmmigration_v1_Group);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CreateGroupRequest, global::Google.LongRunning.Operation> __Method_CreateGroup = new grpc::Method<global::Google.Cloud.VMMigration.V1.CreateGroupRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateGroup",
        __Marshaller_google_cloud_vmmigration_v1_CreateGroupRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.UpdateGroupRequest, global::Google.LongRunning.Operation> __Method_UpdateGroup = new grpc::Method<global::Google.Cloud.VMMigration.V1.UpdateGroupRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGroup",
        __Marshaller_google_cloud_vmmigration_v1_UpdateGroupRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteGroupRequest, global::Google.LongRunning.Operation> __Method_DeleteGroup = new grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteGroupRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGroup",
        __Marshaller_google_cloud_vmmigration_v1_DeleteGroupRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest, global::Google.LongRunning.Operation> __Method_AddGroupMigration = new grpc::Method<global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGroupMigration",
        __Marshaller_google_cloud_vmmigration_v1_AddGroupMigrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest, global::Google.LongRunning.Operation> __Method_RemoveGroupMigration = new grpc::Method<global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveGroupMigration",
        __Marshaller_google_cloud_vmmigration_v1_RemoveGroupMigrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest, global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse> __Method_ListTargetProjects = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest, global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTargetProjects",
        __Marshaller_google_cloud_vmmigration_v1_ListTargetProjectsRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListTargetProjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest, global::Google.Cloud.VMMigration.V1.TargetProject> __Method_GetTargetProject = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest, global::Google.Cloud.VMMigration.V1.TargetProject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTargetProject",
        __Marshaller_google_cloud_vmmigration_v1_GetTargetProjectRequest,
        __Marshaller_google_cloud_vmmigration_v1_TargetProject);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest, global::Google.LongRunning.Operation> __Method_CreateTargetProject = new grpc::Method<global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTargetProject",
        __Marshaller_google_cloud_vmmigration_v1_CreateTargetProjectRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest, global::Google.LongRunning.Operation> __Method_UpdateTargetProject = new grpc::Method<global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTargetProject",
        __Marshaller_google_cloud_vmmigration_v1_UpdateTargetProjectRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest, global::Google.LongRunning.Operation> __Method_DeleteTargetProject = new grpc::Method<global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTargetProject",
        __Marshaller_google_cloud_vmmigration_v1_DeleteTargetProjectRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest, global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse> __Method_ListReplicationCycles = new grpc::Method<global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest, global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListReplicationCycles",
        __Marshaller_google_cloud_vmmigration_v1_ListReplicationCyclesRequest,
        __Marshaller_google_cloud_vmmigration_v1_ListReplicationCyclesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest, global::Google.Cloud.VMMigration.V1.ReplicationCycle> __Method_GetReplicationCycle = new grpc::Method<global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest, global::Google.Cloud.VMMigration.V1.ReplicationCycle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReplicationCycle",
        __Marshaller_google_cloud_vmmigration_v1_GetReplicationCycleRequest,
        __Marshaller_google_cloud_vmmigration_v1_ReplicationCycle);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.VMMigration.V1.VmmigrationReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of VmMigration</summary>
    [grpc::BindServiceMethod(typeof(VmMigration), "BindService")]
    public abstract partial class VmMigrationBase
    {
      /// <summary>
      /// Lists Sources in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListSourcesResponse> ListSources(global::Google.Cloud.VMMigration.V1.ListSourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.Source> GetSource(global::Google.Cloud.VMMigration.V1.GetSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Source in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateSource(global::Google.Cloud.VMMigration.V1.CreateSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateSource(global::Google.Cloud.VMMigration.V1.UpdateSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteSource(global::Google.Cloud.VMMigration.V1.DeleteSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List remote source's inventory of VMs.
      /// The remote source is the onprem vCenter (remote in the sense it's not in
      /// Compute Engine). The inventory describes the list of existing VMs in that
      /// source. Note that this operation lists the VMs on the remote source, as
      /// opposed to listing the MigratingVms resources in the vmmigration service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.FetchInventoryResponse> FetchInventory(global::Google.Cloud.VMMigration.V1.FetchInventoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Utilization Reports of the given Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse> ListUtilizationReports(global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a single Utilization Report.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.UtilizationReport> GetUtilizationReport(global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new UtilizationReport.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateUtilizationReport(global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Utilization Report.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteUtilizationReport(global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists DatacenterConnectors in a given Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse> ListDatacenterConnectors(global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.DatacenterConnector> GetDatacenterConnector(global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new DatacenterConnector in a given Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateDatacenterConnector(global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteDatacenterConnector(global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Upgrades the appliance relate to this DatacenterConnector to the in-place
      /// updateable version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpgradeAppliance(global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new MigratingVm in a given Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateMigratingVm(global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists MigratingVms in a given Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse> ListMigratingVms(global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.MigratingVm> GetMigratingVm(global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateMigratingVm(global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single MigratingVm.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteMigratingVm(global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts migration for a VM. Starts the process of uploading
      /// data and creating snapshots, in replication cycles scheduled by the policy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StartMigration(global::Google.Cloud.VMMigration.V1.StartMigrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resumes a migration for a VM. When called on a paused migration, will start
      /// the process of uploading data and creating snapshots; when called on a
      /// completed cut-over migration, will update the migration to active state and
      /// start the process of uploading data and creating snapshots.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ResumeMigration(global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Pauses a migration for a VM. If cycle tasks are running they will be
      /// cancelled, preserving source task data. Further replication cycles will not
      /// be triggered while the VM is paused.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> PauseMigration(global::Google.Cloud.VMMigration.V1.PauseMigrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks a migration as completed, deleting migration resources that are no
      /// longer being used. Only applicable after cutover is done.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> FinalizeMigration(global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Initiates a Clone of a specific migrating VM.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateCloneJob(global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Initiates the cancellation of a running clone job.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CancelCloneJob(global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists CloneJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse> ListCloneJobs(global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single CloneJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.CloneJob> GetCloneJob(global::Google.Cloud.VMMigration.V1.GetCloneJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Initiates a Cutover of a specific migrating VM.
      /// The returned LRO is completed when the cutover job resource is created
      /// and the job is initiated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateCutoverJob(global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Initiates the cancellation of a running cutover job.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CancelCutoverJob(global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists CutoverJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse> ListCutoverJobs(global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single CutoverJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.CutoverJob> GetCutoverJob(global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Groups in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListGroupsResponse> ListGroups(global::Google.Cloud.VMMigration.V1.ListGroupsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Group.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.Group> GetGroup(global::Google.Cloud.VMMigration.V1.GetGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Group in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateGroup(global::Google.Cloud.VMMigration.V1.CreateGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single Group.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateGroup(global::Google.Cloud.VMMigration.V1.UpdateGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Group.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteGroup(global::Google.Cloud.VMMigration.V1.DeleteGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Adds a MigratingVm to a Group.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> AddGroupMigration(global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Removes a MigratingVm from a Group.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RemoveGroupMigration(global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists TargetProjects in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse> ListTargetProjects(global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.TargetProject> GetTargetProject(global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new TargetProject in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateTargetProject(global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateTargetProject(global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteTargetProject(global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ReplicationCycles in a given MigratingVM.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse> ListReplicationCycles(global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single ReplicationCycle.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.VMMigration.V1.ReplicationCycle> GetReplicationCycle(global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for VmMigration</summary>
    public partial class VmMigrationClient : grpc::ClientBase<VmMigrationClient>
    {
      /// <summary>Creates a new client for VmMigration</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public VmMigrationClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for VmMigration that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public VmMigrationClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected VmMigrationClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected VmMigrationClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists Sources in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListSourcesResponse ListSources(global::Google.Cloud.VMMigration.V1.ListSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Sources in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListSourcesResponse ListSources(global::Google.Cloud.VMMigration.V1.ListSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSources, null, options, request);
      }
      /// <summary>
      /// Lists Sources in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListSourcesResponse> ListSourcesAsync(global::Google.Cloud.VMMigration.V1.ListSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Sources in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListSourcesResponse> ListSourcesAsync(global::Google.Cloud.VMMigration.V1.ListSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSources, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.Source GetSource(global::Google.Cloud.VMMigration.V1.GetSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.Source GetSource(global::Google.Cloud.VMMigration.V1.GetSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSource, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.Source> GetSourceAsync(global::Google.Cloud.VMMigration.V1.GetSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.Source> GetSourceAsync(global::Google.Cloud.VMMigration.V1.GetSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSource, null, options, request);
      }
      /// <summary>
      /// Creates a new Source in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateSource(global::Google.Cloud.VMMigration.V1.CreateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Source in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateSource(global::Google.Cloud.VMMigration.V1.CreateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSource, null, options, request);
      }
      /// <summary>
      /// Creates a new Source in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateSourceAsync(global::Google.Cloud.VMMigration.V1.CreateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Source in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateSourceAsync(global::Google.Cloud.VMMigration.V1.CreateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSource, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateSource(global::Google.Cloud.VMMigration.V1.UpdateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateSource(global::Google.Cloud.VMMigration.V1.UpdateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSource, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateSourceAsync(global::Google.Cloud.VMMigration.V1.UpdateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateSourceAsync(global::Google.Cloud.VMMigration.V1.UpdateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSource, null, options, request);
      }
      /// <summary>
      /// Deletes a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteSource(global::Google.Cloud.VMMigration.V1.DeleteSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteSource(global::Google.Cloud.VMMigration.V1.DeleteSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSource, null, options, request);
      }
      /// <summary>
      /// Deletes a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteSourceAsync(global::Google.Cloud.VMMigration.V1.DeleteSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteSourceAsync(global::Google.Cloud.VMMigration.V1.DeleteSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSource, null, options, request);
      }
      /// <summary>
      /// List remote source's inventory of VMs.
      /// The remote source is the onprem vCenter (remote in the sense it's not in
      /// Compute Engine). The inventory describes the list of existing VMs in that
      /// source. Note that this operation lists the VMs on the remote source, as
      /// opposed to listing the MigratingVms resources in the vmmigration service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.FetchInventoryResponse FetchInventory(global::Google.Cloud.VMMigration.V1.FetchInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List remote source's inventory of VMs.
      /// The remote source is the onprem vCenter (remote in the sense it's not in
      /// Compute Engine). The inventory describes the list of existing VMs in that
      /// source. Note that this operation lists the VMs on the remote source, as
      /// opposed to listing the MigratingVms resources in the vmmigration service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.FetchInventoryResponse FetchInventory(global::Google.Cloud.VMMigration.V1.FetchInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchInventory, null, options, request);
      }
      /// <summary>
      /// List remote source's inventory of VMs.
      /// The remote source is the onprem vCenter (remote in the sense it's not in
      /// Compute Engine). The inventory describes the list of existing VMs in that
      /// source. Note that this operation lists the VMs on the remote source, as
      /// opposed to listing the MigratingVms resources in the vmmigration service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.FetchInventoryResponse> FetchInventoryAsync(global::Google.Cloud.VMMigration.V1.FetchInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List remote source's inventory of VMs.
      /// The remote source is the onprem vCenter (remote in the sense it's not in
      /// Compute Engine). The inventory describes the list of existing VMs in that
      /// source. Note that this operation lists the VMs on the remote source, as
      /// opposed to listing the MigratingVms resources in the vmmigration service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.FetchInventoryResponse> FetchInventoryAsync(global::Google.Cloud.VMMigration.V1.FetchInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchInventory, null, options, request);
      }
      /// <summary>
      /// Lists Utilization Reports of the given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse ListUtilizationReports(global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUtilizationReports(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Utilization Reports of the given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse ListUtilizationReports(global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUtilizationReports, null, options, request);
      }
      /// <summary>
      /// Lists Utilization Reports of the given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse> ListUtilizationReportsAsync(global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUtilizationReportsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Utilization Reports of the given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse> ListUtilizationReportsAsync(global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUtilizationReports, null, options, request);
      }
      /// <summary>
      /// Gets a single Utilization Report.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.UtilizationReport GetUtilizationReport(global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUtilizationReport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a single Utilization Report.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.UtilizationReport GetUtilizationReport(global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUtilizationReport, null, options, request);
      }
      /// <summary>
      /// Gets a single Utilization Report.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.UtilizationReport> GetUtilizationReportAsync(global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUtilizationReportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a single Utilization Report.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.UtilizationReport> GetUtilizationReportAsync(global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUtilizationReport, null, options, request);
      }
      /// <summary>
      /// Creates a new UtilizationReport.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateUtilizationReport(global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUtilizationReport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new UtilizationReport.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateUtilizationReport(global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateUtilizationReport, null, options, request);
      }
      /// <summary>
      /// Creates a new UtilizationReport.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateUtilizationReportAsync(global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUtilizationReportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new UtilizationReport.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateUtilizationReportAsync(global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateUtilizationReport, null, options, request);
      }
      /// <summary>
      /// Deletes a single Utilization Report.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteUtilizationReport(global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUtilizationReport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Utilization Report.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteUtilizationReport(global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUtilizationReport, null, options, request);
      }
      /// <summary>
      /// Deletes a single Utilization Report.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteUtilizationReportAsync(global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUtilizationReportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Utilization Report.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteUtilizationReportAsync(global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUtilizationReport, null, options, request);
      }
      /// <summary>
      /// Lists DatacenterConnectors in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse ListDatacenterConnectors(global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDatacenterConnectors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DatacenterConnectors in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse ListDatacenterConnectors(global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDatacenterConnectors, null, options, request);
      }
      /// <summary>
      /// Lists DatacenterConnectors in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse> ListDatacenterConnectorsAsync(global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDatacenterConnectorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DatacenterConnectors in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse> ListDatacenterConnectorsAsync(global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDatacenterConnectors, null, options, request);
      }
      /// <summary>
      /// Gets details of a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.DatacenterConnector GetDatacenterConnector(global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDatacenterConnector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.DatacenterConnector GetDatacenterConnector(global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDatacenterConnector, null, options, request);
      }
      /// <summary>
      /// Gets details of a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.DatacenterConnector> GetDatacenterConnectorAsync(global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDatacenterConnectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.DatacenterConnector> GetDatacenterConnectorAsync(global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDatacenterConnector, null, options, request);
      }
      /// <summary>
      /// Creates a new DatacenterConnector in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateDatacenterConnector(global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDatacenterConnector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new DatacenterConnector in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateDatacenterConnector(global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDatacenterConnector, null, options, request);
      }
      /// <summary>
      /// Creates a new DatacenterConnector in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateDatacenterConnectorAsync(global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDatacenterConnectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new DatacenterConnector in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateDatacenterConnectorAsync(global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDatacenterConnector, null, options, request);
      }
      /// <summary>
      /// Deletes a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteDatacenterConnector(global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDatacenterConnector(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteDatacenterConnector(global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDatacenterConnector, null, options, request);
      }
      /// <summary>
      /// Deletes a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteDatacenterConnectorAsync(global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDatacenterConnectorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single DatacenterConnector.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteDatacenterConnectorAsync(global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDatacenterConnector, null, options, request);
      }
      /// <summary>
      /// Upgrades the appliance relate to this DatacenterConnector to the in-place
      /// updateable version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpgradeAppliance(global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradeAppliance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upgrades the appliance relate to this DatacenterConnector to the in-place
      /// updateable version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpgradeAppliance(global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpgradeAppliance, null, options, request);
      }
      /// <summary>
      /// Upgrades the appliance relate to this DatacenterConnector to the in-place
      /// updateable version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpgradeApplianceAsync(global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradeApplianceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upgrades the appliance relate to this DatacenterConnector to the in-place
      /// updateable version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpgradeApplianceAsync(global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpgradeAppliance, null, options, request);
      }
      /// <summary>
      /// Creates a new MigratingVm in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateMigratingVm(global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMigratingVm(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new MigratingVm in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateMigratingVm(global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateMigratingVm, null, options, request);
      }
      /// <summary>
      /// Creates a new MigratingVm in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateMigratingVmAsync(global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMigratingVmAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new MigratingVm in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateMigratingVmAsync(global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateMigratingVm, null, options, request);
      }
      /// <summary>
      /// Lists MigratingVms in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse ListMigratingVms(global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMigratingVms(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists MigratingVms in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse ListMigratingVms(global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMigratingVms, null, options, request);
      }
      /// <summary>
      /// Lists MigratingVms in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse> ListMigratingVmsAsync(global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMigratingVmsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists MigratingVms in a given Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse> ListMigratingVmsAsync(global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMigratingVms, null, options, request);
      }
      /// <summary>
      /// Gets details of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.MigratingVm GetMigratingVm(global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMigratingVm(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.MigratingVm GetMigratingVm(global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMigratingVm, null, options, request);
      }
      /// <summary>
      /// Gets details of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.MigratingVm> GetMigratingVmAsync(global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMigratingVmAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.MigratingVm> GetMigratingVmAsync(global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMigratingVm, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateMigratingVm(global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMigratingVm(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateMigratingVm(global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMigratingVm, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateMigratingVmAsync(global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMigratingVmAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateMigratingVmAsync(global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMigratingVm, null, options, request);
      }
      /// <summary>
      /// Deletes a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteMigratingVm(global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMigratingVm(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteMigratingVm(global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteMigratingVm, null, options, request);
      }
      /// <summary>
      /// Deletes a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteMigratingVmAsync(global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMigratingVmAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single MigratingVm.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteMigratingVmAsync(global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteMigratingVm, null, options, request);
      }
      /// <summary>
      /// Starts migration for a VM. Starts the process of uploading
      /// data and creating snapshots, in replication cycles scheduled by the policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartMigration(global::Google.Cloud.VMMigration.V1.StartMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartMigration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts migration for a VM. Starts the process of uploading
      /// data and creating snapshots, in replication cycles scheduled by the policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartMigration(global::Google.Cloud.VMMigration.V1.StartMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartMigration, null, options, request);
      }
      /// <summary>
      /// Starts migration for a VM. Starts the process of uploading
      /// data and creating snapshots, in replication cycles scheduled by the policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartMigrationAsync(global::Google.Cloud.VMMigration.V1.StartMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartMigrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts migration for a VM. Starts the process of uploading
      /// data and creating snapshots, in replication cycles scheduled by the policy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartMigrationAsync(global::Google.Cloud.VMMigration.V1.StartMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartMigration, null, options, request);
      }
      /// <summary>
      /// Resumes a migration for a VM. When called on a paused migration, will start
      /// the process of uploading data and creating snapshots; when called on a
      /// completed cut-over migration, will update the migration to active state and
      /// start the process of uploading data and creating snapshots.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ResumeMigration(global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeMigration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes a migration for a VM. When called on a paused migration, will start
      /// the process of uploading data and creating snapshots; when called on a
      /// completed cut-over migration, will update the migration to active state and
      /// start the process of uploading data and creating snapshots.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ResumeMigration(global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResumeMigration, null, options, request);
      }
      /// <summary>
      /// Resumes a migration for a VM. When called on a paused migration, will start
      /// the process of uploading data and creating snapshots; when called on a
      /// completed cut-over migration, will update the migration to active state and
      /// start the process of uploading data and creating snapshots.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ResumeMigrationAsync(global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeMigrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes a migration for a VM. When called on a paused migration, will start
      /// the process of uploading data and creating snapshots; when called on a
      /// completed cut-over migration, will update the migration to active state and
      /// start the process of uploading data and creating snapshots.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ResumeMigrationAsync(global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResumeMigration, null, options, request);
      }
      /// <summary>
      /// Pauses a migration for a VM. If cycle tasks are running they will be
      /// cancelled, preserving source task data. Further replication cycles will not
      /// be triggered while the VM is paused.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation PauseMigration(global::Google.Cloud.VMMigration.V1.PauseMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseMigration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses a migration for a VM. If cycle tasks are running they will be
      /// cancelled, preserving source task data. Further replication cycles will not
      /// be triggered while the VM is paused.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation PauseMigration(global::Google.Cloud.VMMigration.V1.PauseMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PauseMigration, null, options, request);
      }
      /// <summary>
      /// Pauses a migration for a VM. If cycle tasks are running they will be
      /// cancelled, preserving source task data. Further replication cycles will not
      /// be triggered while the VM is paused.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> PauseMigrationAsync(global::Google.Cloud.VMMigration.V1.PauseMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseMigrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses a migration for a VM. If cycle tasks are running they will be
      /// cancelled, preserving source task data. Further replication cycles will not
      /// be triggered while the VM is paused.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> PauseMigrationAsync(global::Google.Cloud.VMMigration.V1.PauseMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PauseMigration, null, options, request);
      }
      /// <summary>
      /// Marks a migration as completed, deleting migration resources that are no
      /// longer being used. Only applicable after cutover is done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation FinalizeMigration(global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FinalizeMigration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks a migration as completed, deleting migration resources that are no
      /// longer being used. Only applicable after cutover is done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation FinalizeMigration(global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FinalizeMigration, null, options, request);
      }
      /// <summary>
      /// Marks a migration as completed, deleting migration resources that are no
      /// longer being used. Only applicable after cutover is done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> FinalizeMigrationAsync(global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FinalizeMigrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks a migration as completed, deleting migration resources that are no
      /// longer being used. Only applicable after cutover is done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> FinalizeMigrationAsync(global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FinalizeMigration, null, options, request);
      }
      /// <summary>
      /// Initiates a Clone of a specific migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCloneJob(global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCloneJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates a Clone of a specific migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCloneJob(global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCloneJob, null, options, request);
      }
      /// <summary>
      /// Initiates a Clone of a specific migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCloneJobAsync(global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCloneJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates a Clone of a specific migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCloneJobAsync(global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCloneJob, null, options, request);
      }
      /// <summary>
      /// Initiates the cancellation of a running clone job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CancelCloneJob(global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelCloneJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates the cancellation of a running clone job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CancelCloneJob(global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelCloneJob, null, options, request);
      }
      /// <summary>
      /// Initiates the cancellation of a running clone job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CancelCloneJobAsync(global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelCloneJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates the cancellation of a running clone job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CancelCloneJobAsync(global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelCloneJob, null, options, request);
      }
      /// <summary>
      /// Lists CloneJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse ListCloneJobs(global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCloneJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CloneJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse ListCloneJobs(global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCloneJobs, null, options, request);
      }
      /// <summary>
      /// Lists CloneJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse> ListCloneJobsAsync(global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCloneJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CloneJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse> ListCloneJobsAsync(global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCloneJobs, null, options, request);
      }
      /// <summary>
      /// Gets details of a single CloneJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.CloneJob GetCloneJob(global::Google.Cloud.VMMigration.V1.GetCloneJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCloneJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single CloneJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.CloneJob GetCloneJob(global::Google.Cloud.VMMigration.V1.GetCloneJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCloneJob, null, options, request);
      }
      /// <summary>
      /// Gets details of a single CloneJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.CloneJob> GetCloneJobAsync(global::Google.Cloud.VMMigration.V1.GetCloneJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCloneJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single CloneJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.CloneJob> GetCloneJobAsync(global::Google.Cloud.VMMigration.V1.GetCloneJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCloneJob, null, options, request);
      }
      /// <summary>
      /// Initiates a Cutover of a specific migrating VM.
      /// The returned LRO is completed when the cutover job resource is created
      /// and the job is initiated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCutoverJob(global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCutoverJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates a Cutover of a specific migrating VM.
      /// The returned LRO is completed when the cutover job resource is created
      /// and the job is initiated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateCutoverJob(global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCutoverJob, null, options, request);
      }
      /// <summary>
      /// Initiates a Cutover of a specific migrating VM.
      /// The returned LRO is completed when the cutover job resource is created
      /// and the job is initiated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCutoverJobAsync(global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCutoverJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates a Cutover of a specific migrating VM.
      /// The returned LRO is completed when the cutover job resource is created
      /// and the job is initiated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateCutoverJobAsync(global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCutoverJob, null, options, request);
      }
      /// <summary>
      /// Initiates the cancellation of a running cutover job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CancelCutoverJob(global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelCutoverJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates the cancellation of a running cutover job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CancelCutoverJob(global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelCutoverJob, null, options, request);
      }
      /// <summary>
      /// Initiates the cancellation of a running cutover job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CancelCutoverJobAsync(global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelCutoverJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates the cancellation of a running cutover job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CancelCutoverJobAsync(global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelCutoverJob, null, options, request);
      }
      /// <summary>
      /// Lists CutoverJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse ListCutoverJobs(global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCutoverJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CutoverJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse ListCutoverJobs(global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCutoverJobs, null, options, request);
      }
      /// <summary>
      /// Lists CutoverJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse> ListCutoverJobsAsync(global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCutoverJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CutoverJobs of a given migrating VM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse> ListCutoverJobsAsync(global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCutoverJobs, null, options, request);
      }
      /// <summary>
      /// Gets details of a single CutoverJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.CutoverJob GetCutoverJob(global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCutoverJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single CutoverJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.CutoverJob GetCutoverJob(global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCutoverJob, null, options, request);
      }
      /// <summary>
      /// Gets details of a single CutoverJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.CutoverJob> GetCutoverJobAsync(global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCutoverJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single CutoverJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.CutoverJob> GetCutoverJobAsync(global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCutoverJob, null, options, request);
      }
      /// <summary>
      /// Lists Groups in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListGroupsResponse ListGroups(global::Google.Cloud.VMMigration.V1.ListGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Groups in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListGroupsResponse ListGroups(global::Google.Cloud.VMMigration.V1.ListGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGroups, null, options, request);
      }
      /// <summary>
      /// Lists Groups in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListGroupsResponse> ListGroupsAsync(global::Google.Cloud.VMMigration.V1.ListGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Groups in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListGroupsResponse> ListGroupsAsync(global::Google.Cloud.VMMigration.V1.ListGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGroups, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.Group GetGroup(global::Google.Cloud.VMMigration.V1.GetGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.Group GetGroup(global::Google.Cloud.VMMigration.V1.GetGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGroup, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.Group> GetGroupAsync(global::Google.Cloud.VMMigration.V1.GetGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.Group> GetGroupAsync(global::Google.Cloud.VMMigration.V1.GetGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGroup, null, options, request);
      }
      /// <summary>
      /// Creates a new Group in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateGroup(global::Google.Cloud.VMMigration.V1.CreateGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Group in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateGroup(global::Google.Cloud.VMMigration.V1.CreateGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateGroup, null, options, request);
      }
      /// <summary>
      /// Creates a new Group in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateGroupAsync(global::Google.Cloud.VMMigration.V1.CreateGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Group in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateGroupAsync(global::Google.Cloud.VMMigration.V1.CreateGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateGroup, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateGroup(global::Google.Cloud.VMMigration.V1.UpdateGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateGroup(global::Google.Cloud.VMMigration.V1.UpdateGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGroup, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateGroupAsync(global::Google.Cloud.VMMigration.V1.UpdateGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateGroupAsync(global::Google.Cloud.VMMigration.V1.UpdateGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGroup, null, options, request);
      }
      /// <summary>
      /// Deletes a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteGroup(global::Google.Cloud.VMMigration.V1.DeleteGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteGroup(global::Google.Cloud.VMMigration.V1.DeleteGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGroup, null, options, request);
      }
      /// <summary>
      /// Deletes a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteGroupAsync(global::Google.Cloud.VMMigration.V1.DeleteGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteGroupAsync(global::Google.Cloud.VMMigration.V1.DeleteGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGroup, null, options, request);
      }
      /// <summary>
      /// Adds a MigratingVm to a Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AddGroupMigration(global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGroupMigration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Adds a MigratingVm to a Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AddGroupMigration(global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGroupMigration, null, options, request);
      }
      /// <summary>
      /// Adds a MigratingVm to a Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AddGroupMigrationAsync(global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGroupMigrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Adds a MigratingVm to a Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AddGroupMigrationAsync(global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGroupMigration, null, options, request);
      }
      /// <summary>
      /// Removes a MigratingVm from a Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RemoveGroupMigration(global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveGroupMigration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Removes a MigratingVm from a Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RemoveGroupMigration(global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveGroupMigration, null, options, request);
      }
      /// <summary>
      /// Removes a MigratingVm from a Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RemoveGroupMigrationAsync(global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveGroupMigrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Removes a MigratingVm from a Group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RemoveGroupMigrationAsync(global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveGroupMigration, null, options, request);
      }
      /// <summary>
      /// Lists TargetProjects in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse ListTargetProjects(global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTargetProjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists TargetProjects in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse ListTargetProjects(global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTargetProjects, null, options, request);
      }
      /// <summary>
      /// Lists TargetProjects in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse> ListTargetProjectsAsync(global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTargetProjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists TargetProjects in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse> ListTargetProjectsAsync(global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTargetProjects, null, options, request);
      }
      /// <summary>
      /// Gets details of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.TargetProject GetTargetProject(global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTargetProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.TargetProject GetTargetProject(global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTargetProject, null, options, request);
      }
      /// <summary>
      /// Gets details of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.TargetProject> GetTargetProjectAsync(global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTargetProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.TargetProject> GetTargetProjectAsync(global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTargetProject, null, options, request);
      }
      /// <summary>
      /// Creates a new TargetProject in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateTargetProject(global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTargetProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new TargetProject in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateTargetProject(global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTargetProject, null, options, request);
      }
      /// <summary>
      /// Creates a new TargetProject in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateTargetProjectAsync(global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTargetProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new TargetProject in a given project.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateTargetProjectAsync(global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTargetProject, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateTargetProject(global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTargetProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateTargetProject(global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTargetProject, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateTargetProjectAsync(global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTargetProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateTargetProjectAsync(global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTargetProject, null, options, request);
      }
      /// <summary>
      /// Deletes a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteTargetProject(global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTargetProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteTargetProject(global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTargetProject, null, options, request);
      }
      /// <summary>
      /// Deletes a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteTargetProjectAsync(global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTargetProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single TargetProject.
      ///
      /// NOTE: TargetProject is a global resource; hence the only supported value
      /// for location is `global`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteTargetProjectAsync(global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTargetProject, null, options, request);
      }
      /// <summary>
      /// Lists ReplicationCycles in a given MigratingVM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse ListReplicationCycles(global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReplicationCycles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ReplicationCycles in a given MigratingVM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse ListReplicationCycles(global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListReplicationCycles, null, options, request);
      }
      /// <summary>
      /// Lists ReplicationCycles in a given MigratingVM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse> ListReplicationCyclesAsync(global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReplicationCyclesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ReplicationCycles in a given MigratingVM.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse> ListReplicationCyclesAsync(global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListReplicationCycles, null, options, request);
      }
      /// <summary>
      /// Gets details of a single ReplicationCycle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ReplicationCycle GetReplicationCycle(global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReplicationCycle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single ReplicationCycle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.VMMigration.V1.ReplicationCycle GetReplicationCycle(global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetReplicationCycle, null, options, request);
      }
      /// <summary>
      /// Gets details of a single ReplicationCycle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ReplicationCycle> GetReplicationCycleAsync(global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReplicationCycleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single ReplicationCycle.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.VMMigration.V1.ReplicationCycle> GetReplicationCycleAsync(global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetReplicationCycle, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override VmMigrationClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new VmMigrationClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(VmMigrationBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListSources, serviceImpl.ListSources)
          .AddMethod(__Method_GetSource, serviceImpl.GetSource)
          .AddMethod(__Method_CreateSource, serviceImpl.CreateSource)
          .AddMethod(__Method_UpdateSource, serviceImpl.UpdateSource)
          .AddMethod(__Method_DeleteSource, serviceImpl.DeleteSource)
          .AddMethod(__Method_FetchInventory, serviceImpl.FetchInventory)
          .AddMethod(__Method_ListUtilizationReports, serviceImpl.ListUtilizationReports)
          .AddMethod(__Method_GetUtilizationReport, serviceImpl.GetUtilizationReport)
          .AddMethod(__Method_CreateUtilizationReport, serviceImpl.CreateUtilizationReport)
          .AddMethod(__Method_DeleteUtilizationReport, serviceImpl.DeleteUtilizationReport)
          .AddMethod(__Method_ListDatacenterConnectors, serviceImpl.ListDatacenterConnectors)
          .AddMethod(__Method_GetDatacenterConnector, serviceImpl.GetDatacenterConnector)
          .AddMethod(__Method_CreateDatacenterConnector, serviceImpl.CreateDatacenterConnector)
          .AddMethod(__Method_DeleteDatacenterConnector, serviceImpl.DeleteDatacenterConnector)
          .AddMethod(__Method_UpgradeAppliance, serviceImpl.UpgradeAppliance)
          .AddMethod(__Method_CreateMigratingVm, serviceImpl.CreateMigratingVm)
          .AddMethod(__Method_ListMigratingVms, serviceImpl.ListMigratingVms)
          .AddMethod(__Method_GetMigratingVm, serviceImpl.GetMigratingVm)
          .AddMethod(__Method_UpdateMigratingVm, serviceImpl.UpdateMigratingVm)
          .AddMethod(__Method_DeleteMigratingVm, serviceImpl.DeleteMigratingVm)
          .AddMethod(__Method_StartMigration, serviceImpl.StartMigration)
          .AddMethod(__Method_ResumeMigration, serviceImpl.ResumeMigration)
          .AddMethod(__Method_PauseMigration, serviceImpl.PauseMigration)
          .AddMethod(__Method_FinalizeMigration, serviceImpl.FinalizeMigration)
          .AddMethod(__Method_CreateCloneJob, serviceImpl.CreateCloneJob)
          .AddMethod(__Method_CancelCloneJob, serviceImpl.CancelCloneJob)
          .AddMethod(__Method_ListCloneJobs, serviceImpl.ListCloneJobs)
          .AddMethod(__Method_GetCloneJob, serviceImpl.GetCloneJob)
          .AddMethod(__Method_CreateCutoverJob, serviceImpl.CreateCutoverJob)
          .AddMethod(__Method_CancelCutoverJob, serviceImpl.CancelCutoverJob)
          .AddMethod(__Method_ListCutoverJobs, serviceImpl.ListCutoverJobs)
          .AddMethod(__Method_GetCutoverJob, serviceImpl.GetCutoverJob)
          .AddMethod(__Method_ListGroups, serviceImpl.ListGroups)
          .AddMethod(__Method_GetGroup, serviceImpl.GetGroup)
          .AddMethod(__Method_CreateGroup, serviceImpl.CreateGroup)
          .AddMethod(__Method_UpdateGroup, serviceImpl.UpdateGroup)
          .AddMethod(__Method_DeleteGroup, serviceImpl.DeleteGroup)
          .AddMethod(__Method_AddGroupMigration, serviceImpl.AddGroupMigration)
          .AddMethod(__Method_RemoveGroupMigration, serviceImpl.RemoveGroupMigration)
          .AddMethod(__Method_ListTargetProjects, serviceImpl.ListTargetProjects)
          .AddMethod(__Method_GetTargetProject, serviceImpl.GetTargetProject)
          .AddMethod(__Method_CreateTargetProject, serviceImpl.CreateTargetProject)
          .AddMethod(__Method_UpdateTargetProject, serviceImpl.UpdateTargetProject)
          .AddMethod(__Method_DeleteTargetProject, serviceImpl.DeleteTargetProject)
          .AddMethod(__Method_ListReplicationCycles, serviceImpl.ListReplicationCycles)
          .AddMethod(__Method_GetReplicationCycle, serviceImpl.GetReplicationCycle).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, VmMigrationBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListSources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListSourcesRequest, global::Google.Cloud.VMMigration.V1.ListSourcesResponse>(serviceImpl.ListSources));
      serviceBinder.AddMethod(__Method_GetSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetSourceRequest, global::Google.Cloud.VMMigration.V1.Source>(serviceImpl.GetSource));
      serviceBinder.AddMethod(__Method_CreateSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CreateSourceRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateSource));
      serviceBinder.AddMethod(__Method_UpdateSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.UpdateSourceRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateSource));
      serviceBinder.AddMethod(__Method_DeleteSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.DeleteSourceRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteSource));
      serviceBinder.AddMethod(__Method_FetchInventory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.FetchInventoryRequest, global::Google.Cloud.VMMigration.V1.FetchInventoryResponse>(serviceImpl.FetchInventory));
      serviceBinder.AddMethod(__Method_ListUtilizationReports, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListUtilizationReportsRequest, global::Google.Cloud.VMMigration.V1.ListUtilizationReportsResponse>(serviceImpl.ListUtilizationReports));
      serviceBinder.AddMethod(__Method_GetUtilizationReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetUtilizationReportRequest, global::Google.Cloud.VMMigration.V1.UtilizationReport>(serviceImpl.GetUtilizationReport));
      serviceBinder.AddMethod(__Method_CreateUtilizationReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CreateUtilizationReportRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateUtilizationReport));
      serviceBinder.AddMethod(__Method_DeleteUtilizationReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.DeleteUtilizationReportRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteUtilizationReport));
      serviceBinder.AddMethod(__Method_ListDatacenterConnectors, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsRequest, global::Google.Cloud.VMMigration.V1.ListDatacenterConnectorsResponse>(serviceImpl.ListDatacenterConnectors));
      serviceBinder.AddMethod(__Method_GetDatacenterConnector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetDatacenterConnectorRequest, global::Google.Cloud.VMMigration.V1.DatacenterConnector>(serviceImpl.GetDatacenterConnector));
      serviceBinder.AddMethod(__Method_CreateDatacenterConnector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CreateDatacenterConnectorRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateDatacenterConnector));
      serviceBinder.AddMethod(__Method_DeleteDatacenterConnector, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.DeleteDatacenterConnectorRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteDatacenterConnector));
      serviceBinder.AddMethod(__Method_UpgradeAppliance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.UpgradeApplianceRequest, global::Google.LongRunning.Operation>(serviceImpl.UpgradeAppliance));
      serviceBinder.AddMethod(__Method_CreateMigratingVm, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CreateMigratingVmRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateMigratingVm));
      serviceBinder.AddMethod(__Method_ListMigratingVms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListMigratingVmsRequest, global::Google.Cloud.VMMigration.V1.ListMigratingVmsResponse>(serviceImpl.ListMigratingVms));
      serviceBinder.AddMethod(__Method_GetMigratingVm, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetMigratingVmRequest, global::Google.Cloud.VMMigration.V1.MigratingVm>(serviceImpl.GetMigratingVm));
      serviceBinder.AddMethod(__Method_UpdateMigratingVm, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.UpdateMigratingVmRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateMigratingVm));
      serviceBinder.AddMethod(__Method_DeleteMigratingVm, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.DeleteMigratingVmRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteMigratingVm));
      serviceBinder.AddMethod(__Method_StartMigration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.StartMigrationRequest, global::Google.LongRunning.Operation>(serviceImpl.StartMigration));
      serviceBinder.AddMethod(__Method_ResumeMigration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ResumeMigrationRequest, global::Google.LongRunning.Operation>(serviceImpl.ResumeMigration));
      serviceBinder.AddMethod(__Method_PauseMigration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.PauseMigrationRequest, global::Google.LongRunning.Operation>(serviceImpl.PauseMigration));
      serviceBinder.AddMethod(__Method_FinalizeMigration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.FinalizeMigrationRequest, global::Google.LongRunning.Operation>(serviceImpl.FinalizeMigration));
      serviceBinder.AddMethod(__Method_CreateCloneJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CreateCloneJobRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateCloneJob));
      serviceBinder.AddMethod(__Method_CancelCloneJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CancelCloneJobRequest, global::Google.LongRunning.Operation>(serviceImpl.CancelCloneJob));
      serviceBinder.AddMethod(__Method_ListCloneJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListCloneJobsRequest, global::Google.Cloud.VMMigration.V1.ListCloneJobsResponse>(serviceImpl.ListCloneJobs));
      serviceBinder.AddMethod(__Method_GetCloneJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetCloneJobRequest, global::Google.Cloud.VMMigration.V1.CloneJob>(serviceImpl.GetCloneJob));
      serviceBinder.AddMethod(__Method_CreateCutoverJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CreateCutoverJobRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateCutoverJob));
      serviceBinder.AddMethod(__Method_CancelCutoverJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CancelCutoverJobRequest, global::Google.LongRunning.Operation>(serviceImpl.CancelCutoverJob));
      serviceBinder.AddMethod(__Method_ListCutoverJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListCutoverJobsRequest, global::Google.Cloud.VMMigration.V1.ListCutoverJobsResponse>(serviceImpl.ListCutoverJobs));
      serviceBinder.AddMethod(__Method_GetCutoverJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetCutoverJobRequest, global::Google.Cloud.VMMigration.V1.CutoverJob>(serviceImpl.GetCutoverJob));
      serviceBinder.AddMethod(__Method_ListGroups, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListGroupsRequest, global::Google.Cloud.VMMigration.V1.ListGroupsResponse>(serviceImpl.ListGroups));
      serviceBinder.AddMethod(__Method_GetGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetGroupRequest, global::Google.Cloud.VMMigration.V1.Group>(serviceImpl.GetGroup));
      serviceBinder.AddMethod(__Method_CreateGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CreateGroupRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateGroup));
      serviceBinder.AddMethod(__Method_UpdateGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.UpdateGroupRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateGroup));
      serviceBinder.AddMethod(__Method_DeleteGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.DeleteGroupRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteGroup));
      serviceBinder.AddMethod(__Method_AddGroupMigration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.AddGroupMigrationRequest, global::Google.LongRunning.Operation>(serviceImpl.AddGroupMigration));
      serviceBinder.AddMethod(__Method_RemoveGroupMigration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.RemoveGroupMigrationRequest, global::Google.LongRunning.Operation>(serviceImpl.RemoveGroupMigration));
      serviceBinder.AddMethod(__Method_ListTargetProjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListTargetProjectsRequest, global::Google.Cloud.VMMigration.V1.ListTargetProjectsResponse>(serviceImpl.ListTargetProjects));
      serviceBinder.AddMethod(__Method_GetTargetProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetTargetProjectRequest, global::Google.Cloud.VMMigration.V1.TargetProject>(serviceImpl.GetTargetProject));
      serviceBinder.AddMethod(__Method_CreateTargetProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.CreateTargetProjectRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateTargetProject));
      serviceBinder.AddMethod(__Method_UpdateTargetProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.UpdateTargetProjectRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateTargetProject));
      serviceBinder.AddMethod(__Method_DeleteTargetProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.DeleteTargetProjectRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteTargetProject));
      serviceBinder.AddMethod(__Method_ListReplicationCycles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.ListReplicationCyclesRequest, global::Google.Cloud.VMMigration.V1.ListReplicationCyclesResponse>(serviceImpl.ListReplicationCycles));
      serviceBinder.AddMethod(__Method_GetReplicationCycle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.VMMigration.V1.GetReplicationCycleRequest, global::Google.Cloud.VMMigration.V1.ReplicationCycle>(serviceImpl.GetReplicationCycle));
    }

  }
}
#endregion
