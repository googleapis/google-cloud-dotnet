// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/admanager/v1/entity_signals_mapping_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Ads.AdManager.V1 {
  /// <summary>
  /// Provides methods for handling `EntitySignalsMapping` objects.
  /// </summary>
  public static partial class EntitySignalsMappingService
  {
    static readonly string __ServiceName = "google.ads.admanager.v1.EntitySignalsMappingService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest> __Marshaller_google_ads_admanager_v1_GetEntitySignalsMappingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.EntitySignalsMapping> __Marshaller_google_ads_admanager_v1_EntitySignalsMapping = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.EntitySignalsMapping.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest> __Marshaller_google_ads_admanager_v1_ListEntitySignalsMappingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse> __Marshaller_google_ads_admanager_v1_ListEntitySignalsMappingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest> __Marshaller_google_ads_admanager_v1_CreateEntitySignalsMappingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest> __Marshaller_google_ads_admanager_v1_UpdateEntitySignalsMappingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest> __Marshaller_google_ads_admanager_v1_BatchCreateEntitySignalsMappingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse> __Marshaller_google_ads_admanager_v1_BatchCreateEntitySignalsMappingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest> __Marshaller_google_ads_admanager_v1_BatchUpdateEntitySignalsMappingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse> __Marshaller_google_ads_admanager_v1_BatchUpdateEntitySignalsMappingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping> __Method_GetEntitySignalsMapping = new grpc::Method<global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEntitySignalsMapping",
        __Marshaller_google_ads_admanager_v1_GetEntitySignalsMappingRequest,
        __Marshaller_google_ads_admanager_v1_EntitySignalsMapping);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse> __Method_ListEntitySignalsMappings = new grpc::Method<global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEntitySignalsMappings",
        __Marshaller_google_ads_admanager_v1_ListEntitySignalsMappingsRequest,
        __Marshaller_google_ads_admanager_v1_ListEntitySignalsMappingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping> __Method_CreateEntitySignalsMapping = new grpc::Method<global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEntitySignalsMapping",
        __Marshaller_google_ads_admanager_v1_CreateEntitySignalsMappingRequest,
        __Marshaller_google_ads_admanager_v1_EntitySignalsMapping);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping> __Method_UpdateEntitySignalsMapping = new grpc::Method<global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEntitySignalsMapping",
        __Marshaller_google_ads_admanager_v1_UpdateEntitySignalsMappingRequest,
        __Marshaller_google_ads_admanager_v1_EntitySignalsMapping);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse> __Method_BatchCreateEntitySignalsMappings = new grpc::Method<global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchCreateEntitySignalsMappings",
        __Marshaller_google_ads_admanager_v1_BatchCreateEntitySignalsMappingsRequest,
        __Marshaller_google_ads_admanager_v1_BatchCreateEntitySignalsMappingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse> __Method_BatchUpdateEntitySignalsMappings = new grpc::Method<global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchUpdateEntitySignalsMappings",
        __Marshaller_google_ads_admanager_v1_BatchUpdateEntitySignalsMappingsRequest,
        __Marshaller_google_ads_admanager_v1_BatchUpdateEntitySignalsMappingsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Ads.AdManager.V1.EntitySignalsMappingServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EntitySignalsMappingService</summary>
    [grpc::BindServiceMethod(typeof(EntitySignalsMappingService), "BindService")]
    public abstract partial class EntitySignalsMappingServiceBase
    {
      /// <summary>
      /// API to retrieve a `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.EntitySignalsMapping> GetEntitySignalsMapping(global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to retrieve a list of `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse> ListEntitySignalsMappings(global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to create an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.EntitySignalsMapping> CreateEntitySignalsMapping(global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to update an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.EntitySignalsMapping> UpdateEntitySignalsMapping(global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to batch create `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse> BatchCreateEntitySignalsMappings(global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// API to batch update `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse> BatchUpdateEntitySignalsMappings(global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EntitySignalsMappingService</summary>
    public partial class EntitySignalsMappingServiceClient : grpc::ClientBase<EntitySignalsMappingServiceClient>
    {
      /// <summary>Creates a new client for EntitySignalsMappingService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EntitySignalsMappingServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EntitySignalsMappingService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EntitySignalsMappingServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EntitySignalsMappingServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EntitySignalsMappingServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// API to retrieve a `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.EntitySignalsMapping GetEntitySignalsMapping(global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEntitySignalsMapping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.EntitySignalsMapping GetEntitySignalsMapping(global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEntitySignalsMapping, null, options, request);
      }
      /// <summary>
      /// API to retrieve a `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.EntitySignalsMapping> GetEntitySignalsMappingAsync(global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEntitySignalsMappingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.EntitySignalsMapping> GetEntitySignalsMappingAsync(global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEntitySignalsMapping, null, options, request);
      }
      /// <summary>
      /// API to retrieve a list of `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse ListEntitySignalsMappings(global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntitySignalsMappings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a list of `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse ListEntitySignalsMappings(global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEntitySignalsMappings, null, options, request);
      }
      /// <summary>
      /// API to retrieve a list of `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse> ListEntitySignalsMappingsAsync(global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntitySignalsMappingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to retrieve a list of `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse> ListEntitySignalsMappingsAsync(global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEntitySignalsMappings, null, options, request);
      }
      /// <summary>
      /// API to create an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.EntitySignalsMapping CreateEntitySignalsMapping(global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEntitySignalsMapping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to create an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.EntitySignalsMapping CreateEntitySignalsMapping(global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEntitySignalsMapping, null, options, request);
      }
      /// <summary>
      /// API to create an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.EntitySignalsMapping> CreateEntitySignalsMappingAsync(global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEntitySignalsMappingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to create an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.EntitySignalsMapping> CreateEntitySignalsMappingAsync(global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEntitySignalsMapping, null, options, request);
      }
      /// <summary>
      /// API to update an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.EntitySignalsMapping UpdateEntitySignalsMapping(global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEntitySignalsMapping(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to update an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.EntitySignalsMapping UpdateEntitySignalsMapping(global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEntitySignalsMapping, null, options, request);
      }
      /// <summary>
      /// API to update an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.EntitySignalsMapping> UpdateEntitySignalsMappingAsync(global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEntitySignalsMappingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to update an `EntitySignalsMapping` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.EntitySignalsMapping> UpdateEntitySignalsMappingAsync(global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEntitySignalsMapping, null, options, request);
      }
      /// <summary>
      /// API to batch create `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse BatchCreateEntitySignalsMappings(global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateEntitySignalsMappings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch create `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse BatchCreateEntitySignalsMappings(global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchCreateEntitySignalsMappings, null, options, request);
      }
      /// <summary>
      /// API to batch create `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse> BatchCreateEntitySignalsMappingsAsync(global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateEntitySignalsMappingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch create `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse> BatchCreateEntitySignalsMappingsAsync(global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchCreateEntitySignalsMappings, null, options, request);
      }
      /// <summary>
      /// API to batch update `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse BatchUpdateEntitySignalsMappings(global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateEntitySignalsMappings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch update `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse BatchUpdateEntitySignalsMappings(global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchUpdateEntitySignalsMappings, null, options, request);
      }
      /// <summary>
      /// API to batch update `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse> BatchUpdateEntitySignalsMappingsAsync(global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateEntitySignalsMappingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// API to batch update `EntitySignalsMapping` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse> BatchUpdateEntitySignalsMappingsAsync(global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchUpdateEntitySignalsMappings, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override EntitySignalsMappingServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EntitySignalsMappingServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EntitySignalsMappingServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetEntitySignalsMapping, serviceImpl.GetEntitySignalsMapping)
          .AddMethod(__Method_ListEntitySignalsMappings, serviceImpl.ListEntitySignalsMappings)
          .AddMethod(__Method_CreateEntitySignalsMapping, serviceImpl.CreateEntitySignalsMapping)
          .AddMethod(__Method_UpdateEntitySignalsMapping, serviceImpl.UpdateEntitySignalsMapping)
          .AddMethod(__Method_BatchCreateEntitySignalsMappings, serviceImpl.BatchCreateEntitySignalsMappings)
          .AddMethod(__Method_BatchUpdateEntitySignalsMappings, serviceImpl.BatchUpdateEntitySignalsMappings).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EntitySignalsMappingServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetEntitySignalsMapping, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.GetEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping>(serviceImpl.GetEntitySignalsMapping));
      serviceBinder.AddMethod(__Method_ListEntitySignalsMappings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.ListEntitySignalsMappingsResponse>(serviceImpl.ListEntitySignalsMappings));
      serviceBinder.AddMethod(__Method_CreateEntitySignalsMapping, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.CreateEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping>(serviceImpl.CreateEntitySignalsMapping));
      serviceBinder.AddMethod(__Method_UpdateEntitySignalsMapping, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.UpdateEntitySignalsMappingRequest, global::Google.Ads.AdManager.V1.EntitySignalsMapping>(serviceImpl.UpdateEntitySignalsMapping));
      serviceBinder.AddMethod(__Method_BatchCreateEntitySignalsMappings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.BatchCreateEntitySignalsMappingsResponse>(serviceImpl.BatchCreateEntitySignalsMappings));
      serviceBinder.AddMethod(__Method_BatchUpdateEntitySignalsMappings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsRequest, global::Google.Ads.AdManager.V1.BatchUpdateEntitySignalsMappingsResponse>(serviceImpl.BatchUpdateEntitySignalsMappings));
    }

  }
}
#endregion
