// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/ads/admanager/v1/report_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Ads.AdManager.V1 {

  /// <summary>Holder for reflection information generated from google/ads/admanager/v1/report_service.proto</summary>
  public static partial class ReportServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/ads/admanager/v1/report_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReportServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cixnb29nbGUvYWRzL2FkbWFuYWdlci92MS9yZXBvcnRfc2VydmljZS5wcm90",
            "bxIXZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEaHGdvb2dsZS9hcGkvYW5ub3Rh",
            "dGlvbnMucHJvdG8aF2dvb2dsZS9hcGkvY2xpZW50LnByb3RvGh9nb29nbGUv",
            "YXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNl",
            "LnByb3RvGiNnb29nbGUvbG9uZ3J1bm5pbmcvb3BlcmF0aW9ucy5wcm90bxog",
            "Z29vZ2xlL3Byb3RvYnVmL2ZpZWxkX21hc2sucHJvdG8aH2dvb2dsZS9wcm90",
            "b2J1Zi90aW1lc3RhbXAucHJvdG8aFmdvb2dsZS90eXBlL2RhdGUucHJvdG8a",
            "G2dvb2dsZS90eXBlL2RheW9md2Vlay5wcm90bxobZ29vZ2xlL3R5cGUvdGlt",
            "ZW9mZGF5LnByb3RvIvHjAQoGUmVwb3J0EhEKBG5hbWUYASABKAlCA+BBCBIW",
            "CglyZXBvcnRfaWQYAyABKANCA+BBAxJDCgp2aXNpYmlsaXR5GAIgASgOMiou",
            "Z29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LlZpc2liaWxpdHlCA+BB",
            "ARJJChFyZXBvcnRfZGVmaW5pdGlvbhgEIAEoCzIpLmdvb2dsZS5hZHMuYWRt",
            "YW5hZ2VyLnYxLlJlcG9ydERlZmluaXRpb25CA+BBAhIZCgxkaXNwbGF5X25h",
            "bWUYBSABKAlCA+BBARI0Cgt1cGRhdGVfdGltZRgGIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0CgtjcmVhdGVfdGltZRgHIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxITCgZsb2NhbGUYCCAB",
            "KAlCA+BBAxJHChBzY2hlZHVsZV9vcHRpb25zGAkgASgLMiguZ29vZ2xlLmFk",
            "cy5hZG1hbmFnZXIudjEuU2NoZWR1bGVPcHRpb25zQgPgQQEa0wIKBVZhbHVl",
            "EhMKCWludF92YWx1ZRgBIAEoA0gAEhYKDGRvdWJsZV92YWx1ZRgCIAEoAUgA",
            "EhYKDHN0cmluZ192YWx1ZRgDIAEoCUgAEhQKCmJvb2xfdmFsdWUYBCABKAhI",
            "ABJHCg5pbnRfbGlzdF92YWx1ZRgGIAEoCzItLmdvb2dsZS5hZHMuYWRtYW5h",
            "Z2VyLnYxLlJlcG9ydC5WYWx1ZS5JbnRMaXN0SAASTQoRc3RyaW5nX2xpc3Rf",
            "dmFsdWUYByABKAsyMC5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQu",
            "VmFsdWUuU3RyaW5nTGlzdEgAEhUKC2J5dGVzX3ZhbHVlGAggASgMSAAaGQoH",
            "SW50TGlzdBIOCgZ2YWx1ZXMYASADKAMaHAoKU3RyaW5nTGlzdBIOCgZ2YWx1",
            "ZXMYASADKAlCBwoFdmFsdWUaywIKBFNvcnQSOQoFZmllbGQYASABKAsyJS5n",
            "b29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuRmllbGRCA+BBAhIXCgpk",
            "ZXNjZW5kaW5nGAIgASgIQgPgQQESPgoFc2xpY2UYAyABKAsyJS5nb29nbGUu",
            "YWRzLmFkbWFuYWdlci52MS5SZXBvcnQuU2xpY2VCA+BBAUgAiAEBEiMKEXRp",
            "bWVfcGVyaW9kX2luZGV4GAQgASgFQgPgQQFIAYgBARJUChFtZXRyaWNfdmFs",
            "dWVfdHlwZRgFIAEoDjIvLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9y",
            "dC5NZXRyaWNWYWx1ZVR5cGVCA+BBAUgCiAEBQggKBl9zbGljZUIUChJfdGlt",
            "ZV9wZXJpb2RfaW5kZXhCFAoSX21ldHJpY192YWx1ZV90eXBlGokFCglEYXRh",
            "VGFibGUanwEKA1JvdxI/ChBkaW1lbnNpb25fdmFsdWVzGAEgAygLMiUuZ29v",
            "Z2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LlZhbHVlElcKE21ldHJpY192",
            "YWx1ZV9ncm91cHMYAiADKAsyOi5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5S",
            "ZXBvcnQuRGF0YVRhYmxlLk1ldHJpY1ZhbHVlR3JvdXAa2QMKEE1ldHJpY1Zh",
            "bHVlR3JvdXASPQoOcHJpbWFyeV92YWx1ZXMYASADKAsyJS5nb29nbGUuYWRz",
            "LmFkbWFuYWdlci52MS5SZXBvcnQuVmFsdWUSTgofcHJpbWFyeV9wZXJjZW50",
            "X29mX3RvdGFsX3ZhbHVlcxgCIAMoCzIlLmdvb2dsZS5hZHMuYWRtYW5hZ2Vy",
            "LnYxLlJlcG9ydC5WYWx1ZRJAChFjb21wYXJpc29uX3ZhbHVlcxgDIAMoCzIl",
            "Lmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5WYWx1ZRJRCiJjb21w",
            "YXJpc29uX3BlcmNlbnRfb2ZfdG90YWxfdmFsdWVzGAQgAygLMiUuZ29vZ2xl",
            "LmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LlZhbHVlEkUKFmFic29sdXRlX2No",
            "YW5nZV92YWx1ZXMYBSADKAsyJS5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5S",
            "ZXBvcnQuVmFsdWUSRQoWcmVsYXRpdmVfY2hhbmdlX3ZhbHVlcxgGIAMoCzIl",
            "Lmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5WYWx1ZRITCgtmbGFn",
            "X3ZhbHVlcxgHIAMoCBqKAQoFRmllbGQSPgoJZGltZW5zaW9uGAEgASgOMiku",
            "Z29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LkRpbWVuc2lvbkgAEjgK",
            "Bm1ldHJpYxgCIAEoDjImLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9y",
            "dC5NZXRyaWNIAEIHCgVmaWVsZBqFAQoFU2xpY2USQQoJZGltZW5zaW9uGAEg",
            "ASgOMikuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LkRpbWVuc2lv",
            "bkID4EECEjkKBXZhbHVlGAIgASgLMiUuZ29vZ2xlLmFkcy5hZG1hbmFnZXIu",
            "djEuUmVwb3J0LlZhbHVlQgPgQQIa9gcKBkZpbHRlchJKCgxmaWVsZF9maWx0",
            "ZXIYASABKAsyMi5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuRmls",
            "dGVyLkZpZWxkRmlsdGVySAASPAoKbm90X2ZpbHRlchgCIAEoCzImLmdvb2ds",
            "ZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5GaWx0ZXJIABJHCgphbmRfZmls",
            "dGVyGAMgASgLMjEuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LkZp",
            "bHRlci5GaWx0ZXJMaXN0SAASRgoJb3JfZmlsdGVyGAQgASgLMjEuZ29vZ2xl",
            "LmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LkZpbHRlci5GaWx0ZXJMaXN0SAAa",
            "vwMKC0ZpZWxkRmlsdGVyEjkKBWZpZWxkGAEgASgLMiUuZ29vZ2xlLmFkcy5h",
            "ZG1hbmFnZXIudjEuUmVwb3J0LkZpZWxkQgPgQQISSAoJb3BlcmF0aW9uGAIg",
            "ASgOMjAuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LkZpbHRlci5P",
            "cGVyYXRpb25CA+BBAhI6CgZ2YWx1ZXMYAyADKAsyJS5nb29nbGUuYWRzLmFk",
            "bWFuYWdlci52MS5SZXBvcnQuVmFsdWVCA+BBAhI+CgVzbGljZRgEIAEoCzIl",
            "Lmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5TbGljZUID4EEBSACI",
            "AQESIwoRdGltZV9wZXJpb2RfaW5kZXgYBSABKAVCA+BBAUgBiAEBElQKEW1l",
            "dHJpY192YWx1ZV90eXBlGAYgASgOMi8uZ29vZ2xlLmFkcy5hZG1hbmFnZXIu",
            "djEuUmVwb3J0Lk1ldHJpY1ZhbHVlVHlwZUID4EEBSAKIAQFCCAoGX3NsaWNl",
            "QhQKEl90aW1lX3BlcmlvZF9pbmRleEIUChJfbWV0cmljX3ZhbHVlX3R5cGUa",
            "SgoKRmlsdGVyTGlzdBI8CgdmaWx0ZXJzGAEgAygLMiYuZ29vZ2xlLmFkcy5h",
            "ZG1hbmFnZXIudjEuUmVwb3J0LkZpbHRlckID4EECIroBCglPcGVyYXRpb24S",
            "BgoCSU4QABIKCgZOT1RfSU4QARIMCghDT05UQUlOUxACEhAKDE5PVF9DT05U",
            "QUlOUxADEg0KCUxFU1NfVEhBThAEEhQKEExFU1NfVEhBTl9FUVVBTFMQBRIQ",
            "CgxHUkVBVEVSX1RIQU4QBhIXChNHUkVBVEVSX1RIQU5fRVFVQUxTEAcSCwoH",
            "QkVUV0VFThAIEgsKB01BVENIRVMQCRIPCgtOT1RfTUFUQ0hFUxAKQgYKBHR5",
            "cGUaVwoERmxhZxI8CgdmaWx0ZXJzGAEgAygLMiYuZ29vZ2xlLmFkcy5hZG1h",
            "bmFnZXIudjEuUmVwb3J0LkZpbHRlckID4EECEhEKBG5hbWUYAiABKAlCA+BB",
            "ARrYBgoJRGF0ZVJhbmdlEkkKBWZpeGVkGAEgASgLMjguZ29vZ2xlLmFkcy5h",
            "ZG1hbmFnZXIudjEuUmVwb3J0LkRhdGVSYW5nZS5GaXhlZERhdGVSYW5nZUgA",
            "Ek8KCHJlbGF0aXZlGAIgASgOMjsuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEu",
            "UmVwb3J0LkRhdGVSYW5nZS5SZWxhdGl2ZURhdGVSYW5nZUgAGmYKDkZpeGVk",
            "RGF0ZVJhbmdlEioKCnN0YXJ0X2RhdGUYASABKAsyES5nb29nbGUudHlwZS5E",
            "YXRlQgPgQQISKAoIZW5kX2RhdGUYAiABKAsyES5nb29nbGUudHlwZS5EYXRl",
            "QgPgQQIiswQKEVJlbGF0aXZlRGF0ZVJhbmdlEiMKH1JFTEFUSVZFX0RBVEVf",
            "UkFOR0VfVU5TUEVDSUZJRUQQABIJCgVUT0RBWRABEg0KCVlFU1RFUkRBWRAC",
            "Eg0KCVRISVNfV0VFSxADEhUKEVRISVNfV0VFS19UT19EQVRFEB0SDgoKVEhJ",
            "U19NT05USBAEEhYKElRISVNfTU9OVEhfVE9fREFURRAaEhAKDFRISVNfUVVB",
            "UlRFUhAFEhgKFFRISVNfUVVBUlRFUl9UT19EQVRFEBsSDQoJVEhJU19ZRUFS",
            "EAYSFQoRVEhJU19ZRUFSX1RPX0RBVEUQHBINCglMQVNUX1dFRUsQBxIOCgpM",
            "QVNUX01PTlRIEAgSEAoMTEFTVF9RVUFSVEVSEAkSDQoJTEFTVF9ZRUFSEAoS",
            "DwoLTEFTVF83X0RBWVMQCxIQCgxMQVNUXzMwX0RBWVMQDBIQCgxMQVNUXzYw",
            "X0RBWVMQDRIQCgxMQVNUXzkwX0RBWVMQDhIRCg1MQVNUXzE4MF9EQVlTEA8S",
            "EQoNTEFTVF8zNjBfREFZUxAQEhEKDUxBU1RfMzY1X0RBWVMQERIRCg1MQVNU",
            "XzNfTU9OVEhTEBISEQoNTEFTVF82X01PTlRIUxATEhIKDkxBU1RfMTJfTU9O",
            "VEhTEBQSEQoNQUxMX0FWQUlMQUJMRRAVEhMKD1BSRVZJT1VTX1BFUklPRBAW",
            "Eh0KGVNBTUVfUEVSSU9EX1BSRVZJT1VTX1lFQVIQGEIRCg9kYXRlX3Jhbmdl",
            "X3R5cGUirgEKEFRpbWVQZXJpb2RDb2x1bW4SIgoeVElNRV9QRVJJT0RfQ09M",
            "VU1OX1VOU1BFQ0lGSUVEEAASGwoXVElNRV9QRVJJT0RfQ09MVU1OX0RBVEUQ",
            "ARIbChdUSU1FX1BFUklPRF9DT0xVTU5fV0VFSxACEhwKGFRJTUVfUEVSSU9E",
            "X0NPTFVNTl9NT05USBADEh4KGlRJTUVfUEVSSU9EX0NPTFVNTl9RVUFSVEVS",
            "EAQizpIBCglEaW1lbnNpb24SGQoVRElNRU5TSU9OX1VOU1BFQ0lGSUVEEAAS",
            "GwoWQURWRVJUSVNFUl9ET01BSU5fTkFNRRDyARIbChZBRFZFUlRJU0VSX0VY",
            "VEVSTkFMX0lEEOQBEhIKDUFEVkVSVElTRVJfSUQQgwESFgoRQURWRVJUSVNF",
            "Ul9MQUJFTFMQ5gESGQoUQURWRVJUSVNFUl9MQUJFTF9JRFMQ5QESFAoPQURW",
            "RVJUSVNFUl9OQU1FEIQBEh8KGkFEVkVSVElTRVJfUFJJTUFSWV9DT05UQUNU",
            "EOMBEhAKC0FEX0xPQ0FUSU9OEIYDEhUKEEFEX0xPQ0FUSU9OX05BTUUQhwMS",
            "EAoMQURfVU5JVF9DT0RFEEASGAoUQURfVU5JVF9DT0RFX0xFVkVMXzEQQRIZ",
            "ChVBRF9VTklUX0NPREVfTEVWRUxfMTAQShIZChVBRF9VTklUX0NPREVfTEVW",
            "RUxfMTEQSxIZChVBRF9VTklUX0NPREVfTEVWRUxfMTIQTBIZChVBRF9VTklU",
            "X0NPREVfTEVWRUxfMTMQTRIZChVBRF9VTklUX0NPREVfTEVWRUxfMTQQThIZ",
            "ChVBRF9VTklUX0NPREVfTEVWRUxfMTUQTxIZChVBRF9VTklUX0NPREVfTEVW",
            "RUxfMTYQUBIYChRBRF9VTklUX0NPREVfTEVWRUxfMhBCEhgKFEFEX1VOSVRf",
            "Q09ERV9MRVZFTF8zEEMSGAoUQURfVU5JVF9DT0RFX0xFVkVMXzQQRBIYChRB",
            "RF9VTklUX0NPREVfTEVWRUxfNRBFEhgKFEFEX1VOSVRfQ09ERV9MRVZFTF82",
            "EEYSGAoUQURfVU5JVF9DT0RFX0xFVkVMXzcQRxIYChRBRF9VTklUX0NPREVf",
            "TEVWRUxfOBBIEhgKFEFEX1VOSVRfQ09ERV9MRVZFTF85EEkSEQoNQURfVU5J",
            "VF9ERVBUSBBlEg4KCkFEX1VOSVRfSUQQGRIYChRBRF9VTklUX0lEX0FMTF9M",
            "RVZFTBAbEhYKEkFEX1VOSVRfSURfTEVWRUxfMRAeEhcKE0FEX1VOSVRfSURf",
            "TEVWRUxfMTAQMBIXChNBRF9VTklUX0lEX0xFVkVMXzExEDISFwoTQURfVU5J",
            "VF9JRF9MRVZFTF8xMhA0EhcKE0FEX1VOSVRfSURfTEVWRUxfMTMQNhIXChNB",
            "RF9VTklUX0lEX0xFVkVMXzE0EDgSFwoTQURfVU5JVF9JRF9MRVZFTF8xNRA6",
            "EhcKE0FEX1VOSVRfSURfTEVWRUxfMTYQPBIWChJBRF9VTklUX0lEX0xFVkVM",
            "XzIQIBIWChJBRF9VTklUX0lEX0xFVkVMXzMQIhIWChJBRF9VTklUX0lEX0xF",
            "VkVMXzQQJBIWChJBRF9VTklUX0lEX0xFVkVMXzUQJhIWChJBRF9VTklUX0lE",
            "X0xFVkVMXzYQKBIWChJBRF9VTklUX0lEX0xFVkVMXzcQKhIWChJBRF9VTklU",
            "X0lEX0xFVkVMXzgQLBIWChJBRF9VTklUX0lEX0xFVkVMXzkQLhIZChRBRF9V",
            "TklUX0lEX1RPUF9MRVZFTBCOARIQCgxBRF9VTklUX05BTUUQGhIaChZBRF9V",
            "TklUX05BTUVfQUxMX0xFVkVMEB0SGAoUQURfVU5JVF9OQU1FX0xFVkVMXzEQ",
            "HxIZChVBRF9VTklUX05BTUVfTEVWRUxfMTAQMRIZChVBRF9VTklUX05BTUVf",
            "TEVWRUxfMTEQMxIZChVBRF9VTklUX05BTUVfTEVWRUxfMTIQNRIZChVBRF9V",
            "TklUX05BTUVfTEVWRUxfMTMQNxIZChVBRF9VTklUX05BTUVfTEVWRUxfMTQQ",
            "ORIZChVBRF9VTklUX05BTUVfTEVWRUxfMTUQOxIZChVBRF9VTklUX05BTUVf",
            "TEVWRUxfMTYQPRIYChRBRF9VTklUX05BTUVfTEVWRUxfMhAhEhgKFEFEX1VO",
            "SVRfTkFNRV9MRVZFTF8zECMSGAoUQURfVU5JVF9OQU1FX0xFVkVMXzQQJRIY",
            "ChRBRF9VTklUX05BTUVfTEVWRUxfNRAnEhgKFEFEX1VOSVRfTkFNRV9MRVZF",
            "TF82ECkSGAoUQURfVU5JVF9OQU1FX0xFVkVMXzcQKxIYChRBRF9VTklUX05B",
            "TUVfTEVWRUxfOBAtEhgKFEFEX1VOSVRfTkFNRV9MRVZFTF85EC8SGwoWQURf",
            "VU5JVF9OQU1FX1RPUF9MRVZFTBCPARIZChVBRF9VTklUX1JFV0FSRF9BTU9V",
            "TlQQPxIXChNBRF9VTklUX1JFV0FSRF9UWVBFED4SEwoOQURfVU5JVF9TVEFU",
            "VVMQzgESGAoTQURfVU5JVF9TVEFUVVNfTkFNRRDPARIQCgtBUFBfVkVSU0lP",
            "ThCIAxIkCh9CQUNLRklMTF9BRFZFUlRJU0VSX0VYVEVSTkFMX0lEEN0CEhsK",
            "FkJBQ0tGSUxMX0FEVkVSVElTRVJfSUQQ2gISHwoaQkFDS0ZJTExfQURWRVJU",
            "SVNFUl9MQUJFTFMQ3wISIgodQkFDS0ZJTExfQURWRVJUSVNFUl9MQUJFTF9J",
            "RFMQ3gISHQoYQkFDS0ZJTExfQURWRVJUSVNFUl9OQU1FENsCEigKI0JBQ0tG",
            "SUxMX0FEVkVSVElTRVJfUFJJTUFSWV9DT05UQUNUENwCEiMKHkJBQ0tGSUxM",
            "X0NSRUFUSVZFX0JJTExJTkdfVFlQRRD6AhIoCiNCQUNLRklMTF9DUkVBVElW",
            "RV9CSUxMSU5HX1RZUEVfTkFNRRD7AhIoCiNCQUNLRklMTF9DUkVBVElWRV9D",
            "TElDS19USFJPVUdIX1VSTBD4AhIZChRCQUNLRklMTF9DUkVBVElWRV9JRBDy",
            "AhIbChZCQUNLRklMTF9DUkVBVElWRV9OQU1FEPMCEikKJEJBQ0tGSUxMX0NS",
            "RUFUSVZFX1RISVJEX1BBUlRZX1ZFTkRPUhD5AhIbChZCQUNLRklMTF9DUkVB",
            "VElWRV9UWVBFEPYCEiAKG0JBQ0tGSUxMX0NSRUFUSVZFX1RZUEVfTkFNRRD3",
            "AhIgChtCQUNLRklMTF9MSU5FX0lURU1fQVJDSElWRUQQlgISMQosQkFDS0ZJ",
            "TExfTElORV9JVEVNX0NPTVBBTklPTl9ERUxJVkVSWV9PUFRJT04QggISNgox",
            "QkFDS0ZJTExfTElORV9JVEVNX0NPTVBBTklPTl9ERUxJVkVSWV9PUFRJT05f",
            "TkFNRRCDAhInCiJCQUNLRklMTF9MSU5FX0lURU1fQ09NUFVURURfU1RBVFVT",
            "EKgCEiwKJ0JBQ0tGSUxMX0xJTkVfSVRFTV9DT01QVVRFRF9TVEFUVVNfTkFN",
            "RRCpAhIrCiZCQUNLRklMTF9MSU5FX0lURU1fQ09OVFJBQ1RFRF9RVUFOVElU",
            "WRCYAhIlCiBCQUNLRklMTF9MSU5FX0lURU1fQ09TVF9QRVJfVU5JVBCQAhIh",
            "ChxCQUNLRklMTF9MSU5FX0lURU1fQ09TVF9UWVBFEIgCEiYKIUJBQ0tGSUxM",
            "X0xJTkVfSVRFTV9DT1NUX1RZUEVfTkFNRRCJAhIpCiRCQUNLRklMTF9MSU5F",
            "X0lURU1fQ1JFQVRJVkVfRU5EX0RBVEUQ/QISLgopQkFDS0ZJTExfTElORV9J",
            "VEVNX0NSRUFUSVZFX1JPVEFUSU9OX1RZUEUQogISMwouQkFDS0ZJTExfTElO",
            "RV9JVEVNX0NSRUFUSVZFX1JPVEFUSU9OX1RZUEVfTkFNRRCjAhIrCiZCQUNL",
            "RklMTF9MSU5FX0lURU1fQ1JFQVRJVkVfU1RBUlRfREFURRD8AhIlCiBCQUNL",
            "RklMTF9MSU5FX0lURU1fQ1VSUkVOQ1lfQ09ERRCgAhIqCiVCQUNLRklMTF9M",
            "SU5FX0lURU1fREVMSVZFUllfSU5ESUNBVE9SEJICEioKJUJBQ0tGSUxMX0xJ",
            "TkVfSVRFTV9ERUxJVkVSWV9SQVRFX1RZUEUQpAISLwoqQkFDS0ZJTExfTElO",
            "RV9JVEVNX0RFTElWRVJZX1JBVEVfVFlQRV9OQU1FEKUCEikKJEJBQ0tGSUxM",
            "X0xJTkVfSVRFTV9ESVNDT1VOVF9BQlNPTFVURRCmAhIrCiZCQUNLRklMTF9M",
            "SU5FX0lURU1fRElTQ09VTlRfUEVSQ0VOVEFHRRCnAhIgChtCQUNLRklMTF9M",
            "SU5FX0lURU1fRU5EX0RBVEUQiwISJQogQkFDS0ZJTExfTElORV9JVEVNX0VO",
            "RF9EQVRFX1RJTUUQjQISKAojQkFDS0ZJTExfTElORV9JVEVNX0VOVklST05N",
            "RU5UX1RZUEUQrgISLQooQkFDS0ZJTExfTElORV9JVEVNX0VOVklST05NRU5U",
            "X1RZUEVfTkFNRRCBAhIoCiNCQUNLRklMTF9MSU5FX0lURU1fRVhURVJOQUxf",
            "REVBTF9JRBCdAhIjCh5CQUNLRklMTF9MSU5FX0lURU1fRVhURVJOQUxfSUQQ",
            "kQISJQogQkFDS0ZJTExfTElORV9JVEVNX0ZSRVFVRU5DWV9DQVAQrwISGgoV",
            "QkFDS0ZJTExfTElORV9JVEVNX0lEEKoCEiwKJ0JBQ0tGSUxMX0xJTkVfSVRF",
            "TV9MQVNUX01PRElGSUVEX0JZX0FQUBChAhInCiJCQUNLRklMTF9MSU5FX0lU",
            "RU1fTElGRVRJTUVfQ0xJQ0tTEJsCEiwKJ0JBQ0tGSUxMX0xJTkVfSVRFTV9M",
            "SUZFVElNRV9JTVBSRVNTSU9OUxCaAhI1CjBCQUNLRklMTF9MSU5FX0lURU1f",
            "TElGRVRJTUVfVklFV0FCTEVfSU1QUkVTU0lPTlMQnAISIAobQkFDS0ZJTExf",
            "TElORV9JVEVNX01BS0VHT09EEJQCEhwKF0JBQ0tGSUxMX0xJTkVfSVRFTV9O",
            "QU1FEKsCEi4KKUJBQ0tGSUxMX0xJTkVfSVRFTV9OT05fQ1BEX0JPT0tFRF9S",
            "RVZFTlVFEJ4CEiMKHkJBQ0tGSUxMX0xJTkVfSVRFTV9PUFRJTUlaQUJMRRCV",
            "AhIpCiRCQUNLRklMTF9MSU5FX0lURU1fUFJJTUFSWV9HT0FMX1RZUEUQhgIS",
            "LgopQkFDS0ZJTExfTElORV9JVEVNX1BSSU1BUllfR09BTF9UWVBFX05BTUUQ",
            "hwISLgopQkFDS0ZJTExfTElORV9JVEVNX1BSSU1BUllfR09BTF9VTklUX1RZ",
            "UEUQhAISMwouQkFDS0ZJTExfTElORV9JVEVNX1BSSU1BUllfR09BTF9VTklU",
            "X1RZUEVfTkFNRRCFAhIgChtCQUNLRklMTF9MSU5FX0lURU1fUFJJT1JJVFkQ",
            "igISKgolQkFDS0ZJTExfTElORV9JVEVNX1JFU0VSVkFUSU9OX1NUQVRVUxCy",
            "AhIvCipCQUNLRklMTF9MSU5FX0lURU1fUkVTRVJWQVRJT05fU1RBVFVTX05B",
            "TUUQswISIgodQkFDS0ZJTExfTElORV9JVEVNX1NUQVJUX0RBVEUQjAISJwoi",
            "QkFDS0ZJTExfTElORV9JVEVNX1NUQVJUX0RBVEVfVElNRRCOAhIcChdCQUNL",
            "RklMTF9MSU5FX0lURU1fVFlQRRCsAhIhChxCQUNLRklMTF9MSU5FX0lURU1f",
            "VFlQRV9OQU1FEK0CEiUKIEJBQ0tGSUxMX0xJTkVfSVRFTV9VTkxJTUlURURf",
            "RU5EEI8CEisKJkJBQ0tGSUxMX0xJTkVfSVRFTV9WQUxVRV9DT1NUX1BFUl9V",
            "TklUEJMCEikKJEJBQ0tGSUxMX0xJTkVfSVRFTV9XRUJfUFJPUEVSVFlfQ09E",
            "RRCfAhIqCiVCQUNLRklMTF9NQVNURVJfQ09NUEFOSU9OX0NSRUFUSVZFX0lE",
            "EPQCEiwKJ0JBQ0tGSUxMX01BU1RFUl9DT01QQU5JT05fQ1JFQVRJVkVfTkFN",
            "RRD1AhIaChVCQUNLRklMTF9PUkRFUl9BR0VOQ1kQuQISHQoYQkFDS0ZJTExf",
            "T1JERVJfQUdFTkNZX0lEELoCEh4KGUJBQ0tGSUxMX09SREVSX0JPT0tFRF9D",
            "UEMQuwISHgoZQkFDS0ZJTExfT1JERVJfQk9PS0VEX0NQTRC8AhIjCh5CQUNL",
            "RklMTF9PUkRFUl9ERUxJVkVSWV9TVEFUVVMQ1AISKAojQkFDS0ZJTExfT1JE",
            "RVJfREVMSVZFUllfU1RBVFVTX05BTUUQ1QISHAoXQkFDS0ZJTExfT1JERVJf",
            "RU5EX0RBVEUQvQISIQocQkFDS0ZJTExfT1JERVJfRU5EX0RBVEVfVElNRRC/",
            "AhIfChpCQUNLRklMTF9PUkRFUl9FWFRFUk5BTF9JRBDAAhIWChFCQUNLRklM",
            "TF9PUkRFUl9JRBDSAhIaChVCQUNLRklMTF9PUkRFUl9MQUJFTFMQzgISHQoY",
            "QkFDS0ZJTExfT1JERVJfTEFCRUxfSURTEM8CEiMKHkJBQ0tGSUxMX09SREVS",
            "X0xJRkVUSU1FX0NMSUNLUxDCAhIoCiNCQUNLRklMTF9PUkRFUl9MSUZFVElN",
            "RV9JTVBSRVNTSU9OUxDDAhIYChNCQUNLRklMTF9PUkRFUl9OQU1FENMCEh0K",
            "GEJBQ0tGSUxMX09SREVSX1BPX05VTUJFUhDEAhIgChtCQUNLRklMTF9PUkRF",
            "Ul9QUk9HUkFNTUFUSUMQwQISHwoaQkFDS0ZJTExfT1JERVJfU0FMRVNQRVJT",
            "T04QxQISKQokQkFDS0ZJTExfT1JERVJfU0VDT05EQVJZX1NBTEVTUEVPUExF",
            "EMkCEiwKJ0JBQ0tGSUxMX09SREVSX1NFQ09OREFSWV9TQUxFU1BFT1BMRV9J",
            "RBDIAhIpCiRCQUNLRklMTF9PUkRFUl9TRUNPTkRBUllfVFJBRkZJQ0tFUlMQ",
            "ywISLAonQkFDS0ZJTExfT1JERVJfU0VDT05EQVJZX1RSQUZGSUNLRVJTX0lE",
            "EMoCEh4KGUJBQ0tGSUxMX09SREVSX1NUQVJUX0RBVEUQzAISIwoeQkFDS0ZJ",
            "TExfT1JERVJfU1RBUlRfREFURV9USU1FEM0CEh4KGUJBQ0tGSUxMX09SREVS",
            "X1RSQUZGSUNLRVIQxgISIQocQkFDS0ZJTExfT1JERVJfVFJBRkZJQ0tFUl9J",
            "RBDHAhIhChxCQUNLRklMTF9PUkRFUl9VTkxJTUlURURfRU5EEL4CEiMKHkJB",
            "Q0tGSUxMX1BST0dSQU1NQVRJQ19CVVlFUl9JRBDQAhIlCiBCQUNLRklMTF9Q",
            "Uk9HUkFNTUFUSUNfQlVZRVJfTkFNRRDRAhISCg1CUkFORElOR19UWVBFEP8C",
            "EhcKEkJSQU5ESU5HX1RZUEVfTkFNRRCAAxIUChBCUk9XU0VSX0NBVEVHT1JZ",
            "EHcSGQoVQlJPV1NFUl9DQVRFR09SWV9OQU1FEHgSDwoKQlJPV1NFUl9JRBDr",
            "ARIRCgxCUk9XU0VSX05BTUUQ7AESDwoKQ0FSUklFUl9JRBDxAhIRCgxDQVJS",
            "SUVSX05BTUUQ8AISHQoYQ0xBU1NJRklFRF9BRFZFUlRJU0VSX0lEEIUBEh8K",
            "GkNMQVNTSUZJRURfQURWRVJUSVNFUl9OQU1FEIYBEhgKE0NMQVNTSUZJRURf",
            "QlJBTkRfSUQQ8wESGgoVQ0xBU1NJRklFRF9CUkFORF9OQU1FEPQBEg8KCkNP",
            "TlRFTlRfSUQQ9gESEQoMQ09OVEVOVF9OQU1FEPcBEg4KCkNPVU5UUllfSUQQ",
            "CxIQCgxDT1VOVFJZX05BTUUQDBIaChVDUkVBVElWRV9CSUxMSU5HX1RZUEUQ",
            "7gISHwoaQ1JFQVRJVkVfQklMTElOR19UWVBFX05BTUUQ7wISHwoaQ1JFQVRJ",
            "VkVfQ0xJQ0tfVEhST1VHSF9VUkwQrgESEAoLQ1JFQVRJVkVfSUQQigESEgoN",
            "Q1JFQVRJVkVfTkFNRRCLARIYChNDUkVBVElWRV9URUNITk9MT0dZEJQBEh0K",
            "GENSRUFUSVZFX1RFQ0hOT0xPR1lfTkFNRRCVARIgChtDUkVBVElWRV9USElS",
            "RF9QQVJUWV9WRU5ET1IQ6QISEgoNQ1JFQVRJVkVfVFlQRRDYAhIXChJDUkVB",
            "VElWRV9UWVBFX05BTUUQ2QISCAoEREFURRADEg8KC0RBWV9PRl9XRUVLEAQS",
            "EgoOREVNQU5EX0NIQU5ORUwQCRIXChNERU1BTkRfQ0hBTk5FTF9OQU1FEAoS",
            "FQoRREVNQU5EX1NVQkNIQU5ORUwQFhIaChZERU1BTkRfU1VCQ0hBTk5FTF9O",
            "QU1FEBcSCwoGREVWSUNFEOIBEhMKD0RFVklDRV9DQVRFR09SWRAPEhgKFERF",
            "VklDRV9DQVRFR09SWV9OQU1FEBASEAoLREVWSUNFX05BTUUQ4QESJAofRVhD",
            "SEFOR0VfVEhJUkRfUEFSVFlfQ09NUEFOWV9JRBC5ARImCiFFWENIQU5HRV9U",
            "SElSRF9QQVJUWV9DT01QQU5ZX05BTUUQugESHwoaRklSU1RfTE9PS19QUklD",
            "SU5HX1JVTEVfSUQQ+AESIQocRklSU1RfTE9PS19QUklDSU5HX1JVTEVfTkFN",
            "RRD5ARIICgRIT1VSEGQSFQoQSU5URVJBQ1RJT05fVFlQRRDfARIaChVJTlRF",
            "UkFDVElPTl9UWVBFX05BTUUQ4AESFAoQSU5WRU5UT1JZX0ZPUk1BVBAREhkK",
            "FUlOVkVOVE9SWV9GT1JNQVRfTkFNRRASEhIKDklOVkVOVE9SWV9UWVBFEBMS",
            "FwoTSU5WRU5UT1JZX1RZUEVfTkFNRRAUEhIKDUlTX0FEWF9ESVJFQ1QQ/gIS",
            "FwoSSVNfRklSU1RfTE9PS19ERUFMEJEDEhIKDUtFWV9WQUxVRVNfSUQQ1gES",
            "FAoPS0VZX1ZBTFVFU19OQU1FENcBEhcKEkxJTkVfSVRFTV9BUkNISVZFRBC8",
            "ARIoCiNMSU5FX0lURU1fQ09NUEFOSU9OX0RFTElWRVJZX09QVElPThDMARIt",
            "CihMSU5FX0lURU1fQ09NUEFOSU9OX0RFTElWRVJZX09QVElPTl9OQU1FEM0B",
            "Eh4KGUxJTkVfSVRFTV9DT01QVVRFRF9TVEFUVVMQ+gESIwoeTElORV9JVEVN",
            "X0NPTVBVVEVEX1NUQVRVU19OQU1FEPsBEiEKHUxJTkVfSVRFTV9DT05UUkFD",
            "VEVEX1FVQU5USVRZEFwSGwoXTElORV9JVEVNX0NPU1RfUEVSX1VOSVQQVRIY",
            "ChNMSU5FX0lURU1fQ09TVF9UWVBFENQBEh0KGExJTkVfSVRFTV9DT1NUX1RZ",
            "UEVfTkFNRRDVARIgChtMSU5FX0lURU1fQ1JFQVRJVkVfRU5EX0RBVEUQsAES",
            "JQogTElORV9JVEVNX0NSRUFUSVZFX1JPVEFUSU9OX1RZUEUQvQESKgolTElO",
            "RV9JVEVNX0NSRUFUSVZFX1JPVEFUSU9OX1RZUEVfTkFNRRC+ARIiCh1MSU5F",
            "X0lURU1fQ1JFQVRJVkVfU1RBUlRfREFURRCvARIcChdMSU5FX0lURU1fQ1VS",
            "UkVOQ1lfQ09ERRC0ARIgChxMSU5FX0lURU1fREVMSVZFUllfSU5ESUNBVE9S",
            "EFcSIQocTElORV9JVEVNX0RFTElWRVJZX1JBVEVfVFlQRRC/ARImCiFMSU5F",
            "X0lURU1fREVMSVZFUllfUkFURV9UWVBFX05BTUUQwAESIAobTElORV9JVEVN",
            "X0RJU0NPVU5UX0FCU09MVVRFEMMBEiIKHUxJTkVfSVRFTV9ESVNDT1VOVF9Q",
            "RVJDRU5UQUdFEMQBEhYKEkxJTkVfSVRFTV9FTkRfREFURRBREhsKF0xJTkVf",
            "SVRFTV9FTkRfREFURV9USU1FEFMSHwoaTElORV9JVEVNX0VOVklST05NRU5U",
            "X1RZUEUQyQESJAofTElORV9JVEVNX0VOVklST05NRU5UX1RZUEVfTkFNRRDK",
            "ARIeChpMSU5FX0lURU1fRVhURVJOQUxfREVBTF9JRBBhEhkKFUxJTkVfSVRF",
            "TV9FWFRFUk5BTF9JRBBWEhwKF0xJTkVfSVRFTV9GUkVRVUVOQ1lfQ0FQEIAC",
            "EhAKDExJTkVfSVRFTV9JRBABEiMKHkxJTkVfSVRFTV9MQVNUX01PRElGSUVE",
            "X0JZX0FQUBC1ARIdChlMSU5FX0lURU1fTElGRVRJTUVfQ0xJQ0tTEF8SIgoe",
            "TElORV9JVEVNX0xJRkVUSU1FX0lNUFJFU1NJT05TEF4SKwonTElORV9JVEVN",
            "X0xJRkVUSU1FX1ZJRVdBQkxFX0lNUFJFU1NJT05TEGASFgoSTElORV9JVEVN",
            "X01BS0VHT09EEFkSEgoOTElORV9JVEVNX05BTUUQAhIkCiBMSU5FX0lURU1f",
            "Tk9OX0NQRF9CT09LRURfUkVWRU5VRRBiEhkKFUxJTkVfSVRFTV9PUFRJTUla",
            "QUJMRRBaEiAKG0xJTkVfSVRFTV9QUklNQVJZX0dPQUxfVFlQRRDSARIlCiBM",
            "SU5FX0lURU1fUFJJTUFSWV9HT0FMX1RZUEVfTkFNRRDTARIpCiVMSU5FX0lU",
            "RU1fUFJJTUFSWV9HT0FMX1VOSVRTX0FCU09MVVRFEF0SLAonTElORV9JVEVN",
            "X1BSSU1BUllfR09BTF9VTklUU19QRVJDRU5UQUdFEIwDEiUKIExJTkVfSVRF",
            "TV9QUklNQVJZX0dPQUxfVU5JVF9UWVBFENABEioKJUxJTkVfSVRFTV9QUklN",
            "QVJZX0dPQUxfVU5JVF9UWVBFX05BTUUQ0QESFgoSTElORV9JVEVNX1BSSU9S",
            "SVRZEBgSIQocTElORV9JVEVNX1JFU0VSVkFUSU9OX1NUQVRVUxCwAhImCiFM",
            "SU5FX0lURU1fUkVTRVJWQVRJT05fU1RBVFVTX05BTUUQsQISGAoUTElORV9J",
            "VEVNX1NUQVJUX0RBVEUQUhIdChlMSU5FX0lURU1fU1RBUlRfREFURV9USU1F",
            "EFQSEwoOTElORV9JVEVNX1RZUEUQwQESGAoTTElORV9JVEVNX1RZUEVfTkFN",
            "RRDCARIcChdMSU5FX0lURU1fVU5MSU1JVEVEX0VORBC7ARIhCh1MSU5FX0lU",
            "RU1fVkFMVUVfQ09TVF9QRVJfVU5JVBBYEiAKG0xJTkVfSVRFTV9XRUJfUFJP",
            "UEVSVFlfQ09ERRCzARIhChxNQVNURVJfQ09NUEFOSU9OX0NSRUFUSVZFX0lE",
            "EIwBEiMKHk1BU1RFUl9DT01QQU5JT05fQ1JFQVRJVkVfTkFNRRCNARIUCg9N",
            "T0JJTEVfQVBQX0ZSRUUQgAESGAoTTU9CSUxFX0FQUF9JQ09OX1VSTBCBARIR",
            "Cg1NT0JJTEVfQVBQX0lEEHsSEwoPTU9CSUxFX0FQUF9OQU1FEH8SIAobTU9C",
            "SUxFX0FQUF9PV05FUlNISVBfU1RBVFVTELcCEiUKIE1PQklMRV9BUFBfT1dO",
            "RVJTSElQX1NUQVRVU19OQU1FELgCEhQKEE1PQklMRV9BUFBfU1RPUkUQfRIa",
            "ChVNT0JJTEVfQVBQX1NUT1JFX05BTUUQ9QESGQoVTU9CSUxFX0lOVkVOVE9S",
            "WV9UWVBFEGMSHgoaTU9CSUxFX0lOVkVOVE9SWV9UWVBFX05BTUUQFRIcChdN",
            "T0JJTEVfU0RLX1ZFUlNJT05fTkFNRRCCARIOCgpNT05USF9ZRUFSEAYSGAoT",
            "TkFUSVZFX0FEX0ZPUk1BVF9JRBD/ARIaChVOQVRJVkVfQURfRk9STUFUX05B",
            "TUUQ/gESFAoPTkFUSVZFX1NUWUxFX0lEEP0BEhYKEU5BVElWRV9TVFlMRV9O",
            "QU1FEPwBEh0KGU9QRVJBVElOR19TWVNURU1fQ0FURUdPUlkQdRIiCh5PUEVS",
            "QVRJTkdfU1lTVEVNX0NBVEVHT1JZX05BTUUQdhIgChtPUEVSQVRJTkdfU1lT",
            "VEVNX1ZFUlNJT05fSUQQ7gESIgodT1BFUkFUSU5HX1NZU1RFTV9WRVJTSU9O",
            "X05BTUUQ7QESEQoMT1JERVJfQUdFTkNZEJYBEhQKD09SREVSX0FHRU5DWV9J",
            "RBCXARIVChBPUkRFUl9CT09LRURfQ1BDEJgBEhUKEE9SREVSX0JPT0tFRF9D",
            "UE0QmQESGgoVT1JERVJfREVMSVZFUllfU1RBVFVTEOcBEh8KGk9SREVSX0RF",
            "TElWRVJZX1NUQVRVU19OQU1FEO8BEhMKDk9SREVSX0VORF9EQVRFEJoBEhgK",
            "E09SREVSX0VORF9EQVRFX1RJTUUQmwESFgoRT1JERVJfRVhURVJOQUxfSUQQ",
            "nAESDAoIT1JERVJfSUQQBxIRCgxPUkRFUl9MQUJFTFMQqgESFAoPT1JERVJf",
            "TEFCRUxfSURTEKsBEhoKFU9SREVSX0xJRkVUSU1FX0NMSUNLUxCeARIfChpP",
            "UkRFUl9MSUZFVElNRV9JTVBSRVNTSU9OUxCfARIOCgpPUkRFUl9OQU1FEAgS",
            "FAoPT1JERVJfUE9fTlVNQkVSEKABEhcKEk9SREVSX1BST0dSQU1NQVRJQxCd",
            "ARIWChFPUkRFUl9TQUxFU1BFUlNPThChARIgChtPUkRFUl9TRUNPTkRBUllf",
            "U0FMRVNQRU9QTEUQpAESIwoeT1JERVJfU0VDT05EQVJZX1NBTEVTUEVPUExF",
            "X0lEEKUBEiAKG09SREVSX1NFQ09OREFSWV9UUkFGRklDS0VSUxCmARIjCh5P",
            "UkRFUl9TRUNPTkRBUllfVFJBRkZJQ0tFUlNfSUQQpwESFQoQT1JERVJfU1RB",
            "UlRfREFURRCoARIaChVPUkRFUl9TVEFSVF9EQVRFX1RJTUUQqQESFQoQT1JE",
            "RVJfVFJBRkZJQ0tFUhCiARIYChNPUkRFUl9UUkFGRklDS0VSX0lEEKMBEhgK",
            "E09SREVSX1VOTElNSVRFRF9FTkQQywESEAoMUExBQ0VNRU5UX0lEEHESFQoQ",
            "UExBQ0VNRU5UX0lEX0FMTBCQARISCg5QTEFDRU1FTlRfTkFNRRByEhcKElBM",
            "QUNFTUVOVF9OQU1FX0FMTBCRARIVChBQTEFDRU1FTlRfU1RBVFVTEOoCEhkK",
            "FFBMQUNFTUVOVF9TVEFUVVNfQUxMEOsCEhoKFVBMQUNFTUVOVF9TVEFUVVNf",
            "TkFNRRDsAhIeChlQTEFDRU1FTlRfU1RBVFVTX05BTUVfQUxMEO0CEhoKFVBS",
            "T0dSQU1NQVRJQ19CVVlFUl9JRBDwARIcChdQUk9HUkFNTUFUSUNfQlVZRVJf",
            "TkFNRRDxARIYChRQUk9HUkFNTUFUSUNfQ0hBTk5FTBANEh0KGVBST0dSQU1N",
            "QVRJQ19DSEFOTkVMX05BTUUQDhIbChZSRU5ERVJFRF9DUkVBVElWRV9TSVpF",
            "ENcCEhcKElJFUVVFU1RFRF9BRF9TSVpFUxDgAhIRCgxSRVFVRVNUX1RZUEUQ",
            "kgESFgoRUkVRVUVTVF9UWVBFX05BTUUQkwESCQoEU0lURRCDAxIRCgxUQVJH",
            "RVRJTkdfSUQQ6AESEwoOVEFSR0VUSU5HX05BTUUQ6QESEwoOVEFSR0VUSU5H",
            "X1RZUEUQgQMSGAoTVEFSR0VUSU5HX1RZUEVfTkFNRRCCAxITCg5UUkFGRklD",
            "X1NPVVJDRRCEAxIYChNUUkFGRklDX1NPVVJDRV9OQU1FEIUDEhwKF1VOSUZJ",
            "RURfUFJJQ0lOR19SVUxFX0lEEIkDEh4KGVVOSUZJRURfUFJJQ0lOR19SVUxF",
            "X05BTUUQigMSEAoLVklERU9fUExDTVQQrAESFQoQVklERU9fUExDTVRfTkFN",
            "RRCtARIICgRXRUVLEAUSGwoWWUlFTERfR1JPVVBfQlVZRVJfTkFNRRC4ARIT",
            "Cg5ZSUVMRF9HUk9VUF9JRBC2ARIVChBZSUVMRF9HUk9VUF9OQU1FELcBEicK",
            "IkxJTkVfSVRFTV9DVVNUT01fRklFTERfMF9PUFRJT05fSUQQkE4SJwoiTElO",
            "RV9JVEVNX0NVU1RPTV9GSUVMRF8xX09QVElPTl9JRBCRThInCiJMSU5FX0lU",
            "RU1fQ1VTVE9NX0ZJRUxEXzJfT1BUSU9OX0lEEJJOEicKIkxJTkVfSVRFTV9D",
            "VVNUT01fRklFTERfM19PUFRJT05fSUQQk04SJwoiTElORV9JVEVNX0NVU1RP",
            "TV9GSUVMRF80X09QVElPTl9JRBCUThInCiJMSU5FX0lURU1fQ1VTVE9NX0ZJ",
            "RUxEXzVfT1BUSU9OX0lEEJVOEicKIkxJTkVfSVRFTV9DVVNUT01fRklFTERf",
            "Nl9PUFRJT05fSUQQlk4SJwoiTElORV9JVEVNX0NVU1RPTV9GSUVMRF83X09Q",
            "VElPTl9JRBCXThInCiJMSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzhfT1BUSU9O",
            "X0lEEJhOEicKIkxJTkVfSVRFTV9DVVNUT01fRklFTERfOV9PUFRJT05fSUQQ",
            "mU4SKAojTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xMF9PUFRJT05fSUQQmk4S",
            "KAojTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xMV9PUFRJT05fSUQQm04SKAoj",
            "TElORV9JVEVNX0NVU1RPTV9GSUVMRF8xMl9PUFRJT05fSUQQnE4SKAojTElO",
            "RV9JVEVNX0NVU1RPTV9GSUVMRF8xM19PUFRJT05fSUQQnU4SKAojTElORV9J",
            "VEVNX0NVU1RPTV9GSUVMRF8xNF9PUFRJT05fSUQQnk4SIwoeTElORV9JVEVN",
            "X0NVU1RPTV9GSUVMRF8wX1ZBTFVFEPhVEiMKHkxJTkVfSVRFTV9DVVNUT01f",
            "RklFTERfMV9WQUxVRRD5VRIjCh5MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzJf",
            "VkFMVUUQ+lUSIwoeTElORV9JVEVNX0NVU1RPTV9GSUVMRF8zX1ZBTFVFEPtV",
            "EiMKHkxJTkVfSVRFTV9DVVNUT01fRklFTERfNF9WQUxVRRD8VRIjCh5MSU5F",
            "X0lURU1fQ1VTVE9NX0ZJRUxEXzVfVkFMVUUQ/VUSIwoeTElORV9JVEVNX0NV",
            "U1RPTV9GSUVMRF82X1ZBTFVFEP5VEiMKHkxJTkVfSVRFTV9DVVNUT01fRklF",
            "TERfN19WQUxVRRD/VRIjCh5MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzhfVkFM",
            "VUUQgFYSIwoeTElORV9JVEVNX0NVU1RPTV9GSUVMRF85X1ZBTFVFEIFWEiQK",
            "H0xJTkVfSVRFTV9DVVNUT01fRklFTERfMTBfVkFMVUUQglYSJAofTElORV9J",
            "VEVNX0NVU1RPTV9GSUVMRF8xMV9WQUxVRRCDVhIkCh9MSU5FX0lURU1fQ1VT",
            "VE9NX0ZJRUxEXzEyX1ZBTFVFEIRWEiQKH0xJTkVfSVRFTV9DVVNUT01fRklF",
            "TERfMTNfVkFMVUUQhVYSJAofTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xNF9W",
            "QUxVRRCGVhIjCh5PUkRFUl9DVVNUT01fRklFTERfMF9PUFRJT05fSUQQ4F0S",
            "IwoeT1JERVJfQ1VTVE9NX0ZJRUxEXzFfT1BUSU9OX0lEEOFdEiMKHk9SREVS",
            "X0NVU1RPTV9GSUVMRF8yX09QVElPTl9JRBDiXRIjCh5PUkRFUl9DVVNUT01f",
            "RklFTERfM19PUFRJT05fSUQQ410SIwoeT1JERVJfQ1VTVE9NX0ZJRUxEXzRf",
            "T1BUSU9OX0lEEORdEiMKHk9SREVSX0NVU1RPTV9GSUVMRF81X09QVElPTl9J",
            "RBDlXRIjCh5PUkRFUl9DVVNUT01fRklFTERfNl9PUFRJT05fSUQQ5l0SIwoe",
            "T1JERVJfQ1VTVE9NX0ZJRUxEXzdfT1BUSU9OX0lEEOddEiMKHk9SREVSX0NV",
            "U1RPTV9GSUVMRF84X09QVElPTl9JRBDoXRIjCh5PUkRFUl9DVVNUT01fRklF",
            "TERfOV9PUFRJT05fSUQQ6V0SJAofT1JERVJfQ1VTVE9NX0ZJRUxEXzEwX09Q",
            "VElPTl9JRBDqXRIkCh9PUkRFUl9DVVNUT01fRklFTERfMTFfT1BUSU9OX0lE",
            "EOtdEiQKH09SREVSX0NVU1RPTV9GSUVMRF8xMl9PUFRJT05fSUQQ7F0SJAof",
            "T1JERVJfQ1VTVE9NX0ZJRUxEXzEzX09QVElPTl9JRBDtXRIkCh9PUkRFUl9D",
            "VVNUT01fRklFTERfMTRfT1BUSU9OX0lEEO5dEh8KGk9SREVSX0NVU1RPTV9G",
            "SUVMRF8wX1ZBTFVFEMhlEh8KGk9SREVSX0NVU1RPTV9GSUVMRF8xX1ZBTFVF",
            "EMllEh8KGk9SREVSX0NVU1RPTV9GSUVMRF8yX1ZBTFVFEMplEh8KGk9SREVS",
            "X0NVU1RPTV9GSUVMRF8zX1ZBTFVFEMtlEh8KGk9SREVSX0NVU1RPTV9GSUVM",
            "RF80X1ZBTFVFEMxlEh8KGk9SREVSX0NVU1RPTV9GSUVMRF81X1ZBTFVFEM1l",
            "Eh8KGk9SREVSX0NVU1RPTV9GSUVMRF82X1ZBTFVFEM5lEh8KGk9SREVSX0NV",
            "U1RPTV9GSUVMRF83X1ZBTFVFEM9lEh8KGk9SREVSX0NVU1RPTV9GSUVMRF84",
            "X1ZBTFVFENBlEh8KGk9SREVSX0NVU1RPTV9GSUVMRF85X1ZBTFVFENFlEiAK",
            "G09SREVSX0NVU1RPTV9GSUVMRF8xMF9WQUxVRRDSZRIgChtPUkRFUl9DVVNU",
            "T01fRklFTERfMTFfVkFMVUUQ02USIAobT1JERVJfQ1VTVE9NX0ZJRUxEXzEy",
            "X1ZBTFVFENRlEiAKG09SREVSX0NVU1RPTV9GSUVMRF8xM19WQUxVRRDVZRIg",
            "ChtPUkRFUl9DVVNUT01fRklFTERfMTRfVkFMVUUQ1mUSJgohQ1JFQVRJVkVf",
            "Q1VTVE9NX0ZJRUxEXzBfT1BUSU9OX0lEELBtEiYKIUNSRUFUSVZFX0NVU1RP",
            "TV9GSUVMRF8xX09QVElPTl9JRBCxbRImCiFDUkVBVElWRV9DVVNUT01fRklF",
            "TERfMl9PUFRJT05fSUQQsm0SJgohQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzNf",
            "T1BUSU9OX0lEELNtEiYKIUNSRUFUSVZFX0NVU1RPTV9GSUVMRF80X09QVElP",
            "Tl9JRBC0bRImCiFDUkVBVElWRV9DVVNUT01fRklFTERfNV9PUFRJT05fSUQQ",
            "tW0SJgohQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzZfT1BUSU9OX0lEELZtEiYK",
            "IUNSRUFUSVZFX0NVU1RPTV9GSUVMRF83X09QVElPTl9JRBC3bRImCiFDUkVB",
            "VElWRV9DVVNUT01fRklFTERfOF9PUFRJT05fSUQQuG0SJgohQ1JFQVRJVkVf",
            "Q1VTVE9NX0ZJRUxEXzlfT1BUSU9OX0lEELltEicKIkNSRUFUSVZFX0NVU1RP",
            "TV9GSUVMRF8xMF9PUFRJT05fSUQQum0SJwoiQ1JFQVRJVkVfQ1VTVE9NX0ZJ",
            "RUxEXzExX09QVElPTl9JRBC7bRInCiJDUkVBVElWRV9DVVNUT01fRklFTERf",
            "MTJfT1BUSU9OX0lEELxtEicKIkNSRUFUSVZFX0NVU1RPTV9GSUVMRF8xM19P",
            "UFRJT05fSUQQvW0SJwoiQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzE0X09QVElP",
            "Tl9JRBC+bRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERfMF9WQUxVRRCYdRIi",
            "Ch1DUkVBVElWRV9DVVNUT01fRklFTERfMV9WQUxVRRCZdRIiCh1DUkVBVElW",
            "RV9DVVNUT01fRklFTERfMl9WQUxVRRCadRIiCh1DUkVBVElWRV9DVVNUT01f",
            "RklFTERfM19WQUxVRRCbdRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERfNF9W",
            "QUxVRRCcdRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERfNV9WQUxVRRCddRIi",
            "Ch1DUkVBVElWRV9DVVNUT01fRklFTERfNl9WQUxVRRCedRIiCh1DUkVBVElW",
            "RV9DVVNUT01fRklFTERfN19WQUxVRRCfdRIiCh1DUkVBVElWRV9DVVNUT01f",
            "RklFTERfOF9WQUxVRRCgdRIiCh1DUkVBVElWRV9DVVNUT01fRklFTERfOV9W",
            "QUxVRRChdRIjCh5DUkVBVElWRV9DVVNUT01fRklFTERfMTBfVkFMVUUQonUS",
            "IwoeQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzExX1ZBTFVFEKN1EiMKHkNSRUFU",
            "SVZFX0NVU1RPTV9GSUVMRF8xMl9WQUxVRRCkdRIjCh5DUkVBVElWRV9DVVNU",
            "T01fRklFTERfMTNfVkFMVUUQpXUSIwoeQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxE",
            "XzE0X1ZBTFVFEKZ1EjAKK0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01fRklF",
            "TERfMF9PUFRJT05fSUQQgH0SMAorQkFDS0ZJTExfTElORV9JVEVNX0NVU1RP",
            "TV9GSUVMRF8xX09QVElPTl9JRBCBfRIwCitCQUNLRklMTF9MSU5FX0lURU1f",
            "Q1VTVE9NX0ZJRUxEXzJfT1BUSU9OX0lEEIJ9EjAKK0JBQ0tGSUxMX0xJTkVf",
            "SVRFTV9DVVNUT01fRklFTERfM19PUFRJT05fSUQQg30SMAorQkFDS0ZJTExf",
            "TElORV9JVEVNX0NVU1RPTV9GSUVMRF80X09QVElPTl9JRBCEfRIwCitCQUNL",
            "RklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzVfT1BUSU9OX0lEEIV9EjAK",
            "K0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01fRklFTERfNl9PUFRJT05fSUQQ",
            "hn0SMAorQkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF83X09QVElP",
            "Tl9JRBCHfRIwCitCQUNLRklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzhf",
            "T1BUSU9OX0lEEIh9EjAKK0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01fRklF",
            "TERfOV9PUFRJT05fSUQQiX0SMQosQkFDS0ZJTExfTElORV9JVEVNX0NVU1RP",
            "TV9GSUVMRF8xMF9PUFRJT05fSUQQin0SMQosQkFDS0ZJTExfTElORV9JVEVN",
            "X0NVU1RPTV9GSUVMRF8xMV9PUFRJT05fSUQQi30SMQosQkFDS0ZJTExfTElO",
            "RV9JVEVNX0NVU1RPTV9GSUVMRF8xMl9PUFRJT05fSUQQjH0SMQosQkFDS0ZJ",
            "TExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xM19PUFRJT05fSUQQjX0SMQos",
            "QkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF8xNF9PUFRJT05fSUQQ",
            "jn0SLQonQkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF8wX1ZBTFVF",
            "EOiEARItCidCQUNLRklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzFfVkFM",
            "VUUQ6YQBEi0KJ0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01fRklFTERfMl9W",
            "QUxVRRDqhAESLQonQkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9GSUVMRF8z",
            "X1ZBTFVFEOuEARItCidCQUNLRklMTF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxE",
            "XzRfVkFMVUUQ7IQBEi0KJ0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNUT01fRklF",
            "TERfNV9WQUxVRRDthAESLQonQkFDS0ZJTExfTElORV9JVEVNX0NVU1RPTV9G",
            "SUVMRF82X1ZBTFVFEO6EARItCidCQUNLRklMTF9MSU5FX0lURU1fQ1VTVE9N",
            "X0ZJRUxEXzdfVkFMVUUQ74QBEi0KJ0JBQ0tGSUxMX0xJTkVfSVRFTV9DVVNU",
            "T01fRklFTERfOF9WQUxVRRDwhAESLQonQkFDS0ZJTExfTElORV9JVEVNX0NV",
            "U1RPTV9GSUVMRF85X1ZBTFVFEPGEARIuCihCQUNLRklMTF9MSU5FX0lURU1f",
            "Q1VTVE9NX0ZJRUxEXzEwX1ZBTFVFEPKEARIuCihCQUNLRklMTF9MSU5FX0lU",
            "RU1fQ1VTVE9NX0ZJRUxEXzExX1ZBTFVFEPOEARIuCihCQUNLRklMTF9MSU5F",
            "X0lURU1fQ1VTVE9NX0ZJRUxEXzEyX1ZBTFVFEPSEARIuCihCQUNLRklMTF9M",
            "SU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzEzX1ZBTFVFEPWEARIuCihCQUNLRklM",
            "TF9MSU5FX0lURU1fQ1VTVE9NX0ZJRUxEXzE0X1ZBTFVFEPaEARItCidCQUNL",
            "RklMTF9PUkRFUl9DVVNUT01fRklFTERfMF9PUFRJT05fSUQQ0IwBEi0KJ0JB",
            "Q0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF8xX09QVElPTl9JRBDRjAESLQon",
            "QkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzJfT1BUSU9OX0lEENKMARIt",
            "CidCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfM19PUFRJT05fSUQQ04wB",
            "Ei0KJ0JBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF80X09QVElPTl9JRBDU",
            "jAESLQonQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzVfT1BUSU9OX0lE",
            "ENWMARItCidCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfNl9PUFRJT05f",
            "SUQQ1owBEi0KJ0JBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF83X09QVElP",
            "Tl9JRBDXjAESLQonQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzhfT1BU",
            "SU9OX0lEENiMARItCidCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfOV9P",
            "UFRJT05fSUQQ2YwBEi4KKEJBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF8x",
            "MF9PUFRJT05fSUQQ2owBEi4KKEJBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVM",
            "RF8xMV9PUFRJT05fSUQQ24wBEi4KKEJBQ0tGSUxMX09SREVSX0NVU1RPTV9G",
            "SUVMRF8xMl9PUFRJT05fSUQQ3IwBEi4KKEJBQ0tGSUxMX09SREVSX0NVU1RP",
            "TV9GSUVMRF8xM19PUFRJT05fSUQQ3YwBEi4KKEJBQ0tGSUxMX09SREVSX0NV",
            "U1RPTV9GSUVMRF8xNF9PUFRJT05fSUQQ3owBEikKI0JBQ0tGSUxMX09SREVS",
            "X0NVU1RPTV9GSUVMRF8wX1ZBTFVFELiUARIpCiNCQUNLRklMTF9PUkRFUl9D",
            "VVNUT01fRklFTERfMV9WQUxVRRC5lAESKQojQkFDS0ZJTExfT1JERVJfQ1VT",
            "VE9NX0ZJRUxEXzJfVkFMVUUQupQBEikKI0JBQ0tGSUxMX09SREVSX0NVU1RP",
            "TV9GSUVMRF8zX1ZBTFVFELuUARIpCiNCQUNLRklMTF9PUkRFUl9DVVNUT01f",
            "RklFTERfNF9WQUxVRRC8lAESKQojQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJ",
            "RUxEXzVfVkFMVUUQvZQBEikKI0JBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVM",
            "RF82X1ZBTFVFEL6UARIpCiNCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERf",
            "N19WQUxVRRC/lAESKQojQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzhf",
            "VkFMVUUQwJQBEikKI0JBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF85X1ZB",
            "TFVFEMGUARIqCiRCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfMTBfVkFM",
            "VUUQwpQBEioKJEJBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF8xMV9WQUxV",
            "RRDDlAESKgokQkFDS0ZJTExfT1JERVJfQ1VTVE9NX0ZJRUxEXzEyX1ZBTFVF",
            "EMSUARIqCiRCQUNLRklMTF9PUkRFUl9DVVNUT01fRklFTERfMTNfVkFMVUUQ",
            "xZQBEioKJEJBQ0tGSUxMX09SREVSX0NVU1RPTV9GSUVMRF8xNF9WQUxVRRDG",
            "lAESMAoqQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzBfT1BUSU9O",
            "X0lEEKCcARIwCipCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfMV9P",
            "UFRJT05fSUQQoZwBEjAKKkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVM",
            "RF8yX09QVElPTl9JRBCinAESMAoqQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9N",
            "X0ZJRUxEXzNfT1BUSU9OX0lEEKOcARIwCipCQUNLRklMTF9DUkVBVElWRV9D",
            "VVNUT01fRklFTERfNF9PUFRJT05fSUQQpJwBEjAKKkJBQ0tGSUxMX0NSRUFU",
            "SVZFX0NVU1RPTV9GSUVMRF81X09QVElPTl9JRBClnAESMAoqQkFDS0ZJTExf",
            "Q1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzZfT1BUSU9OX0lEEKacARIwCipCQUNL",
            "RklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfN19PUFRJT05fSUQQp5wBEjAK",
            "KkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF84X09QVElPTl9JRBCo",
            "nAESMAoqQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzlfT1BUSU9O",
            "X0lEEKmcARIxCitCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfMTBf",
            "T1BUSU9OX0lEEKqcARIxCitCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklF",
            "TERfMTFfT1BUSU9OX0lEEKucARIxCitCQUNLRklMTF9DUkVBVElWRV9DVVNU",
            "T01fRklFTERfMTJfT1BUSU9OX0lEEKycARIxCitCQUNLRklMTF9DUkVBVElW",
            "RV9DVVNUT01fRklFTERfMTNfT1BUSU9OX0lEEK2cARIxCitCQUNLRklMTF9D",
            "UkVBVElWRV9DVVNUT01fRklFTERfMTRfT1BUSU9OX0lEEK6cARIsCiZCQUNL",
            "RklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfMF9WQUxVRRCIpAESLAomQkFD",
            "S0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzFfVkFMVUUQiaQBEiwKJkJB",
            "Q0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF8yX1ZBTFVFEIqkARIsCiZC",
            "QUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfM19WQUxVRRCLpAESLAom",
            "QkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzRfVkFMVUUQjKQBEiwK",
            "JkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF81X1ZBTFVFEI2kARIs",
            "CiZCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfNl9WQUxVRRCOpAES",
            "LAomQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzdfVkFMVUUQj6QB",
            "EiwKJkJBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF84X1ZBTFVFEJCk",
            "ARIsCiZCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfOV9WQUxVRRCR",
            "pAESLQonQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzEwX1ZBTFVF",
            "EJKkARItCidCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERfMTFfVkFM",
            "VUUQk6QBEi0KJ0JBQ0tGSUxMX0NSRUFUSVZFX0NVU1RPTV9GSUVMRF8xMl9W",
            "QUxVRRCUpAESLQonQkFDS0ZJTExfQ1JFQVRJVkVfQ1VTVE9NX0ZJRUxEXzEz",
            "X1ZBTFVFEJWkARItCidCQUNLRklMTF9DUkVBVElWRV9DVVNUT01fRklFTERf",
            "MTRfVkFMVUUQlqQBEiEKG0NVU1RPTV9ESU1FTlNJT05fMF9WQUxVRV9JRBCg",
            "jQYSIQobQ1VTVE9NX0RJTUVOU0lPTl8xX1ZBTFVFX0lEEKGNBhIhChtDVVNU",
            "T01fRElNRU5TSU9OXzJfVkFMVUVfSUQQoo0GEiEKG0NVU1RPTV9ESU1FTlNJ",
            "T05fM19WQUxVRV9JRBCjjQYSIQobQ1VTVE9NX0RJTUVOU0lPTl80X1ZBTFVF",
            "X0lEEKSNBhIhChtDVVNUT01fRElNRU5TSU9OXzVfVkFMVUVfSUQQpY0GEiEK",
            "G0NVU1RPTV9ESU1FTlNJT05fNl9WQUxVRV9JRBCmjQYSIQobQ1VTVE9NX0RJ",
            "TUVOU0lPTl83X1ZBTFVFX0lEEKeNBhIhChtDVVNUT01fRElNRU5TSU9OXzhf",
            "VkFMVUVfSUQQqI0GEiEKG0NVU1RPTV9ESU1FTlNJT05fOV9WQUxVRV9JRBCp",
            "jQYSHgoYQ1VTVE9NX0RJTUVOU0lPTl8wX1ZBTFVFEIiVBhIeChhDVVNUT01f",
            "RElNRU5TSU9OXzFfVkFMVUUQiZUGEh4KGENVU1RPTV9ESU1FTlNJT05fMl9W",
            "QUxVRRCKlQYSHgoYQ1VTVE9NX0RJTUVOU0lPTl8zX1ZBTFVFEIuVBhIeChhD",
            "VVNUT01fRElNRU5TSU9OXzRfVkFMVUUQjJUGEh4KGENVU1RPTV9ESU1FTlNJ",
            "T05fNV9WQUxVRRCNlQYSHgoYQ1VTVE9NX0RJTUVOU0lPTl82X1ZBTFVFEI6V",
            "BhIeChhDVVNUT01fRElNRU5TSU9OXzdfVkFMVUUQj5UGEh4KGENVU1RPTV9E",
            "SU1FTlNJT05fOF9WQUxVRRCQlQYSHgoYQ1VTVE9NX0RJTUVOU0lPTl85X1ZB",
            "TFVFEJGVBiLrLQoGTWV0cmljEhYKEk1FVFJJQ19VTlNQRUNJRklFRBAAEiUK",
            "IUFDVElWRV9WSUVXX0FWRVJBR0VfVklFV0FCTEVfVElNRRA9EiQKIEFDVElW",
            "RV9WSUVXX0VMSUdJQkxFX0lNUFJFU1NJT05TEDoSJgoiQUNUSVZFX1ZJRVdf",
            "TUVBU1VSQUJMRV9JTVBSRVNTSU9OUxA5EisKJ0FDVElWRV9WSUVXX01FQVNV",
            "UkFCTEVfSU1QUkVTU0lPTlNfUkFURRA8EiQKIEFDVElWRV9WSUVXX1ZJRVdB",
            "QkxFX0lNUFJFU1NJT05TEDgSKQolQUNUSVZFX1ZJRVdfVklFV0FCTEVfSU1Q",
            "UkVTU0lPTlNfUkFURRA7Ei0KKUFEU0VOU0VfQUNUSVZFX1ZJRVdfQVZFUkFH",
            "RV9WSUVXQUJMRV9USU1FEEkSLAooQURTRU5TRV9BQ1RJVkVfVklFV19FTElH",
            "SUJMRV9JTVBSRVNTSU9OUxBGEi4KKkFEU0VOU0VfQUNUSVZFX1ZJRVdfTUVB",
            "U1VSQUJMRV9JTVBSRVNTSU9OUxBFEjMKL0FEU0VOU0VfQUNUSVZFX1ZJRVdf",
            "TUVBU1VSQUJMRV9JTVBSRVNTSU9OU19SQVRFEEgSLAooQURTRU5TRV9BQ1RJ",
            "VkVfVklFV19WSUVXQUJMRV9JTVBSRVNTSU9OUxBEEjEKLUFEU0VOU0VfQUNU",
            "SVZFX1ZJRVdfVklFV0FCTEVfSU1QUkVTU0lPTlNfUkFURRBHEhgKFEFEU0VO",
            "U0VfQVZFUkFHRV9FQ1BNEBoSEgoOQURTRU5TRV9DTElDS1MQFxIPCgtBRFNF",
            "TlNFX0NUUhAYEhcKE0FEU0VOU0VfSU1QUkVTU0lPTlMQFhIaChZBRFNFTlNF",
            "X1BFUkNFTlRfQ0xJQ0tTEBwSHwobQURTRU5TRV9QRVJDRU5UX0lNUFJFU1NJ",
            "T05TEBsSGwoXQURTRU5TRV9QRVJDRU5UX1JFVkVOVUUQHRInCiNBRFNFTlNF",
            "X1BFUkNFTlRfUkVWRU5VRV9XSVRIT1VUX0NQRBAeEhwKGEFEU0VOU0VfUkVT",
            "UE9OU0VTX1NFUlZFRBApEhMKD0FEU0VOU0VfUkVWRU5VRRAZEjEKLUFEX0VY",
            "Q0hBTkdFX0FDVElWRV9WSUVXX0FWRVJBR0VfVklFV0FCTEVfVElNRRBPEjAK",
            "LEFEX0VYQ0hBTkdFX0FDVElWRV9WSUVXX0VMSUdJQkxFX0lNUFJFU1NJT05T",
            "EEwSMgouQURfRVhDSEFOR0VfQUNUSVZFX1ZJRVdfTUVBU1VSQUJMRV9JTVBS",
            "RVNTSU9OUxBLEjcKM0FEX0VYQ0hBTkdFX0FDVElWRV9WSUVXX01FQVNVUkFC",
            "TEVfSU1QUkVTU0lPTlNfUkFURRBOEjAKLEFEX0VYQ0hBTkdFX0FDVElWRV9W",
            "SUVXX1ZJRVdBQkxFX0lNUFJFU1NJT05TEEoSNQoxQURfRVhDSEFOR0VfQUNU",
            "SVZFX1ZJRVdfVklFV0FCTEVfSU1QUkVTU0lPTlNfUkFURRBNEhwKGEFEX0VY",
            "Q0hBTkdFX0FWRVJBR0VfRUNQTRASEhYKEkFEX0VYQ0hBTkdFX0NMSUNLUxAP",
            "EhMKD0FEX0VYQ0hBTkdFX0NUUhAQEhsKF0FEX0VYQ0hBTkdFX0lNUFJFU1NJ",
            "T05TEA4SHgoaQURfRVhDSEFOR0VfUEVSQ0VOVF9DTElDS1MQFBIjCh9BRF9F",
            "WENIQU5HRV9QRVJDRU5UX0lNUFJFU1NJT05TEBMSHwobQURfRVhDSEFOR0Vf",
            "UEVSQ0VOVF9SRVZFTlVFEBUSKwonQURfRVhDSEFOR0VfUEVSQ0VOVF9SRVZF",
            "TlVFX1dJVEhPVVRfQ1BEEB8SIAocQURfRVhDSEFOR0VfUkVTUE9OU0VTX1NF",
            "UlZFRBAqEhcKE0FEX0VYQ0hBTkdFX1JFVkVOVUUQERIPCgtBRF9SRVFVRVNU",
            "UxAmEi8KK0FEX1NFUlZFUl9BQ1RJVkVfVklFV19BVkVSQUdFX1ZJRVdBQkxF",
            "X1RJTUUQQxIuCipBRF9TRVJWRVJfQUNUSVZFX1ZJRVdfRUxJR0lCTEVfSU1Q",
            "UkVTU0lPTlMQQBIwCixBRF9TRVJWRVJfQUNUSVZFX1ZJRVdfTUVBU1VSQUJM",
            "RV9JTVBSRVNTSU9OUxA/EjUKMUFEX1NFUlZFUl9BQ1RJVkVfVklFV19NRUFT",
            "VVJBQkxFX0lNUFJFU1NJT05TX1JBVEUQQhIuCipBRF9TRVJWRVJfQUNUSVZF",
            "X1ZJRVdfVklFV0FCTEVfSU1QUkVTU0lPTlMQPhIzCi9BRF9TRVJWRVJfQUNU",
            "SVZFX1ZJRVdfVklFV0FCTEVfSU1QUkVTU0lPTlNfUkFURRBBEhoKFkFEX1NF",
            "UlZFUl9BVkVSQUdFX0VDUE0QIhImCiJBRF9TRVJWRVJfQVZFUkFHRV9FQ1BN",
            "X1dJVEhPVVRfQ1BEEAoSFAoQQURfU0VSVkVSX0NMSUNLUxAHEhkKFUFEX1NF",
            "UlZFUl9DUERfUkVWRU5VRRAgEhEKDUFEX1NFUlZFUl9DVFIQCBIZChVBRF9T",
            "RVJWRVJfSU1QUkVTU0lPTlMQBhIcChhBRF9TRVJWRVJfUEVSQ0VOVF9DTElD",
            "S1MQDBIhCh1BRF9TRVJWRVJfUEVSQ0VOVF9JTVBSRVNTSU9OUxALEh0KGUFE",
            "X1NFUlZFUl9QRVJDRU5UX1JFVkVOVUUQIxIpCiVBRF9TRVJWRVJfUEVSQ0VO",
            "VF9SRVZFTlVFX1dJVEhPVVRfQ1BEEA0SHgoaQURfU0VSVkVSX1JFU1BPTlNF",
            "U19TRVJWRUQQKBIVChFBRF9TRVJWRVJfUkVWRU5VRRAhEiEKHUFEX1NFUlZF",
            "Ul9SRVZFTlVFX1dJVEhPVVRfQ1BEEAkSEAoMQVVDVElPTlNfV09OEFASEAoM",
            "QVZFUkFHRV9FQ1BNECUSHAoYQVZFUkFHRV9FQ1BNX1dJVEhPVVRfQ1BEEAUS",
            "CAoEQklEUxBREhMKD0JJRFNfSU5fQVVDVElPThBSEgwKCENBTExPVVRTEFMS",
            "CgoGQ0xJQ0tTEAISFQoRQ09ERV9TRVJWRURfQ09VTlQQLBIHCgNDVFIQAxIt",
            "CihHT09HTEVfU09MRF9BVUNUSU9OX0NPVklFV0VEX0lNUFJFU1NJT05TEIEB",
            "EiQKH0dPT0dMRV9TT0xEX0FVQ1RJT05fSU1QUkVTU0lPTlMQgAESJQogR09P",
            "R0xFX1NPTERfQ09WSUVXRURfSU1QUkVTU0lPTlMQgwESHAoXR09PR0xFX1NP",
            "TERfSU1QUkVTU0lPTlMQggESMAosR09PR0xFX1NPTERfUkVTRVJWQVRJT05f",
            "Q09WSUVXRURfSU1QUkVTU0lPTlMQfxInCiNHT09HTEVfU09MRF9SRVNFUlZB",
            "VElPTl9JTVBSRVNTSU9OUxB+Eg8KC0lNUFJFU1NJT05TEAESJgohUEFSVE5F",
            "Ul9TQUxFU19GSUxMRURfUE9EX1JFUVVFU1RTEIcBEhwKF1BBUlRORVJfU0FM",
            "RVNfRklMTF9SQVRFEIgBEiUKIFBBUlRORVJfU0FMRVNfUEFSVE5FUl9NQVRD",
            "SF9SQVRFEIkBEhoKFVBBUlRORVJfU0FMRVNfUVVFUklFUxCEARInCiJQQVJU",
            "TkVSX1NBTEVTX1VORklMTEVEX0lNUFJFU1NJT05TEIUBEiQKH1BBUlRORVJf",
            "U0FMRVNfVU5NQVRDSEVEX1FVRVJJRVMQhgESHAoYUEFSVE5FUl9TT0xEX0NP",
            "REVfU0VSVkVEEH0SJQohUEFSVE5FUl9TT0xEX0NPVklFV0VEX0lNUFJFU1NJ",
            "T05TEHwSHAoYUEFSVE5FUl9TT0xEX0lNUFJFU1NJT05TEHsSJgohUFJPR1JB",
            "TU1BVElDX0VMSUdJQkxFX0FEX1JFUVVFU1RTELEBEhwKF1BST0dSQU1NQVRJ",
            "Q19NQVRDSF9SQVRFELIBEiIKHVBST0dSQU1NQVRJQ19SRVNQT05TRVNfU0VS",
            "VkVEELABEhQKEFJFU1BPTlNFU19TRVJWRUQQJxILCgdSRVZFTlVFECQSFwoT",
            "UkVWRU5VRV9XSVRIT1VUX0NQRBAEEhgKFFNVQ0NFU1NGVUxfUkVTUE9OU0VT",
            "EFQSGAoUVU5GSUxMRURfSU1QUkVTU0lPTlMQLRIZChVVTk1BVENIRURfQURf",
            "UkVRVUVTVFMQKxIqCiZVU0VSX01FU1NBR0VTX09GRkVSV0FMTF9NRVNTQUdF",
            "U19TSE9XThB5EjIKLlVTRVJfTUVTU0FHRVNfT0ZGRVJXQUxMX1NVQ0NFU1NG",
            "VUxfRU5HQUdFTUVOVFMQehIuCipWSURFT19JTlRFUkFDVElPTl9BVkVSQUdF",
            "X0lOVEVSQUNUSU9OX1JBVEUQXBIfChtWSURFT19JTlRFUkFDVElPTl9DT0xM",
            "QVBTRVMQXRIdChlWSURFT19JTlRFUkFDVElPTl9FWFBBTkRTEF8SIgoeVklE",
            "RU9fSU5URVJBQ1RJT05fRlVMTF9TQ1JFRU5TEGASGwoXVklERU9fSU5URVJB",
            "Q1RJT05fTVVURVMQYRIcChhWSURFT19JTlRFUkFDVElPTl9QQVVTRVMQYhId",
            "ChlWSURFT19JTlRFUkFDVElPTl9SRVNVTUVTEGMSHQoZVklERU9fSU5URVJB",
            "Q1RJT05fUkVXSU5EUxBkEh0KGVZJREVPX0lOVEVSQUNUSU9OX1VOTVVURVMQ",
            "ZRIhCh1WSURFT19JTlRFUkFDVElPTl9WSURFT19TS0lQUxBmEiQKH1ZJREVP",
            "X1JFQUxfVElNRV9DUkVBVElWRV9TRVJWRVMQiwESJAofVklERU9fUkVBTF9U",
            "SU1FX0VSUk9SXzEwMF9DT1VOVBCPARIkCh9WSURFT19SRUFMX1RJTUVfRVJS",
            "T1JfMTAxX0NPVU5UEJABEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl8xMDJf",
            "Q09VTlQQkQESJAofVklERU9fUkVBTF9USU1FX0VSUk9SXzIwMF9DT1VOVBCS",
            "ARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfMjAxX0NPVU5UEJMBEiQKH1ZJ",
            "REVPX1JFQUxfVElNRV9FUlJPUl8yMDJfQ09VTlQQlAESJAofVklERU9fUkVB",
            "TF9USU1FX0VSUk9SXzIwM19DT1VOVBCVARIkCh9WSURFT19SRUFMX1RJTUVf",
            "RVJST1JfMzAwX0NPVU5UEJYBEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl8z",
            "MDFfQ09VTlQQlwESJAofVklERU9fUkVBTF9USU1FX0VSUk9SXzMwMl9DT1VO",
            "VBCYARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfMzAzX0NPVU5UEJkBEiQK",
            "H1ZJREVPX1JFQUxfVElNRV9FUlJPUl80MDBfQ09VTlQQmgESJAofVklERU9f",
            "UkVBTF9USU1FX0VSUk9SXzQwMV9DT1VOVBCbARIkCh9WSURFT19SRUFMX1RJ",
            "TUVfRVJST1JfNDAyX0NPVU5UEJwBEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJP",
            "Ul80MDNfQ09VTlQQnQESJAofVklERU9fUkVBTF9USU1FX0VSUk9SXzQwNV9D",
            "T1VOVBCeARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfNDA2X0NPVU5UEJ8B",
            "EiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl80MDdfQ09VTlQQoAESJAofVklE",
            "RU9fUkVBTF9USU1FX0VSUk9SXzQwOF9DT1VOVBChARIkCh9WSURFT19SRUFM",
            "X1RJTUVfRVJST1JfNDA5X0NPVU5UEKIBEiQKH1ZJREVPX1JFQUxfVElNRV9F",
            "UlJPUl80MTBfQ09VTlQQowESJAofVklERU9fUkVBTF9USU1FX0VSUk9SXzUw",
            "MF9DT1VOVBCkARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfNTAxX0NPVU5U",
            "EKUBEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl81MDJfQ09VTlQQpgESJAof",
            "VklERU9fUkVBTF9USU1FX0VSUk9SXzUwM19DT1VOVBCnARIkCh9WSURFT19S",
            "RUFMX1RJTUVfRVJST1JfNjAwX0NPVU5UEKgBEiQKH1ZJREVPX1JFQUxfVElN",
            "RV9FUlJPUl82MDFfQ09VTlQQqQESJAofVklERU9fUkVBTF9USU1FX0VSUk9S",
            "XzYwMl9DT1VOVBCqARIkCh9WSURFT19SRUFMX1RJTUVfRVJST1JfNjAzX0NP",
            "VU5UEKsBEiQKH1ZJREVPX1JFQUxfVElNRV9FUlJPUl82MDRfQ09VTlQQrAES",
            "JAofVklERU9fUkVBTF9USU1FX0VSUk9SXzkwMF9DT1VOVBCtARIkCh9WSURF",
            "T19SRUFMX1RJTUVfRVJST1JfOTAxX0NPVU5UEK4BEiAKG1ZJREVPX1JFQUxf",
            "VElNRV9JTVBSRVNTSU9OUxCKARIkCh9WSURFT19SRUFMX1RJTUVfTUFUQ0hF",
            "RF9RVUVSSUVTEIwBEiYKIVZJREVPX1JFQUxfVElNRV9UT1RBTF9FUlJPUl9D",
            "T1VOVBCvARIiCh1WSURFT19SRUFMX1RJTUVfVE9UQUxfUVVFUklFUxCOARIm",
            "CiFWSURFT19SRUFMX1RJTUVfVU5NQVRDSEVEX1FVRVJJRVMQjQESHwobVklE",
            "RU9fVklFV0VSU0hJUF9BVVRPX1BMQVlTEGcSJgoiVklERU9fVklFV0VSU0hJ",
            "UF9BVkVSQUdFX1ZJRVdfUkFURRBoEiYKIlZJREVPX1ZJRVdFUlNISVBfQVZF",
            "UkFHRV9WSUVXX1RJTUUQaRIjCh9WSURFT19WSUVXRVJTSElQX0NMSUNLX1RP",
            "X1BMQVlTEGoSHgoaVklERU9fVklFV0VSU0hJUF9DT01QTEVURVMQaxIkCiBW",
            "SURFT19WSUVXRVJTSElQX0NPTVBMRVRJT05fUkFURRBsEiIKHlZJREVPX1ZJ",
            "RVdFUlNISVBfRU5HQUdFRF9WSUVXUxBtEiQKIFZJREVPX1ZJRVdFUlNISVBf",
            "RklSU1RfUVVBUlRJTEVTEG4SHgoaVklERU9fVklFV0VSU0hJUF9NSURQT0lO",
            "VFMQbxInCiNWSURFT19WSUVXRVJTSElQX1NLSVBfQlVUVE9OU19TSE9XThBw",
            "EhsKF1ZJREVPX1ZJRVdFUlNISVBfU1RBUlRTEHESJAogVklERU9fVklFV0VS",
            "U0hJUF9USElSRF9RVUFSVElMRVMQchImCiJWSURFT19WSUVXRVJTSElQX1RP",
            "VEFMX0VSUk9SX0NPVU5UEHMSJQohVklERU9fVklFV0VSU0hJUF9UT1RBTF9F",
            "UlJPUl9SQVRFEF4SIQodVklERU9fVklFV0VSU0hJUF9WSURFT19MRU5HVEgQ",
            "dBImCiJWSURFT19WSUVXRVJTSElQX1ZJRVdfVEhST1VHSF9SQVRFEHUSHQoZ",
            "WUlFTERfR1JPVVBfRVNUSU1BVEVEX0NQTRBYEiEKHVlJRUxEX0dST1VQX0VT",
            "VElNQVRFRF9SRVZFTlVFEFcSGwoXWUlFTERfR1JPVVBfSU1QUkVTU0lPTlMQ",
            "VRIjCh9ZSUVMRF9HUk9VUF9NRURJQVRJT05fRklMTF9SQVRFEFkSKQolWUlF",
            "TERfR1JPVVBfTUVESUFUSU9OX01BVENIRURfUVVFUklFUxBWEiMKH1lJRUxE",
            "X0dST1VQX01FRElBVElPTl9QQVNTQkFDS1MQdhIqCiZZSUVMRF9HUk9VUF9N",
            "RURJQVRJT05fVEhJUkRfUEFSVFlfRUNQTRBaIpcBCg9NZXRyaWNWYWx1ZVR5",
            "cGUSCwoHUFJJTUFSWRAAEhwKGFBSSU1BUllfUEVSQ0VOVF9PRl9UT1RBTBAB",
            "Eg4KCkNPTVBBUklTT04QAhIfChtDT01QQVJJU09OX1BFUkNFTlRfT0ZfVE9U",
            "QUwQAxITCg9BQlNPTFVURV9DSEFOR0UQBBITCg9SRUxBVElWRV9DSEFOR0UQ",
            "BSI5CgpSZXBvcnRUeXBlEhsKF1JFUE9SVF9UWVBFX1VOU1BFQ0lGSUVEEAAS",
            "DgoKSElTVE9SSUNBTBABIi4KClZpc2liaWxpdHkSCgoGSElEREVOEAASCQoF",
            "RFJBRlQQARIJCgVTQVZFRBACOl/qQVwKH2FkbWFuYWdlci5nb29nbGVhcGlz",
            "LmNvbS9SZXBvcnQSKG5ldHdvcmtzL3tuZXR3b3JrX2NvZGV9L3JlcG9ydHMv",
            "e3JlcG9ydH0qB3JlcG9ydHMyBnJlcG9ydCJJChBSdW5SZXBvcnRSZXF1ZXN0",
            "EjUKBG5hbWUYASABKAlCJ+BBAvpBIQofYWRtYW5hZ2VyLmdvb2dsZWFwaXMu",
            "Y29tL1JlcG9ydCJjChFSdW5SZXBvcnRNZXRhZGF0YRIYChBwZXJjZW50X2Nv",
            "bXBsZXRlGAIgASgFEjQKBnJlcG9ydBgEIAEoCUIk+kEhCh9hZG1hbmFnZXIu",
            "Z29vZ2xlYXBpcy5jb20vUmVwb3J0IioKEVJ1blJlcG9ydFJlc3BvbnNlEhUK",
            "DXJlcG9ydF9yZXN1bHQYASABKAkiSQoQR2V0UmVwb3J0UmVxdWVzdBI1CgRu",
            "YW1lGAEgASgJQifgQQL6QSEKH2FkbWFuYWdlci5nb29nbGVhcGlzLmNvbS9S",
            "ZXBvcnQivgEKEkxpc3RSZXBvcnRzUmVxdWVzdBI4CgZwYXJlbnQYASABKAlC",
            "KOBBAvpBIgogYWRtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL05ldHdvcmsSFgoJ",
            "cGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID4EEB",
            "EhMKBmZpbHRlchgEIAEoCUID4EEBEhUKCG9yZGVyX2J5GAUgASgJQgPgQQES",
            "EQoEc2tpcBgGIAEoBUID4EEBInQKE0xpc3RSZXBvcnRzUmVzcG9uc2USMAoH",
            "cmVwb3J0cxgBIAMoCzIfLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9y",
            "dBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkSEgoKdG90YWxfc2l6ZRgDIAEo",
            "BSKEAQoTQ3JlYXRlUmVwb3J0UmVxdWVzdBI3CgZwYXJlbnQYASABKAlCJ+BB",
            "AvpBIRIfYWRtYW5hZ2VyLmdvb2dsZWFwaXMuY29tL1JlcG9ydBI0CgZyZXBv",
            "cnQYAiABKAsyHy5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnRCA+BB",
            "AiKBAQoTVXBkYXRlUmVwb3J0UmVxdWVzdBI0CgZyZXBvcnQYASABKAsyHy5n",
            "b29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnRCA+BBAhI0Cgt1cGRhdGVf",
            "bWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAiJd",
            "ChxGZXRjaFJlcG9ydFJlc3VsdFJvd3NSZXF1ZXN0EgwKBG5hbWUYASABKAkS",
            "FgoJcGFnZV9zaXplGAIgASgFQgPgQQESFwoKcGFnZV90b2tlbhgDIAEoCUID",
            "4EEBIuUCCh1GZXRjaFJlcG9ydFJlc3VsdFJvd3NSZXNwb25zZRI7CgRyb3dz",
            "GAEgAygLMi0uZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LkRhdGFU",
            "YWJsZS5Sb3cSLAoIcnVuX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEk0KC2RhdGVfcmFuZ2VzGAMgAygLMjguZ29vZ2xlLmFkcy5h",
            "ZG1hbmFnZXIudjEuUmVwb3J0LkRhdGVSYW5nZS5GaXhlZERhdGVSYW5nZRJY",
            "ChZjb21wYXJpc29uX2RhdGVfcmFuZ2VzGAQgAygLMjguZ29vZ2xlLmFkcy5h",
            "ZG1hbmFnZXIudjEuUmVwb3J0LkRhdGVSYW5nZS5GaXhlZERhdGVSYW5nZRIX",
            "Cg90b3RhbF9yb3dfY291bnQYBSABKAUSFwoPbmV4dF9wYWdlX3Rva2VuGAYg",
            "ASgJIuIGChBSZXBvcnREZWZpbml0aW9uEkIKCmRpbWVuc2lvbnMYASADKA4y",
            "KS5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuRGltZW5zaW9uQgPg",
            "QQISPAoHbWV0cmljcxgCIAMoDjImLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYx",
            "LlJlcG9ydC5NZXRyaWNCA+BBAhI8CgdmaWx0ZXJzGAMgAygLMiYuZ29vZ2xl",
            "LmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LkZpbHRlckID4EEBEhYKCXRpbWVf",
            "em9uZRgEIAEoCUID4EEBEhoKDWN1cnJlbmN5X2NvZGUYBSABKAlCA+BBARJC",
            "CgpkYXRlX3JhbmdlGAYgASgLMikuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEu",
            "UmVwb3J0LkRhdGVSYW5nZUID4EECElIKFWNvbXBhcmlzb25fZGF0ZV9yYW5n",
            "ZRgJIAEoCzIpLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydC5EYXRl",
            "UmFuZ2VCA+BBAUgAiAEBEiUKGGN1c3RvbV9kaW1lbnNpb25fa2V5X2lkcxgH",
            "IAMoA0ID4EEBEicKGmxpbmVfaXRlbV9jdXN0b21fZmllbGRfaWRzGAsgAygD",
            "QgPgQQESIwoWb3JkZXJfY3VzdG9tX2ZpZWxkX2lkcxgMIAMoA0ID4EEBEiYK",
            "GWNyZWF0aXZlX2N1c3RvbV9maWVsZF9pZHMYDSADKANCA+BBARJECgtyZXBv",
            "cnRfdHlwZRgIIAEoDjIqLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9y",
            "dC5SZXBvcnRUeXBlQgPgQQISUQoSdGltZV9wZXJpb2RfY29sdW1uGAogASgO",
            "MjAuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuUmVwb3J0LlRpbWVQZXJpb2RD",
            "b2x1bW5CA+BBARI4CgVmbGFncxgOIAMoCzIkLmdvb2dsZS5hZHMuYWRtYW5h",
            "Z2VyLnYxLlJlcG9ydC5GbGFnQgPgQQESOAoFc29ydHMYDyADKAsyJC5nb29n",
            "bGUuYWRzLmFkbWFuYWdlci52MS5SZXBvcnQuU29ydEID4EEBQhgKFl9jb21w",
            "YXJpc29uX2RhdGVfcmFuZ2UiogIKD1NjaGVkdWxlT3B0aW9ucxIzCghzY2hl",
            "ZHVsZRgBIAEoCzIhLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlNjaGVkdWxl",
            "ElYKEmRlbGl2ZXJ5X2NvbmRpdGlvbhgCIAEoDjI6Lmdvb2dsZS5hZHMuYWRt",
            "YW5hZ2VyLnYxLlNjaGVkdWxlT3B0aW9ucy5EZWxpdmVyeUNvbmRpdGlvbhI4",
            "CgVmbGFncxgDIAMoCzIkLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9y",
            "dC5GbGFnQgPgQQEiSAoRRGVsaXZlcnlDb25kaXRpb24SCQoFTkVWRVIQABIK",
            "CgZBTFdBWVMQARIcChhXSEVOX0ZMQUdfQ09ORElUSU9OU19NRVQQAiKLBQoI",
            "U2NoZWR1bGUSSwoPd2Vla2x5X3NjaGVkdWxlGAYgASgLMjAuZ29vZ2xlLmFk",
            "cy5hZG1hbmFnZXIudjEuU2NoZWR1bGUuV2Vla2x5U2NoZWR1bGVIABJNChBt",
            "b250aGx5X3NjaGVkdWxlGAcgASgLMjEuZ29vZ2xlLmFkcy5hZG1hbmFnZXIu",
            "djEuU2NoZWR1bGUuTW9udGhseVNjaGVkdWxlSAASJQoKc3RhcnRfZGF0ZRgB",
            "IAEoCzIRLmdvb2dsZS50eXBlLkRhdGUSIwoIZW5kX2RhdGUYAiABKAsyES5n",
            "b29nbGUudHlwZS5EYXRlEj4KCWZyZXF1ZW5jeRgDIAEoDjIrLmdvb2dsZS5h",
            "ZHMuYWRtYW5hZ2VyLnYxLlNjaGVkdWxlLkZyZXF1ZW5jeRIqCgpzdGFydF90",
            "aW1lGAQgASgLMhYuZ29vZ2xlLnR5cGUuVGltZU9mRGF5GkcKDldlZWtseVNj",
            "aGVkdWxlEjUKFXdlZWtseV9zY2hlZHVsZWRfZGF5cxgBIAMoDjIWLmdvb2ds",
            "ZS50eXBlLkRheU9mV2VlaxoxCg9Nb250aGx5U2NoZWR1bGUSHgoWbW9udGhs",
            "eV9zY2hlZHVsZWRfZGF5cxgBIAMoBSKYAQoJRnJlcXVlbmN5EhkKFUZSRVFV",
            "RU5DWV9VTlNQRUNJRklFRBAAEgoKBkhPVVJMWRABEhMKD1RXT19USU1FU19E",
            "QUlMWRACEhUKEVRIUkVFX1RJTUVTX0RBSUxZEAMSFAoQRk9VUl9USU1FU19E",
            "QUlMWRAEEgkKBURBSUxZEAUSCgoGV0VFS0xZEAYSCwoHTU9OVEhMWRAHQhQK",
            "EmZyZXF1ZW5jeV9zY2hlZHVsZTKmCAoNUmVwb3J0U2VydmljZRKHAQoJR2V0",
            "UmVwb3J0EikuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuR2V0UmVwb3J0UmVx",
            "dWVzdBofLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJlcG9ydCIu2kEEbmFt",
            "ZYLT5JMCIRIfL3YxL3tuYW1lPW5ldHdvcmtzLyovcmVwb3J0cy8qfRKaAQoL",
            "TGlzdFJlcG9ydHMSKy5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5MaXN0UmVw",
            "b3J0c1JlcXVlc3QaLC5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5MaXN0UmVw",
            "b3J0c1Jlc3BvbnNlIjDaQQZwYXJlbnSC0+STAiESHy92MS97cGFyZW50PW5l",
            "dHdvcmtzLyp9L3JlcG9ydHMSngEKDENyZWF0ZVJlcG9ydBIsLmdvb2dsZS5h",
            "ZHMuYWRtYW5hZ2VyLnYxLkNyZWF0ZVJlcG9ydFJlcXVlc3QaHy5nb29nbGUu",
            "YWRzLmFkbWFuYWdlci52MS5SZXBvcnQiP9pBDXBhcmVudCxyZXBvcnSC0+ST",
            "AikiHy92MS97cGFyZW50PW5ldHdvcmtzLyp9L3JlcG9ydHM6BnJlcG9ydBKq",
            "AQoMVXBkYXRlUmVwb3J0EiwuZ29vZ2xlLmFkcy5hZG1hbmFnZXIudjEuVXBk",
            "YXRlUmVwb3J0UmVxdWVzdBofLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxLlJl",
            "cG9ydCJL2kEScmVwb3J0LHVwZGF0ZV9tYXNrgtPkkwIwMiYvdjEve3JlcG9y",
            "dC5uYW1lPW5ldHdvcmtzLyovcmVwb3J0cy8qfToGcmVwb3J0ErUBCglSdW5S",
            "ZXBvcnQSKS5nb29nbGUuYWRzLmFkbWFuYWdlci52MS5SdW5SZXBvcnRSZXF1",
            "ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJeykEmChFSdW5S",
            "ZXBvcnRSZXNwb25zZRIRUnVuUmVwb3J0TWV0YWRhdGHaQQRuYW1lgtPkkwIo",
            "IiMvdjEve25hbWU9bmV0d29ya3MvKi9yZXBvcnRzLyp9OnJ1bjoBKhLKAQoV",
            "RmV0Y2hSZXBvcnRSZXN1bHRSb3dzEjUuZ29vZ2xlLmFkcy5hZG1hbmFnZXIu",
            "djEuRmV0Y2hSZXBvcnRSZXN1bHRSb3dzUmVxdWVzdBo2Lmdvb2dsZS5hZHMu",
            "YWRtYW5hZ2VyLnYxLkZldGNoUmVwb3J0UmVzdWx0Um93c1Jlc3BvbnNlIkLa",
            "QQRuYW1lgtPkkwI1EjMvdjEve25hbWU9bmV0d29ya3MvKi9yZXBvcnRzLyov",
            "cmVzdWx0cy8qfTpmZXRjaFJvd3MaG8pBGGFkbWFuYWdlci5nb29nbGVhcGlz",
            "LmNvbULGAQobY29tLmdvb2dsZS5hZHMuYWRtYW5hZ2VyLnYxQhJSZXBvcnRT",
            "ZXJ2aWNlUHJvdG9QAVpAZ29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29v",
            "Z2xlYXBpcy9hZHMvYWRtYW5hZ2VyL3YxO2FkbWFuYWdlcqoCF0dvb2dsZS5B",
            "ZHMuQWRNYW5hZ2VyLlYxygIXR29vZ2xlXEFkc1xBZE1hbmFnZXJcVjHqAhpH",
            "b29nbGU6OkFkczo6QWRNYW5hZ2VyOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Google.Type.DayofweekReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report), global::Google.Ads.AdManager.V1.Report.Parser, new[]{ "Name", "ReportId", "Visibility", "ReportDefinition", "DisplayName", "UpdateTime", "CreateTime", "Locale", "ScheduleOptions" }, null, new[]{ typeof(global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn), typeof(global::Google.Ads.AdManager.V1.Report.Types.Dimension), typeof(global::Google.Ads.AdManager.V1.Report.Types.Metric), typeof(global::Google.Ads.AdManager.V1.Report.Types.MetricValueType), typeof(global::Google.Ads.AdManager.V1.Report.Types.ReportType), typeof(global::Google.Ads.AdManager.V1.Report.Types.Visibility) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Value), global::Google.Ads.AdManager.V1.Report.Types.Value.Parser, new[]{ "IntValue", "DoubleValue", "StringValue", "BoolValue", "IntListValue", "StringListValue", "BytesValue" }, new[]{ "Value" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList), global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList), global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList.Parser, new[]{ "Values" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Sort), global::Google.Ads.AdManager.V1.Report.Types.Sort.Parser, new[]{ "Field", "Descending", "Slice", "TimePeriodIndex", "MetricValueType" }, new[]{ "Slice", "TimePeriodIndex", "MetricValueType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DataTable), global::Google.Ads.AdManager.V1.Report.Types.DataTable.Parser, null, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row), global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row.Parser, new[]{ "DimensionValues", "MetricValueGroups" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup), global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup.Parser, new[]{ "PrimaryValues", "PrimaryPercentOfTotalValues", "ComparisonValues", "ComparisonPercentOfTotalValues", "AbsoluteChangeValues", "RelativeChangeValues", "FlagValues" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Field), global::Google.Ads.AdManager.V1.Report.Types.Field.Parser, new[]{ "Dimension", "Metric" }, new[]{ "Field" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Slice), global::Google.Ads.AdManager.V1.Report.Types.Slice.Parser, new[]{ "Dimension", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Filter), global::Google.Ads.AdManager.V1.Report.Types.Filter.Parser, new[]{ "FieldFilter", "NotFilter", "AndFilter", "OrFilter" }, new[]{ "Type" }, new[]{ typeof(global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter), global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter.Parser, new[]{ "Field", "Operation", "Values", "Slice", "TimePeriodIndex", "MetricValueType" }, new[]{ "Slice", "TimePeriodIndex", "MetricValueType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList), global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList.Parser, new[]{ "Filters" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.Flag), global::Google.Ads.AdManager.V1.Report.Types.Flag.Parser, new[]{ "Filters", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DateRange), global::Google.Ads.AdManager.V1.Report.Types.DateRange.Parser, new[]{ "Fixed", "Relative" }, new[]{ "DateRangeType" }, new[]{ typeof(global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.RelativeDateRange) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange), global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange.Parser, new[]{ "StartDate", "EndDate" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.RunReportRequest), global::Google.Ads.AdManager.V1.RunReportRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.RunReportMetadata), global::Google.Ads.AdManager.V1.RunReportMetadata.Parser, new[]{ "PercentComplete", "Report" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.RunReportResponse), global::Google.Ads.AdManager.V1.RunReportResponse.Parser, new[]{ "ReportResult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.GetReportRequest), global::Google.Ads.AdManager.V1.GetReportRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.ListReportsRequest), global::Google.Ads.AdManager.V1.ListReportsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter", "OrderBy", "Skip" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.ListReportsResponse), global::Google.Ads.AdManager.V1.ListReportsResponse.Parser, new[]{ "Reports", "NextPageToken", "TotalSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.CreateReportRequest), global::Google.Ads.AdManager.V1.CreateReportRequest.Parser, new[]{ "Parent", "Report" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.UpdateReportRequest), global::Google.Ads.AdManager.V1.UpdateReportRequest.Parser, new[]{ "Report", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.FetchReportResultRowsRequest), global::Google.Ads.AdManager.V1.FetchReportResultRowsRequest.Parser, new[]{ "Name", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.FetchReportResultRowsResponse), global::Google.Ads.AdManager.V1.FetchReportResultRowsResponse.Parser, new[]{ "Rows", "RunTime", "DateRanges", "ComparisonDateRanges", "TotalRowCount", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.ReportDefinition), global::Google.Ads.AdManager.V1.ReportDefinition.Parser, new[]{ "Dimensions", "Metrics", "Filters", "TimeZone", "CurrencyCode", "DateRange", "ComparisonDateRange", "CustomDimensionKeyIds", "LineItemCustomFieldIds", "OrderCustomFieldIds", "CreativeCustomFieldIds", "ReportType", "TimePeriodColumn", "Flags", "Sorts" }, new[]{ "ComparisonDateRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.ScheduleOptions), global::Google.Ads.AdManager.V1.ScheduleOptions.Parser, new[]{ "Schedule", "DeliveryCondition", "Flags" }, null, new[]{ typeof(global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Schedule), global::Google.Ads.AdManager.V1.Schedule.Parser, new[]{ "WeeklySchedule", "MonthlySchedule", "StartDate", "EndDate", "Frequency", "StartTime" }, new[]{ "FrequencySchedule" }, new[]{ typeof(global::Google.Ads.AdManager.V1.Schedule.Types.Frequency) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule), global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule.Parser, new[]{ "WeeklyScheduledDays" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule), global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule.Parser, new[]{ "MonthlyScheduledDays" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The `Report` resource.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Report : pb::IMessage<Report>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Report> _parser = new pb::MessageParser<Report>(() => new Report());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Report> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report(Report other) : this() {
      name_ = other.name_;
      reportId_ = other.reportId_;
      visibility_ = other.visibility_;
      reportDefinition_ = other.reportDefinition_ != null ? other.reportDefinition_.Clone() : null;
      displayName_ = other.displayName_;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      locale_ = other.locale_;
      scheduleOptions_ = other.scheduleOptions_ != null ? other.scheduleOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Report Clone() {
      return new Report(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The resource name of the report.
    /// Report resource name have the form:
    /// `networks/{network_code}/reports/{report_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "report_id" field.</summary>
    public const int ReportIdFieldNumber = 3;
    private long reportId_;
    /// <summary>
    /// Output only. Report ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ReportId {
      get { return reportId_; }
      set {
        reportId_ = value;
      }
    }

    /// <summary>Field number for the "visibility" field.</summary>
    public const int VisibilityFieldNumber = 2;
    private global::Google.Ads.AdManager.V1.Report.Types.Visibility visibility_ = global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden;
    /// <summary>
    /// Optional. The visibility of a report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.Visibility Visibility {
      get { return visibility_; }
      set {
        visibility_ = value;
      }
    }

    /// <summary>Field number for the "report_definition" field.</summary>
    public const int ReportDefinitionFieldNumber = 4;
    private global::Google.Ads.AdManager.V1.ReportDefinition reportDefinition_;
    /// <summary>
    /// Required. The report definition of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.ReportDefinition ReportDefinition {
      get { return reportDefinition_; }
      set {
        reportDefinition_ = value;
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 5;
    private string displayName_ = "";
    /// <summary>
    /// Optional. Display name for the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The instant this report was last modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The instant this report was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 8;
    private string locale_ = "";
    /// <summary>
    /// Output only. The locale of this report. Locale is set from the user's
    /// locale at the time of the request. Locale can not be modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "schedule_options" field.</summary>
    public const int ScheduleOptionsFieldNumber = 9;
    private global::Google.Ads.AdManager.V1.ScheduleOptions scheduleOptions_;
    /// <summary>
    /// Optional. The schedule options of this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.ScheduleOptions ScheduleOptions {
      get { return scheduleOptions_; }
      set {
        scheduleOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Report);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Report other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ReportId != other.ReportId) return false;
      if (Visibility != other.Visibility) return false;
      if (!object.Equals(ReportDefinition, other.ReportDefinition)) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (Locale != other.Locale) return false;
      if (!object.Equals(ScheduleOptions, other.ScheduleOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ReportId != 0L) hash ^= ReportId.GetHashCode();
      if (Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) hash ^= Visibility.GetHashCode();
      if (reportDefinition_ != null) hash ^= ReportDefinition.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (scheduleOptions_ != null) hash ^= ScheduleOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Visibility);
      }
      if (ReportId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ReportId);
      }
      if (reportDefinition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReportDefinition);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (Locale.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Locale);
      }
      if (scheduleOptions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ScheduleOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Visibility);
      }
      if (ReportId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ReportId);
      }
      if (reportDefinition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReportDefinition);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (Locale.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Locale);
      }
      if (scheduleOptions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ScheduleOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ReportId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReportId);
      }
      if (Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Visibility);
      }
      if (reportDefinition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportDefinition);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (Locale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (scheduleOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Report other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ReportId != 0L) {
        ReportId = other.ReportId;
      }
      if (other.Visibility != global::Google.Ads.AdManager.V1.Report.Types.Visibility.Hidden) {
        Visibility = other.Visibility;
      }
      if (other.reportDefinition_ != null) {
        if (reportDefinition_ == null) {
          ReportDefinition = new global::Google.Ads.AdManager.V1.ReportDefinition();
        }
        ReportDefinition.MergeFrom(other.ReportDefinition);
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      if (other.scheduleOptions_ != null) {
        if (scheduleOptions_ == null) {
          ScheduleOptions = new global::Google.Ads.AdManager.V1.ScheduleOptions();
        }
        ScheduleOptions.MergeFrom(other.ScheduleOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visibility = (global::Google.Ads.AdManager.V1.Report.Types.Visibility) input.ReadEnum();
            break;
          }
          case 24: {
            ReportId = input.ReadInt64();
            break;
          }
          case 34: {
            if (reportDefinition_ == null) {
              ReportDefinition = new global::Google.Ads.AdManager.V1.ReportDefinition();
            }
            input.ReadMessage(ReportDefinition);
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            Locale = input.ReadString();
            break;
          }
          case 74: {
            if (scheduleOptions_ == null) {
              ScheduleOptions = new global::Google.Ads.AdManager.V1.ScheduleOptions();
            }
            input.ReadMessage(ScheduleOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Visibility = (global::Google.Ads.AdManager.V1.Report.Types.Visibility) input.ReadEnum();
            break;
          }
          case 24: {
            ReportId = input.ReadInt64();
            break;
          }
          case 34: {
            if (reportDefinition_ == null) {
              ReportDefinition = new global::Google.Ads.AdManager.V1.ReportDefinition();
            }
            input.ReadMessage(ReportDefinition);
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            Locale = input.ReadString();
            break;
          }
          case 74: {
            if (scheduleOptions_ == null) {
              ScheduleOptions = new global::Google.Ads.AdManager.V1.ScheduleOptions();
            }
            input.ReadMessage(ScheduleOptions);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Report message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Valid time period columns.
      /// </summary>
      public enum TimePeriodColumn {
        /// <summary>
        /// Default value. Report will have no time period column.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A column for each date in the report.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_DATE")] Date = 1,
        /// <summary>
        /// A column for each week in the report.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_WEEK")] Week = 2,
        /// <summary>
        /// A column for each month in the report.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_MONTH")] Month = 3,
        /// <summary>
        /// A column for each quarter in the report.
        /// </summary>
        [pbr::OriginalName("TIME_PERIOD_COLUMN_QUARTER")] Quarter = 4,
      }

      /// <summary>
      /// Reporting dimensions.
      /// </summary>
      public enum Dimension {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("DIMENSION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The domain name of the advertiser.
        /// </summary>
        [pbr::OriginalName("ADVERTISER_DOMAIN_NAME")] AdvertiserDomainName = 242,
        /// <summary>
        /// The ID used in an external system for advertiser identification
        /// </summary>
        [pbr::OriginalName("ADVERTISER_EXTERNAL_ID")] AdvertiserExternalId = 228,
        /// <summary>
        /// The ID of an advertiser company assigned to an order
        /// </summary>
        [pbr::OriginalName("ADVERTISER_ID")] AdvertiserId = 131,
        /// <summary>
        /// Labels applied to the advertiser
        /// can be used for either competitive exclusion or ad exclusion
        /// </summary>
        [pbr::OriginalName("ADVERTISER_LABELS")] AdvertiserLabels = 230,
        /// <summary>
        /// Label ids applied to the advertiser
        /// can be used for either competitive exclusion or ad exclusion
        /// </summary>
        [pbr::OriginalName("ADVERTISER_LABEL_IDS")] AdvertiserLabelIds = 229,
        /// <summary>
        /// The name of an advertiser company assigned to an order
        /// </summary>
        [pbr::OriginalName("ADVERTISER_NAME")] AdvertiserName = 132,
        /// <summary>
        /// The name of the contact associated with an advertiser company
        /// </summary>
        [pbr::OriginalName("ADVERTISER_PRIMARY_CONTACT")] AdvertiserPrimaryContact = 227,
        /// <summary>
        /// Shows an ENUM value describing whether a given piece of publisher
        /// inventory was above (ATF) or below the fold (BTF) of a page.
        /// </summary>
        [pbr::OriginalName("AD_LOCATION")] AdLocation = 390,
        /// <summary>
        /// Shows a localized string describing whether a given piece of publisher
        /// inventory was above (ATF) or below the fold (BTF) of a page.
        /// </summary>
        [pbr::OriginalName("AD_LOCATION_NAME")] AdLocationName = 391,
        /// <summary>
        /// The code of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE")] AdUnitCode = 64,
        /// <summary>
        /// The code of the first level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_1")] AdUnitCodeLevel1 = 65,
        /// <summary>
        /// The code of the tenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_10")] AdUnitCodeLevel10 = 74,
        /// <summary>
        /// The code of the eleventh level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_11")] AdUnitCodeLevel11 = 75,
        /// <summary>
        /// The code of the twelfth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_12")] AdUnitCodeLevel12 = 76,
        /// <summary>
        /// The code of the thirteenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_13")] AdUnitCodeLevel13 = 77,
        /// <summary>
        /// The code of the fourteenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_14")] AdUnitCodeLevel14 = 78,
        /// <summary>
        /// The code of the fifteenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_15")] AdUnitCodeLevel15 = 79,
        /// <summary>
        /// The code of the sixteenth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_16")] AdUnitCodeLevel16 = 80,
        /// <summary>
        /// The code of the second level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_2")] AdUnitCodeLevel2 = 66,
        /// <summary>
        /// The code of the third level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_3")] AdUnitCodeLevel3 = 67,
        /// <summary>
        /// The code of the fourth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_4")] AdUnitCodeLevel4 = 68,
        /// <summary>
        /// The code of the fifth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_5")] AdUnitCodeLevel5 = 69,
        /// <summary>
        /// The code of the sixth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_6")] AdUnitCodeLevel6 = 70,
        /// <summary>
        /// The code of the seventh level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_7")] AdUnitCodeLevel7 = 71,
        /// <summary>
        /// The code of the eighth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_8")] AdUnitCodeLevel8 = 72,
        /// <summary>
        /// The code of the ninth level ad unit of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_CODE_LEVEL_9")] AdUnitCodeLevel9 = 73,
        /// <summary>
        /// The depth of the ad unit's hierarchy
        /// </summary>
        [pbr::OriginalName("AD_UNIT_DEPTH")] AdUnitDepth = 101,
        /// <summary>
        /// The ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID")] AdUnitId = 25,
        /// <summary>
        /// The full hierarchy of ad unit IDs where the ad was requested, from
        /// root to leaf, excluding the root ad unit ID.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_ALL_LEVEL")] AdUnitIdAllLevel = 27,
        /// <summary>
        /// The first level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_1")] AdUnitIdLevel1 = 30,
        /// <summary>
        /// The tenth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_10")] AdUnitIdLevel10 = 48,
        /// <summary>
        /// The eleventh level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_11")] AdUnitIdLevel11 = 50,
        /// <summary>
        /// The twelfth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_12")] AdUnitIdLevel12 = 52,
        /// <summary>
        /// The thirteenth level ad unit ID of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_13")] AdUnitIdLevel13 = 54,
        /// <summary>
        /// The fourteenth level ad unit ID of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_14")] AdUnitIdLevel14 = 56,
        /// <summary>
        /// The fifteenth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_15")] AdUnitIdLevel15 = 58,
        /// <summary>
        /// The sixteenth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_16")] AdUnitIdLevel16 = 60,
        /// <summary>
        /// The second level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_2")] AdUnitIdLevel2 = 32,
        /// <summary>
        /// The third level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_3")] AdUnitIdLevel3 = 34,
        /// <summary>
        /// The fourth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_4")] AdUnitIdLevel4 = 36,
        /// <summary>
        /// The fifth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_5")] AdUnitIdLevel5 = 38,
        /// <summary>
        /// The sixth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_6")] AdUnitIdLevel6 = 40,
        /// <summary>
        /// The seventh level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_7")] AdUnitIdLevel7 = 42,
        /// <summary>
        /// The eighth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_8")] AdUnitIdLevel8 = 44,
        /// <summary>
        /// The ninth level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_LEVEL_9")] AdUnitIdLevel9 = 46,
        /// <summary>
        /// The top-level ad unit ID of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_ID_TOP_LEVEL")] AdUnitIdTopLevel = 142,
        /// <summary>
        /// The name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME")] AdUnitName = 26,
        /// <summary>
        /// The full hierarchy of ad unit names where the ad was requested, from
        /// root to leaf, excluding the root ad unit name.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_ALL_LEVEL")] AdUnitNameAllLevel = 29,
        /// <summary>
        /// The first level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_1")] AdUnitNameLevel1 = 31,
        /// <summary>
        /// The tenth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_10")] AdUnitNameLevel10 = 49,
        /// <summary>
        /// The eleventh level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_11")] AdUnitNameLevel11 = 51,
        /// <summary>
        /// The twelfth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_12")] AdUnitNameLevel12 = 53,
        /// <summary>
        /// The thirteenth level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_13")] AdUnitNameLevel13 = 55,
        /// <summary>
        /// The fourteenth level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_14")] AdUnitNameLevel14 = 57,
        /// <summary>
        /// The fifteenth level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_15")] AdUnitNameLevel15 = 59,
        /// <summary>
        /// The sixteenth level ad unit name of the ad unit where the ad was
        /// requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_16")] AdUnitNameLevel16 = 61,
        /// <summary>
        /// The second level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_2")] AdUnitNameLevel2 = 33,
        /// <summary>
        /// The third level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_3")] AdUnitNameLevel3 = 35,
        /// <summary>
        /// The fourth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_4")] AdUnitNameLevel4 = 37,
        /// <summary>
        /// The fifth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_5")] AdUnitNameLevel5 = 39,
        /// <summary>
        /// The sixth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_6")] AdUnitNameLevel6 = 41,
        /// <summary>
        /// The seventh level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_7")] AdUnitNameLevel7 = 43,
        /// <summary>
        /// The eighth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_8")] AdUnitNameLevel8 = 45,
        /// <summary>
        /// The ninth level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_LEVEL_9")] AdUnitNameLevel9 = 47,
        /// <summary>
        /// The top-level ad unit name of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_NAME_TOP_LEVEL")] AdUnitNameTopLevel = 143,
        /// <summary>
        /// The reward amount of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_REWARD_AMOUNT")] AdUnitRewardAmount = 63,
        /// <summary>
        /// The reward type of the ad unit where the ad was requested.
        /// </summary>
        [pbr::OriginalName("AD_UNIT_REWARD_TYPE")] AdUnitRewardType = 62,
        /// <summary>
        /// The status of the ad unit
        /// </summary>
        [pbr::OriginalName("AD_UNIT_STATUS")] AdUnitStatus = 206,
        /// <summary>
        /// The name of the status of the ad unit
        /// </summary>
        [pbr::OriginalName("AD_UNIT_STATUS_NAME")] AdUnitStatusName = 207,
        /// <summary>
        /// The app version.
        /// </summary>
        [pbr::OriginalName("APP_VERSION")] AppVersion = 392,
        /// <summary>
        /// The ID used in an external system for advertiser identification
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_EXTERNAL_ID")] BackfillAdvertiserExternalId = 349,
        /// <summary>
        /// The ID of an advertiser company assigned to a backfill order
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_ID")] BackfillAdvertiserId = 346,
        /// <summary>
        /// Labels applied to the advertiser
        /// can be used for either competitive exclusion or ad exclusion
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_LABELS")] BackfillAdvertiserLabels = 351,
        /// <summary>
        /// Label ids applied to the advertiser
        /// can be used for either competitive exclusion or ad exclusion
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_LABEL_IDS")] BackfillAdvertiserLabelIds = 350,
        /// <summary>
        /// The name of an advertiser company assigned to a backfill order
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_NAME")] BackfillAdvertiserName = 347,
        /// <summary>
        /// The name of the contact associated with an advertiser company
        /// </summary>
        [pbr::OriginalName("BACKFILL_ADVERTISER_PRIMARY_CONTACT")] BackfillAdvertiserPrimaryContact = 348,
        /// <summary>
        /// Enum value of Backfill creative billing type
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_BILLING_TYPE")] BackfillCreativeBillingType = 378,
        /// <summary>
        /// Localized string value of Backfill creative billing type
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_BILLING_TYPE_NAME")] BackfillCreativeBillingTypeName = 379,
        /// <summary>
        /// Represents the click-through URL of a Backfill creative
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CLICK_THROUGH_URL")] BackfillCreativeClickThroughUrl = 376,
        /// <summary>
        /// The ID of a Backfill creative
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_ID")] BackfillCreativeId = 370,
        /// <summary>
        /// Backfill creative name
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_NAME")] BackfillCreativeName = 371,
        /// <summary>
        /// Third party vendor name of a Backfill creative
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_THIRD_PARTY_VENDOR")] BackfillCreativeThirdPartyVendor = 377,
        /// <summary>
        /// Enum value of Backfill creative type
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_TYPE")] BackfillCreativeType = 374,
        /// <summary>
        /// Localized string name of Backfill creative type
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_TYPE_NAME")] BackfillCreativeTypeName = 375,
        /// <summary>
        /// Whether a Backfill line item is archived.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_ARCHIVED")] BackfillLineItemArchived = 278,
        /// <summary>
        /// Backfill line item comanion delivery option ENUM value.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COMPANION_DELIVERY_OPTION")] BackfillLineItemCompanionDeliveryOption = 258,
        /// <summary>
        /// Localized Backfill line item comanion delivery option name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COMPANION_DELIVERY_OPTION_NAME")] BackfillLineItemCompanionDeliveryOptionName = 259,
        /// <summary>
        /// The computed status of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COMPUTED_STATUS")] BackfillLineItemComputedStatus = 296,
        /// <summary>
        /// The localized name of the computed status of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COMPUTED_STATUS_NAME")] BackfillLineItemComputedStatusName = 297,
        /// <summary>
        /// The contracted units bought for the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CONTRACTED_QUANTITY")] BackfillLineItemContractedQuantity = 280,
        /// <summary>
        /// The cost per unit of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COST_PER_UNIT")] BackfillLineItemCostPerUnit = 272,
        /// <summary>
        /// Backfill line item cost type ENUM value.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COST_TYPE")] BackfillLineItemCostType = 264,
        /// <summary>
        /// Localized Backfill line item cost type name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_COST_TYPE_NAME")] BackfillLineItemCostTypeName = 265,
        /// <summary>
        /// Represent the end date of a Backfill creative associated with a Backfill
        /// line item
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CREATIVE_END_DATE")] BackfillLineItemCreativeEndDate = 381,
        /// <summary>
        /// The creative rotation type of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CREATIVE_ROTATION_TYPE")] BackfillLineItemCreativeRotationType = 290,
        /// <summary>
        /// The localized name of the creative rotation type of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CREATIVE_ROTATION_TYPE_NAME")] BackfillLineItemCreativeRotationTypeName = 291,
        /// <summary>
        /// Represent the start date of a Backfill creative associated with a
        /// Backfill line item
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CREATIVE_START_DATE")] BackfillLineItemCreativeStartDate = 380,
        /// <summary>
        /// The 3 letter currency code of the Backfill line item
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CURRENCY_CODE")] BackfillLineItemCurrencyCode = 288,
        /// <summary>
        /// The progress made for the delivery of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DELIVERY_INDICATOR")] BackfillLineItemDeliveryIndicator = 274,
        /// <summary>
        /// The delivery rate type of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DELIVERY_RATE_TYPE")] BackfillLineItemDeliveryRateType = 292,
        /// <summary>
        /// The localized name of the delivery rate type of the BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DELIVERY_RATE_TYPE_NAME")] BackfillLineItemDeliveryRateTypeName = 293,
        /// <summary>
        /// The discount of the BackfillLineItem in whole units in the
        /// BackfillLineItem's currency code, or if unspecified the Network's
        /// currency code.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DISCOUNT_ABSOLUTE")] BackfillLineItemDiscountAbsolute = 294,
        /// <summary>
        /// The discount of the BackfillLineItem in percentage.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_DISCOUNT_PERCENTAGE")] BackfillLineItemDiscountPercentage = 295,
        /// <summary>
        /// The end date of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_END_DATE")] BackfillLineItemEndDate = 267,
        /// <summary>
        /// The end date and time of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_END_DATE_TIME")] BackfillLineItemEndDateTime = 269,
        /// <summary>
        /// The ENUM value of the environment a Backfill line item is targeting.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_ENVIRONMENT_TYPE")] BackfillLineItemEnvironmentType = 302,
        /// <summary>
        /// The localized name of the environment a Backfill line item is targeting.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_ENVIRONMENT_TYPE_NAME")] BackfillLineItemEnvironmentTypeName = 257,
        /// <summary>
        /// The deal ID of the Backfill line item. Set for Programmatic Direct
        /// campaigns.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_EXTERNAL_DEAL_ID")] BackfillLineItemExternalDealId = 285,
        /// <summary>
        /// The external ID of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_EXTERNAL_ID")] BackfillLineItemExternalId = 273,
        /// <summary>
        /// The frequency cap of the Backfill line item (descriptive string).
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_FREQUENCY_CAP")] BackfillLineItemFrequencyCap = 303,
        /// <summary>
        /// Backfill line item ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_ID")] BackfillLineItemId = 298,
        /// <summary>
        /// The application that last modified the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_LAST_MODIFIED_BY_APP")] BackfillLineItemLastModifiedByApp = 289,
        /// <summary>
        /// The total number of clicks delivered of the lifetime of the Backfill line
        /// item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_LIFETIME_CLICKS")] BackfillLineItemLifetimeClicks = 283,
        /// <summary>
        /// The total number of impressions delivered over the lifetime of the
        /// Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_LIFETIME_IMPRESSIONS")] BackfillLineItemLifetimeImpressions = 282,
        /// <summary>
        /// The total number of viewable impressions delivered over the lifetime of
        /// the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_LIFETIME_VIEWABLE_IMPRESSIONS")] BackfillLineItemLifetimeViewableImpressions = 284,
        /// <summary>
        /// Whether or not the Backfill line item is Makegood. Makegood refers to
        /// free inventory offered to buyers to compensate for mistakes or
        /// under-delivery in the original campaigns.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_MAKEGOOD")] BackfillLineItemMakegood = 276,
        /// <summary>
        /// Backfill line item name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_NAME")] BackfillLineItemName = 299,
        /// <summary>
        /// The cost of booking for the Backfill line item (non-CPD).
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_NON_CPD_BOOKED_REVENUE")] BackfillLineItemNonCpdBookedRevenue = 286,
        /// <summary>
        /// Whether a Backfill line item is eligible for opitimization.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_OPTIMIZABLE")] BackfillLineItemOptimizable = 277,
        /// <summary>
        /// Goal type ENUM value of the primary goal of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIMARY_GOAL_TYPE")] BackfillLineItemPrimaryGoalType = 262,
        /// <summary>
        /// Localized goal type name of the primary goal of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIMARY_GOAL_TYPE_NAME")] BackfillLineItemPrimaryGoalTypeName = 263,
        /// <summary>
        /// Unit type ENUM value of the primary goal of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIMARY_GOAL_UNIT_TYPE")] BackfillLineItemPrimaryGoalUnitType = 260,
        /// <summary>
        /// Localized unit type name of the primary goal of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIMARY_GOAL_UNIT_TYPE_NAME")] BackfillLineItemPrimaryGoalUnitTypeName = 261,
        /// <summary>
        /// The priority of this Backfill line item as a value between 1 and 16.
        /// In general, a lower priority means more serving priority for the
        /// Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_PRIORITY")] BackfillLineItemPriority = 266,
        /// <summary>
        /// ENUM value describing the state of inventory reservation for the
        /// BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_RESERVATION_STATUS")] BackfillLineItemReservationStatus = 306,
        /// <summary>
        /// Localized string describing the state of inventory reservation for the
        /// BackfillLineItem.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_RESERVATION_STATUS_NAME")] BackfillLineItemReservationStatusName = 307,
        /// <summary>
        /// The start date of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_START_DATE")] BackfillLineItemStartDate = 268,
        /// <summary>
        /// The start date and time of the Backfill line item.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_START_DATE_TIME")] BackfillLineItemStartDateTime = 270,
        /// <summary>
        /// Backfill line item type ENUM value.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_TYPE")] BackfillLineItemType = 300,
        /// <summary>
        /// Localized Backfill line item type name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_TYPE_NAME")] BackfillLineItemTypeName = 301,
        /// <summary>
        /// Whether the Backfill line item end time and end date is set to
        /// effectively never end.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_UNLIMITED_END")] BackfillLineItemUnlimitedEnd = 271,
        /// <summary>
        /// The artificial cost per unit used by the Ad server to help rank
        /// inventory.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_VALUE_COST_PER_UNIT")] BackfillLineItemValueCostPerUnit = 275,
        /// <summary>
        /// The web property code used for dynamic allocation Backfill line items.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_WEB_PROPERTY_CODE")] BackfillLineItemWebPropertyCode = 287,
        /// <summary>
        /// The ID of Backfill creative, includes regular creatives, and master and
        /// companions in case of creative sets
        /// </summary>
        [pbr::OriginalName("BACKFILL_MASTER_COMPANION_CREATIVE_ID")] BackfillMasterCompanionCreativeId = 372,
        /// <summary>
        /// Name of Backfill creative, includes regular creatives, and master and
        /// companions in case of creative sets
        /// </summary>
        [pbr::OriginalName("BACKFILL_MASTER_COMPANION_CREATIVE_NAME")] BackfillMasterCompanionCreativeName = 373,
        /// <summary>
        /// Backfill order agency.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_AGENCY")] BackfillOrderAgency = 313,
        /// <summary>
        /// Backfill order agency ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_AGENCY_ID")] BackfillOrderAgencyId = 314,
        /// <summary>
        /// Backfill order booked CPC.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_BOOKED_CPC")] BackfillOrderBookedCpc = 315,
        /// <summary>
        /// Backfill order booked CPM.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_BOOKED_CPM")] BackfillOrderBookedCpm = 316,
        /// <summary>
        /// Backfill order delivery status ENUM value.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_DELIVERY_STATUS")] BackfillOrderDeliveryStatus = 340,
        /// <summary>
        /// Backfill order delivery status localized name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_DELIVERY_STATUS_NAME")] BackfillOrderDeliveryStatusName = 341,
        /// <summary>
        /// Backfill order end date.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_END_DATE")] BackfillOrderEndDate = 317,
        /// <summary>
        /// Backfill order end date and time.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_END_DATE_TIME")] BackfillOrderEndDateTime = 319,
        /// <summary>
        /// Backfill order external ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_EXTERNAL_ID")] BackfillOrderExternalId = 320,
        /// <summary>
        /// Backfill order id.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_ID")] BackfillOrderId = 338,
        /// <summary>
        /// Backfill order labels.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_LABELS")] BackfillOrderLabels = 334,
        /// <summary>
        /// Backfill order labels IDs.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_LABEL_IDS")] BackfillOrderLabelIds = 335,
        /// <summary>
        /// Backfill order lifetime clicks.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_LIFETIME_CLICKS")] BackfillOrderLifetimeClicks = 322,
        /// <summary>
        /// Backfill order lifetime impressions.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_LIFETIME_IMPRESSIONS")] BackfillOrderLifetimeImpressions = 323,
        /// <summary>
        /// Backfill order name.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_NAME")] BackfillOrderName = 339,
        /// <summary>
        /// Backfill order PO number.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_PO_NUMBER")] BackfillOrderPoNumber = 324,
        /// <summary>
        /// Whether the Backfill order is programmatic.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_PROGRAMMATIC")] BackfillOrderProgrammatic = 321,
        /// <summary>
        /// Backfill order sales person.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SALESPERSON")] BackfillOrderSalesperson = 325,
        /// <summary>
        /// Backfill order secondary sales people.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SECONDARY_SALESPEOPLE")] BackfillOrderSecondarySalespeople = 329,
        /// <summary>
        /// Backfill order secondary sales people ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SECONDARY_SALESPEOPLE_ID")] BackfillOrderSecondarySalespeopleId = 328,
        /// <summary>
        /// Backfill order secondary traffickers.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SECONDARY_TRAFFICKERS")] BackfillOrderSecondaryTraffickers = 331,
        /// <summary>
        /// Backfill order secondary traffickers ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_SECONDARY_TRAFFICKERS_ID")] BackfillOrderSecondaryTraffickersId = 330,
        /// <summary>
        /// Backfill order start date.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_START_DATE")] BackfillOrderStartDate = 332,
        /// <summary>
        /// Backfill order start date and time.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_START_DATE_TIME")] BackfillOrderStartDateTime = 333,
        /// <summary>
        /// Backfill order trafficker.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_TRAFFICKER")] BackfillOrderTrafficker = 326,
        /// <summary>
        /// Backfill order trafficker ID.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_TRAFFICKER_ID")] BackfillOrderTraffickerId = 327,
        /// <summary>
        /// Whether the Backfill order end time and end date is set to effectively
        /// never end.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_UNLIMITED_END")] BackfillOrderUnlimitedEnd = 318,
        /// <summary>
        /// The ID of the buyer on a backfill programmatic proposal.
        /// </summary>
        [pbr::OriginalName("BACKFILL_PROGRAMMATIC_BUYER_ID")] BackfillProgrammaticBuyerId = 336,
        /// <summary>
        /// The name of the buyer on a backfill programmatic proposal.
        /// </summary>
        [pbr::OriginalName("BACKFILL_PROGRAMMATIC_BUYER_NAME")] BackfillProgrammaticBuyerName = 337,
        /// <summary>
        /// The amount of information about the Publisher's page sent to the buyer
        /// who purchased the impressions.
        /// </summary>
        [pbr::OriginalName("BRANDING_TYPE")] BrandingType = 383,
        /// <summary>
        /// The localized version of branding type, the amount of information about
        /// the Publisher's page sent to the buyer who purchased the impressions.
        /// </summary>
        [pbr::OriginalName("BRANDING_TYPE_NAME")] BrandingTypeName = 384,
        /// <summary>
        /// Browser category.
        /// </summary>
        [pbr::OriginalName("BROWSER_CATEGORY")] BrowserCategory = 119,
        /// <summary>
        /// Browser category name.
        /// </summary>
        [pbr::OriginalName("BROWSER_CATEGORY_NAME")] BrowserCategoryName = 120,
        /// <summary>
        /// The ID of the browser.
        /// </summary>
        [pbr::OriginalName("BROWSER_ID")] BrowserId = 235,
        /// <summary>
        /// The name of the browser.
        /// </summary>
        [pbr::OriginalName("BROWSER_NAME")] BrowserName = 236,
        /// <summary>
        /// Mobile carrier ID.
        /// </summary>
        [pbr::OriginalName("CARRIER_ID")] CarrierId = 369,
        /// <summary>
        /// Name of the mobile carrier.
        /// </summary>
        [pbr::OriginalName("CARRIER_NAME")] CarrierName = 368,
        /// <summary>
        /// The ID of an advertiser, classified by Google, associated with a creative
        /// transacted
        /// </summary>
        [pbr::OriginalName("CLASSIFIED_ADVERTISER_ID")] ClassifiedAdvertiserId = 133,
        /// <summary>
        /// The name of an advertiser, classified by Google, associated with a
        /// creative transacted
        /// </summary>
        [pbr::OriginalName("CLASSIFIED_ADVERTISER_NAME")] ClassifiedAdvertiserName = 134,
        /// <summary>
        /// ID of the brand, as classified by Google,
        /// </summary>
        [pbr::OriginalName("CLASSIFIED_BRAND_ID")] ClassifiedBrandId = 243,
        /// <summary>
        /// Name of the brand, as classified by Google,
        /// </summary>
        [pbr::OriginalName("CLASSIFIED_BRAND_NAME")] ClassifiedBrandName = 244,
        /// <summary>
        /// ID of the video content served.
        /// </summary>
        [pbr::OriginalName("CONTENT_ID")] ContentId = 246,
        /// <summary>
        /// Name of the video content served.
        /// </summary>
        [pbr::OriginalName("CONTENT_NAME")] ContentName = 247,
        /// <summary>
        /// The criteria ID of the country in which the ad served.
        /// </summary>
        [pbr::OriginalName("COUNTRY_ID")] CountryId = 11,
        /// <summary>
        /// The name of the country in which the ad served.
        /// </summary>
        [pbr::OriginalName("COUNTRY_NAME")] CountryName = 12,
        /// <summary>
        /// Enum value of creative billing type
        /// </summary>
        [pbr::OriginalName("CREATIVE_BILLING_TYPE")] CreativeBillingType = 366,
        /// <summary>
        /// Localized string value of creative billing type
        /// </summary>
        [pbr::OriginalName("CREATIVE_BILLING_TYPE_NAME")] CreativeBillingTypeName = 367,
        /// <summary>
        /// Represents the click-through URL of a creative
        /// </summary>
        [pbr::OriginalName("CREATIVE_CLICK_THROUGH_URL")] CreativeClickThroughUrl = 174,
        /// <summary>
        /// The ID of a creative
        /// </summary>
        [pbr::OriginalName("CREATIVE_ID")] CreativeId = 138,
        /// <summary>
        /// Creative name
        /// </summary>
        [pbr::OriginalName("CREATIVE_NAME")] CreativeName = 139,
        /// <summary>
        /// Creative technology ENUM
        /// </summary>
        [pbr::OriginalName("CREATIVE_TECHNOLOGY")] CreativeTechnology = 148,
        /// <summary>
        /// Creative technology locallized name
        /// </summary>
        [pbr::OriginalName("CREATIVE_TECHNOLOGY_NAME")] CreativeTechnologyName = 149,
        /// <summary>
        /// Third party vendor name of a creative
        /// </summary>
        [pbr::OriginalName("CREATIVE_THIRD_PARTY_VENDOR")] CreativeThirdPartyVendor = 361,
        /// <summary>
        /// Enum value of creative type
        /// </summary>
        [pbr::OriginalName("CREATIVE_TYPE")] CreativeType = 344,
        /// <summary>
        /// Localized string name of creative type
        /// </summary>
        [pbr::OriginalName("CREATIVE_TYPE_NAME")] CreativeTypeName = 345,
        /// <summary>
        /// Breaks down reporting data by date.
        /// </summary>
        [pbr::OriginalName("DATE")] Date = 3,
        /// <summary>
        /// Breaks down reporting data by day of the week. Monday is 1 and 7 is
        /// Sunday.
        /// </summary>
        [pbr::OriginalName("DAY_OF_WEEK")] DayOfWeek = 4,
        /// <summary>
        /// Demand channel.
        /// </summary>
        [pbr::OriginalName("DEMAND_CHANNEL")] DemandChannel = 9,
        /// <summary>
        /// Demand channel name.
        /// </summary>
        [pbr::OriginalName("DEMAND_CHANNEL_NAME")] DemandChannelName = 10,
        /// <summary>
        /// Demand subchannel.
        /// </summary>
        [pbr::OriginalName("DEMAND_SUBCHANNEL")] DemandSubchannel = 22,
        /// <summary>
        /// Demand subchannel name.
        /// </summary>
        [pbr::OriginalName("DEMAND_SUBCHANNEL_NAME")] DemandSubchannelName = 23,
        /// <summary>
        /// The device on which an ad was served.
        /// </summary>
        [pbr::OriginalName("DEVICE")] Device = 226,
        /// <summary>
        /// The device category to which an ad is being targeted.
        /// </summary>
        [pbr::OriginalName("DEVICE_CATEGORY")] DeviceCategory = 15,
        /// <summary>
        /// The name of the category of device (smartphone, feature phone, tablet, or
        /// desktop) to which an ad is being targeted.
        /// </summary>
        [pbr::OriginalName("DEVICE_CATEGORY_NAME")] DeviceCategoryName = 16,
        /// <summary>
        /// The localized name of the device on which an ad was served.
        /// </summary>
        [pbr::OriginalName("DEVICE_NAME")] DeviceName = 225,
        /// <summary>
        /// ID of the yield partner as classified by Google
        /// </summary>
        [pbr::OriginalName("EXCHANGE_THIRD_PARTY_COMPANY_ID")] ExchangeThirdPartyCompanyId = 185,
        /// <summary>
        /// Name of the yield partner as classified by Google
        /// </summary>
        [pbr::OriginalName("EXCHANGE_THIRD_PARTY_COMPANY_NAME")] ExchangeThirdPartyCompanyName = 186,
        /// <summary>
        /// The ID of the first look pricing rule.
        /// </summary>
        [pbr::OriginalName("FIRST_LOOK_PRICING_RULE_ID")] FirstLookPricingRuleId = 248,
        /// <summary>
        /// The name of the first look pricing rule.
        /// </summary>
        [pbr::OriginalName("FIRST_LOOK_PRICING_RULE_NAME")] FirstLookPricingRuleName = 249,
        /// <summary>
        /// Breaks down reporting data by hour in one day.
        /// </summary>
        [pbr::OriginalName("HOUR")] Hour = 100,
        /// <summary>
        /// The interaction type of an ad.
        /// </summary>
        [pbr::OriginalName("INTERACTION_TYPE")] InteractionType = 223,
        /// <summary>
        /// The localized name of the interaction type of an ad.
        /// </summary>
        [pbr::OriginalName("INTERACTION_TYPE_NAME")] InteractionTypeName = 224,
        /// <summary>
        /// Inventory format.
        /// The format of the ad unit (e.g, banner) where the ad was requested.
        /// </summary>
        [pbr::OriginalName("INVENTORY_FORMAT")] InventoryFormat = 17,
        /// <summary>
        /// Inventory format name.
        /// The format of the ad unit (e.g, banner) where the ad was requested.
        /// </summary>
        [pbr::OriginalName("INVENTORY_FORMAT_NAME")] InventoryFormatName = 18,
        /// <summary>
        /// Inventory type.
        /// The kind of web page or device where the ad was requested.
        /// </summary>
        [pbr::OriginalName("INVENTORY_TYPE")] InventoryType = 19,
        /// <summary>
        /// Inventory type name.
        /// The kind of web page or device where the ad was requested.
        /// </summary>
        [pbr::OriginalName("INVENTORY_TYPE_NAME")] InventoryTypeName = 20,
        /// <summary>
        /// Whether traffic is Adx Direct.
        /// </summary>
        [pbr::OriginalName("IS_ADX_DIRECT")] IsAdxDirect = 382,
        /// <summary>
        /// Whether traffic is First Look.
        /// </summary>
        [pbr::OriginalName("IS_FIRST_LOOK_DEAL")] IsFirstLookDeal = 401,
        /// <summary>
        /// The Custom Targeting Value ID
        /// </summary>
        [pbr::OriginalName("KEY_VALUES_ID")] KeyValuesId = 214,
        /// <summary>
        /// The Custom Targeting Value formatted like &lt;key_name>=&lt;value_name>
        /// </summary>
        [pbr::OriginalName("KEY_VALUES_NAME")] KeyValuesName = 215,
        /// <summary>
        /// Whether a Line item is archived.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_ARCHIVED")] LineItemArchived = 188,
        /// <summary>
        /// Line item comanion delivery option ENUM value.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COMPANION_DELIVERY_OPTION")] LineItemCompanionDeliveryOption = 204,
        /// <summary>
        /// Localized line item comanion delivery option name.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COMPANION_DELIVERY_OPTION_NAME")] LineItemCompanionDeliveryOptionName = 205,
        /// <summary>
        /// The computed status of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COMPUTED_STATUS")] LineItemComputedStatus = 250,
        /// <summary>
        /// The localized name of the computed status of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COMPUTED_STATUS_NAME")] LineItemComputedStatusName = 251,
        /// <summary>
        /// The contracted units bought for the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CONTRACTED_QUANTITY")] LineItemContractedQuantity = 92,
        /// <summary>
        /// The cost per unit of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COST_PER_UNIT")] LineItemCostPerUnit = 85,
        /// <summary>
        /// Line item cost type ENUM value.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COST_TYPE")] LineItemCostType = 212,
        /// <summary>
        /// Localized line item cost type name.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_COST_TYPE_NAME")] LineItemCostTypeName = 213,
        /// <summary>
        /// Represent the end date of a creative associated with line item
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CREATIVE_END_DATE")] LineItemCreativeEndDate = 176,
        /// <summary>
        /// The creative rotation type of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CREATIVE_ROTATION_TYPE")] LineItemCreativeRotationType = 189,
        /// <summary>
        /// The localized name of the creative rotation type of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CREATIVE_ROTATION_TYPE_NAME")] LineItemCreativeRotationTypeName = 190,
        /// <summary>
        /// Represent the start date of a creative associated with line item
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CREATIVE_START_DATE")] LineItemCreativeStartDate = 175,
        /// <summary>
        /// The 3 letter currency code of the Line Item
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CURRENCY_CODE")] LineItemCurrencyCode = 180,
        /// <summary>
        /// The progress made for the delivery of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DELIVERY_INDICATOR")] LineItemDeliveryIndicator = 87,
        /// <summary>
        /// The delivery rate type of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DELIVERY_RATE_TYPE")] LineItemDeliveryRateType = 191,
        /// <summary>
        /// The localized name of the delivery rate type of the LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DELIVERY_RATE_TYPE_NAME")] LineItemDeliveryRateTypeName = 192,
        /// <summary>
        /// The discount of the LineItem in whole units in the LineItem's currency
        /// code, or if unspecified the Network's currency code.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DISCOUNT_ABSOLUTE")] LineItemDiscountAbsolute = 195,
        /// <summary>
        /// The discount of the LineItem in percentage.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_DISCOUNT_PERCENTAGE")] LineItemDiscountPercentage = 196,
        /// <summary>
        /// The end date of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_END_DATE")] LineItemEndDate = 81,
        /// <summary>
        /// The end date and time of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_END_DATE_TIME")] LineItemEndDateTime = 83,
        /// <summary>
        /// The ENUM value of the environment a LineItem is targeting.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_ENVIRONMENT_TYPE")] LineItemEnvironmentType = 201,
        /// <summary>
        /// The localized name of the environment a LineItem is targeting.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_ENVIRONMENT_TYPE_NAME")] LineItemEnvironmentTypeName = 202,
        /// <summary>
        /// The deal ID of the Line item. Set for Programmatic Direct campaigns.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_EXTERNAL_DEAL_ID")] LineItemExternalDealId = 97,
        /// <summary>
        /// The external ID of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_EXTERNAL_ID")] LineItemExternalId = 86,
        /// <summary>
        /// The frequency cap of the Line item (descriptive string).
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_FREQUENCY_CAP")] LineItemFrequencyCap = 256,
        /// <summary>
        /// Line item ID.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_ID")] LineItemId = 1,
        /// <summary>
        /// The application that last modified the Line Item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_LAST_MODIFIED_BY_APP")] LineItemLastModifiedByApp = 181,
        /// <summary>
        /// The total number of clicks delivered of the lifetime of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_LIFETIME_CLICKS")] LineItemLifetimeClicks = 95,
        /// <summary>
        /// The total number of impressions delivered over the lifetime of the
        /// Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_LIFETIME_IMPRESSIONS")] LineItemLifetimeImpressions = 94,
        /// <summary>
        /// The total number of viewable impressions delivered over the lifetime of
        /// the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_LIFETIME_VIEWABLE_IMPRESSIONS")] LineItemLifetimeViewableImpressions = 96,
        /// <summary>
        /// Whether or not the Line item is Makegood. Makegood refers to free
        /// inventory offered to buyers to compensate for mistakes or under-delivery
        /// in the original campaigns.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_MAKEGOOD")] LineItemMakegood = 89,
        /// <summary>
        /// Line item Name.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_NAME")] LineItemName = 2,
        /// <summary>
        /// The cost of booking for the Line item (non-CPD).
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_NON_CPD_BOOKED_REVENUE")] LineItemNonCpdBookedRevenue = 98,
        /// <summary>
        /// Whether a Line item is eligible for opitimization.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_OPTIMIZABLE")] LineItemOptimizable = 90,
        /// <summary>
        /// Goal type ENUM value of the primary goal of the line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_TYPE")] LineItemPrimaryGoalType = 210,
        /// <summary>
        /// Localized goal type name of the primary goal of the line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_TYPE_NAME")] LineItemPrimaryGoalTypeName = 211,
        /// <summary>
        /// The total number of impressions or clicks that are reserved for a
        /// line item. For line items of type BULK or PRICE_PRIORITY, this represents
        /// the number of remaining impressions reserved. If the line item has an
        /// impression cap goal, this represents the number of impressions or
        /// conversions that the line item will stop serving at if reached.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_UNITS_ABSOLUTE")] LineItemPrimaryGoalUnitsAbsolute = 93,
        /// <summary>
        /// The percentage of impressions or clicks that are reserved for a
        /// line item. For line items of type SPONSORSHIP, this represents the
        /// percentage of available impressions reserved. For line items of type
        /// NETWORK or HOUSE, this represents the percentage of remaining impressions
        /// reserved.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_UNITS_PERCENTAGE")] LineItemPrimaryGoalUnitsPercentage = 396,
        /// <summary>
        /// Unit type ENUM value of the primary goal of the line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_UNIT_TYPE")] LineItemPrimaryGoalUnitType = 208,
        /// <summary>
        /// Localized unit type name of the primary goal of the line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIMARY_GOAL_UNIT_TYPE_NAME")] LineItemPrimaryGoalUnitTypeName = 209,
        /// <summary>
        /// The priority of this Line item as a value between 1 and 16.
        /// In general, a lower priority means more serving priority for the
        /// Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_PRIORITY")] LineItemPriority = 24,
        /// <summary>
        /// ENUM value describing the state of inventory reservation for the
        /// LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_RESERVATION_STATUS")] LineItemReservationStatus = 304,
        /// <summary>
        /// Localized string describing the state of inventory reservation for the
        /// LineItem.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_RESERVATION_STATUS_NAME")] LineItemReservationStatusName = 305,
        /// <summary>
        /// The start date of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_START_DATE")] LineItemStartDate = 82,
        /// <summary>
        /// The start date and time of the Line item.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_START_DATE_TIME")] LineItemStartDateTime = 84,
        /// <summary>
        /// Line item type ENUM value.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_TYPE")] LineItemType = 193,
        /// <summary>
        /// Localized line item type name.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_TYPE_NAME")] LineItemTypeName = 194,
        /// <summary>
        /// Whether the Line item end time and end date is set to effectively never
        /// end.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_UNLIMITED_END")] LineItemUnlimitedEnd = 187,
        /// <summary>
        /// The artificial cost per unit used by the Ad server to help rank
        /// inventory.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_VALUE_COST_PER_UNIT")] LineItemValueCostPerUnit = 88,
        /// <summary>
        /// The web property code used for dynamic allocation Line Items.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_WEB_PROPERTY_CODE")] LineItemWebPropertyCode = 179,
        /// <summary>
        /// The ID of creative, includes regular creatives, and master and companions
        /// in case of creative sets
        /// </summary>
        [pbr::OriginalName("MASTER_COMPANION_CREATIVE_ID")] MasterCompanionCreativeId = 140,
        /// <summary>
        /// Name of creative, includes regular creatives, and master and companions
        /// in case of creative sets
        /// </summary>
        [pbr::OriginalName("MASTER_COMPANION_CREATIVE_NAME")] MasterCompanionCreativeName = 141,
        /// <summary>
        /// Whether the mobile app is free.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_FREE")] MobileAppFree = 128,
        /// <summary>
        /// URL of app icon for the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_ICON_URL")] MobileAppIconUrl = 129,
        /// <summary>
        /// The ID of the Mobile App.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_ID")] MobileAppId = 123,
        /// <summary>
        /// The name of the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_NAME")] MobileAppName = 127,
        /// <summary>
        /// Ownership status of the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_OWNERSHIP_STATUS")] MobileAppOwnershipStatus = 311,
        /// <summary>
        /// Ownership status of the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_OWNERSHIP_STATUS_NAME")] MobileAppOwnershipStatusName = 312,
        /// <summary>
        /// The App Store of the mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_STORE")] MobileAppStore = 125,
        /// <summary>
        /// The localized name of the mobile app store.
        /// </summary>
        [pbr::OriginalName("MOBILE_APP_STORE_NAME")] MobileAppStoreName = 245,
        /// <summary>
        /// Mobile inventory type.
        /// Identifies whether a mobile ad came from a regular web page, an AMP web
        /// page, or a mobile app.
        /// Values match the Inventory type dimension available in the Overview Home
        /// dashboard. Note: Video takes precedence over any other value, for
        /// example, if there is an in-stream video impression on a desktop device,
        /// it will be attributed to in-stream video and not desktop web.
        /// </summary>
        [pbr::OriginalName("MOBILE_INVENTORY_TYPE")] MobileInventoryType = 99,
        /// <summary>
        /// Mobile inventory type name.
        /// Identifies whether a mobile ad came from a regular web page, an AMP web
        /// page, or a mobile app.
        /// </summary>
        [pbr::OriginalName("MOBILE_INVENTORY_TYPE_NAME")] MobileInventoryTypeName = 21,
        /// <summary>
        /// SDK version of the mobile device.
        /// </summary>
        [pbr::OriginalName("MOBILE_SDK_VERSION_NAME")] MobileSdkVersionName = 130,
        /// <summary>
        /// Breaks down reporting data by month and year.
        /// </summary>
        [pbr::OriginalName("MONTH_YEAR")] MonthYear = 6,
        /// <summary>
        /// Native ad format ID.
        /// </summary>
        [pbr::OriginalName("NATIVE_AD_FORMAT_ID")] NativeAdFormatId = 255,
        /// <summary>
        /// Native ad format name.
        /// </summary>
        [pbr::OriginalName("NATIVE_AD_FORMAT_NAME")] NativeAdFormatName = 254,
        /// <summary>
        /// Native style ID.
        /// </summary>
        [pbr::OriginalName("NATIVE_STYLE_ID")] NativeStyleId = 253,
        /// <summary>
        /// Native style name.
        /// </summary>
        [pbr::OriginalName("NATIVE_STYLE_NAME")] NativeStyleName = 252,
        /// <summary>
        /// Operating system category.
        /// </summary>
        [pbr::OriginalName("OPERATING_SYSTEM_CATEGORY")] OperatingSystemCategory = 117,
        /// <summary>
        /// Operating system category name.
        /// </summary>
        [pbr::OriginalName("OPERATING_SYSTEM_CATEGORY_NAME")] OperatingSystemCategoryName = 118,
        /// <summary>
        /// ID of the operating system version.
        /// </summary>
        [pbr::OriginalName("OPERATING_SYSTEM_VERSION_ID")] OperatingSystemVersionId = 238,
        /// <summary>
        /// Details of the operating system, including version.
        /// </summary>
        [pbr::OriginalName("OPERATING_SYSTEM_VERSION_NAME")] OperatingSystemVersionName = 237,
        /// <summary>
        /// Order agency.
        /// </summary>
        [pbr::OriginalName("ORDER_AGENCY")] OrderAgency = 150,
        /// <summary>
        /// Order agency ID.
        /// </summary>
        [pbr::OriginalName("ORDER_AGENCY_ID")] OrderAgencyId = 151,
        /// <summary>
        /// Order booked CPC.
        /// </summary>
        [pbr::OriginalName("ORDER_BOOKED_CPC")] OrderBookedCpc = 152,
        /// <summary>
        /// Order booked CPM.
        /// </summary>
        [pbr::OriginalName("ORDER_BOOKED_CPM")] OrderBookedCpm = 153,
        /// <summary>
        /// Order delivery status ENUM value.
        /// </summary>
        [pbr::OriginalName("ORDER_DELIVERY_STATUS")] OrderDeliveryStatus = 231,
        /// <summary>
        /// Order delivery status localized name.
        /// </summary>
        [pbr::OriginalName("ORDER_DELIVERY_STATUS_NAME")] OrderDeliveryStatusName = 239,
        /// <summary>
        /// Order end date.
        /// </summary>
        [pbr::OriginalName("ORDER_END_DATE")] OrderEndDate = 154,
        /// <summary>
        /// Order end date and time.
        /// </summary>
        [pbr::OriginalName("ORDER_END_DATE_TIME")] OrderEndDateTime = 155,
        /// <summary>
        /// Order external ID.
        /// </summary>
        [pbr::OriginalName("ORDER_EXTERNAL_ID")] OrderExternalId = 156,
        /// <summary>
        /// Order id.
        /// </summary>
        [pbr::OriginalName("ORDER_ID")] OrderId = 7,
        /// <summary>
        /// Order labels.
        /// </summary>
        [pbr::OriginalName("ORDER_LABELS")] OrderLabels = 170,
        /// <summary>
        /// Order labels IDs.
        /// </summary>
        [pbr::OriginalName("ORDER_LABEL_IDS")] OrderLabelIds = 171,
        /// <summary>
        /// Order lifetime clicks.
        /// </summary>
        [pbr::OriginalName("ORDER_LIFETIME_CLICKS")] OrderLifetimeClicks = 158,
        /// <summary>
        /// Order lifetime impressions.
        /// </summary>
        [pbr::OriginalName("ORDER_LIFETIME_IMPRESSIONS")] OrderLifetimeImpressions = 159,
        /// <summary>
        /// Order name.
        /// </summary>
        [pbr::OriginalName("ORDER_NAME")] OrderName = 8,
        /// <summary>
        /// Order PO number.
        /// </summary>
        [pbr::OriginalName("ORDER_PO_NUMBER")] OrderPoNumber = 160,
        /// <summary>
        /// Whether the Order is programmatic.
        /// </summary>
        [pbr::OriginalName("ORDER_PROGRAMMATIC")] OrderProgrammatic = 157,
        /// <summary>
        /// Order sales person.
        /// </summary>
        [pbr::OriginalName("ORDER_SALESPERSON")] OrderSalesperson = 161,
        /// <summary>
        /// Order secondary sales people.
        /// </summary>
        [pbr::OriginalName("ORDER_SECONDARY_SALESPEOPLE")] OrderSecondarySalespeople = 164,
        /// <summary>
        /// Order secondary sales people ID.
        /// </summary>
        [pbr::OriginalName("ORDER_SECONDARY_SALESPEOPLE_ID")] OrderSecondarySalespeopleId = 165,
        /// <summary>
        /// Order secondary traffickers.
        /// </summary>
        [pbr::OriginalName("ORDER_SECONDARY_TRAFFICKERS")] OrderSecondaryTraffickers = 166,
        /// <summary>
        /// Order secondary traffickers ID.
        /// </summary>
        [pbr::OriginalName("ORDER_SECONDARY_TRAFFICKERS_ID")] OrderSecondaryTraffickersId = 167,
        /// <summary>
        /// Order start date.
        /// </summary>
        [pbr::OriginalName("ORDER_START_DATE")] OrderStartDate = 168,
        /// <summary>
        /// Order start date and time.
        /// </summary>
        [pbr::OriginalName("ORDER_START_DATE_TIME")] OrderStartDateTime = 169,
        /// <summary>
        /// Order trafficker.
        /// </summary>
        [pbr::OriginalName("ORDER_TRAFFICKER")] OrderTrafficker = 162,
        /// <summary>
        /// Order trafficker ID.
        /// </summary>
        [pbr::OriginalName("ORDER_TRAFFICKER_ID")] OrderTraffickerId = 163,
        /// <summary>
        /// Whether the Order end time and end date is set to effectively never
        /// end.
        /// </summary>
        [pbr::OriginalName("ORDER_UNLIMITED_END")] OrderUnlimitedEnd = 203,
        /// <summary>
        /// Placement ID
        /// </summary>
        [pbr::OriginalName("PLACEMENT_ID")] PlacementId = 113,
        /// <summary>
        /// The full list of placement IDs associated with the ad unit.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_ID_ALL")] PlacementIdAll = 144,
        /// <summary>
        /// Placement name
        /// </summary>
        [pbr::OriginalName("PLACEMENT_NAME")] PlacementName = 114,
        /// <summary>
        /// The full list of placement names associated with the ad unit.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_NAME_ALL")] PlacementNameAll = 145,
        /// <summary>
        /// Placement status ENUM value
        /// </summary>
        [pbr::OriginalName("PLACEMENT_STATUS")] PlacementStatus = 362,
        /// <summary>
        /// The full list of placement status ENUM values associated with the ad
        /// unit.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_STATUS_ALL")] PlacementStatusAll = 363,
        /// <summary>
        /// Localized placement status name.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_STATUS_NAME")] PlacementStatusName = 364,
        /// <summary>
        /// The full list of localized placement status names associated with the ad
        /// unit.
        /// </summary>
        [pbr::OriginalName("PLACEMENT_STATUS_NAME_ALL")] PlacementStatusNameAll = 365,
        /// <summary>
        /// The ID of the buyer on a programmatic proposal.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_BUYER_ID")] ProgrammaticBuyerId = 240,
        /// <summary>
        /// The name of the buyer on a programmatic proposal.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_BUYER_NAME")] ProgrammaticBuyerName = 241,
        /// <summary>
        /// Programmatic channel.
        /// The type of transaction that occurred in Ad Exchange.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_CHANNEL")] ProgrammaticChannel = 13,
        /// <summary>
        /// Programmatic channel name.
        /// The type of transaction that occurred in Ad Exchange.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_CHANNEL_NAME")] ProgrammaticChannelName = 14,
        /// <summary>
        /// The size of a rendered creative, It can differ with the creative's size
        /// if a creative is shown in an ad slot of a different size.
        /// </summary>
        [pbr::OriginalName("RENDERED_CREATIVE_SIZE")] RenderedCreativeSize = 343,
        /// <summary>
        /// Inventory Requested Ad Sizes dimension
        /// </summary>
        [pbr::OriginalName("REQUESTED_AD_SIZES")] RequestedAdSizes = 352,
        /// <summary>
        /// Request type ENUM
        /// </summary>
        [pbr::OriginalName("REQUEST_TYPE")] RequestType = 146,
        /// <summary>
        /// Request type locallized name
        /// </summary>
        [pbr::OriginalName("REQUEST_TYPE_NAME")] RequestTypeName = 147,
        /// <summary>
        /// Information about domain or subdomains.
        /// </summary>
        [pbr::OriginalName("SITE")] Site = 387,
        /// <summary>
        /// The ID of the browser, device or other environment into which a line item
        /// or creative was served.
        /// </summary>
        [pbr::OriginalName("TARGETING_ID")] TargetingId = 232,
        /// <summary>
        /// Information about the browser, device and other environments into which
        /// a line item or creative was served.
        /// </summary>
        [pbr::OriginalName("TARGETING_NAME")] TargetingName = 233,
        /// <summary>
        /// The way in which advertisers targeted their ads.
        /// </summary>
        [pbr::OriginalName("TARGETING_TYPE")] TargetingType = 385,
        /// <summary>
        /// The localized name of the way in which advertisers targeted their ads.
        /// </summary>
        [pbr::OriginalName("TARGETING_TYPE_NAME")] TargetingTypeName = 386,
        /// <summary>
        /// Inventory Traffic source dimension
        /// </summary>
        [pbr::OriginalName("TRAFFIC_SOURCE")] TrafficSource = 388,
        /// <summary>
        /// Inventory Traffic source dimension name
        /// </summary>
        [pbr::OriginalName("TRAFFIC_SOURCE_NAME")] TrafficSourceName = 389,
        /// <summary>
        /// Unified pricing rule ID dimension
        /// </summary>
        [pbr::OriginalName("UNIFIED_PRICING_RULE_ID")] UnifiedPricingRuleId = 393,
        /// <summary>
        /// Unified pricing rule name dimension
        /// </summary>
        [pbr::OriginalName("UNIFIED_PRICING_RULE_NAME")] UnifiedPricingRuleName = 394,
        /// <summary>
        /// The video placement enum as defined by ADCOM 1.0-202303.
        /// </summary>
        [pbr::OriginalName("VIDEO_PLCMT")] VideoPlcmt = 172,
        /// <summary>
        /// The localized name of the video placement as defined by ADCOM 1.0-202303.
        /// </summary>
        [pbr::OriginalName("VIDEO_PLCMT_NAME")] VideoPlcmtName = 173,
        /// <summary>
        /// Breaks down reporting data by week of the year.
        /// </summary>
        [pbr::OriginalName("WEEK")] Week = 5,
        /// <summary>
        /// Name of the company within a yield group
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_BUYER_NAME")] YieldGroupBuyerName = 184,
        /// <summary>
        /// ID of the group of ad networks or exchanges used for Mediation and Open
        /// Bidding
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_ID")] YieldGroupId = 182,
        /// <summary>
        /// Name of the group of ad networks or exchanges used for Mediation and Open
        /// Bidding
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_NAME")] YieldGroupName = 183,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_0_OPTION_ID")] LineItemCustomField0OptionId = 10000,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_1_OPTION_ID")] LineItemCustomField1OptionId = 10001,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_2_OPTION_ID")] LineItemCustomField2OptionId = 10002,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_3_OPTION_ID")] LineItemCustomField3OptionId = 10003,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_4_OPTION_ID")] LineItemCustomField4OptionId = 10004,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_5_OPTION_ID")] LineItemCustomField5OptionId = 10005,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_6_OPTION_ID")] LineItemCustomField6OptionId = 10006,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_7_OPTION_ID")] LineItemCustomField7OptionId = 10007,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_8_OPTION_ID")] LineItemCustomField8OptionId = 10008,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_9_OPTION_ID")] LineItemCustomField9OptionId = 10009,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_10_OPTION_ID")] LineItemCustomField10OptionId = 10010,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_11_OPTION_ID")] LineItemCustomField11OptionId = 10011,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_12_OPTION_ID")] LineItemCustomField12OptionId = 10012,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_13_OPTION_ID")] LineItemCustomField13OptionId = 10013,
        /// <summary>
        /// Custom field option ID for Line Item with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_14_OPTION_ID")] LineItemCustomField14OptionId = 10014,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_0_VALUE")] LineItemCustomField0Value = 11000,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_1_VALUE")] LineItemCustomField1Value = 11001,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_2_VALUE")] LineItemCustomField2Value = 11002,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_3_VALUE")] LineItemCustomField3Value = 11003,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_4_VALUE")] LineItemCustomField4Value = 11004,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_5_VALUE")] LineItemCustomField5Value = 11005,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_6_VALUE")] LineItemCustomField6Value = 11006,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_7_VALUE")] LineItemCustomField7Value = 11007,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_8_VALUE")] LineItemCustomField8Value = 11008,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_9_VALUE")] LineItemCustomField9Value = 11009,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_10_VALUE")] LineItemCustomField10Value = 11010,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_11_VALUE")] LineItemCustomField11Value = 11011,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_12_VALUE")] LineItemCustomField12Value = 11012,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_13_VALUE")] LineItemCustomField13Value = 11013,
        /// <summary>
        /// Custom field value for Line Item with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("LINE_ITEM_CUSTOM_FIELD_14_VALUE")] LineItemCustomField14Value = 11014,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_0_OPTION_ID")] OrderCustomField0OptionId = 12000,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_1_OPTION_ID")] OrderCustomField1OptionId = 12001,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_2_OPTION_ID")] OrderCustomField2OptionId = 12002,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_3_OPTION_ID")] OrderCustomField3OptionId = 12003,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_4_OPTION_ID")] OrderCustomField4OptionId = 12004,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_5_OPTION_ID")] OrderCustomField5OptionId = 12005,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_6_OPTION_ID")] OrderCustomField6OptionId = 12006,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_7_OPTION_ID")] OrderCustomField7OptionId = 12007,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_8_OPTION_ID")] OrderCustomField8OptionId = 12008,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_9_OPTION_ID")] OrderCustomField9OptionId = 12009,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_10_OPTION_ID")] OrderCustomField10OptionId = 12010,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_11_OPTION_ID")] OrderCustomField11OptionId = 12011,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_12_OPTION_ID")] OrderCustomField12OptionId = 12012,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_13_OPTION_ID")] OrderCustomField13OptionId = 12013,
        /// <summary>
        /// Custom field option ID for Order with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_14_OPTION_ID")] OrderCustomField14OptionId = 12014,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_0_VALUE")] OrderCustomField0Value = 13000,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_1_VALUE")] OrderCustomField1Value = 13001,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_2_VALUE")] OrderCustomField2Value = 13002,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_3_VALUE")] OrderCustomField3Value = 13003,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_4_VALUE")] OrderCustomField4Value = 13004,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_5_VALUE")] OrderCustomField5Value = 13005,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_6_VALUE")] OrderCustomField6Value = 13006,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_7_VALUE")] OrderCustomField7Value = 13007,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_8_VALUE")] OrderCustomField8Value = 13008,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_9_VALUE")] OrderCustomField9Value = 13009,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_10_VALUE")] OrderCustomField10Value = 13010,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_11_VALUE")] OrderCustomField11Value = 13011,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_12_VALUE")] OrderCustomField12Value = 13012,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_13_VALUE")] OrderCustomField13Value = 13013,
        /// <summary>
        /// Custom field value for Order with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("ORDER_CUSTOM_FIELD_14_VALUE")] OrderCustomField14Value = 13014,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_0_OPTION_ID")] CreativeCustomField0OptionId = 14000,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_1_OPTION_ID")] CreativeCustomField1OptionId = 14001,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_2_OPTION_ID")] CreativeCustomField2OptionId = 14002,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_3_OPTION_ID")] CreativeCustomField3OptionId = 14003,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_4_OPTION_ID")] CreativeCustomField4OptionId = 14004,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_5_OPTION_ID")] CreativeCustomField5OptionId = 14005,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_6_OPTION_ID")] CreativeCustomField6OptionId = 14006,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_7_OPTION_ID")] CreativeCustomField7OptionId = 14007,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_8_OPTION_ID")] CreativeCustomField8OptionId = 14008,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_9_OPTION_ID")] CreativeCustomField9OptionId = 14009,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_10_OPTION_ID")] CreativeCustomField10OptionId = 14010,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_11_OPTION_ID")] CreativeCustomField11OptionId = 14011,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_12_OPTION_ID")] CreativeCustomField12OptionId = 14012,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_13_OPTION_ID")] CreativeCustomField13OptionId = 14013,
        /// <summary>
        /// Custom field option ID for Creative with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_14_OPTION_ID")] CreativeCustomField14OptionId = 14014,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 0 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_0_VALUE")] CreativeCustomField0Value = 15000,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 1 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_1_VALUE")] CreativeCustomField1Value = 15001,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 2 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_2_VALUE")] CreativeCustomField2Value = 15002,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 3 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_3_VALUE")] CreativeCustomField3Value = 15003,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 4 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_4_VALUE")] CreativeCustomField4Value = 15004,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 5 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_5_VALUE")] CreativeCustomField5Value = 15005,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 6 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_6_VALUE")] CreativeCustomField6Value = 15006,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 7 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_7_VALUE")] CreativeCustomField7Value = 15007,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 8 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_8_VALUE")] CreativeCustomField8Value = 15008,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 9 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_9_VALUE")] CreativeCustomField9Value = 15009,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 10 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_10_VALUE")] CreativeCustomField10Value = 15010,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 11 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_11_VALUE")] CreativeCustomField11Value = 15011,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 12 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_12_VALUE")] CreativeCustomField12Value = 15012,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 13 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_13_VALUE")] CreativeCustomField13Value = 15013,
        /// <summary>
        /// Custom field value for Creative with custom field ID equal to the ID
        /// in index 14 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("CREATIVE_CUSTOM_FIELD_14_VALUE")] CreativeCustomField14Value = 15014,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 0 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_0_OPTION_ID")] BackfillLineItemCustomField0OptionId = 16000,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 1 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_1_OPTION_ID")] BackfillLineItemCustomField1OptionId = 16001,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 2 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_2_OPTION_ID")] BackfillLineItemCustomField2OptionId = 16002,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 3 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_3_OPTION_ID")] BackfillLineItemCustomField3OptionId = 16003,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 4 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_4_OPTION_ID")] BackfillLineItemCustomField4OptionId = 16004,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 5 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_5_OPTION_ID")] BackfillLineItemCustomField5OptionId = 16005,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 6 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_6_OPTION_ID")] BackfillLineItemCustomField6OptionId = 16006,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 7 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_7_OPTION_ID")] BackfillLineItemCustomField7OptionId = 16007,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 8 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_8_OPTION_ID")] BackfillLineItemCustomField8OptionId = 16008,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 9 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_9_OPTION_ID")] BackfillLineItemCustomField9OptionId = 16009,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 10 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_10_OPTION_ID")] BackfillLineItemCustomField10OptionId = 16010,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 11 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_11_OPTION_ID")] BackfillLineItemCustomField11OptionId = 16011,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 12 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_12_OPTION_ID")] BackfillLineItemCustomField12OptionId = 16012,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 13 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_13_OPTION_ID")] BackfillLineItemCustomField13OptionId = 16013,
        /// <summary>
        /// Custom field option ID for Backfill line item with custom field ID equal
        /// to the ID in index 14 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_14_OPTION_ID")] BackfillLineItemCustomField14OptionId = 16014,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 0 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_0_VALUE")] BackfillLineItemCustomField0Value = 17000,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 1 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_1_VALUE")] BackfillLineItemCustomField1Value = 17001,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 2 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_2_VALUE")] BackfillLineItemCustomField2Value = 17002,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 3 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_3_VALUE")] BackfillLineItemCustomField3Value = 17003,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 4 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_4_VALUE")] BackfillLineItemCustomField4Value = 17004,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 5 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_5_VALUE")] BackfillLineItemCustomField5Value = 17005,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 6 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_6_VALUE")] BackfillLineItemCustomField6Value = 17006,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 7 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_7_VALUE")] BackfillLineItemCustomField7Value = 17007,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 8 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_8_VALUE")] BackfillLineItemCustomField8Value = 17008,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 9 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_9_VALUE")] BackfillLineItemCustomField9Value = 17009,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 10 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_10_VALUE")] BackfillLineItemCustomField10Value = 17010,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 11 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_11_VALUE")] BackfillLineItemCustomField11Value = 17011,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 12 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_12_VALUE")] BackfillLineItemCustomField12Value = 17012,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 13 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_13_VALUE")] BackfillLineItemCustomField13Value = 17013,
        /// <summary>
        /// Custom field value for Backfill line item with custom field ID equal to
        /// the ID in index 14 of `ReportDefinition.line_item_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_LINE_ITEM_CUSTOM_FIELD_14_VALUE")] BackfillLineItemCustomField14Value = 17014,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 0 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_0_OPTION_ID")] BackfillOrderCustomField0OptionId = 18000,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 1 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_1_OPTION_ID")] BackfillOrderCustomField1OptionId = 18001,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 2 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_2_OPTION_ID")] BackfillOrderCustomField2OptionId = 18002,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 3 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_3_OPTION_ID")] BackfillOrderCustomField3OptionId = 18003,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 4 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_4_OPTION_ID")] BackfillOrderCustomField4OptionId = 18004,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 5 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_5_OPTION_ID")] BackfillOrderCustomField5OptionId = 18005,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 6 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_6_OPTION_ID")] BackfillOrderCustomField6OptionId = 18006,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 7 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_7_OPTION_ID")] BackfillOrderCustomField7OptionId = 18007,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 8 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_8_OPTION_ID")] BackfillOrderCustomField8OptionId = 18008,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 9 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_9_OPTION_ID")] BackfillOrderCustomField9OptionId = 18009,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 10 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_10_OPTION_ID")] BackfillOrderCustomField10OptionId = 18010,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 11 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_11_OPTION_ID")] BackfillOrderCustomField11OptionId = 18011,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 12 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_12_OPTION_ID")] BackfillOrderCustomField12OptionId = 18012,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 13 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_13_OPTION_ID")] BackfillOrderCustomField13OptionId = 18013,
        /// <summary>
        /// Custom field option ID for Backfill order with custom field ID equal to
        /// the ID in index 14 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_14_OPTION_ID")] BackfillOrderCustomField14OptionId = 18014,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 0 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_0_VALUE")] BackfillOrderCustomField0Value = 19000,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 1 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_1_VALUE")] BackfillOrderCustomField1Value = 19001,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 2 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_2_VALUE")] BackfillOrderCustomField2Value = 19002,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 3 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_3_VALUE")] BackfillOrderCustomField3Value = 19003,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 4 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_4_VALUE")] BackfillOrderCustomField4Value = 19004,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 5 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_5_VALUE")] BackfillOrderCustomField5Value = 19005,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 6 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_6_VALUE")] BackfillOrderCustomField6Value = 19006,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 7 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_7_VALUE")] BackfillOrderCustomField7Value = 19007,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 8 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_8_VALUE")] BackfillOrderCustomField8Value = 19008,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 9 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_9_VALUE")] BackfillOrderCustomField9Value = 19009,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 10 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_10_VALUE")] BackfillOrderCustomField10Value = 19010,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 11 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_11_VALUE")] BackfillOrderCustomField11Value = 19011,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 12 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_12_VALUE")] BackfillOrderCustomField12Value = 19012,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 13 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_13_VALUE")] BackfillOrderCustomField13Value = 19013,
        /// <summary>
        /// Custom field value for Backfill order with custom field ID equal to the
        /// ID in index 14 of `ReportDefinition.order_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_ORDER_CUSTOM_FIELD_14_VALUE")] BackfillOrderCustomField14Value = 19014,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 0 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_0_OPTION_ID")] BackfillCreativeCustomField0OptionId = 20000,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 1 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_1_OPTION_ID")] BackfillCreativeCustomField1OptionId = 20001,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 2 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_2_OPTION_ID")] BackfillCreativeCustomField2OptionId = 20002,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 3 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_3_OPTION_ID")] BackfillCreativeCustomField3OptionId = 20003,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 4 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_4_OPTION_ID")] BackfillCreativeCustomField4OptionId = 20004,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 5 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_5_OPTION_ID")] BackfillCreativeCustomField5OptionId = 20005,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 6 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_6_OPTION_ID")] BackfillCreativeCustomField6OptionId = 20006,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 7 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_7_OPTION_ID")] BackfillCreativeCustomField7OptionId = 20007,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 8 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_8_OPTION_ID")] BackfillCreativeCustomField8OptionId = 20008,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 9 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_9_OPTION_ID")] BackfillCreativeCustomField9OptionId = 20009,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 10 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_10_OPTION_ID")] BackfillCreativeCustomField10OptionId = 20010,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 11 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_11_OPTION_ID")] BackfillCreativeCustomField11OptionId = 20011,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 12 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_12_OPTION_ID")] BackfillCreativeCustomField12OptionId = 20012,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 13 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_13_OPTION_ID")] BackfillCreativeCustomField13OptionId = 20013,
        /// <summary>
        /// Custom field option ID for Backfill creative with custom field ID equal
        /// to the ID in index 14 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_14_OPTION_ID")] BackfillCreativeCustomField14OptionId = 20014,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 0 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_0_VALUE")] BackfillCreativeCustomField0Value = 21000,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 1 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_1_VALUE")] BackfillCreativeCustomField1Value = 21001,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 2 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_2_VALUE")] BackfillCreativeCustomField2Value = 21002,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 3 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_3_VALUE")] BackfillCreativeCustomField3Value = 21003,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 4 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_4_VALUE")] BackfillCreativeCustomField4Value = 21004,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 5 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_5_VALUE")] BackfillCreativeCustomField5Value = 21005,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 6 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_6_VALUE")] BackfillCreativeCustomField6Value = 21006,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 7 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_7_VALUE")] BackfillCreativeCustomField7Value = 21007,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 8 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_8_VALUE")] BackfillCreativeCustomField8Value = 21008,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 9 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_9_VALUE")] BackfillCreativeCustomField9Value = 21009,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 10 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_10_VALUE")] BackfillCreativeCustomField10Value = 21010,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 11 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_11_VALUE")] BackfillCreativeCustomField11Value = 21011,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 12 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_12_VALUE")] BackfillCreativeCustomField12Value = 21012,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 13 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_13_VALUE")] BackfillCreativeCustomField13Value = 21013,
        /// <summary>
        /// Custom field value for Backfill creative with custom field ID equal to
        /// the ID in index 14 of `ReportDefinition.creative_custom_field_ids`.
        /// </summary>
        [pbr::OriginalName("BACKFILL_CREATIVE_CUSTOM_FIELD_14_VALUE")] BackfillCreativeCustomField14Value = 21014,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 0 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_0_VALUE_ID")] CustomDimension0ValueId = 100000,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 1 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_1_VALUE_ID")] CustomDimension1ValueId = 100001,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 2 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_2_VALUE_ID")] CustomDimension2ValueId = 100002,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 3 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_3_VALUE_ID")] CustomDimension3ValueId = 100003,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 4 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_4_VALUE_ID")] CustomDimension4ValueId = 100004,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 5 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_5_VALUE_ID")] CustomDimension5ValueId = 100005,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 6 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_6_VALUE_ID")] CustomDimension6ValueId = 100006,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 9 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_7_VALUE_ID")] CustomDimension7ValueId = 100007,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 8 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_8_VALUE_ID")] CustomDimension8ValueId = 100008,
        /// <summary>
        /// Custom Dimension Value ID for Custom Dimension with key equal to the key
        /// in index 9 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_9_VALUE_ID")] CustomDimension9ValueId = 100009,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 0 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_0_VALUE")] CustomDimension0Value = 101000,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 1 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_1_VALUE")] CustomDimension1Value = 101001,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 2 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_2_VALUE")] CustomDimension2Value = 101002,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 3 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_3_VALUE")] CustomDimension3Value = 101003,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 4 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_4_VALUE")] CustomDimension4Value = 101004,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 5 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_5_VALUE")] CustomDimension5Value = 101005,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 6 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_6_VALUE")] CustomDimension6Value = 101006,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 7 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_7_VALUE")] CustomDimension7Value = 101007,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 8 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_8_VALUE")] CustomDimension8Value = 101008,
        /// <summary>
        /// Custom Dimension Value name for Custom Dimension with key equal to the
        /// id in index 9 of `ReportDefinition.custom_dimension_key_ids`.
        /// </summary>
        [pbr::OriginalName("CUSTOM_DIMENSION_9_VALUE")] CustomDimension9Value = 101009,
      }

      /// <summary>
      /// Reporting metrics.
      /// </summary>
      public enum Metric {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("METRIC_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Active View total average time in seconds that specific impressions are
        /// reported as being viewable.
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME")] ActiveViewAverageViewableTime = 61,
        /// <summary>
        /// Total number of impressions that were eligible to measure viewability.
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS")] ActiveViewEligibleImpressions = 58,
        /// <summary>
        /// The total number of impressions that were sampled and measured by active
        /// view.
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_MEASURABLE_IMPRESSIONS")] ActiveViewMeasurableImpressions = 57,
        /// <summary>
        /// The percentage of total impressions that were measurable by active view
        /// (out of all the total impressions sampled for active view).
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE")] ActiveViewMeasurableImpressionsRate = 60,
        /// <summary>
        /// The total number of impressions viewed on the user's screen.
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_VIEWABLE_IMPRESSIONS")] ActiveViewViewableImpressions = 56,
        /// <summary>
        /// The percentage of total impressions viewed on the user's screen (out of
        /// the total impressions measurable by active view).
        /// </summary>
        [pbr::OriginalName("ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE")] ActiveViewViewableImpressionsRate = 59,
        /// <summary>
        /// Active View AdSense average time in seconds that specific impressions are
        /// reported as being viewable.
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME")] AdsenseActiveViewAverageViewableTime = 73,
        /// <summary>
        /// Total number of impressions delivered by AdSense that were eligible to
        /// measure viewability.
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS")] AdsenseActiveViewEligibleImpressions = 70,
        /// <summary>
        /// The number of impressions delivered by AdSense that were sampled, and
        /// measurable by active view.
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS")] AdsenseActiveViewMeasurableImpressions = 69,
        /// <summary>
        /// The percentage of impressions delivered by AdSense that were measurable
        /// by active view (out of all AdSense impressions sampled for active view).
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE")] AdsenseActiveViewMeasurableImpressionsRate = 72,
        /// <summary>
        /// The number of impressions delivered by AdSense viewed on the user's
        /// screen.
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS")] AdsenseActiveViewViewableImpressions = 68,
        /// <summary>
        /// The percentage of impressions delivered by AdSense viewed on the user's
        /// screen (out of AdSense impressions measurable by active view).
        /// </summary>
        [pbr::OriginalName("ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE")] AdsenseActiveViewViewableImpressionsRate = 71,
        /// <summary>
        /// The average effective cost-per-thousand-impressions earned from the ads
        /// delivered by AdSense through line item dynamic allocation.
        /// </summary>
        [pbr::OriginalName("ADSENSE_AVERAGE_ECPM")] AdsenseAverageEcpm = 26,
        /// <summary>
        /// Number of clicks delivered by AdSense demand channel.
        /// </summary>
        [pbr::OriginalName("ADSENSE_CLICKS")] AdsenseClicks = 23,
        /// <summary>
        /// The ratio of impressions served by AdSense that resulted in users
        /// clicking on an ad. The clickthrough rate (CTR) is updated nightly. The
        /// AdSense CTR is calculated as: (AdSense clicks / AdSense impressions).
        /// </summary>
        [pbr::OriginalName("ADSENSE_CTR")] AdsenseCtr = 24,
        /// <summary>
        /// Total impressions delivered by AdSense.
        /// </summary>
        [pbr::OriginalName("ADSENSE_IMPRESSIONS")] AdsenseImpressions = 22,
        /// <summary>
        /// Ratio of clicks delivered by AdSense through line item dynamic allocation
        /// in relation to the total clicks delivered.
        /// </summary>
        [pbr::OriginalName("ADSENSE_PERCENT_CLICKS")] AdsensePercentClicks = 28,
        /// <summary>
        /// Ratio of impressions delivered by AdSense through line item dynamic
        /// allocation in relation to the total impressions delivered.
        /// </summary>
        [pbr::OriginalName("ADSENSE_PERCENT_IMPRESSIONS")] AdsensePercentImpressions = 27,
        /// <summary>
        /// Ratio of revenue generated by AdSense through line item dynamic
        /// allocation in relation to the total revenue.
        /// </summary>
        [pbr::OriginalName("ADSENSE_PERCENT_REVENUE")] AdsensePercentRevenue = 29,
        /// <summary>
        /// Ratio of revenue generated by AdSense through line item dynamic
        /// allocation in relation to the total revenue (excluding CPD).
        /// </summary>
        [pbr::OriginalName("ADSENSE_PERCENT_REVENUE_WITHOUT_CPD")] AdsensePercentRevenueWithoutCpd = 30,
        /// <summary>
        /// The total number of times that an AdSense ad is delivered.
        /// </summary>
        [pbr::OriginalName("ADSENSE_RESPONSES_SERVED")] AdsenseResponsesServed = 41,
        /// <summary>
        /// Revenue generated from AdSense through line item dynamic allocation,
        /// calculated in the network's currency and time zone.
        /// </summary>
        [pbr::OriginalName("ADSENSE_REVENUE")] AdsenseRevenue = 25,
        /// <summary>
        /// Active View AdExchange average time in seconds that specific impressions
        /// are reported as being viewable.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME")] AdExchangeActiveViewAverageViewableTime = 79,
        /// <summary>
        /// Total number of impressions delivered by Ad Exchange that were eligible
        /// to measure viewability.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS")] AdExchangeActiveViewEligibleImpressions = 76,
        /// <summary>
        /// The number of impressions delivered by Ad Exchange that were sampled, and
        /// measurable by active view.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS")] AdExchangeActiveViewMeasurableImpressions = 75,
        /// <summary>
        /// The percentage of impressions delivered by Ad Exchange that were
        /// measurable by active view (out of all Ad Exchange impressions sampled for
        /// active view).
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE")] AdExchangeActiveViewMeasurableImpressionsRate = 78,
        /// <summary>
        /// The number of impressions delivered by Ad Exchange viewed on the user's
        /// screen.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS")] AdExchangeActiveViewViewableImpressions = 74,
        /// <summary>
        /// The percentage of impressions delivered by Ad Exchange viewed on the
        /// user's screen (out of Ad Exchange impressions measurable by active view).
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE")] AdExchangeActiveViewViewableImpressionsRate = 77,
        /// <summary>
        /// The average effective cost-per-thousand-impressions earned from the ads
        /// delivered by Ad Exchange through line item dynamic allocation.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_AVERAGE_ECPM")] AdExchangeAverageEcpm = 18,
        /// <summary>
        /// Number of clicks delivered by the Ad Exchange.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_CLICKS")] AdExchangeClicks = 15,
        /// <summary>
        /// The ratio of impressions served by the Ad Exchange that resulted in users
        /// clicking on an ad. The clickthrough rate (CTR) is updated nightly. Ad
        /// Exchange CTR is calculated as: (Ad Exchange clicks / Ad Exchange
        /// impressions).
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_CTR")] AdExchangeCtr = 16,
        /// <summary>
        /// Total impressions delivered by the Ad Exchange.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_IMPRESSIONS")] AdExchangeImpressions = 14,
        /// <summary>
        /// Ratio of clicks delivered by Ad Exchange through line item dynamic
        /// allocation in relation to the total clicks delivered.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_PERCENT_CLICKS")] AdExchangePercentClicks = 20,
        /// <summary>
        /// Ratio of impressions delivered by Ad Exchange through line item dynamic
        /// allocation in relation to the total impressions delivered.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_PERCENT_IMPRESSIONS")] AdExchangePercentImpressions = 19,
        /// <summary>
        /// Ratio of revenue generated by Ad Exchange through line item dynamic
        /// allocation in relation to the total revenue.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_PERCENT_REVENUE")] AdExchangePercentRevenue = 21,
        /// <summary>
        /// Ratio of revenue generated by Ad Exchange through line item dynamic
        /// allocation in relation to the total revenue (excluding CPD).
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD")] AdExchangePercentRevenueWithoutCpd = 31,
        /// <summary>
        /// The total number of times that an Ad Exchange ad is delivered.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_RESPONSES_SERVED")] AdExchangeResponsesServed = 42,
        /// <summary>
        /// Revenue generated from the Ad Exchange through line item dynamic
        /// allocation, calculated in your network's currency and time zone.
        /// </summary>
        [pbr::OriginalName("AD_EXCHANGE_REVENUE")] AdExchangeRevenue = 17,
        /// <summary>
        /// The total number of times that an ad request is sent to the ad server
        /// including dynamic allocation.
        /// </summary>
        [pbr::OriginalName("AD_REQUESTS")] AdRequests = 38,
        /// <summary>
        /// Active View ad server average time in seconds that specific impressions
        /// are reported as being viewable.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME")] AdServerActiveViewAverageViewableTime = 67,
        /// <summary>
        /// Total number of impressions delivered by the ad server that were eligible
        /// to measure viewability.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS")] AdServerActiveViewEligibleImpressions = 64,
        /// <summary>
        /// The number of impressions delivered by the ad server that were sampled,
        /// and measurable by active view.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS")] AdServerActiveViewMeasurableImpressions = 63,
        /// <summary>
        /// The percentage of impressions delivered by the ad server that were
        /// measurable by active view (out of all the ad server impressions sampled
        /// for active view).
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE")] AdServerActiveViewMeasurableImpressionsRate = 66,
        /// <summary>
        /// The number of impressions delivered by the ad server viewed on the user's
        /// screen.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS")] AdServerActiveViewViewableImpressions = 62,
        /// <summary>
        /// The percentage of impressions delivered by the ad server viewed on the
        /// user's screen (out of the ad server impressions measurable by active
        /// view).
        /// </summary>
        [pbr::OriginalName("AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE")] AdServerActiveViewViewableImpressionsRate = 65,
        /// <summary>
        /// Average effective cost-per-thousand-impressions earned from the ads
        /// delivered by the Google Ad Manager server.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_AVERAGE_ECPM")] AdServerAverageEcpm = 34,
        /// <summary>
        /// Average effective cost-per-thousand-impressions earned from the ads
        /// delivered by the Google Ad Manager server, excluding CPD value.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD")] AdServerAverageEcpmWithoutCpd = 10,
        /// <summary>
        /// Total clicks served by the Google Ad Manager server. It usually takes
        /// about 30 minutes for new clicks to be recorded and added to the total
        /// displayed in reporting.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_CLICKS")] AdServerClicks = 7,
        /// <summary>
        /// CPD revenue earned, calculated in your network's currency, for
        /// the ads delivered by the Google Ad Manager server. Sum of all booked
        /// revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_CPD_REVENUE")] AdServerCpdRevenue = 32,
        /// <summary>
        /// Ratio of impressions served by the Google Ad Manager server that resulted
        /// in users clicking on an ad. The clickthrough rate (CTR) is updated
        /// nightly. The ad server CTR is calculated as: (Ad server clicks / Ad
        /// server impressions).
        /// </summary>
        [pbr::OriginalName("AD_SERVER_CTR")] AdServerCtr = 8,
        /// <summary>
        /// Total impressions delivered by the Ad Server.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_IMPRESSIONS")] AdServerImpressions = 6,
        /// <summary>
        /// Ratio of clicks delivered by the Google Ad Manager server in relation to
        /// the total clicks delivered.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_PERCENT_CLICKS")] AdServerPercentClicks = 12,
        /// <summary>
        /// Ratio of impressions delivered by the Google Ad Manager server in
        /// relation to the total impressions delivered.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_PERCENT_IMPRESSIONS")] AdServerPercentImpressions = 11,
        /// <summary>
        /// Ratio of revenue generated by the Google Ad Manager server in relation
        /// to the total revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_PERCENT_REVENUE")] AdServerPercentRevenue = 35,
        /// <summary>
        /// Ratio of revenue generated by the Google Ad Manager server (excluding
        /// CPD) in relation to the total revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD")] AdServerPercentRevenueWithoutCpd = 13,
        /// <summary>
        /// The total number of times that an ad is served by the ad server.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_RESPONSES_SERVED")] AdServerResponsesServed = 40,
        /// <summary>
        /// All CPM, CPC, and CPD revenue earned, calculated in your network's
        /// currency, for the ads delivered by the Google Ad Manager server.
        /// Sum of all booked revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_REVENUE")] AdServerRevenue = 33,
        /// <summary>
        /// Revenue (excluding CPD) earned, calculated in your network's currency,
        /// for the ads delivered by the Google Ad Manager server. Sum of all booked
        /// revenue.
        /// </summary>
        [pbr::OriginalName("AD_SERVER_REVENUE_WITHOUT_CPD")] AdServerRevenueWithoutCpd = 9,
        /// <summary>
        /// Number of winning bids received from Open Bidding buyers, even when the
        /// winning bid is placed at the end of a mediation for mobile apps chain.
        /// </summary>
        [pbr::OriginalName("AUCTIONS_WON")] AuctionsWon = 80,
        /// <summary>
        /// eCPM averaged across the Google Ad Manager server, AdSense,
        /// and Ad Exchange.
        /// </summary>
        [pbr::OriginalName("AVERAGE_ECPM")] AverageEcpm = 37,
        /// <summary>
        /// eCPM averaged across the Google Ad Manager server (excluding CPD),
        /// AdSense, and Ad Exchange.
        /// </summary>
        [pbr::OriginalName("AVERAGE_ECPM_WITHOUT_CPD")] AverageEcpmWithoutCpd = 5,
        /// <summary>
        /// Number of bids received from Open Bidding buyers, regardless of whether
        /// the returned bid competes in an auction.
        /// </summary>
        [pbr::OriginalName("BIDS")] Bids = 81,
        /// <summary>
        /// Number of bids received from Open Bidding buyers that competed in
        /// the auction.
        /// </summary>
        [pbr::OriginalName("BIDS_IN_AUCTION")] BidsInAuction = 82,
        /// <summary>
        /// Number of times a yield partner is asked to return bid to fill
        /// a yield group request.
        /// </summary>
        [pbr::OriginalName("CALLOUTS")] Callouts = 83,
        /// <summary>
        /// The number of times a user clicked on an ad.
        /// </summary>
        [pbr::OriginalName("CLICKS")] Clicks = 2,
        /// <summary>
        /// The total number of times that the code for an ad is served by the ad
        /// server including dynamic allocation.
        /// </summary>
        [pbr::OriginalName("CODE_SERVED_COUNT")] CodeServedCount = 44,
        /// <summary>
        /// For standard ads, your ad clickthrough rate (CTR) is the number of ad
        ///  clicks divided by the number of individual ad impressions expressed as a
        ///  fraction. Ad CTR = Clicks / Ad impressions.
        /// </summary>
        [pbr::OriginalName("CTR")] Ctr = 3,
        /// <summary>
        /// The number of coviewed impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS")] GoogleSoldAuctionCoviewedImpressions = 129,
        /// <summary>
        /// The number of auction impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_AUCTION_IMPRESSIONS")] GoogleSoldAuctionImpressions = 128,
        /// <summary>
        /// The number of coviewed impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_COVIEWED_IMPRESSIONS")] GoogleSoldCoviewedImpressions = 131,
        /// <summary>
        /// The number of impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_IMPRESSIONS")] GoogleSoldImpressions = 130,
        /// <summary>
        /// The number of coviewed impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS")] GoogleSoldReservationCoviewedImpressions = 127,
        /// <summary>
        /// The number of reservation impressions sold by Google in partner sales.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SOLD_RESERVATION_IMPRESSIONS")] GoogleSoldReservationImpressions = 126,
        /// <summary>
        /// Total impressions from the Google Ad Manager server, AdSense,
        /// Ad Exchange, and yield group partners.
        /// </summary>
        [pbr::OriginalName("IMPRESSIONS")] Impressions = 1,
        /// <summary>
        /// The number of filled pod requests (filled by partner or Google) in
        /// partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_FILLED_POD_REQUESTS")] PartnerSalesFilledPodRequests = 135,
        /// <summary>
        /// The percent of filled requests to total ad requests in
        /// partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_FILL_RATE")] PartnerSalesFillRate = 136,
        /// <summary>
        /// The percent of partner filled requests to total ad requests
        /// in partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_PARTNER_MATCH_RATE")] PartnerSalesPartnerMatchRate = 137,
        /// <summary>
        /// The number of queries eligible for partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_QUERIES")] PartnerSalesQueries = 132,
        /// <summary>
        /// The number of partner unfilled impressions in partner sales.
        /// If a pod request is not filled by partner but filled by Google, this
        /// metric will still count 1.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_UNFILLED_IMPRESSIONS")] PartnerSalesUnfilledImpressions = 133,
        /// <summary>
        /// The number of partner unmatched queries in partner sales.
        /// If an ad request is not filled by partner but filled by Google, this
        /// metric will still count 1.
        /// </summary>
        [pbr::OriginalName("PARTNER_SALES_UNMATCHED_QUERIES")] PartnerSalesUnmatchedQueries = 134,
        /// <summary>
        /// The number of code served sold by partner in partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SOLD_CODE_SERVED")] PartnerSoldCodeServed = 125,
        /// <summary>
        /// The number of coviewed impressions sold by partner in partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SOLD_COVIEWED_IMPRESSIONS")] PartnerSoldCoviewedImpressions = 124,
        /// <summary>
        /// The number of impressions sold by partner in partner sales.
        /// </summary>
        [pbr::OriginalName("PARTNER_SOLD_IMPRESSIONS")] PartnerSoldImpressions = 123,
        /// <summary>
        /// The total number of ad requests eligible for programmatic inventory,
        /// including Programmatic Guaranteed, Preferred Deals, backfill, and open
        /// auction.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_ELIGIBLE_AD_REQUESTS")] ProgrammaticEligibleAdRequests = 177,
        /// <summary>
        /// The number of programmatic responses served divided by the number of
        /// programmatic eligible ad requests. Includes Ad Exchange, Open Bidding,
        /// and Preferred Deals.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_MATCH_RATE")] ProgrammaticMatchRate = 178,
        /// <summary>
        /// Total number of ad responses served from programmatic demand sources.
        /// Includes Ad Exchange, Open Bidding, and Preferred Deals.
        ///
        /// Differs from AD_EXCHANGE_RESPONSES_SERVED, which doesn't include Open
        /// Bidding ad requests.
        /// </summary>
        [pbr::OriginalName("PROGRAMMATIC_RESPONSES_SERVED")] ProgrammaticResponsesServed = 176,
        /// <summary>
        /// The total number of times that an ad is served by the ad server including
        /// dynamic allocation.
        /// </summary>
        [pbr::OriginalName("RESPONSES_SERVED")] ResponsesServed = 39,
        /// <summary>
        /// Total amount of CPM, CPC, and CPD revenue based on the number of units
        /// served by the Google Ad Manager server, AdSense, Ad Exchange, and
        /// third-party Mediation networks.
        /// </summary>
        [pbr::OriginalName("REVENUE")] Revenue = 36,
        /// <summary>
        /// Total amount of revenue (excluding CPD) based on the number of units
        /// served by the Google Ad Manager server, AdSense, Ad Exchange, and
        /// third-party Mediation networks.
        /// </summary>
        [pbr::OriginalName("REVENUE_WITHOUT_CPD")] RevenueWithoutCpd = 4,
        /// <summary>
        /// Number of times a yield group buyer successfully returned a bid in
        /// response to a yield group callout.
        /// </summary>
        [pbr::OriginalName("SUCCESSFUL_RESPONSES")] SuccessfulResponses = 84,
        /// <summary>
        /// The total number of missed impressions due to the ad servers' inability
        /// to find ads to serve including dynamic allocation.
        /// </summary>
        [pbr::OriginalName("UNFILLED_IMPRESSIONS")] UnfilledImpressions = 45,
        /// <summary>
        /// The total number of times that an ad is not returned by the ad server.
        /// </summary>
        [pbr::OriginalName("UNMATCHED_AD_REQUESTS")] UnmatchedAdRequests = 43,
        /// <summary>
        /// Number of times an Offerwall message was shown to users.
        /// </summary>
        [pbr::OriginalName("USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN")] UserMessagesOfferwallMessagesShown = 121,
        /// <summary>
        /// The number of messages where the user gained an entitlement.
        /// </summary>
        [pbr::OriginalName("USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS")] UserMessagesOfferwallSuccessfulEngagements = 122,
        /// <summary>
        /// The number of user interactions with a video, on average, such as pause,
        /// full screen, mute, etc.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE")] VideoInteractionAverageInteractionRate = 92,
        /// <summary>
        /// The number of times a user collapses a video, either to its original size
        /// or to a different size.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_COLLAPSES")] VideoInteractionCollapses = 93,
        /// <summary>
        /// The number of times a user expands a video.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_EXPANDS")] VideoInteractionExpands = 95,
        /// <summary>
        /// The number of times ad clip played in full screen mode.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_FULL_SCREENS")] VideoInteractionFullScreens = 96,
        /// <summary>
        /// The number of times video player was in mute state during play of ad
        ///  clip.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_MUTES")] VideoInteractionMutes = 97,
        /// <summary>
        /// The number of times user paused ad clip.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_PAUSES")] VideoInteractionPauses = 98,
        /// <summary>
        /// The number of times the user unpaused the video.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_RESUMES")] VideoInteractionResumes = 99,
        /// <summary>
        /// The number of times a user rewinds the video.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_REWINDS")] VideoInteractionRewinds = 100,
        /// <summary>
        /// The number of times a user unmutes the video.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_UNMUTES")] VideoInteractionUnmutes = 101,
        /// <summary>
        /// The number of times a skippable video is skipped.
        /// </summary>
        [pbr::OriginalName("VIDEO_INTERACTION_VIDEO_SKIPS")] VideoInteractionVideoSkips = 102,
        /// <summary>
        /// The number of total creative serves in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_CREATIVE_SERVES")] VideoRealTimeCreativeServes = 139,
        /// <summary>
        /// The number of errors of type 100 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_100_COUNT")] VideoRealTimeError100Count = 143,
        /// <summary>
        /// The number of errors of type 101 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_101_COUNT")] VideoRealTimeError101Count = 144,
        /// <summary>
        /// The number of errors of type 102 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_102_COUNT")] VideoRealTimeError102Count = 145,
        /// <summary>
        /// The number of errors of type 200 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_200_COUNT")] VideoRealTimeError200Count = 146,
        /// <summary>
        /// The number of errors of type 201 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_201_COUNT")] VideoRealTimeError201Count = 147,
        /// <summary>
        /// The number of errors of type 202 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_202_COUNT")] VideoRealTimeError202Count = 148,
        /// <summary>
        /// The number of errors of type 203 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_203_COUNT")] VideoRealTimeError203Count = 149,
        /// <summary>
        /// The number of errors of type 300 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_300_COUNT")] VideoRealTimeError300Count = 150,
        /// <summary>
        /// The number of errors of type 301 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_301_COUNT")] VideoRealTimeError301Count = 151,
        /// <summary>
        /// The number of errors of type 302 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_302_COUNT")] VideoRealTimeError302Count = 152,
        /// <summary>
        /// The number of errors of type 303 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_303_COUNT")] VideoRealTimeError303Count = 153,
        /// <summary>
        /// The number of errors of type 400 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_400_COUNT")] VideoRealTimeError400Count = 154,
        /// <summary>
        /// The number of errors of type 401 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_401_COUNT")] VideoRealTimeError401Count = 155,
        /// <summary>
        /// The number of errors of type 402 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_402_COUNT")] VideoRealTimeError402Count = 156,
        /// <summary>
        /// The number of errors of type 403 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_403_COUNT")] VideoRealTimeError403Count = 157,
        /// <summary>
        /// The number of errors of type 405 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_405_COUNT")] VideoRealTimeError405Count = 158,
        /// <summary>
        /// The number of errors of type 406 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_406_COUNT")] VideoRealTimeError406Count = 159,
        /// <summary>
        /// The number of errors of type 407 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_407_COUNT")] VideoRealTimeError407Count = 160,
        /// <summary>
        /// The number of errors of type 408 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_408_COUNT")] VideoRealTimeError408Count = 161,
        /// <summary>
        /// The number of errors of type 409 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_409_COUNT")] VideoRealTimeError409Count = 162,
        /// <summary>
        /// The number of errors of type 410 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_410_COUNT")] VideoRealTimeError410Count = 163,
        /// <summary>
        /// The number of errors of type 500 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_500_COUNT")] VideoRealTimeError500Count = 164,
        /// <summary>
        /// The number of errors of type 501 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_501_COUNT")] VideoRealTimeError501Count = 165,
        /// <summary>
        /// The number of errors of type 502 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_502_COUNT")] VideoRealTimeError502Count = 166,
        /// <summary>
        /// The number of errors of type 503 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_503_COUNT")] VideoRealTimeError503Count = 167,
        /// <summary>
        /// The number of errors of type 600 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_600_COUNT")] VideoRealTimeError600Count = 168,
        /// <summary>
        /// The number of errors of type 601 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_601_COUNT")] VideoRealTimeError601Count = 169,
        /// <summary>
        /// The number of errors of type 602 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_602_COUNT")] VideoRealTimeError602Count = 170,
        /// <summary>
        /// The number of errors of type 603 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_603_COUNT")] VideoRealTimeError603Count = 171,
        /// <summary>
        /// The number of errors of type 604 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_604_COUNT")] VideoRealTimeError604Count = 172,
        /// <summary>
        /// The number of errors of type 900 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_900_COUNT")] VideoRealTimeError900Count = 173,
        /// <summary>
        /// The number of errors of type 901 in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_ERROR_901_COUNT")] VideoRealTimeError901Count = 174,
        /// <summary>
        /// The number of total impressions in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_IMPRESSIONS")] VideoRealTimeImpressions = 138,
        /// <summary>
        /// The number of matched queries in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_MATCHED_QUERIES")] VideoRealTimeMatchedQueries = 140,
        /// <summary>
        /// The number of all errors in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_TOTAL_ERROR_COUNT")] VideoRealTimeTotalErrorCount = 175,
        /// <summary>
        /// The number of total queries in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_TOTAL_QUERIES")] VideoRealTimeTotalQueries = 142,
        /// <summary>
        /// The number of unmatched queries in video realtime reporting.
        /// </summary>
        [pbr::OriginalName("VIDEO_REAL_TIME_UNMATCHED_QUERIES")] VideoRealTimeUnmatchedQueries = 141,
        /// <summary>
        /// Number of times that the publisher specified a video ad played
        /// automatically.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_AUTO_PLAYS")] VideoViewershipAutoPlays = 103,
        /// <summary>
        /// Average percentage of the video watched by users.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE")] VideoViewershipAverageViewRate = 104,
        /// <summary>
        /// Average time(seconds) users watched the video.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME")] VideoViewershipAverageViewTime = 105,
        /// <summary>
        /// Number of times that the publisher specified a video ad was clicked to
        /// play.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_CLICK_TO_PLAYS")] VideoViewershipClickToPlays = 106,
        /// <summary>
        /// The number of times the video played to completion.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_COMPLETES")] VideoViewershipCompletes = 107,
        /// <summary>
        /// Percentage of times the video played to the end.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_COMPLETION_RATE")] VideoViewershipCompletionRate = 108,
        /// <summary>
        /// The number of engaged views: ad is viewed to completion or for 30s,
        /// whichever comes first.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_ENGAGED_VIEWS")] VideoViewershipEngagedViews = 109,
        /// <summary>
        /// The number of times the video played to 25% of its length.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_FIRST_QUARTILES")] VideoViewershipFirstQuartiles = 110,
        /// <summary>
        /// The number of times the video reached its midpoint during play.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_MIDPOINTS")] VideoViewershipMidpoints = 111,
        /// <summary>
        /// The number of times a skip button is shown in video.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN")] VideoViewershipSkipButtonsShown = 112,
        /// <summary>
        /// The number of impressions where the video was played.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_STARTS")] VideoViewershipStarts = 113,
        /// <summary>
        /// The number of times the video played to 75% of its length.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_THIRD_QUARTILES")] VideoViewershipThirdQuartiles = 114,
        /// <summary>
        /// The number of times an error occurred, such as a VAST redirect error, a
        /// video playback error, or an invalid response error.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT")] VideoViewershipTotalErrorCount = 115,
        /// <summary>
        /// The percentage of video error count.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE")] VideoViewershipTotalErrorRate = 94,
        /// <summary>
        /// Duration of the video creative.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_VIDEO_LENGTH")] VideoViewershipVideoLength = 116,
        /// <summary>
        /// View-through rate represented as a percentage.
        /// </summary>
        [pbr::OriginalName("VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE")] VideoViewershipViewThroughRate = 117,
        /// <summary>
        /// The estimated net rate for yield groups or individual
        /// yield group partners.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_ESTIMATED_CPM")] YieldGroupEstimatedCpm = 88,
        /// <summary>
        /// Total net revenue earned by a yield group, based upon the yield group
        /// estimated CPM and yield group impressions recorded.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_ESTIMATED_REVENUE")] YieldGroupEstimatedRevenue = 87,
        /// <summary>
        /// Number of matched yield group requests where a yield partner delivered
        /// their ad to publisher inventory.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_IMPRESSIONS")] YieldGroupImpressions = 85,
        /// <summary>
        /// Yield group Mediation fill rate indicating how often a network
        /// fills an ad request.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_MEDIATION_FILL_RATE")] YieldGroupMediationFillRate = 89,
        /// <summary>
        /// Total requests where a Mediation chain was served.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_MEDIATION_MATCHED_QUERIES")] YieldGroupMediationMatchedQueries = 86,
        /// <summary>
        /// The number of mediation chain passback across all channels.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_MEDIATION_PASSBACKS")] YieldGroupMediationPassbacks = 118,
        /// <summary>
        /// Revenue per thousand impressions based on data collected by Ad Manager
        /// from third-party ad network reports.
        /// </summary>
        [pbr::OriginalName("YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM")] YieldGroupMediationThirdPartyEcpm = 90,
      }

      /// <summary>
      /// Possible metric value types to add.
      /// </summary>
      public enum MetricValueType {
        /// <summary>
        /// The values for the primary date_range.
        /// </summary>
        [pbr::OriginalName("PRIMARY")] Primary = 0,
        /// <summary>
        /// Each metrics' percent of the total for the primary date_range.
        /// </summary>
        [pbr::OriginalName("PRIMARY_PERCENT_OF_TOTAL")] PrimaryPercentOfTotal = 1,
        /// <summary>
        /// The values for the comparison_date_range.
        /// </summary>
        [pbr::OriginalName("COMPARISON")] Comparison = 2,
        /// <summary>
        /// Each metrics' percent of the total for the comparison_date_range.
        /// </summary>
        [pbr::OriginalName("COMPARISON_PERCENT_OF_TOTAL")] ComparisonPercentOfTotal = 3,
        /// <summary>
        /// The absolute change between the primary and comparison date ranges.
        /// </summary>
        [pbr::OriginalName("ABSOLUTE_CHANGE")] AbsoluteChange = 4,
        /// <summary>
        /// The relative change between the primary and comparison date ranges.
        /// </summary>
        [pbr::OriginalName("RELATIVE_CHANGE")] RelativeChange = 5,
      }

      /// <summary>
      /// Supported report types.
      /// </summary>
      public enum ReportType {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("REPORT_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Historical.
        /// </summary>
        [pbr::OriginalName("HISTORICAL")] Historical = 1,
      }

      /// <summary>
      /// The visibility of a report.
      /// </summary>
      public enum Visibility {
        /// <summary>
        /// Default value. Reports with hidden visibility will not appear in the Ad
        /// Manager UI.
        /// </summary>
        [pbr::OriginalName("HIDDEN")] Hidden = 0,
        /// <summary>
        /// Reports with draft visibility will appear in the Ad Manager UI only if
        /// the user has configured the UI to show them.
        /// </summary>
        [pbr::OriginalName("DRAFT")] Draft = 1,
        /// <summary>
        /// Reports with saved visibility will appear in the Ad Manager UI by
        /// default.
        /// </summary>
        [pbr::OriginalName("SAVED")] Saved = 2,
      }

      /// <summary>
      /// Represents a single value in a report.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Value : pb::IMessage<Value>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Value> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Value() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Value(Value other) : this() {
          switch (other.ValueCase) {
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.BoolValue:
              BoolValue = other.BoolValue;
              break;
            case ValueOneofCase.IntListValue:
              IntListValue = other.IntListValue.Clone();
              break;
            case ValueOneofCase.StringListValue:
              StringListValue = other.StringListValue.Clone();
              break;
            case ValueOneofCase.BytesValue:
              BytesValue = other.BytesValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Value Clone() {
          return new Value(this);
        }

        /// <summary>Field number for the "int_value" field.</summary>
        public const int IntValueFieldNumber = 1;
        /// <summary>
        /// For integer values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long IntValue {
          get { return HasIntValue ? (long) value_ : 0L; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.IntValue;
          }
        }
        /// <summary>Gets whether the "int_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIntValue {
          get { return valueCase_ == ValueOneofCase.IntValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "int_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIntValue() {
          if (HasIntValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "double_value" field.</summary>
        public const int DoubleValueFieldNumber = 2;
        /// <summary>
        /// For double values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double DoubleValue {
          get { return HasDoubleValue ? (double) value_ : 0D; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.DoubleValue;
          }
        }
        /// <summary>Gets whether the "double_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDoubleValue {
          get { return valueCase_ == ValueOneofCase.DoubleValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "double_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDoubleValue() {
          if (HasDoubleValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "string_value" field.</summary>
        public const int StringValueFieldNumber = 3;
        /// <summary>
        /// For string values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string StringValue {
          get { return HasStringValue ? (string) value_ : ""; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.StringValue;
          }
        }
        /// <summary>Gets whether the "string_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStringValue {
          get { return valueCase_ == ValueOneofCase.StringValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "string_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStringValue() {
          if (HasStringValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "bool_value" field.</summary>
        public const int BoolValueFieldNumber = 4;
        /// <summary>
        /// For boolean values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool BoolValue {
          get { return HasBoolValue ? (bool) value_ : false; }
          set {
            value_ = value;
            valueCase_ = ValueOneofCase.BoolValue;
          }
        }
        /// <summary>Gets whether the "bool_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBoolValue {
          get { return valueCase_ == ValueOneofCase.BoolValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "bool_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBoolValue() {
          if (HasBoolValue) {
            ClearValue();
          }
        }

        /// <summary>Field number for the "int_list_value" field.</summary>
        public const int IntListValueFieldNumber = 6;
        /// <summary>
        /// For lists of integer values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList IntListValue {
          get { return valueCase_ == ValueOneofCase.IntListValue ? (global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.IntListValue;
          }
        }

        /// <summary>Field number for the "string_list_value" field.</summary>
        public const int StringListValueFieldNumber = 7;
        /// <summary>
        /// For lists of string values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList StringListValue {
          get { return valueCase_ == ValueOneofCase.StringListValue ? (global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList) value_ : null; }
          set {
            value_ = value;
            valueCase_ = value == null ? ValueOneofCase.None : ValueOneofCase.StringListValue;
          }
        }

        /// <summary>Field number for the "bytes_value" field.</summary>
        public const int BytesValueFieldNumber = 8;
        /// <summary>
        /// For bytes values.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString BytesValue {
          get { return HasBytesValue ? (pb::ByteString) value_ : pb::ByteString.Empty; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            valueCase_ = ValueOneofCase.BytesValue;
          }
        }
        /// <summary>Gets whether the "bytes_value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasBytesValue {
          get { return valueCase_ == ValueOneofCase.BytesValue; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "bytes_value" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearBytesValue() {
          if (HasBytesValue) {
            ClearValue();
          }
        }

        private object value_;
        /// <summary>Enum of possible cases for the "value" oneof.</summary>
        public enum ValueOneofCase {
          None = 0,
          IntValue = 1,
          DoubleValue = 2,
          StringValue = 3,
          BoolValue = 4,
          IntListValue = 6,
          StringListValue = 7,
          BytesValue = 8,
        }
        private ValueOneofCase valueCase_ = ValueOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ValueOneofCase ValueCase {
          get { return valueCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearValue() {
          valueCase_ = ValueOneofCase.None;
          value_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Value);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Value other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (IntValue != other.IntValue) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
          if (StringValue != other.StringValue) return false;
          if (BoolValue != other.BoolValue) return false;
          if (!object.Equals(IntListValue, other.IntListValue)) return false;
          if (!object.Equals(StringListValue, other.StringListValue)) return false;
          if (BytesValue != other.BytesValue) return false;
          if (ValueCase != other.ValueCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasIntValue) hash ^= IntValue.GetHashCode();
          if (HasDoubleValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
          if (HasStringValue) hash ^= StringValue.GetHashCode();
          if (HasBoolValue) hash ^= BoolValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.IntListValue) hash ^= IntListValue.GetHashCode();
          if (valueCase_ == ValueOneofCase.StringListValue) hash ^= StringListValue.GetHashCode();
          if (HasBytesValue) hash ^= BytesValue.GetHashCode();
          hash ^= (int) valueCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasIntValue) {
            output.WriteRawTag(8);
            output.WriteInt64(IntValue);
          }
          if (HasDoubleValue) {
            output.WriteRawTag(17);
            output.WriteDouble(DoubleValue);
          }
          if (HasStringValue) {
            output.WriteRawTag(26);
            output.WriteString(StringValue);
          }
          if (HasBoolValue) {
            output.WriteRawTag(32);
            output.WriteBool(BoolValue);
          }
          if (valueCase_ == ValueOneofCase.IntListValue) {
            output.WriteRawTag(50);
            output.WriteMessage(IntListValue);
          }
          if (valueCase_ == ValueOneofCase.StringListValue) {
            output.WriteRawTag(58);
            output.WriteMessage(StringListValue);
          }
          if (HasBytesValue) {
            output.WriteRawTag(66);
            output.WriteBytes(BytesValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasIntValue) {
            output.WriteRawTag(8);
            output.WriteInt64(IntValue);
          }
          if (HasDoubleValue) {
            output.WriteRawTag(17);
            output.WriteDouble(DoubleValue);
          }
          if (HasStringValue) {
            output.WriteRawTag(26);
            output.WriteString(StringValue);
          }
          if (HasBoolValue) {
            output.WriteRawTag(32);
            output.WriteBool(BoolValue);
          }
          if (valueCase_ == ValueOneofCase.IntListValue) {
            output.WriteRawTag(50);
            output.WriteMessage(IntListValue);
          }
          if (valueCase_ == ValueOneofCase.StringListValue) {
            output.WriteRawTag(58);
            output.WriteMessage(StringListValue);
          }
          if (HasBytesValue) {
            output.WriteRawTag(66);
            output.WriteBytes(BytesValue);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasIntValue) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(IntValue);
          }
          if (HasDoubleValue) {
            size += 1 + 8;
          }
          if (HasStringValue) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
          }
          if (HasBoolValue) {
            size += 1 + 1;
          }
          if (valueCase_ == ValueOneofCase.IntListValue) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(IntListValue);
          }
          if (valueCase_ == ValueOneofCase.StringListValue) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StringListValue);
          }
          if (HasBytesValue) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(BytesValue);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Value other) {
          if (other == null) {
            return;
          }
          switch (other.ValueCase) {
            case ValueOneofCase.IntValue:
              IntValue = other.IntValue;
              break;
            case ValueOneofCase.DoubleValue:
              DoubleValue = other.DoubleValue;
              break;
            case ValueOneofCase.StringValue:
              StringValue = other.StringValue;
              break;
            case ValueOneofCase.BoolValue:
              BoolValue = other.BoolValue;
              break;
            case ValueOneofCase.IntListValue:
              if (IntListValue == null) {
                IntListValue = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList();
              }
              IntListValue.MergeFrom(other.IntListValue);
              break;
            case ValueOneofCase.StringListValue:
              if (StringListValue == null) {
                StringListValue = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList();
              }
              StringListValue.MergeFrom(other.StringListValue);
              break;
            case ValueOneofCase.BytesValue:
              BytesValue = other.BytesValue;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                IntValue = input.ReadInt64();
                break;
              }
              case 17: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 26: {
                StringValue = input.ReadString();
                break;
              }
              case 32: {
                BoolValue = input.ReadBool();
                break;
              }
              case 50: {
                global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList();
                if (valueCase_ == ValueOneofCase.IntListValue) {
                  subBuilder.MergeFrom(IntListValue);
                }
                input.ReadMessage(subBuilder);
                IntListValue = subBuilder;
                break;
              }
              case 58: {
                global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList();
                if (valueCase_ == ValueOneofCase.StringListValue) {
                  subBuilder.MergeFrom(StringListValue);
                }
                input.ReadMessage(subBuilder);
                StringListValue = subBuilder;
                break;
              }
              case 66: {
                BytesValue = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                IntValue = input.ReadInt64();
                break;
              }
              case 17: {
                DoubleValue = input.ReadDouble();
                break;
              }
              case 26: {
                StringValue = input.ReadString();
                break;
              }
              case 32: {
                BoolValue = input.ReadBool();
                break;
              }
              case 50: {
                global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.IntList();
                if (valueCase_ == ValueOneofCase.IntListValue) {
                  subBuilder.MergeFrom(IntListValue);
                }
                input.ReadMessage(subBuilder);
                IntListValue = subBuilder;
                break;
              }
              case 58: {
                global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Value.Types.StringList();
                if (valueCase_ == ValueOneofCase.StringListValue) {
                  subBuilder.MergeFrom(StringListValue);
                }
                input.ReadMessage(subBuilder);
                StringListValue = subBuilder;
                break;
              }
              case 66: {
                BytesValue = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Value message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// A list of integer values.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class IntList : pb::IMessage<IntList>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<IntList> _parser = new pb::MessageParser<IntList>(() => new IntList());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<IntList> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.Value.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public IntList() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public IntList(IntList other) : this() {
              values_ = other.values_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public IntList Clone() {
              return new IntList(this);
            }

            /// <summary>Field number for the "values" field.</summary>
            public const int ValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<long> _repeated_values_codec
                = pb::FieldCodec.ForInt64(10);
            private readonly pbc::RepeatedField<long> values_ = new pbc::RepeatedField<long>();
            /// <summary>
            /// The values
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<long> Values {
              get { return values_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as IntList);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(IntList other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!values_.Equals(other.values_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= values_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              values_.WriteTo(output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              values_.WriteTo(ref output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += values_.CalculateSize(_repeated_values_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(IntList other) {
              if (other == null) {
                return;
              }
              values_.Add(other.values_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10:
                  case 8: {
                    values_.AddEntriesFrom(input, _repeated_values_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10:
                  case 8: {
                    values_.AddEntriesFrom(ref input, _repeated_values_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A list of string values.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class StringList : pb::IMessage<StringList>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<StringList> _parser = new pb::MessageParser<StringList>(() => new StringList());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<StringList> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.Value.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StringList() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StringList(StringList other) : this() {
              values_ = other.values_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public StringList Clone() {
              return new StringList(this);
            }

            /// <summary>Field number for the "values" field.</summary>
            public const int ValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_values_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// The values
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<string> Values {
              get { return values_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as StringList);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(StringList other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!values_.Equals(other.values_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= values_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              values_.WriteTo(output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              values_.WriteTo(ref output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += values_.CalculateSize(_repeated_values_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(StringList other) {
              if (other == null) {
                return;
              }
              values_.Add(other.values_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    values_.AddEntriesFrom(input, _repeated_values_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    values_.AddEntriesFrom(ref input, _repeated_values_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Represents a sorting in a report.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Sort : pb::IMessage<Sort>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Sort> _parser = new pb::MessageParser<Sort>(() => new Sort());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Sort> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Sort() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Sort(Sort other) : this() {
          _hasBits0 = other._hasBits0;
          field_ = other.field_ != null ? other.field_.Clone() : null;
          descending_ = other.descending_;
          slice_ = other.slice_ != null ? other.slice_.Clone() : null;
          timePeriodIndex_ = other.timePeriodIndex_;
          metricValueType_ = other.metricValueType_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Sort Clone() {
          return new Sort(this);
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 1;
        private global::Google.Ads.AdManager.V1.Report.Types.Field field_;
        /// <summary>
        /// Required. A field (dimension or metric) to sort by.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Field Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        /// <summary>Field number for the "descending" field.</summary>
        public const int DescendingFieldNumber = 2;
        private bool descending_;
        /// <summary>
        /// Optional. The sort order. If true the sort will be descending.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Descending {
          get { return descending_; }
          set {
            descending_ = value;
          }
        }

        /// <summary>Field number for the "slice" field.</summary>
        public const int SliceFieldNumber = 3;
        private global::Google.Ads.AdManager.V1.Report.Types.Slice slice_;
        /// <summary>
        /// Optional. Use to sort on a specific slice of data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Slice Slice {
          get { return slice_; }
          set {
            slice_ = value;
          }
        }

        /// <summary>Field number for the "time_period_index" field.</summary>
        public const int TimePeriodIndexFieldNumber = 4;
        private readonly static int TimePeriodIndexDefaultValue = 0;

        private int timePeriodIndex_;
        /// <summary>
        /// Optional. When using time period columns, use this to sort on a specific
        /// column.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int TimePeriodIndex {
          get { if ((_hasBits0 & 1) != 0) { return timePeriodIndex_; } else { return TimePeriodIndexDefaultValue; } }
          set {
            _hasBits0 |= 1;
            timePeriodIndex_ = value;
          }
        }
        /// <summary>Gets whether the "time_period_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTimePeriodIndex {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "time_period_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTimePeriodIndex() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "metric_value_type" field.</summary>
        public const int MetricValueTypeFieldNumber = 5;
        private readonly static global::Google.Ads.AdManager.V1.Report.Types.MetricValueType MetricValueTypeDefaultValue = global::Google.Ads.AdManager.V1.Report.Types.MetricValueType.Primary;

        private global::Google.Ads.AdManager.V1.Report.Types.MetricValueType metricValueType_;
        /// <summary>
        /// Optional. Use to specify which metric value type to sort on. Defaults to
        /// PRIMARY.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.MetricValueType MetricValueType {
          get { if ((_hasBits0 & 2) != 0) { return metricValueType_; } else { return MetricValueTypeDefaultValue; } }
          set {
            _hasBits0 |= 2;
            metricValueType_ = value;
          }
        }
        /// <summary>Gets whether the "metric_value_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMetricValueType {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "metric_value_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMetricValueType() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Sort);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Sort other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Field, other.Field)) return false;
          if (Descending != other.Descending) return false;
          if (!object.Equals(Slice, other.Slice)) return false;
          if (TimePeriodIndex != other.TimePeriodIndex) return false;
          if (MetricValueType != other.MetricValueType) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (field_ != null) hash ^= Field.GetHashCode();
          if (Descending != false) hash ^= Descending.GetHashCode();
          if (slice_ != null) hash ^= Slice.GetHashCode();
          if (HasTimePeriodIndex) hash ^= TimePeriodIndex.GetHashCode();
          if (HasMetricValueType) hash ^= MetricValueType.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (Descending != false) {
            output.WriteRawTag(16);
            output.WriteBool(Descending);
          }
          if (slice_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Slice);
          }
          if (HasTimePeriodIndex) {
            output.WriteRawTag(32);
            output.WriteInt32(TimePeriodIndex);
          }
          if (HasMetricValueType) {
            output.WriteRawTag(40);
            output.WriteEnum((int) MetricValueType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (field_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Field);
          }
          if (Descending != false) {
            output.WriteRawTag(16);
            output.WriteBool(Descending);
          }
          if (slice_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Slice);
          }
          if (HasTimePeriodIndex) {
            output.WriteRawTag(32);
            output.WriteInt32(TimePeriodIndex);
          }
          if (HasMetricValueType) {
            output.WriteRawTag(40);
            output.WriteEnum((int) MetricValueType);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (field_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
          }
          if (Descending != false) {
            size += 1 + 1;
          }
          if (slice_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Slice);
          }
          if (HasTimePeriodIndex) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimePeriodIndex);
          }
          if (HasMetricValueType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MetricValueType);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Sort other) {
          if (other == null) {
            return;
          }
          if (other.field_ != null) {
            if (field_ == null) {
              Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
            }
            Field.MergeFrom(other.Field);
          }
          if (other.Descending != false) {
            Descending = other.Descending;
          }
          if (other.slice_ != null) {
            if (slice_ == null) {
              Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
            }
            Slice.MergeFrom(other.Slice);
          }
          if (other.HasTimePeriodIndex) {
            TimePeriodIndex = other.TimePeriodIndex;
          }
          if (other.HasMetricValueType) {
            MetricValueType = other.MetricValueType;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                }
                input.ReadMessage(Field);
                break;
              }
              case 16: {
                Descending = input.ReadBool();
                break;
              }
              case 26: {
                if (slice_ == null) {
                  Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                }
                input.ReadMessage(Slice);
                break;
              }
              case 32: {
                TimePeriodIndex = input.ReadInt32();
                break;
              }
              case 40: {
                MetricValueType = (global::Google.Ads.AdManager.V1.Report.Types.MetricValueType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (field_ == null) {
                  Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                }
                input.ReadMessage(Field);
                break;
              }
              case 16: {
                Descending = input.ReadBool();
                break;
              }
              case 26: {
                if (slice_ == null) {
                  Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                }
                input.ReadMessage(Slice);
                break;
              }
              case 32: {
                TimePeriodIndex = input.ReadInt32();
                break;
              }
              case 40: {
                MetricValueType = (global::Google.Ads.AdManager.V1.Report.Types.MetricValueType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A table containing report data including dimension and metric values.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class DataTable : pb::IMessage<DataTable>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DataTable> _parser = new pb::MessageParser<DataTable>(() => new DataTable());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DataTable> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DataTable() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DataTable(DataTable other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DataTable Clone() {
          return new DataTable(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DataTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DataTable other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DataTable other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DataTable message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// A row of report data.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Row : pb::IMessage<Row>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Row> _parser = new pb::MessageParser<Row>(() => new Row());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Row> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.DataTable.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Row() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Row(Row other) : this() {
              dimensionValues_ = other.dimensionValues_.Clone();
              metricValueGroups_ = other.metricValueGroups_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Row Clone() {
              return new Row(this);
            }

            /// <summary>Field number for the "dimension_values" field.</summary>
            public const int DimensionValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_dimensionValues_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> dimensionValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// The order of the dimension values is the same as the order of the
            /// dimensions specified in the request.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> DimensionValues {
              get { return dimensionValues_; }
            }

            /// <summary>Field number for the "metric_value_groups" field.</summary>
            public const int MetricValueGroupsFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup> _repeated_metricValueGroups_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup> metricValueGroups_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup>();
            /// <summary>
            ///
            /// The length of the metric_value_groups
            /// field will be equal to the length of the date_ranges field in the
            /// fetch response. The metric_value_groups field is
            /// ordered such that each index corresponds to the date_range at the same
            /// index. For example, given date_ranges [x, y], metric_value_groups will
            /// have a length of two. The first entry in metric_value_groups represents
            /// the metrics for date x and the second entry in metric_value_groups
            /// represents the metrics for date y.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.MetricValueGroup> MetricValueGroups {
              get { return metricValueGroups_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Row other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!dimensionValues_.Equals(other.dimensionValues_)) return false;
              if(!metricValueGroups_.Equals(other.metricValueGroups_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= dimensionValues_.GetHashCode();
              hash ^= metricValueGroups_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              dimensionValues_.WriteTo(output, _repeated_dimensionValues_codec);
              metricValueGroups_.WriteTo(output, _repeated_metricValueGroups_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              dimensionValues_.WriteTo(ref output, _repeated_dimensionValues_codec);
              metricValueGroups_.WriteTo(ref output, _repeated_metricValueGroups_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += dimensionValues_.CalculateSize(_repeated_dimensionValues_codec);
              size += metricValueGroups_.CalculateSize(_repeated_metricValueGroups_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Row other) {
              if (other == null) {
                return;
              }
              dimensionValues_.Add(other.dimensionValues_);
              metricValueGroups_.Add(other.metricValueGroups_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    dimensionValues_.AddEntriesFrom(input, _repeated_dimensionValues_codec);
                    break;
                  }
                  case 18: {
                    metricValueGroups_.AddEntriesFrom(input, _repeated_metricValueGroups_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    dimensionValues_.AddEntriesFrom(ref input, _repeated_dimensionValues_codec);
                    break;
                  }
                  case 18: {
                    metricValueGroups_.AddEntriesFrom(ref input, _repeated_metricValueGroups_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Contains all metric values requested for a single date range and set of
          /// column dimension values (returned in the columns field of the response).
          /// The order of the metrics in each field corresponds to the order of the
          /// metrics specified in the request.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class MetricValueGroup : pb::IMessage<MetricValueGroup>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MetricValueGroup> _parser = new pb::MessageParser<MetricValueGroup>(() => new MetricValueGroup());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MetricValueGroup> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.DataTable.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValueGroup() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValueGroup(MetricValueGroup other) : this() {
              primaryValues_ = other.primaryValues_.Clone();
              primaryPercentOfTotalValues_ = other.primaryPercentOfTotalValues_.Clone();
              comparisonValues_ = other.comparisonValues_.Clone();
              comparisonPercentOfTotalValues_ = other.comparisonPercentOfTotalValues_.Clone();
              absoluteChangeValues_ = other.absoluteChangeValues_.Clone();
              relativeChangeValues_ = other.relativeChangeValues_.Clone();
              flagValues_ = other.flagValues_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricValueGroup Clone() {
              return new MetricValueGroup(this);
            }

            /// <summary>Field number for the "primary_values" field.</summary>
            public const int PrimaryValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_primaryValues_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> primaryValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the PRIMARY MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> PrimaryValues {
              get { return primaryValues_; }
            }

            /// <summary>Field number for the "primary_percent_of_total_values" field.</summary>
            public const int PrimaryPercentOfTotalValuesFieldNumber = 2;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_primaryPercentOfTotalValues_codec
                = pb::FieldCodec.ForMessage(18, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> primaryPercentOfTotalValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the PRIMARY_PERCENT_OF_TOTAL MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> PrimaryPercentOfTotalValues {
              get { return primaryPercentOfTotalValues_; }
            }

            /// <summary>Field number for the "comparison_values" field.</summary>
            public const int ComparisonValuesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_comparisonValues_codec
                = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> comparisonValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the COMPARISON MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> ComparisonValues {
              get { return comparisonValues_; }
            }

            /// <summary>Field number for the "comparison_percent_of_total_values" field.</summary>
            public const int ComparisonPercentOfTotalValuesFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_comparisonPercentOfTotalValues_codec
                = pb::FieldCodec.ForMessage(34, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> comparisonPercentOfTotalValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the COMPARISON_PERCENT_OF_TOTAL MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> ComparisonPercentOfTotalValues {
              get { return comparisonPercentOfTotalValues_; }
            }

            /// <summary>Field number for the "absolute_change_values" field.</summary>
            public const int AbsoluteChangeValuesFieldNumber = 5;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_absoluteChangeValues_codec
                = pb::FieldCodec.ForMessage(42, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> absoluteChangeValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the ABSOLUTE_CHANGE MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> AbsoluteChangeValues {
              get { return absoluteChangeValues_; }
            }

            /// <summary>Field number for the "relative_change_values" field.</summary>
            public const int RelativeChangeValuesFieldNumber = 6;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_relativeChangeValues_codec
                = pb::FieldCodec.ForMessage(50, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> relativeChangeValues_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Data for the RELATIVE_CHANGE MetricValueType.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> RelativeChangeValues {
              get { return relativeChangeValues_; }
            }

            /// <summary>Field number for the "flag_values" field.</summary>
            public const int FlagValuesFieldNumber = 7;
            private static readonly pb::FieldCodec<bool> _repeated_flagValues_codec
                = pb::FieldCodec.ForBool(58);
            private readonly pbc::RepeatedField<bool> flagValues_ = new pbc::RepeatedField<bool>();
            /// <summary>
            /// If true, the flag's conditions are met. If false, the flag's
            /// conditions are not met. flag_values has the same length as
            /// flags and index i of flag_values represents the flag at index i
            /// of flags.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<bool> FlagValues {
              get { return flagValues_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MetricValueGroup);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MetricValueGroup other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!primaryValues_.Equals(other.primaryValues_)) return false;
              if(!primaryPercentOfTotalValues_.Equals(other.primaryPercentOfTotalValues_)) return false;
              if(!comparisonValues_.Equals(other.comparisonValues_)) return false;
              if(!comparisonPercentOfTotalValues_.Equals(other.comparisonPercentOfTotalValues_)) return false;
              if(!absoluteChangeValues_.Equals(other.absoluteChangeValues_)) return false;
              if(!relativeChangeValues_.Equals(other.relativeChangeValues_)) return false;
              if(!flagValues_.Equals(other.flagValues_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= primaryValues_.GetHashCode();
              hash ^= primaryPercentOfTotalValues_.GetHashCode();
              hash ^= comparisonValues_.GetHashCode();
              hash ^= comparisonPercentOfTotalValues_.GetHashCode();
              hash ^= absoluteChangeValues_.GetHashCode();
              hash ^= relativeChangeValues_.GetHashCode();
              hash ^= flagValues_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              primaryValues_.WriteTo(output, _repeated_primaryValues_codec);
              primaryPercentOfTotalValues_.WriteTo(output, _repeated_primaryPercentOfTotalValues_codec);
              comparisonValues_.WriteTo(output, _repeated_comparisonValues_codec);
              comparisonPercentOfTotalValues_.WriteTo(output, _repeated_comparisonPercentOfTotalValues_codec);
              absoluteChangeValues_.WriteTo(output, _repeated_absoluteChangeValues_codec);
              relativeChangeValues_.WriteTo(output, _repeated_relativeChangeValues_codec);
              flagValues_.WriteTo(output, _repeated_flagValues_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              primaryValues_.WriteTo(ref output, _repeated_primaryValues_codec);
              primaryPercentOfTotalValues_.WriteTo(ref output, _repeated_primaryPercentOfTotalValues_codec);
              comparisonValues_.WriteTo(ref output, _repeated_comparisonValues_codec);
              comparisonPercentOfTotalValues_.WriteTo(ref output, _repeated_comparisonPercentOfTotalValues_codec);
              absoluteChangeValues_.WriteTo(ref output, _repeated_absoluteChangeValues_codec);
              relativeChangeValues_.WriteTo(ref output, _repeated_relativeChangeValues_codec);
              flagValues_.WriteTo(ref output, _repeated_flagValues_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += primaryValues_.CalculateSize(_repeated_primaryValues_codec);
              size += primaryPercentOfTotalValues_.CalculateSize(_repeated_primaryPercentOfTotalValues_codec);
              size += comparisonValues_.CalculateSize(_repeated_comparisonValues_codec);
              size += comparisonPercentOfTotalValues_.CalculateSize(_repeated_comparisonPercentOfTotalValues_codec);
              size += absoluteChangeValues_.CalculateSize(_repeated_absoluteChangeValues_codec);
              size += relativeChangeValues_.CalculateSize(_repeated_relativeChangeValues_codec);
              size += flagValues_.CalculateSize(_repeated_flagValues_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MetricValueGroup other) {
              if (other == null) {
                return;
              }
              primaryValues_.Add(other.primaryValues_);
              primaryPercentOfTotalValues_.Add(other.primaryPercentOfTotalValues_);
              comparisonValues_.Add(other.comparisonValues_);
              comparisonPercentOfTotalValues_.Add(other.comparisonPercentOfTotalValues_);
              absoluteChangeValues_.Add(other.absoluteChangeValues_);
              relativeChangeValues_.Add(other.relativeChangeValues_);
              flagValues_.Add(other.flagValues_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    primaryValues_.AddEntriesFrom(input, _repeated_primaryValues_codec);
                    break;
                  }
                  case 18: {
                    primaryPercentOfTotalValues_.AddEntriesFrom(input, _repeated_primaryPercentOfTotalValues_codec);
                    break;
                  }
                  case 26: {
                    comparisonValues_.AddEntriesFrom(input, _repeated_comparisonValues_codec);
                    break;
                  }
                  case 34: {
                    comparisonPercentOfTotalValues_.AddEntriesFrom(input, _repeated_comparisonPercentOfTotalValues_codec);
                    break;
                  }
                  case 42: {
                    absoluteChangeValues_.AddEntriesFrom(input, _repeated_absoluteChangeValues_codec);
                    break;
                  }
                  case 50: {
                    relativeChangeValues_.AddEntriesFrom(input, _repeated_relativeChangeValues_codec);
                    break;
                  }
                  case 58:
                  case 56: {
                    flagValues_.AddEntriesFrom(input, _repeated_flagValues_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    primaryValues_.AddEntriesFrom(ref input, _repeated_primaryValues_codec);
                    break;
                  }
                  case 18: {
                    primaryPercentOfTotalValues_.AddEntriesFrom(ref input, _repeated_primaryPercentOfTotalValues_codec);
                    break;
                  }
                  case 26: {
                    comparisonValues_.AddEntriesFrom(ref input, _repeated_comparisonValues_codec);
                    break;
                  }
                  case 34: {
                    comparisonPercentOfTotalValues_.AddEntriesFrom(ref input, _repeated_comparisonPercentOfTotalValues_codec);
                    break;
                  }
                  case 42: {
                    absoluteChangeValues_.AddEntriesFrom(ref input, _repeated_absoluteChangeValues_codec);
                    break;
                  }
                  case 50: {
                    relativeChangeValues_.AddEntriesFrom(ref input, _repeated_relativeChangeValues_codec);
                    break;
                  }
                  case 58:
                  case 56: {
                    flagValues_.AddEntriesFrom(ref input, _repeated_flagValues_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// A dimension or a metric in a report.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Field : pb::IMessage<Field>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Field> _parser = new pb::MessageParser<Field>(() => new Field());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Field> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Field() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Field(Field other) : this() {
          switch (other.FieldCase) {
            case FieldOneofCase.Dimension:
              Dimension = other.Dimension;
              break;
            case FieldOneofCase.Metric:
              Metric = other.Metric;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Field Clone() {
          return new Field(this);
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 1;
        /// <summary>
        /// The dimension this field represents.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Dimension Dimension {
          get { return HasDimension ? (global::Google.Ads.AdManager.V1.Report.Types.Dimension) field_ : global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified; }
          set {
            field_ = value;
            fieldCase_ = FieldOneofCase.Dimension;
          }
        }
        /// <summary>Gets whether the "dimension" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDimension {
          get { return fieldCase_ == FieldOneofCase.Dimension; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "dimension" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDimension() {
          if (HasDimension) {
            ClearField();
          }
        }

        /// <summary>Field number for the "metric" field.</summary>
        public const int MetricFieldNumber = 2;
        /// <summary>
        /// The metric this field represents.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Metric Metric {
          get { return HasMetric ? (global::Google.Ads.AdManager.V1.Report.Types.Metric) field_ : global::Google.Ads.AdManager.V1.Report.Types.Metric.Unspecified; }
          set {
            field_ = value;
            fieldCase_ = FieldOneofCase.Metric;
          }
        }
        /// <summary>Gets whether the "metric" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMetric {
          get { return fieldCase_ == FieldOneofCase.Metric; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "metric" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMetric() {
          if (HasMetric) {
            ClearField();
          }
        }

        private object field_;
        /// <summary>Enum of possible cases for the "field" oneof.</summary>
        public enum FieldOneofCase {
          None = 0,
          Dimension = 1,
          Metric = 2,
        }
        private FieldOneofCase fieldCase_ = FieldOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FieldOneofCase FieldCase {
          get { return fieldCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearField() {
          fieldCase_ = FieldOneofCase.None;
          field_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Field);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Field other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Dimension != other.Dimension) return false;
          if (Metric != other.Metric) return false;
          if (FieldCase != other.FieldCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasDimension) hash ^= Dimension.GetHashCode();
          if (HasMetric) hash ^= Metric.GetHashCode();
          hash ^= (int) fieldCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasDimension) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (HasMetric) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Metric);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasDimension) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (HasMetric) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Metric);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasDimension) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dimension);
          }
          if (HasMetric) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Metric);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Field other) {
          if (other == null) {
            return;
          }
          switch (other.FieldCase) {
            case FieldOneofCase.Dimension:
              Dimension = other.Dimension;
              break;
            case FieldOneofCase.Metric:
              Metric = other.Metric;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                field_ = input.ReadEnum();
                fieldCase_ = FieldOneofCase.Dimension;
                break;
              }
              case 16: {
                field_ = input.ReadEnum();
                fieldCase_ = FieldOneofCase.Metric;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                field_ = input.ReadEnum();
                fieldCase_ = FieldOneofCase.Dimension;
                break;
              }
              case 16: {
                field_ = input.ReadEnum();
                fieldCase_ = FieldOneofCase.Metric;
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Use to specify a slice of data.
      ///
      /// For example, in a report, to focus on just data from the US, specify
      /// `COUNTRY_NAME` for dimension and value: `"United States"`.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Slice : pb::IMessage<Slice>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Slice> _parser = new pb::MessageParser<Slice>(() => new Slice());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Slice> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Slice() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Slice(Slice other) : this() {
          dimension_ = other.dimension_;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Slice Clone() {
          return new Slice(this);
        }

        /// <summary>Field number for the "dimension" field.</summary>
        public const int DimensionFieldNumber = 1;
        private global::Google.Ads.AdManager.V1.Report.Types.Dimension dimension_ = global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified;
        /// <summary>
        /// Required. The dimension to slice on.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Dimension Dimension {
          get { return dimension_; }
          set {
            dimension_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Google.Ads.AdManager.V1.Report.Types.Value value_;
        /// <summary>
        /// Required. The value of the dimension.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Value Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Slice);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Slice other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Dimension != other.Dimension) return false;
          if (!object.Equals(Value, other.Value)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) hash ^= Dimension.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Dimension);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dimension);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Slice other) {
          if (other == null) {
            return;
          }
          if (other.Dimension != global::Google.Ads.AdManager.V1.Report.Types.Dimension.Unspecified) {
            Dimension = other.Dimension;
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Google.Ads.AdManager.V1.Report.Types.Value();
            }
            Value.MergeFrom(other.Value);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Dimension = (global::Google.Ads.AdManager.V1.Report.Types.Dimension) input.ReadEnum();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Google.Ads.AdManager.V1.Report.Types.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Dimension = (global::Google.Ads.AdManager.V1.Report.Types.Dimension) input.ReadEnum();
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Google.Ads.AdManager.V1.Report.Types.Value();
                }
                input.ReadMessage(Value);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A filter over one or more fields.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Filter : pb::IMessage<Filter>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Filter> _parser = new pb::MessageParser<Filter>(() => new Filter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Filter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter(Filter other) : this() {
          switch (other.TypeCase) {
            case TypeOneofCase.FieldFilter:
              FieldFilter = other.FieldFilter.Clone();
              break;
            case TypeOneofCase.NotFilter:
              NotFilter = other.NotFilter.Clone();
              break;
            case TypeOneofCase.AndFilter:
              AndFilter = other.AndFilter.Clone();
              break;
            case TypeOneofCase.OrFilter:
              OrFilter = other.OrFilter.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Filter Clone() {
          return new Filter(this);
        }

        /// <summary>Field number for the "field_filter" field.</summary>
        public const int FieldFilterFieldNumber = 1;
        /// <summary>
        /// A filter on a single field.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter FieldFilter {
          get { return typeCase_ == TypeOneofCase.FieldFilter ? (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.FieldFilter;
          }
        }

        /// <summary>Field number for the "not_filter" field.</summary>
        public const int NotFilterFieldNumber = 2;
        /// <summary>
        /// A filter whose result is negated.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Filter NotFilter {
          get { return typeCase_ == TypeOneofCase.NotFilter ? (global::Google.Ads.AdManager.V1.Report.Types.Filter) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.NotFilter;
          }
        }

        /// <summary>Field number for the "and_filter" field.</summary>
        public const int AndFilterFieldNumber = 3;
        /// <summary>
        /// A list of filters whose results are AND-ed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList AndFilter {
          get { return typeCase_ == TypeOneofCase.AndFilter ? (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.AndFilter;
          }
        }

        /// <summary>Field number for the "or_filter" field.</summary>
        public const int OrFilterFieldNumber = 4;
        /// <summary>
        /// A list of filters whose results are OR-ed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList OrFilter {
          get { return typeCase_ == TypeOneofCase.OrFilter ? (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.OrFilter;
          }
        }

        private object type_;
        /// <summary>Enum of possible cases for the "type" oneof.</summary>
        public enum TypeOneofCase {
          None = 0,
          FieldFilter = 1,
          NotFilter = 2,
          AndFilter = 3,
          OrFilter = 4,
        }
        private TypeOneofCase typeCase_ = TypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TypeOneofCase TypeCase {
          get { return typeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearType() {
          typeCase_ = TypeOneofCase.None;
          type_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Filter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Filter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(FieldFilter, other.FieldFilter)) return false;
          if (!object.Equals(NotFilter, other.NotFilter)) return false;
          if (!object.Equals(AndFilter, other.AndFilter)) return false;
          if (!object.Equals(OrFilter, other.OrFilter)) return false;
          if (TypeCase != other.TypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (typeCase_ == TypeOneofCase.FieldFilter) hash ^= FieldFilter.GetHashCode();
          if (typeCase_ == TypeOneofCase.NotFilter) hash ^= NotFilter.GetHashCode();
          if (typeCase_ == TypeOneofCase.AndFilter) hash ^= AndFilter.GetHashCode();
          if (typeCase_ == TypeOneofCase.OrFilter) hash ^= OrFilter.GetHashCode();
          hash ^= (int) typeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (typeCase_ == TypeOneofCase.FieldFilter) {
            output.WriteRawTag(10);
            output.WriteMessage(FieldFilter);
          }
          if (typeCase_ == TypeOneofCase.NotFilter) {
            output.WriteRawTag(18);
            output.WriteMessage(NotFilter);
          }
          if (typeCase_ == TypeOneofCase.AndFilter) {
            output.WriteRawTag(26);
            output.WriteMessage(AndFilter);
          }
          if (typeCase_ == TypeOneofCase.OrFilter) {
            output.WriteRawTag(34);
            output.WriteMessage(OrFilter);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (typeCase_ == TypeOneofCase.FieldFilter) {
            output.WriteRawTag(10);
            output.WriteMessage(FieldFilter);
          }
          if (typeCase_ == TypeOneofCase.NotFilter) {
            output.WriteRawTag(18);
            output.WriteMessage(NotFilter);
          }
          if (typeCase_ == TypeOneofCase.AndFilter) {
            output.WriteRawTag(26);
            output.WriteMessage(AndFilter);
          }
          if (typeCase_ == TypeOneofCase.OrFilter) {
            output.WriteRawTag(34);
            output.WriteMessage(OrFilter);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (typeCase_ == TypeOneofCase.FieldFilter) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FieldFilter);
          }
          if (typeCase_ == TypeOneofCase.NotFilter) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotFilter);
          }
          if (typeCase_ == TypeOneofCase.AndFilter) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AndFilter);
          }
          if (typeCase_ == TypeOneofCase.OrFilter) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrFilter);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Filter other) {
          if (other == null) {
            return;
          }
          switch (other.TypeCase) {
            case TypeOneofCase.FieldFilter:
              if (FieldFilter == null) {
                FieldFilter = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter();
              }
              FieldFilter.MergeFrom(other.FieldFilter);
              break;
            case TypeOneofCase.NotFilter:
              if (NotFilter == null) {
                NotFilter = new global::Google.Ads.AdManager.V1.Report.Types.Filter();
              }
              NotFilter.MergeFrom(other.NotFilter);
              break;
            case TypeOneofCase.AndFilter:
              if (AndFilter == null) {
                AndFilter = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
              }
              AndFilter.MergeFrom(other.AndFilter);
              break;
            case TypeOneofCase.OrFilter:
              if (OrFilter == null) {
                OrFilter = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
              }
              OrFilter.MergeFrom(other.OrFilter);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter();
                if (typeCase_ == TypeOneofCase.FieldFilter) {
                  subBuilder.MergeFrom(FieldFilter);
                }
                input.ReadMessage(subBuilder);
                FieldFilter = subBuilder;
                break;
              }
              case 18: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter();
                if (typeCase_ == TypeOneofCase.NotFilter) {
                  subBuilder.MergeFrom(NotFilter);
                }
                input.ReadMessage(subBuilder);
                NotFilter = subBuilder;
                break;
              }
              case 26: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
                if (typeCase_ == TypeOneofCase.AndFilter) {
                  subBuilder.MergeFrom(AndFilter);
                }
                input.ReadMessage(subBuilder);
                AndFilter = subBuilder;
                break;
              }
              case 34: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
                if (typeCase_ == TypeOneofCase.OrFilter) {
                  subBuilder.MergeFrom(OrFilter);
                }
                input.ReadMessage(subBuilder);
                OrFilter = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FieldFilter();
                if (typeCase_ == TypeOneofCase.FieldFilter) {
                  subBuilder.MergeFrom(FieldFilter);
                }
                input.ReadMessage(subBuilder);
                FieldFilter = subBuilder;
                break;
              }
              case 18: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter();
                if (typeCase_ == TypeOneofCase.NotFilter) {
                  subBuilder.MergeFrom(NotFilter);
                }
                input.ReadMessage(subBuilder);
                NotFilter = subBuilder;
                break;
              }
              case 26: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
                if (typeCase_ == TypeOneofCase.AndFilter) {
                  subBuilder.MergeFrom(AndFilter);
                }
                input.ReadMessage(subBuilder);
                AndFilter = subBuilder;
                break;
              }
              case 34: {
                global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.FilterList();
                if (typeCase_ == TypeOneofCase.OrFilter) {
                  subBuilder.MergeFrom(OrFilter);
                }
                input.ReadMessage(subBuilder);
                OrFilter = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Filter message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Supported filter operations.
          /// </summary>
          public enum Operation {
            /// <summary>
            /// For scalar operands, checks if the operand is in the set of provided
            /// filter values.
            ///
            /// For list operands, checks if any element in the operand is in the set
            /// of provided filter values.
            ///
            /// Default value.
            /// </summary>
            [pbr::OriginalName("IN")] In = 0,
            /// <summary>
            /// For scalar operands, checks that the operand is not in the set of
            /// provided filter values.
            ///
            /// For list operands, checks that none of the elements in the operand
            /// is in the set of provided filter values.
            /// </summary>
            [pbr::OriginalName("NOT_IN")] NotIn = 1,
            /// <summary>
            /// For scalar string operands, checks if the operand contains any of the
            /// provided filter substrings.
            ///
            /// For string list operands, checks if any string in the operand contains
            /// any of the provided filter substrings.
            /// </summary>
            [pbr::OriginalName("CONTAINS")] Contains = 2,
            /// <summary>
            /// For scalar string operands, checks that the operand contains none of
            /// the provided filter substrings.
            ///
            /// For string list operands, checks that none of the strings in the
            /// operand contain none of the provided filter substrings.
            /// </summary>
            [pbr::OriginalName("NOT_CONTAINS")] NotContains = 3,
            /// <summary>
            /// Operand is less than the provided filter value.
            /// </summary>
            [pbr::OriginalName("LESS_THAN")] LessThan = 4,
            /// <summary>
            /// Operand is less than or equal to provided filter value.
            /// </summary>
            [pbr::OriginalName("LESS_THAN_EQUALS")] LessThanEquals = 5,
            /// <summary>
            /// Operand is greater than provided filter value.
            /// </summary>
            [pbr::OriginalName("GREATER_THAN")] GreaterThan = 6,
            /// <summary>
            /// Operand is greater than or equal to provided filter value.
            /// </summary>
            [pbr::OriginalName("GREATER_THAN_EQUALS")] GreaterThanEquals = 7,
            /// <summary>
            /// Operand is between provided filter values.
            /// </summary>
            [pbr::OriginalName("BETWEEN")] Between = 8,
            /// <summary>
            /// Operand matches against a regex or set of regexes (one must match)
            /// </summary>
            [pbr::OriginalName("MATCHES")] Matches = 9,
            /// <summary>
            /// Operand negative matches against a regex or set of regexes (none must
            /// match)
            /// </summary>
            [pbr::OriginalName("NOT_MATCHES")] NotMatches = 10,
          }

          /// <summary>
          /// A filter on a specific field.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FieldFilter : pb::IMessage<FieldFilter>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FieldFilter> _parser = new pb::MessageParser<FieldFilter>(() => new FieldFilter());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FieldFilter> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.Filter.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FieldFilter() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FieldFilter(FieldFilter other) : this() {
              _hasBits0 = other._hasBits0;
              field_ = other.field_ != null ? other.field_.Clone() : null;
              operation_ = other.operation_;
              values_ = other.values_.Clone();
              slice_ = other.slice_ != null ? other.slice_.Clone() : null;
              timePeriodIndex_ = other.timePeriodIndex_;
              metricValueType_ = other.metricValueType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FieldFilter Clone() {
              return new FieldFilter(this);
            }

            /// <summary>Field number for the "field" field.</summary>
            public const int FieldFieldNumber = 1;
            private global::Google.Ads.AdManager.V1.Report.Types.Field field_;
            /// <summary>
            /// Required. The field to filter on.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Ads.AdManager.V1.Report.Types.Field Field {
              get { return field_; }
              set {
                field_ = value;
              }
            }

            /// <summary>Field number for the "operation" field.</summary>
            public const int OperationFieldNumber = 2;
            private global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation operation_ = global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In;
            /// <summary>
            /// Required. The operation of this filter.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation Operation {
              get { return operation_; }
              set {
                operation_ = value;
              }
            }

            /// <summary>Field number for the "values" field.</summary>
            public const int ValuesFieldNumber = 3;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Value> _repeated_values_codec
                = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.Value.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> values_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value>();
            /// <summary>
            /// Required. Values to filter to.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Value> Values {
              get { return values_; }
            }

            /// <summary>Field number for the "slice" field.</summary>
            public const int SliceFieldNumber = 4;
            private global::Google.Ads.AdManager.V1.Report.Types.Slice slice_;
            /// <summary>
            /// Optional. Use to filter on a specific slice of data.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Ads.AdManager.V1.Report.Types.Slice Slice {
              get { return slice_; }
              set {
                slice_ = value;
              }
            }

            /// <summary>Field number for the "time_period_index" field.</summary>
            public const int TimePeriodIndexFieldNumber = 5;
            private readonly static int TimePeriodIndexDefaultValue = 0;

            private int timePeriodIndex_;
            /// <summary>
            /// Optional. When using time period columns, use this to filter on a
            /// specific column.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int TimePeriodIndex {
              get { if ((_hasBits0 & 1) != 0) { return timePeriodIndex_; } else { return TimePeriodIndexDefaultValue; } }
              set {
                _hasBits0 |= 1;
                timePeriodIndex_ = value;
              }
            }
            /// <summary>Gets whether the "time_period_index" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasTimePeriodIndex {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "time_period_index" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearTimePeriodIndex() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "metric_value_type" field.</summary>
            public const int MetricValueTypeFieldNumber = 6;
            private readonly static global::Google.Ads.AdManager.V1.Report.Types.MetricValueType MetricValueTypeDefaultValue = global::Google.Ads.AdManager.V1.Report.Types.MetricValueType.Primary;

            private global::Google.Ads.AdManager.V1.Report.Types.MetricValueType metricValueType_;
            /// <summary>
            /// Optional. Use to specify which metric value type to filter on. Defaults
            /// to PRIMARY.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Ads.AdManager.V1.Report.Types.MetricValueType MetricValueType {
              get { if ((_hasBits0 & 2) != 0) { return metricValueType_; } else { return MetricValueTypeDefaultValue; } }
              set {
                _hasBits0 |= 2;
                metricValueType_ = value;
              }
            }
            /// <summary>Gets whether the "metric_value_type" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasMetricValueType {
              get { return (_hasBits0 & 2) != 0; }
            }
            /// <summary>Clears the value of the "metric_value_type" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearMetricValueType() {
              _hasBits0 &= ~2;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FieldFilter);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FieldFilter other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Field, other.Field)) return false;
              if (Operation != other.Operation) return false;
              if(!values_.Equals(other.values_)) return false;
              if (!object.Equals(Slice, other.Slice)) return false;
              if (TimePeriodIndex != other.TimePeriodIndex) return false;
              if (MetricValueType != other.MetricValueType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (field_ != null) hash ^= Field.GetHashCode();
              if (Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) hash ^= Operation.GetHashCode();
              hash ^= values_.GetHashCode();
              if (slice_ != null) hash ^= Slice.GetHashCode();
              if (HasTimePeriodIndex) hash ^= TimePeriodIndex.GetHashCode();
              if (HasMetricValueType) hash ^= MetricValueType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (field_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Field);
              }
              if (Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Operation);
              }
              values_.WriteTo(output, _repeated_values_codec);
              if (slice_ != null) {
                output.WriteRawTag(34);
                output.WriteMessage(Slice);
              }
              if (HasTimePeriodIndex) {
                output.WriteRawTag(40);
                output.WriteInt32(TimePeriodIndex);
              }
              if (HasMetricValueType) {
                output.WriteRawTag(48);
                output.WriteEnum((int) MetricValueType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (field_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Field);
              }
              if (Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) {
                output.WriteRawTag(16);
                output.WriteEnum((int) Operation);
              }
              values_.WriteTo(ref output, _repeated_values_codec);
              if (slice_ != null) {
                output.WriteRawTag(34);
                output.WriteMessage(Slice);
              }
              if (HasTimePeriodIndex) {
                output.WriteRawTag(40);
                output.WriteInt32(TimePeriodIndex);
              }
              if (HasMetricValueType) {
                output.WriteRawTag(48);
                output.WriteEnum((int) MetricValueType);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (field_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Field);
              }
              if (Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
              }
              size += values_.CalculateSize(_repeated_values_codec);
              if (slice_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Slice);
              }
              if (HasTimePeriodIndex) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimePeriodIndex);
              }
              if (HasMetricValueType) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MetricValueType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FieldFilter other) {
              if (other == null) {
                return;
              }
              if (other.field_ != null) {
                if (field_ == null) {
                  Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                }
                Field.MergeFrom(other.Field);
              }
              if (other.Operation != global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation.In) {
                Operation = other.Operation;
              }
              values_.Add(other.values_);
              if (other.slice_ != null) {
                if (slice_ == null) {
                  Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                }
                Slice.MergeFrom(other.Slice);
              }
              if (other.HasTimePeriodIndex) {
                TimePeriodIndex = other.TimePeriodIndex;
              }
              if (other.HasMetricValueType) {
                MetricValueType = other.MetricValueType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (field_ == null) {
                      Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                    }
                    input.ReadMessage(Field);
                    break;
                  }
                  case 16: {
                    Operation = (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation) input.ReadEnum();
                    break;
                  }
                  case 26: {
                    values_.AddEntriesFrom(input, _repeated_values_codec);
                    break;
                  }
                  case 34: {
                    if (slice_ == null) {
                      Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                    }
                    input.ReadMessage(Slice);
                    break;
                  }
                  case 40: {
                    TimePeriodIndex = input.ReadInt32();
                    break;
                  }
                  case 48: {
                    MetricValueType = (global::Google.Ads.AdManager.V1.Report.Types.MetricValueType) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (field_ == null) {
                      Field = new global::Google.Ads.AdManager.V1.Report.Types.Field();
                    }
                    input.ReadMessage(Field);
                    break;
                  }
                  case 16: {
                    Operation = (global::Google.Ads.AdManager.V1.Report.Types.Filter.Types.Operation) input.ReadEnum();
                    break;
                  }
                  case 26: {
                    values_.AddEntriesFrom(ref input, _repeated_values_codec);
                    break;
                  }
                  case 34: {
                    if (slice_ == null) {
                      Slice = new global::Google.Ads.AdManager.V1.Report.Types.Slice();
                    }
                    input.ReadMessage(Slice);
                    break;
                  }
                  case 40: {
                    TimePeriodIndex = input.ReadInt32();
                    break;
                  }
                  case 48: {
                    MetricValueType = (global::Google.Ads.AdManager.V1.Report.Types.MetricValueType) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A list of filters.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FilterList : pb::IMessage<FilterList>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FilterList> _parser = new pb::MessageParser<FilterList>(() => new FilterList());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FilterList> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.Filter.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FilterList() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FilterList(FilterList other) : this() {
              filters_ = other.filters_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FilterList Clone() {
              return new FilterList(this);
            }

            /// <summary>Field number for the "filters" field.</summary>
            public const int FiltersFieldNumber = 1;
            private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Filter> _repeated_filters_codec
                = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.Filter.Parser);
            private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> filters_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter>();
            /// <summary>
            /// Required. A list of filters.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> Filters {
              get { return filters_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FilterList);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FilterList other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!filters_.Equals(other.filters_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= filters_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              filters_.WriteTo(output, _repeated_filters_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              filters_.WriteTo(ref output, _repeated_filters_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += filters_.CalculateSize(_repeated_filters_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FilterList other) {
              if (other == null) {
                return;
              }
              filters_.Add(other.filters_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    filters_.AddEntriesFrom(input, _repeated_filters_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// A flag for a report. Flags are used show if certain thresholds are met.
      /// Result rows that match the filter will have the corresponding
      /// [MetricValueGroup.flagValues][MetricValueGroup] index set to true.
      /// For more information about flags see:
      /// https://support.google.com/admanager/answer/15079975
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Flag : pb::IMessage<Flag>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Flag> _parser = new pb::MessageParser<Flag>(() => new Flag());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Flag> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Flag() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Flag(Flag other) : this() {
          filters_ = other.filters_.Clone();
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Flag Clone() {
          return new Flag(this);
        }

        /// <summary>Field number for the "filters" field.</summary>
        public const int FiltersFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Filter> _repeated_filters_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.Filter.Parser);
        private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> filters_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter>();
        /// <summary>
        /// Required. Filters to apply for the flag.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> Filters {
          get { return filters_; }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Optional. Name of the flag.
        /// The flag names RED, YELLOW, GREEN, BLUE, PURPLE, and GREY correspond to
        /// the colored flags that appear in the UI. The UI will not display flags
        /// with other names, but they are available for use by API clients.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Flag);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Flag other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!filters_.Equals(other.filters_)) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= filters_.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          filters_.WriteTo(output, _repeated_filters_codec);
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          filters_.WriteTo(ref output, _repeated_filters_codec);
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += filters_.CalculateSize(_repeated_filters_codec);
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Flag other) {
          if (other == null) {
            return;
          }
          filters_.Add(other.filters_);
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                filters_.AddEntriesFrom(input, _repeated_filters_codec);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A date range for a report.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class DateRange : pb::IMessage<DateRange>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DateRange> _parser = new pb::MessageParser<DateRange>(() => new DateRange());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DateRange> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Report.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DateRange() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DateRange(DateRange other) : this() {
          switch (other.DateRangeTypeCase) {
            case DateRangeTypeOneofCase.Fixed:
              Fixed = other.Fixed.Clone();
              break;
            case DateRangeTypeOneofCase.Relative:
              Relative = other.Relative;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DateRange Clone() {
          return new DateRange(this);
        }

        /// <summary>Field number for the "fixed" field.</summary>
        public const int FixedFieldNumber = 1;
        /// <summary>
        /// A fixed date range.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange Fixed {
          get { return dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed ? (global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange) dateRangeType_ : null; }
          set {
            dateRangeType_ = value;
            dateRangeTypeCase_ = value == null ? DateRangeTypeOneofCase.None : DateRangeTypeOneofCase.Fixed;
          }
        }

        /// <summary>Field number for the "relative" field.</summary>
        public const int RelativeFieldNumber = 2;
        /// <summary>
        /// A relative date range.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.RelativeDateRange Relative {
          get { return HasRelative ? (global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.RelativeDateRange) dateRangeType_ : global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.RelativeDateRange.Unspecified; }
          set {
            dateRangeType_ = value;
            dateRangeTypeCase_ = DateRangeTypeOneofCase.Relative;
          }
        }
        /// <summary>Gets whether the "relative" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRelative {
          get { return dateRangeTypeCase_ == DateRangeTypeOneofCase.Relative; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "relative" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRelative() {
          if (HasRelative) {
            ClearDateRangeType();
          }
        }

        private object dateRangeType_;
        /// <summary>Enum of possible cases for the "date_range_type" oneof.</summary>
        public enum DateRangeTypeOneofCase {
          None = 0,
          Fixed = 1,
          Relative = 2,
        }
        private DateRangeTypeOneofCase dateRangeTypeCase_ = DateRangeTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DateRangeTypeOneofCase DateRangeTypeCase {
          get { return dateRangeTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDateRangeType() {
          dateRangeTypeCase_ = DateRangeTypeOneofCase.None;
          dateRangeType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DateRange);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DateRange other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fixed, other.Fixed)) return false;
          if (Relative != other.Relative) return false;
          if (DateRangeTypeCase != other.DateRangeTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) hash ^= Fixed.GetHashCode();
          if (HasRelative) hash ^= Relative.GetHashCode();
          hash ^= (int) dateRangeTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
            output.WriteRawTag(10);
            output.WriteMessage(Fixed);
          }
          if (HasRelative) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Relative);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
            output.WriteRawTag(10);
            output.WriteMessage(Fixed);
          }
          if (HasRelative) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Relative);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fixed);
          }
          if (HasRelative) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Relative);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DateRange other) {
          if (other == null) {
            return;
          }
          switch (other.DateRangeTypeCase) {
            case DateRangeTypeOneofCase.Fixed:
              if (Fixed == null) {
                Fixed = new global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange();
              }
              Fixed.MergeFrom(other.Fixed);
              break;
            case DateRangeTypeOneofCase.Relative:
              Relative = other.Relative;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange();
                if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
                  subBuilder.MergeFrom(Fixed);
                }
                input.ReadMessage(subBuilder);
                Fixed = subBuilder;
                break;
              }
              case 16: {
                dateRangeType_ = input.ReadEnum();
                dateRangeTypeCase_ = DateRangeTypeOneofCase.Relative;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange subBuilder = new global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange();
                if (dateRangeTypeCase_ == DateRangeTypeOneofCase.Fixed) {
                  subBuilder.MergeFrom(Fixed);
                }
                input.ReadMessage(subBuilder);
                Fixed = subBuilder;
                break;
              }
              case 16: {
                dateRangeType_ = input.ReadEnum();
                dateRangeTypeCase_ = DateRangeTypeOneofCase.Relative;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the DateRange message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Options for relative date ranges.
          /// </summary>
          public enum RelativeDateRange {
            /// <summary>
            /// Default value. This value is unused.
            /// </summary>
            [pbr::OriginalName("RELATIVE_DATE_RANGE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The date the report is run.
            /// </summary>
            [pbr::OriginalName("TODAY")] Today = 1,
            /// <summary>
            /// The date a day before the date that the report is run.
            /// </summary>
            [pbr::OriginalName("YESTERDAY")] Yesterday = 2,
            /// <summary>
            /// The full week in which this report is run. Could include dates in
            /// the future.
            /// </summary>
            [pbr::OriginalName("THIS_WEEK")] ThisWeek = 3,
            /// <summary>
            /// From the beginning of the calendar week (Monday to Sunday) in which the
            /// up to and including the day the report is run.
            /// </summary>
            [pbr::OriginalName("THIS_WEEK_TO_DATE")] ThisWeekToDate = 29,
            /// <summary>
            /// The full month in which this report is run. Could include dates in
            /// the future.
            /// </summary>
            [pbr::OriginalName("THIS_MONTH")] ThisMonth = 4,
            /// <summary>
            /// From the beginning of the calendar month in which the report is run, to
            /// up to and including the day the report is run.
            /// </summary>
            [pbr::OriginalName("THIS_MONTH_TO_DATE")] ThisMonthToDate = 26,
            /// <summary>
            /// The full quarter in which this report is run. Could include dates
            /// in the future.
            /// </summary>
            [pbr::OriginalName("THIS_QUARTER")] ThisQuarter = 5,
            /// <summary>
            /// From the beginning of the calendar quarter in which the report is run,
            /// up to and including the day the report is run.
            /// </summary>
            [pbr::OriginalName("THIS_QUARTER_TO_DATE")] ThisQuarterToDate = 27,
            /// <summary>
            /// The full year in which this report is run. Could include dates in
            /// the future.
            /// </summary>
            [pbr::OriginalName("THIS_YEAR")] ThisYear = 6,
            /// <summary>
            /// From the beginning of the calendar year in which the report is run, to
            /// up to and including the day the report is run.
            /// </summary>
            [pbr::OriginalName("THIS_YEAR_TO_DATE")] ThisYearToDate = 28,
            /// <summary>
            /// The entire previous calendar week, Monday to Sunday (inclusive),
            /// preceding the calendar week the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_WEEK")] LastWeek = 7,
            /// <summary>
            /// The entire previous calendar month preceding the calendar month the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_MONTH")] LastMonth = 8,
            /// <summary>
            /// The entire previous calendar quarter preceding the calendar quarter the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_QUARTER")] LastQuarter = 9,
            /// <summary>
            /// The entire previous calendar year preceding the calendar year the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_YEAR")] LastYear = 10,
            /// <summary>
            /// The 7 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_7_DAYS")] Last7Days = 11,
            /// <summary>
            /// The 30 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_30_DAYS")] Last30Days = 12,
            /// <summary>
            /// The 60 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_60_DAYS")] Last60Days = 13,
            /// <summary>
            /// The 90 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_90_DAYS")] Last90Days = 14,
            /// <summary>
            /// The 180 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_180_DAYS")] Last180Days = 15,
            /// <summary>
            /// The 360 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_360_DAYS")] Last360Days = 16,
            /// <summary>
            /// The 365 days preceding the day the report is run.
            /// </summary>
            [pbr::OriginalName("LAST_365_DAYS")] Last365Days = 17,
            /// <summary>
            /// The entire previous 3 calendar months preceding the calendar month the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_3_MONTHS")] Last3Months = 18,
            /// <summary>
            /// The entire previous 6 calendar months preceding the calendar month the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_6_MONTHS")] Last6Months = 19,
            /// <summary>
            /// The entire previous 6 calendar months preceding the calendar month the
            /// report is run.
            /// </summary>
            [pbr::OriginalName("LAST_12_MONTHS")] Last12Months = 20,
            /// <summary>
            /// From 3 years before the report is run, to the day before the report is
            /// run, inclusive.
            /// </summary>
            [pbr::OriginalName("ALL_AVAILABLE")] AllAvailable = 21,
            /// <summary>
            /// Only valid when used in the comparison_date_range field. The complete
            /// period preceding the date period provided in date_range.
            ///
            /// In the case where date_range is a FixedDateRange of N days, this will
            /// be a period of N days where the end date is the date preceding the
            /// start date of the date_range.
            ///
            /// In the case where date_range is a RelativeDateRange, this will be a
            /// period of the same time frame preceding the date_range. In the case
            /// where the date_range does not capture the full period because a report
            /// is run in the middle of that period, this will still be the full
            /// preceding period. For example, if date_range is THIS_WEEK, but the
            /// report is run on a Wednesday, THIS_WEEK will be Monday - Wednesday, but
            /// PREVIOUS_PERIOD will be Monday - Sunday.
            /// </summary>
            [pbr::OriginalName("PREVIOUS_PERIOD")] PreviousPeriod = 22,
            /// <summary>
            /// Only valid when used in the comparison_date_range field. The period
            /// starting 1 year prior to the date period provided in date_range.
            ///
            /// In the case where date_range is a FixedDateRange, this will be a date
            /// range starting 1 year prior to the date_range start date and ending 1
            /// year prior to the date_range end date.
            ///
            /// In the case where date_range is a RelativeDateRange, this will be a
            /// period of the same time frame exactly 1 year prior to the date_range.
            /// In the case where the date_range does not capture the full period
            /// because a report is run in the middle of that period, this will still
            /// be the full period 1 year prior. For example, if date range is
            /// THIS_WEEK, but the report is run on a Wednesday, THIS_WEEK will be
            /// Monday - Wednesday, but SAME_PERIOD_PREVIOUS_YEAR will be Monday -
            /// Sunday.
            /// </summary>
            [pbr::OriginalName("SAME_PERIOD_PREVIOUS_YEAR")] SamePeriodPreviousYear = 24,
          }

          /// <summary>
          /// A date range between two fixed dates (inclusive of end date).
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FixedDateRange : pb::IMessage<FixedDateRange>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FixedDateRange> _parser = new pb::MessageParser<FixedDateRange>(() => new FixedDateRange());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FixedDateRange> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Ads.AdManager.V1.Report.Types.DateRange.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FixedDateRange() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FixedDateRange(FixedDateRange other) : this() {
              startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
              endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FixedDateRange Clone() {
              return new FixedDateRange(this);
            }

            /// <summary>Field number for the "start_date" field.</summary>
            public const int StartDateFieldNumber = 1;
            private global::Google.Type.Date startDate_;
            /// <summary>
            /// Required. The start date of this date range.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Type.Date StartDate {
              get { return startDate_; }
              set {
                startDate_ = value;
              }
            }

            /// <summary>Field number for the "end_date" field.</summary>
            public const int EndDateFieldNumber = 2;
            private global::Google.Type.Date endDate_;
            /// <summary>
            /// Required. The end date (inclusive) of this date range.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Type.Date EndDate {
              get { return endDate_; }
              set {
                endDate_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FixedDateRange);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FixedDateRange other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(StartDate, other.StartDate)) return false;
              if (!object.Equals(EndDate, other.EndDate)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (startDate_ != null) hash ^= StartDate.GetHashCode();
              if (endDate_ != null) hash ^= EndDate.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (startDate_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(StartDate);
              }
              if (endDate_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(EndDate);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (startDate_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(StartDate);
              }
              if (endDate_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(EndDate);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (startDate_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
              }
              if (endDate_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FixedDateRange other) {
              if (other == null) {
                return;
              }
              if (other.startDate_ != null) {
                if (startDate_ == null) {
                  StartDate = new global::Google.Type.Date();
                }
                StartDate.MergeFrom(other.StartDate);
              }
              if (other.endDate_ != null) {
                if (endDate_ == null) {
                  EndDate = new global::Google.Type.Date();
                }
                EndDate.MergeFrom(other.EndDate);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (startDate_ == null) {
                      StartDate = new global::Google.Type.Date();
                    }
                    input.ReadMessage(StartDate);
                    break;
                  }
                  case 18: {
                    if (endDate_ == null) {
                      EndDate = new global::Google.Type.Date();
                    }
                    input.ReadMessage(EndDate);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (startDate_ == null) {
                      StartDate = new global::Google.Type.Date();
                    }
                    input.ReadMessage(StartDate);
                    break;
                  }
                  case 18: {
                    if (endDate_ == null) {
                      EndDate = new global::Google.Type.Date();
                    }
                    input.ReadMessage(EndDate);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for a running a report.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RunReportRequest : pb::IMessage<RunReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunReportRequest> _parser = new pb::MessageParser<RunReportRequest>(() => new RunReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RunReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportRequest(RunReportRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportRequest Clone() {
      return new RunReportRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The report to run.
    /// Format: `networks/{network_code}/reports/{report_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RunReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RunReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RunReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// `RunReport` operation metadata.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RunReportMetadata : pb::IMessage<RunReportMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunReportMetadata> _parser = new pb::MessageParser<RunReportMetadata>(() => new RunReportMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RunReportMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportMetadata(RunReportMetadata other) : this() {
      percentComplete_ = other.percentComplete_;
      report_ = other.report_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportMetadata Clone() {
      return new RunReportMetadata(this);
    }

    /// <summary>Field number for the "percent_complete" field.</summary>
    public const int PercentCompleteFieldNumber = 2;
    private int percentComplete_;
    /// <summary>
    /// An estimate of how close this report is to being completed. Will always be
    /// 100 for failed and completed reports.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PercentComplete {
      get { return percentComplete_; }
      set {
        percentComplete_ = value;
      }
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 4;
    private string report_ = "";
    /// <summary>
    /// The result's parent report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Report {
      get { return report_; }
      set {
        report_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RunReportMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RunReportMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PercentComplete != other.PercentComplete) return false;
      if (Report != other.Report) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PercentComplete != 0) hash ^= PercentComplete.GetHashCode();
      if (Report.Length != 0) hash ^= Report.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PercentComplete != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PercentComplete);
      }
      if (Report.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PercentComplete != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PercentComplete);
      }
      if (Report.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PercentComplete != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PercentComplete);
      }
      if (Report.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Report);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RunReportMetadata other) {
      if (other == null) {
        return;
      }
      if (other.PercentComplete != 0) {
        PercentComplete = other.PercentComplete;
      }
      if (other.Report.Length != 0) {
        Report = other.Report;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            PercentComplete = input.ReadInt32();
            break;
          }
          case 34: {
            Report = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            PercentComplete = input.ReadInt32();
            break;
          }
          case 34: {
            Report = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for a completed `RunReport` operation.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RunReportResponse : pb::IMessage<RunReportResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunReportResponse> _parser = new pb::MessageParser<RunReportResponse>(() => new RunReportResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RunReportResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportResponse(RunReportResponse other) : this() {
      reportResult_ = other.reportResult_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunReportResponse Clone() {
      return new RunReportResponse(this);
    }

    /// <summary>Field number for the "report_result" field.</summary>
    public const int ReportResultFieldNumber = 1;
    private string reportResult_ = "";
    /// <summary>
    /// The unique name of the generated result. Use with `FetchReportResultRows`
    /// to retrieve data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReportResult {
      get { return reportResult_; }
      set {
        reportResult_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RunReportResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RunReportResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReportResult != other.ReportResult) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ReportResult.Length != 0) hash ^= ReportResult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReportResult.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReportResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReportResult.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReportResult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ReportResult.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportResult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RunReportResponse other) {
      if (other == null) {
        return;
      }
      if (other.ReportResult.Length != 0) {
        ReportResult = other.ReportResult;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReportResult = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ReportResult = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request object for `GetReport` method.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetReportRequest : pb::IMessage<GetReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetReportRequest> _parser = new pb::MessageParser<GetReportRequest>(() => new GetReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetReportRequest(GetReportRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetReportRequest Clone() {
      return new GetReportRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name of the report.
    /// Format: `networks/{network_code}/reports/{report_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request object for `ListReports` method.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListReportsRequest : pb::IMessage<ListReportsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListReportsRequest> _parser = new pb::MessageParser<ListReportsRequest>(() => new ListReportsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListReportsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListReportsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListReportsRequest(ListReportsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      skip_ = other.skip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListReportsRequest Clone() {
      return new ListReportsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The parent, which owns this collection of reports.
    /// Format: `networks/{network_code}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Optional. The maximum number of `Reports` to return. The service may return
    /// fewer than this value. If unspecified, at most 50 `Reports` will be
    /// returned. The maximum value is 1000; values above 1000 will be coerced to
    /// 1000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. A page token, received from a previous `ListReports` call.
    /// Provide this to retrieve the subsequent page.
    ///
    /// When paginating, all other parameters provided to `ListReports` must
    /// match the call that provided the page token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Optional. Expression to filter the response.
    /// See syntax details at
    /// https://developers.google.com/ad-manager/api/beta/filters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    /// <summary>
    /// Optional. Expression to specify sorting order.
    /// See syntax details at
    /// https://developers.google.com/ad-manager/api/beta/filters#order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 6;
    private int skip_;
    /// <summary>
    /// Optional. Number of individual resources to skip while paginating.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListReportsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListReportsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      if (Skip != other.Skip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (Skip != 0) hash ^= Skip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (Skip != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Skip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (Skip != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Skip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (Skip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListReportsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.Skip != 0) {
        Skip = other.Skip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
          case 48: {
            Skip = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
          case 48: {
            Skip = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response object for `ListReportsResponse` containing matching `Report`
  /// objects.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListReportsResponse : pb::IMessage<ListReportsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListReportsResponse> _parser = new pb::MessageParser<ListReportsResponse>(() => new ListReportsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListReportsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListReportsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListReportsResponse(ListReportsResponse other) : this() {
      reports_ = other.reports_.Clone();
      nextPageToken_ = other.nextPageToken_;
      totalSize_ = other.totalSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListReportsResponse Clone() {
      return new ListReportsResponse(this);
    }

    /// <summary>Field number for the "reports" field.</summary>
    public const int ReportsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report> _repeated_reports_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report> reports_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report>();
    /// <summary>
    /// The `Report` objects from the specified network.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report> Reports {
      get { return reports_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token, which can be sent as `page_token` to retrieve the next page.
    /// If this field is omitted, there are no subsequent pages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_size" field.</summary>
    public const int TotalSizeFieldNumber = 3;
    private int totalSize_;
    /// <summary>
    /// Total number of `Report` objects.
    /// If a filter was included in the request, this reflects the total number
    /// after the filtering is applied.
    ///
    /// `total_size` will not be calculated in the response unless it has been
    /// included in a response field mask. The response field mask can be provided
    /// to the method by using the URL parameter `$fields` or `fields`, or by using
    /// the HTTP/gRPC header `X-Goog-FieldMask`.
    ///
    /// For more information, see
    /// https://developers.google.com/ad-manager/api/beta/field-masks
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalSize {
      get { return totalSize_; }
      set {
        totalSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListReportsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListReportsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!reports_.Equals(other.reports_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if (TotalSize != other.TotalSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= reports_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (TotalSize != 0) hash ^= TotalSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      reports_.WriteTo(output, _repeated_reports_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (TotalSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      reports_.WriteTo(ref output, _repeated_reports_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (TotalSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += reports_.CalculateSize(_repeated_reports_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (TotalSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListReportsResponse other) {
      if (other == null) {
        return;
      }
      reports_.Add(other.reports_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      if (other.TotalSize != 0) {
        TotalSize = other.TotalSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            reports_.AddEntriesFrom(input, _repeated_reports_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 24: {
            TotalSize = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            reports_.AddEntriesFrom(ref input, _repeated_reports_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 24: {
            TotalSize = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request object for `CreateReport` method.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateReportRequest : pb::IMessage<CreateReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateReportRequest> _parser = new pb::MessageParser<CreateReportRequest>(() => new CreateReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateReportRequest(CreateReportRequest other) : this() {
      parent_ = other.parent_;
      report_ = other.report_ != null ? other.report_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateReportRequest Clone() {
      return new CreateReportRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The parent resource where this `Report` will be created.
    /// Format: `networks/{network_code}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 2;
    private global::Google.Ads.AdManager.V1.Report report_;
    /// <summary>
    /// Required. The `Report` to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report Report {
      get { return report_; }
      set {
        report_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(Report, other.Report)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (report_ != null) hash ^= Report.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (report_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (report_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (report_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Report);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.report_ != null) {
        if (report_ == null) {
          Report = new global::Google.Ads.AdManager.V1.Report();
        }
        Report.MergeFrom(other.Report);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (report_ == null) {
              Report = new global::Google.Ads.AdManager.V1.Report();
            }
            input.ReadMessage(Report);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (report_ == null) {
              Report = new global::Google.Ads.AdManager.V1.Report();
            }
            input.ReadMessage(Report);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request object for `UpdateReport` method.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateReportRequest : pb::IMessage<UpdateReportRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateReportRequest> _parser = new pb::MessageParser<UpdateReportRequest>(() => new UpdateReportRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateReportRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateReportRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateReportRequest(UpdateReportRequest other) : this() {
      report_ = other.report_ != null ? other.report_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateReportRequest Clone() {
      return new UpdateReportRequest(this);
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 1;
    private global::Google.Ads.AdManager.V1.Report report_;
    /// <summary>
    /// Required. The `Report` to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report Report {
      get { return report_; }
      set {
        report_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. The list of fields to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateReportRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateReportRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Report, other.Report)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (report_ != null) hash ^= Report.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (report_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Report);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (report_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Report);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (report_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Report);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateReportRequest other) {
      if (other == null) {
        return;
      }
      if (other.report_ != null) {
        if (report_ == null) {
          Report = new global::Google.Ads.AdManager.V1.Report();
        }
        Report.MergeFrom(other.Report);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (report_ == null) {
              Report = new global::Google.Ads.AdManager.V1.Report();
            }
            input.ReadMessage(Report);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (report_ == null) {
              Report = new global::Google.Ads.AdManager.V1.Report();
            }
            input.ReadMessage(Report);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request message for the fetch report result rows endpoint.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FetchReportResultRowsRequest : pb::IMessage<FetchReportResultRowsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FetchReportResultRowsRequest> _parser = new pb::MessageParser<FetchReportResultRowsRequest>(() => new FetchReportResultRowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FetchReportResultRowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchReportResultRowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchReportResultRowsRequest(FetchReportResultRowsRequest other) : this() {
      name_ = other.name_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchReportResultRowsRequest Clone() {
      return new FetchReportResultRowsRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The report result being fetched.
    /// Format:
    /// `networks/{network_code}/reports/{report_id}/results/{report_result_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Optional. The maximum number of rows to return. The service may return
    /// fewer than this value. If unspecified, at most 1,000 rows will be returned.
    /// The maximum value is 10,000; values above 10,000 will be reduced to 10,000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Optional. A page token, received from a previous `FetchReportResultRows`
    /// call. Provide this to retrieve the second and subsequent batches of rows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FetchReportResultRowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FetchReportResultRowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FetchReportResultRowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message for the fetch report result rows endpoint.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FetchReportResultRowsResponse : pb::IMessage<FetchReportResultRowsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FetchReportResultRowsResponse> _parser = new pb::MessageParser<FetchReportResultRowsResponse>(() => new FetchReportResultRowsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FetchReportResultRowsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchReportResultRowsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchReportResultRowsResponse(FetchReportResultRowsResponse other) : this() {
      rows_ = other.rows_.Clone();
      runTime_ = other.runTime_ != null ? other.runTime_.Clone() : null;
      dateRanges_ = other.dateRanges_.Clone();
      comparisonDateRanges_ = other.comparisonDateRanges_.Clone();
      totalRowCount_ = other.totalRowCount_;
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FetchReportResultRowsResponse Clone() {
      return new FetchReportResultRowsResponse(this);
    }

    /// <summary>Field number for the "rows" field.</summary>
    public const int RowsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row> _repeated_rows_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row> rows_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row>();
    /// <summary>
    /// Up to `page_size` rows of report data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DataTable.Types.Row> Rows {
      get { return rows_; }
    }

    /// <summary>Field number for the "run_time" field.</summary>
    public const int RunTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp runTime_;
    /// <summary>
    /// The time at which the report was scheduled to run. For non-scheduled
    /// reports, this is the time at which the report was requested to be run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RunTime {
      get { return runTime_; }
      set {
        runTime_ = value;
      }
    }

    /// <summary>Field number for the "date_ranges" field.</summary>
    public const int DateRangesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange> _repeated_dateRanges_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange> dateRanges_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange>();
    /// <summary>
    /// The computed fixed date ranges this report includes.
    /// Only returned with the first page of results (when page_token is not
    /// included in the request).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange> DateRanges {
      get { return dateRanges_; }
    }

    /// <summary>Field number for the "comparison_date_ranges" field.</summary>
    public const int ComparisonDateRangesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange> _repeated_comparisonDateRanges_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange> comparisonDateRanges_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange>();
    /// <summary>
    /// The computed comparison fixed date ranges this report includes.
    /// Only returned with the first page of results (when page_token is not
    /// included in the request).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.DateRange.Types.FixedDateRange> ComparisonDateRanges {
      get { return comparisonDateRanges_; }
    }

    /// <summary>Field number for the "total_row_count" field.</summary>
    public const int TotalRowCountFieldNumber = 5;
    private int totalRowCount_;
    /// <summary>
    /// The total number of rows available from this report. Useful for
    /// pagination.
    /// Only returned with the first page of results (when page_token is not
    /// included in the request).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalRowCount {
      get { return totalRowCount_; }
      set {
        totalRowCount_ = value;
      }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 6;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token that can be sent as `page_token` to retrieve the next page.
    /// If this field is omitted, there are no subsequent pages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FetchReportResultRowsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FetchReportResultRowsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rows_.Equals(other.rows_)) return false;
      if (!object.Equals(RunTime, other.RunTime)) return false;
      if(!dateRanges_.Equals(other.dateRanges_)) return false;
      if(!comparisonDateRanges_.Equals(other.comparisonDateRanges_)) return false;
      if (TotalRowCount != other.TotalRowCount) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rows_.GetHashCode();
      if (runTime_ != null) hash ^= RunTime.GetHashCode();
      hash ^= dateRanges_.GetHashCode();
      hash ^= comparisonDateRanges_.GetHashCode();
      if (TotalRowCount != 0) hash ^= TotalRowCount.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rows_.WriteTo(output, _repeated_rows_codec);
      if (runTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RunTime);
      }
      dateRanges_.WriteTo(output, _repeated_dateRanges_codec);
      comparisonDateRanges_.WriteTo(output, _repeated_comparisonDateRanges_codec);
      if (TotalRowCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalRowCount);
      }
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rows_.WriteTo(ref output, _repeated_rows_codec);
      if (runTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RunTime);
      }
      dateRanges_.WriteTo(ref output, _repeated_dateRanges_codec);
      comparisonDateRanges_.WriteTo(ref output, _repeated_comparisonDateRanges_codec);
      if (TotalRowCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalRowCount);
      }
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += rows_.CalculateSize(_repeated_rows_codec);
      if (runTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunTime);
      }
      size += dateRanges_.CalculateSize(_repeated_dateRanges_codec);
      size += comparisonDateRanges_.CalculateSize(_repeated_comparisonDateRanges_codec);
      if (TotalRowCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalRowCount);
      }
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FetchReportResultRowsResponse other) {
      if (other == null) {
        return;
      }
      rows_.Add(other.rows_);
      if (other.runTime_ != null) {
        if (runTime_ == null) {
          RunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RunTime.MergeFrom(other.RunTime);
      }
      dateRanges_.Add(other.dateRanges_);
      comparisonDateRanges_.Add(other.comparisonDateRanges_);
      if (other.TotalRowCount != 0) {
        TotalRowCount = other.TotalRowCount;
      }
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rows_.AddEntriesFrom(input, _repeated_rows_codec);
            break;
          }
          case 18: {
            if (runTime_ == null) {
              RunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RunTime);
            break;
          }
          case 26: {
            dateRanges_.AddEntriesFrom(input, _repeated_dateRanges_codec);
            break;
          }
          case 34: {
            comparisonDateRanges_.AddEntriesFrom(input, _repeated_comparisonDateRanges_codec);
            break;
          }
          case 40: {
            TotalRowCount = input.ReadInt32();
            break;
          }
          case 50: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rows_.AddEntriesFrom(ref input, _repeated_rows_codec);
            break;
          }
          case 18: {
            if (runTime_ == null) {
              RunTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RunTime);
            break;
          }
          case 26: {
            dateRanges_.AddEntriesFrom(ref input, _repeated_dateRanges_codec);
            break;
          }
          case 34: {
            comparisonDateRanges_.AddEntriesFrom(ref input, _repeated_comparisonDateRanges_codec);
            break;
          }
          case 40: {
            TotalRowCount = input.ReadInt32();
            break;
          }
          case 50: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The definition of how a report should be run.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReportDefinition : pb::IMessage<ReportDefinition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportDefinition> _parser = new pb::MessageParser<ReportDefinition>(() => new ReportDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReportDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportDefinition(ReportDefinition other) : this() {
      dimensions_ = other.dimensions_.Clone();
      metrics_ = other.metrics_.Clone();
      filters_ = other.filters_.Clone();
      timeZone_ = other.timeZone_;
      currencyCode_ = other.currencyCode_;
      dateRange_ = other.dateRange_ != null ? other.dateRange_.Clone() : null;
      comparisonDateRange_ = other.comparisonDateRange_ != null ? other.comparisonDateRange_.Clone() : null;
      customDimensionKeyIds_ = other.customDimensionKeyIds_.Clone();
      lineItemCustomFieldIds_ = other.lineItemCustomFieldIds_.Clone();
      orderCustomFieldIds_ = other.orderCustomFieldIds_.Clone();
      creativeCustomFieldIds_ = other.creativeCustomFieldIds_.Clone();
      reportType_ = other.reportType_;
      timePeriodColumn_ = other.timePeriodColumn_;
      flags_ = other.flags_.Clone();
      sorts_ = other.sorts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportDefinition Clone() {
      return new ReportDefinition(this);
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Dimension> _repeated_dimensions_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Ads.AdManager.V1.Report.Types.Dimension) x);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Dimension> dimensions_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Dimension>();
    /// <summary>
    /// Required. The list of dimensions to report on. If empty, the report will
    /// have no dimensions, and any metrics will be totals.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Dimension> Dimensions {
      get { return dimensions_; }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Metric> _repeated_metrics_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Ads.AdManager.V1.Report.Types.Metric) x);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Metric> metrics_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Metric>();
    /// <summary>
    /// Required. The list of metrics to report on. If empty, the report will have
    /// no metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Metric> Metrics {
      get { return metrics_; }
    }

    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Filter> _repeated_filters_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.Filter.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> filters_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter>();
    /// <summary>
    /// Optional. The filters for this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Filter> Filters {
      get { return filters_; }
    }

    /// <summary>Field number for the "time_zone" field.</summary>
    public const int TimeZoneFieldNumber = 4;
    private string timeZone_ = "";
    /// <summary>
    /// Optional. The time zone the date range is defined in for this report.
    /// Defaults to publisher's time zone if not specified. Time zone in IANA
    /// format. Acceptable values depend on the report type. Publisher time zone is
    /// always accepted. Use "America/Los_Angeles" for pacific time, or "Etc/UTC"
    /// for UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency_code" field.</summary>
    public const int CurrencyCodeFieldNumber = 5;
    private string currencyCode_ = "";
    /// <summary>
    /// Optional. The ISO 4217 currency code for this report. Defaults to publisher
    /// currency code if not specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date_range" field.</summary>
    public const int DateRangeFieldNumber = 6;
    private global::Google.Ads.AdManager.V1.Report.Types.DateRange dateRange_;
    /// <summary>
    /// Required. The primary date range of this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.DateRange DateRange {
      get { return dateRange_; }
      set {
        dateRange_ = value;
      }
    }

    /// <summary>Field number for the "comparison_date_range" field.</summary>
    public const int ComparisonDateRangeFieldNumber = 9;
    private global::Google.Ads.AdManager.V1.Report.Types.DateRange comparisonDateRange_;
    /// <summary>
    /// Optional. The comparison date range of this report. If unspecified, the
    /// report will not have any comparison metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.DateRange ComparisonDateRange {
      get { return comparisonDateRange_; }
      set {
        comparisonDateRange_ = value;
      }
    }

    /// <summary>Field number for the "custom_dimension_key_ids" field.</summary>
    public const int CustomDimensionKeyIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<long> _repeated_customDimensionKeyIds_codec
        = pb::FieldCodec.ForInt64(58);
    private readonly pbc::RepeatedField<long> customDimensionKeyIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Optional. Custom Dimension keys that represent CUSTOM_DIMENSION_*
    /// dimensions. The index of this repeated field corresponds to the index on
    /// each dimension. For example, custom_dimension_key_ids[0] describes
    /// CUSTOM_DIMENSION_0_VALUE_ID and CUSTOM_DIMENSION_0_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CustomDimensionKeyIds {
      get { return customDimensionKeyIds_; }
    }

    /// <summary>Field number for the "line_item_custom_field_ids" field.</summary>
    public const int LineItemCustomFieldIdsFieldNumber = 11;
    private static readonly pb::FieldCodec<long> _repeated_lineItemCustomFieldIds_codec
        = pb::FieldCodec.ForInt64(90);
    private readonly pbc::RepeatedField<long> lineItemCustomFieldIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Optional. Custom field IDs that represent LINE_ITEM_CUSTOM_FIELD_*
    /// dimensions. The index of this repeated field corresponds to the index on
    /// each dimension. For example, line_item_custom_field_ids[0] describes
    /// LINE_ITEM_CUSTOM_FIELD_0_OPTION_ID and LINE_ITEM_CUSTOM_FIELD_0_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> LineItemCustomFieldIds {
      get { return lineItemCustomFieldIds_; }
    }

    /// <summary>Field number for the "order_custom_field_ids" field.</summary>
    public const int OrderCustomFieldIdsFieldNumber = 12;
    private static readonly pb::FieldCodec<long> _repeated_orderCustomFieldIds_codec
        = pb::FieldCodec.ForInt64(98);
    private readonly pbc::RepeatedField<long> orderCustomFieldIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Optional. Custom field IDs that represent ORDER_CUSTOM_FIELD_*
    /// dimensions. The index of this repeated field corresponds to the index on
    /// each dimension. For example, order_custom_field_ids[0] describes
    /// ORDER_CUSTOM_FIELD_0_OPTION_ID and ORDER_CUSTOM_FIELD_0_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> OrderCustomFieldIds {
      get { return orderCustomFieldIds_; }
    }

    /// <summary>Field number for the "creative_custom_field_ids" field.</summary>
    public const int CreativeCustomFieldIdsFieldNumber = 13;
    private static readonly pb::FieldCodec<long> _repeated_creativeCustomFieldIds_codec
        = pb::FieldCodec.ForInt64(106);
    private readonly pbc::RepeatedField<long> creativeCustomFieldIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Optional. Custom field IDs that represent CREATIVE_CUSTOM_FIELD_*
    /// dimensions. The index of this repeated field corresponds to the index on
    /// each dimension. For example, creative_custom_field_ids[0] describes
    /// CREATIVE_CUSTOM_FIELD_0_OPTION_ID and CREATIVE_CUSTOM_FIELD_0_VALUE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CreativeCustomFieldIds {
      get { return creativeCustomFieldIds_; }
    }

    /// <summary>Field number for the "report_type" field.</summary>
    public const int ReportTypeFieldNumber = 8;
    private global::Google.Ads.AdManager.V1.Report.Types.ReportType reportType_ = global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified;
    /// <summary>
    /// Required. The type of this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.ReportType ReportType {
      get { return reportType_; }
      set {
        reportType_ = value;
      }
    }

    /// <summary>Field number for the "time_period_column" field.</summary>
    public const int TimePeriodColumnFieldNumber = 10;
    private global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn timePeriodColumn_ = global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified;
    /// <summary>
    /// Optional. Include a time period column to introduce comparison columns in
    /// the report for each generated period. For example, set to  "QUARTERS" here
    /// to have a column for each quarter present in the primary date range. If
    /// "PREVIOUS PERIOD" is specified in comparison_date_range, then each quarter
    /// column will also include comparison values for its relative previous
    /// quarter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn TimePeriodColumn {
      get { return timePeriodColumn_; }
      set {
        timePeriodColumn_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Flag> _repeated_flags_codec
        = pb::FieldCodec.ForMessage(114, global::Google.Ads.AdManager.V1.Report.Types.Flag.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag> flags_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag>();
    /// <summary>
    /// Optional. List of flags for this report. Used to flag rows in a result set
    /// based on a set of defined filters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag> Flags {
      get { return flags_; }
    }

    /// <summary>Field number for the "sorts" field.</summary>
    public const int SortsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Sort> _repeated_sorts_codec
        = pb::FieldCodec.ForMessage(122, global::Google.Ads.AdManager.V1.Report.Types.Sort.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Sort> sorts_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Sort>();
    /// <summary>
    /// Optional. Default sorts to apply to this report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Sort> Sorts {
      get { return sorts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReportDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReportDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dimensions_.Equals(other.dimensions_)) return false;
      if(!metrics_.Equals(other.metrics_)) return false;
      if(!filters_.Equals(other.filters_)) return false;
      if (TimeZone != other.TimeZone) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      if (!object.Equals(DateRange, other.DateRange)) return false;
      if (!object.Equals(ComparisonDateRange, other.ComparisonDateRange)) return false;
      if(!customDimensionKeyIds_.Equals(other.customDimensionKeyIds_)) return false;
      if(!lineItemCustomFieldIds_.Equals(other.lineItemCustomFieldIds_)) return false;
      if(!orderCustomFieldIds_.Equals(other.orderCustomFieldIds_)) return false;
      if(!creativeCustomFieldIds_.Equals(other.creativeCustomFieldIds_)) return false;
      if (ReportType != other.ReportType) return false;
      if (TimePeriodColumn != other.TimePeriodColumn) return false;
      if(!flags_.Equals(other.flags_)) return false;
      if(!sorts_.Equals(other.sorts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dimensions_.GetHashCode();
      hash ^= metrics_.GetHashCode();
      hash ^= filters_.GetHashCode();
      if (TimeZone.Length != 0) hash ^= TimeZone.GetHashCode();
      if (CurrencyCode.Length != 0) hash ^= CurrencyCode.GetHashCode();
      if (dateRange_ != null) hash ^= DateRange.GetHashCode();
      if (comparisonDateRange_ != null) hash ^= ComparisonDateRange.GetHashCode();
      hash ^= customDimensionKeyIds_.GetHashCode();
      hash ^= lineItemCustomFieldIds_.GetHashCode();
      hash ^= orderCustomFieldIds_.GetHashCode();
      hash ^= creativeCustomFieldIds_.GetHashCode();
      if (ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) hash ^= ReportType.GetHashCode();
      if (TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) hash ^= TimePeriodColumn.GetHashCode();
      hash ^= flags_.GetHashCode();
      hash ^= sorts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dimensions_.WriteTo(output, _repeated_dimensions_codec);
      metrics_.WriteTo(output, _repeated_metrics_codec);
      filters_.WriteTo(output, _repeated_filters_codec);
      if (TimeZone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TimeZone);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CurrencyCode);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DateRange);
      }
      customDimensionKeyIds_.WriteTo(output, _repeated_customDimensionKeyIds_codec);
      if (ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ReportType);
      }
      if (comparisonDateRange_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ComparisonDateRange);
      }
      if (TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TimePeriodColumn);
      }
      lineItemCustomFieldIds_.WriteTo(output, _repeated_lineItemCustomFieldIds_codec);
      orderCustomFieldIds_.WriteTo(output, _repeated_orderCustomFieldIds_codec);
      creativeCustomFieldIds_.WriteTo(output, _repeated_creativeCustomFieldIds_codec);
      flags_.WriteTo(output, _repeated_flags_codec);
      sorts_.WriteTo(output, _repeated_sorts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dimensions_.WriteTo(ref output, _repeated_dimensions_codec);
      metrics_.WriteTo(ref output, _repeated_metrics_codec);
      filters_.WriteTo(ref output, _repeated_filters_codec);
      if (TimeZone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TimeZone);
      }
      if (CurrencyCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CurrencyCode);
      }
      if (dateRange_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DateRange);
      }
      customDimensionKeyIds_.WriteTo(ref output, _repeated_customDimensionKeyIds_codec);
      if (ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) ReportType);
      }
      if (comparisonDateRange_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ComparisonDateRange);
      }
      if (TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) TimePeriodColumn);
      }
      lineItemCustomFieldIds_.WriteTo(ref output, _repeated_lineItemCustomFieldIds_codec);
      orderCustomFieldIds_.WriteTo(ref output, _repeated_orderCustomFieldIds_codec);
      creativeCustomFieldIds_.WriteTo(ref output, _repeated_creativeCustomFieldIds_codec);
      flags_.WriteTo(ref output, _repeated_flags_codec);
      sorts_.WriteTo(ref output, _repeated_sorts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += dimensions_.CalculateSize(_repeated_dimensions_codec);
      size += metrics_.CalculateSize(_repeated_metrics_codec);
      size += filters_.CalculateSize(_repeated_filters_codec);
      if (TimeZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeZone);
      }
      if (CurrencyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrencyCode);
      }
      if (dateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateRange);
      }
      if (comparisonDateRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComparisonDateRange);
      }
      size += customDimensionKeyIds_.CalculateSize(_repeated_customDimensionKeyIds_codec);
      size += lineItemCustomFieldIds_.CalculateSize(_repeated_lineItemCustomFieldIds_codec);
      size += orderCustomFieldIds_.CalculateSize(_repeated_orderCustomFieldIds_codec);
      size += creativeCustomFieldIds_.CalculateSize(_repeated_creativeCustomFieldIds_codec);
      if (ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReportType);
      }
      if (TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TimePeriodColumn);
      }
      size += flags_.CalculateSize(_repeated_flags_codec);
      size += sorts_.CalculateSize(_repeated_sorts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReportDefinition other) {
      if (other == null) {
        return;
      }
      dimensions_.Add(other.dimensions_);
      metrics_.Add(other.metrics_);
      filters_.Add(other.filters_);
      if (other.TimeZone.Length != 0) {
        TimeZone = other.TimeZone;
      }
      if (other.CurrencyCode.Length != 0) {
        CurrencyCode = other.CurrencyCode;
      }
      if (other.dateRange_ != null) {
        if (dateRange_ == null) {
          DateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
        }
        DateRange.MergeFrom(other.DateRange);
      }
      if (other.comparisonDateRange_ != null) {
        if (comparisonDateRange_ == null) {
          ComparisonDateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
        }
        ComparisonDateRange.MergeFrom(other.ComparisonDateRange);
      }
      customDimensionKeyIds_.Add(other.customDimensionKeyIds_);
      lineItemCustomFieldIds_.Add(other.lineItemCustomFieldIds_);
      orderCustomFieldIds_.Add(other.orderCustomFieldIds_);
      creativeCustomFieldIds_.Add(other.creativeCustomFieldIds_);
      if (other.ReportType != global::Google.Ads.AdManager.V1.Report.Types.ReportType.Unspecified) {
        ReportType = other.ReportType;
      }
      if (other.TimePeriodColumn != global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn.Unspecified) {
        TimePeriodColumn = other.TimePeriodColumn;
      }
      flags_.Add(other.flags_);
      sorts_.Add(other.sorts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            dimensions_.AddEntriesFrom(input, _repeated_dimensions_codec);
            break;
          }
          case 18:
          case 16: {
            metrics_.AddEntriesFrom(input, _repeated_metrics_codec);
            break;
          }
          case 26: {
            filters_.AddEntriesFrom(input, _repeated_filters_codec);
            break;
          }
          case 34: {
            TimeZone = input.ReadString();
            break;
          }
          case 42: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 50: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 58:
          case 56: {
            customDimensionKeyIds_.AddEntriesFrom(input, _repeated_customDimensionKeyIds_codec);
            break;
          }
          case 64: {
            ReportType = (global::Google.Ads.AdManager.V1.Report.Types.ReportType) input.ReadEnum();
            break;
          }
          case 74: {
            if (comparisonDateRange_ == null) {
              ComparisonDateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
            }
            input.ReadMessage(ComparisonDateRange);
            break;
          }
          case 80: {
            TimePeriodColumn = (global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn) input.ReadEnum();
            break;
          }
          case 90:
          case 88: {
            lineItemCustomFieldIds_.AddEntriesFrom(input, _repeated_lineItemCustomFieldIds_codec);
            break;
          }
          case 98:
          case 96: {
            orderCustomFieldIds_.AddEntriesFrom(input, _repeated_orderCustomFieldIds_codec);
            break;
          }
          case 106:
          case 104: {
            creativeCustomFieldIds_.AddEntriesFrom(input, _repeated_creativeCustomFieldIds_codec);
            break;
          }
          case 114: {
            flags_.AddEntriesFrom(input, _repeated_flags_codec);
            break;
          }
          case 122: {
            sorts_.AddEntriesFrom(input, _repeated_sorts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            dimensions_.AddEntriesFrom(ref input, _repeated_dimensions_codec);
            break;
          }
          case 18:
          case 16: {
            metrics_.AddEntriesFrom(ref input, _repeated_metrics_codec);
            break;
          }
          case 26: {
            filters_.AddEntriesFrom(ref input, _repeated_filters_codec);
            break;
          }
          case 34: {
            TimeZone = input.ReadString();
            break;
          }
          case 42: {
            CurrencyCode = input.ReadString();
            break;
          }
          case 50: {
            if (dateRange_ == null) {
              DateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
            }
            input.ReadMessage(DateRange);
            break;
          }
          case 58:
          case 56: {
            customDimensionKeyIds_.AddEntriesFrom(ref input, _repeated_customDimensionKeyIds_codec);
            break;
          }
          case 64: {
            ReportType = (global::Google.Ads.AdManager.V1.Report.Types.ReportType) input.ReadEnum();
            break;
          }
          case 74: {
            if (comparisonDateRange_ == null) {
              ComparisonDateRange = new global::Google.Ads.AdManager.V1.Report.Types.DateRange();
            }
            input.ReadMessage(ComparisonDateRange);
            break;
          }
          case 80: {
            TimePeriodColumn = (global::Google.Ads.AdManager.V1.Report.Types.TimePeriodColumn) input.ReadEnum();
            break;
          }
          case 90:
          case 88: {
            lineItemCustomFieldIds_.AddEntriesFrom(ref input, _repeated_lineItemCustomFieldIds_codec);
            break;
          }
          case 98:
          case 96: {
            orderCustomFieldIds_.AddEntriesFrom(ref input, _repeated_orderCustomFieldIds_codec);
            break;
          }
          case 106:
          case 104: {
            creativeCustomFieldIds_.AddEntriesFrom(ref input, _repeated_creativeCustomFieldIds_codec);
            break;
          }
          case 114: {
            flags_.AddEntriesFrom(ref input, _repeated_flags_codec);
            break;
          }
          case 122: {
            sorts_.AddEntriesFrom(ref input, _repeated_sorts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The options for a scheduled report.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ScheduleOptions : pb::IMessage<ScheduleOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleOptions> _parser = new pb::MessageParser<ScheduleOptions>(() => new ScheduleOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleOptions(ScheduleOptions other) : this() {
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      deliveryCondition_ = other.deliveryCondition_;
      flags_ = other.flags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleOptions Clone() {
      return new ScheduleOptions(this);
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 1;
    private global::Google.Ads.AdManager.V1.Schedule schedule_;
    /// <summary>
    /// Information pertaining to schedule itself.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    /// <summary>Field number for the "delivery_condition" field.</summary>
    public const int DeliveryConditionFieldNumber = 2;
    private global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition deliveryCondition_ = global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never;
    /// <summary>
    /// Option for when to deliver the scheduled report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition DeliveryCondition {
      get { return deliveryCondition_; }
      set {
        deliveryCondition_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Ads.AdManager.V1.Report.Types.Flag> _repeated_flags_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Ads.AdManager.V1.Report.Types.Flag.Parser);
    private readonly pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag> flags_ = new pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag>();
    /// <summary>
    /// Optional. The flags evaluated when ReportDeliveryOption.WHEN_FLAG_PRESENT
    /// is specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Ads.AdManager.V1.Report.Types.Flag> Flags {
      get { return flags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Schedule, other.Schedule)) return false;
      if (DeliveryCondition != other.DeliveryCondition) return false;
      if(!flags_.Equals(other.flags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) hash ^= DeliveryCondition.GetHashCode();
      hash ^= flags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (schedule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Schedule);
      }
      if (DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DeliveryCondition);
      }
      flags_.WriteTo(output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (schedule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Schedule);
      }
      if (DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) {
        output.WriteRawTag(16);
        output.WriteEnum((int) DeliveryCondition);
      }
      flags_.WriteTo(ref output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DeliveryCondition);
      }
      size += flags_.CalculateSize(_repeated_flags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleOptions other) {
      if (other == null) {
        return;
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Google.Ads.AdManager.V1.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      if (other.DeliveryCondition != global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition.Never) {
        DeliveryCondition = other.DeliveryCondition;
      }
      flags_.Add(other.flags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (schedule_ == null) {
              Schedule = new global::Google.Ads.AdManager.V1.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 16: {
            DeliveryCondition = (global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition) input.ReadEnum();
            break;
          }
          case 26: {
            flags_.AddEntriesFrom(input, _repeated_flags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (schedule_ == null) {
              Schedule = new global::Google.Ads.AdManager.V1.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
          case 16: {
            DeliveryCondition = (global::Google.Ads.AdManager.V1.ScheduleOptions.Types.DeliveryCondition) input.ReadEnum();
            break;
          }
          case 26: {
            flags_.AddEntriesFrom(ref input, _repeated_flags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ScheduleOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Condition for when to email the scheduled report.
      /// </summary>
      public enum DeliveryCondition {
        /// <summary>
        /// Never deliver report.
        /// </summary>
        [pbr::OriginalName("NEVER")] Never = 0,
        /// <summary>
        /// Always deliver report.
        /// </summary>
        [pbr::OriginalName("ALWAYS")] Always = 1,
        /// <summary>
        /// Deliver report when flag's conditions are met.
        /// </summary>
        [pbr::OriginalName("WHEN_FLAG_CONDITIONS_MET")] WhenFlagConditionsMet = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// The schedule for the report
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Schedule : pb::IMessage<Schedule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Schedule> _parser = new pb::MessageParser<Schedule>(() => new Schedule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Schedule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Ads.AdManager.V1.ReportServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule(Schedule other) : this() {
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      frequency_ = other.frequency_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      switch (other.FrequencyScheduleCase) {
        case FrequencyScheduleOneofCase.WeeklySchedule:
          WeeklySchedule = other.WeeklySchedule.Clone();
          break;
        case FrequencyScheduleOneofCase.MonthlySchedule:
          MonthlySchedule = other.MonthlySchedule.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Schedule Clone() {
      return new Schedule(this);
    }

    /// <summary>Field number for the "weekly_schedule" field.</summary>
    public const int WeeklyScheduleFieldNumber = 6;
    /// <summary>
    /// Days of week to schedule report run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule WeeklySchedule {
      get { return frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule ? (global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule) frequencySchedule_ : null; }
      set {
        frequencySchedule_ = value;
        frequencyScheduleCase_ = value == null ? FrequencyScheduleOneofCase.None : FrequencyScheduleOneofCase.WeeklySchedule;
      }
    }

    /// <summary>Field number for the "monthly_schedule" field.</summary>
    public const int MonthlyScheduleFieldNumber = 7;
    /// <summary>
    /// Days of month to schedule report run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule MonthlySchedule {
      get { return frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule ? (global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule) frequencySchedule_ : null; }
      set {
        frequencySchedule_ = value;
        frequencyScheduleCase_ = value == null ? FrequencyScheduleOneofCase.None : FrequencyScheduleOneofCase.MonthlySchedule;
      }
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 1;
    private global::Google.Type.Date startDate_;
    /// <summary>
    /// Date for the first run of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.Date StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 2;
    private global::Google.Type.Date endDate_;
    /// <summary>
    /// Date for the final run of the report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.Date EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "frequency" field.</summary>
    public const int FrequencyFieldNumber = 3;
    private global::Google.Ads.AdManager.V1.Schedule.Types.Frequency frequency_ = global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified;
    /// <summary>
    /// Frequency to run report.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Ads.AdManager.V1.Schedule.Types.Frequency Frequency {
      get { return frequency_; }
      set {
        frequency_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Type.TimeOfDay startTime_;
    /// <summary>
    /// Indicates start time for schedule to run
    /// Will use the time_zone from `ReportDefinition`. Defaults
    /// to the publisher's time zone if not specified.
    ///
    /// For HOURLY, TWO_TIMES_DAILY, THREE_TIMES_DAILY, or FOUR_TIMES_DAILY, this
    /// will be the time of day that the first report will run on the first day.
    /// For example, if the start time is 2:00 PM, and the frequency is
    /// THREE_TIMES_DAILY, the first day will have reports scheduled at 2:00 PM,
    /// 10:00 PM. Each subsequent day will have reports scheduled at 6:00 AM,
    /// 2:00 PM, 10:00 PM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.TimeOfDay StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    private object frequencySchedule_;
    /// <summary>Enum of possible cases for the "frequency_schedule" oneof.</summary>
    public enum FrequencyScheduleOneofCase {
      None = 0,
      WeeklySchedule = 6,
      MonthlySchedule = 7,
    }
    private FrequencyScheduleOneofCase frequencyScheduleCase_ = FrequencyScheduleOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FrequencyScheduleOneofCase FrequencyScheduleCase {
      get { return frequencyScheduleCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFrequencySchedule() {
      frequencyScheduleCase_ = FrequencyScheduleOneofCase.None;
      frequencySchedule_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Schedule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Schedule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WeeklySchedule, other.WeeklySchedule)) return false;
      if (!object.Equals(MonthlySchedule, other.MonthlySchedule)) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (Frequency != other.Frequency) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (FrequencyScheduleCase != other.FrequencyScheduleCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) hash ^= WeeklySchedule.GetHashCode();
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) hash ^= MonthlySchedule.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) hash ^= Frequency.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      hash ^= (int) frequencyScheduleCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (startDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndDate);
      }
      if (Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Frequency);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
        output.WriteRawTag(50);
        output.WriteMessage(WeeklySchedule);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
        output.WriteRawTag(58);
        output.WriteMessage(MonthlySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (startDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndDate);
      }
      if (Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Frequency);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
        output.WriteRawTag(50);
        output.WriteMessage(WeeklySchedule);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
        output.WriteRawTag(58);
        output.WriteMessage(MonthlySchedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeeklySchedule);
      }
      if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonthlySchedule);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Frequency);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Schedule other) {
      if (other == null) {
        return;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::Google.Type.Date();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Type.Date();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.Frequency != global::Google.Ads.AdManager.V1.Schedule.Types.Frequency.Unspecified) {
        Frequency = other.Frequency;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Type.TimeOfDay();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      switch (other.FrequencyScheduleCase) {
        case FrequencyScheduleOneofCase.WeeklySchedule:
          if (WeeklySchedule == null) {
            WeeklySchedule = new global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule();
          }
          WeeklySchedule.MergeFrom(other.WeeklySchedule);
          break;
        case FrequencyScheduleOneofCase.MonthlySchedule:
          if (MonthlySchedule == null) {
            MonthlySchedule = new global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule();
          }
          MonthlySchedule.MergeFrom(other.MonthlySchedule);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startDate_ == null) {
              StartDate = new global::Google.Type.Date();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 18: {
            if (endDate_ == null) {
              EndDate = new global::Google.Type.Date();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 24: {
            Frequency = (global::Google.Ads.AdManager.V1.Schedule.Types.Frequency) input.ReadEnum();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 50: {
            global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule subBuilder = new global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule();
            if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
              subBuilder.MergeFrom(WeeklySchedule);
            }
            input.ReadMessage(subBuilder);
            WeeklySchedule = subBuilder;
            break;
          }
          case 58: {
            global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule subBuilder = new global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule();
            if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
              subBuilder.MergeFrom(MonthlySchedule);
            }
            input.ReadMessage(subBuilder);
            MonthlySchedule = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (startDate_ == null) {
              StartDate = new global::Google.Type.Date();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 18: {
            if (endDate_ == null) {
              EndDate = new global::Google.Type.Date();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 24: {
            Frequency = (global::Google.Ads.AdManager.V1.Schedule.Types.Frequency) input.ReadEnum();
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 50: {
            global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule subBuilder = new global::Google.Ads.AdManager.V1.Schedule.Types.WeeklySchedule();
            if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.WeeklySchedule) {
              subBuilder.MergeFrom(WeeklySchedule);
            }
            input.ReadMessage(subBuilder);
            WeeklySchedule = subBuilder;
            break;
          }
          case 58: {
            global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule subBuilder = new global::Google.Ads.AdManager.V1.Schedule.Types.MonthlySchedule();
            if (frequencyScheduleCase_ == FrequencyScheduleOneofCase.MonthlySchedule) {
              subBuilder.MergeFrom(MonthlySchedule);
            }
            input.ReadMessage(subBuilder);
            MonthlySchedule = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Schedule message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Frequency to run report.
      /// </summary>
      public enum Frequency {
        /// <summary>
        /// No Frequency specified.
        /// </summary>
        [pbr::OriginalName("FREQUENCY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Schedule report to run every hour.
        /// </summary>
        [pbr::OriginalName("HOURLY")] Hourly = 1,
        /// <summary>
        /// Schedule report to run twice a day (every 12 hours).
        /// </summary>
        [pbr::OriginalName("TWO_TIMES_DAILY")] TwoTimesDaily = 2,
        /// <summary>
        /// Schedule report to run three times a day (every 8 hours).
        /// </summary>
        [pbr::OriginalName("THREE_TIMES_DAILY")] ThreeTimesDaily = 3,
        /// <summary>
        /// Schedule report to run four times a day (every 6 hours).
        /// </summary>
        [pbr::OriginalName("FOUR_TIMES_DAILY")] FourTimesDaily = 4,
        /// <summary>
        /// Schedule report to run on a daily basis.
        /// </summary>
        [pbr::OriginalName("DAILY")] Daily = 5,
        /// <summary>
        /// Schedule report to run on a weekly basis.
        /// </summary>
        [pbr::OriginalName("WEEKLY")] Weekly = 6,
        /// <summary>
        /// Schedule report to run on a monthly basis.
        /// </summary>
        [pbr::OriginalName("MONTHLY")] Monthly = 7,
      }

      /// <summary>
      /// Days of week to schedule report run.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class WeeklySchedule : pb::IMessage<WeeklySchedule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WeeklySchedule> _parser = new pb::MessageParser<WeeklySchedule>(() => new WeeklySchedule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<WeeklySchedule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Schedule.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WeeklySchedule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WeeklySchedule(WeeklySchedule other) : this() {
          weeklyScheduledDays_ = other.weeklyScheduledDays_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WeeklySchedule Clone() {
          return new WeeklySchedule(this);
        }

        /// <summary>Field number for the "weekly_scheduled_days" field.</summary>
        public const int WeeklyScheduledDaysFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Type.DayOfWeek> _repeated_weeklyScheduledDays_codec
            = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Google.Type.DayOfWeek) x);
        private readonly pbc::RepeatedField<global::Google.Type.DayOfWeek> weeklyScheduledDays_ = new pbc::RepeatedField<global::Google.Type.DayOfWeek>();
        /// <summary>
        /// Specifies days of the week on which to run report.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Type.DayOfWeek> WeeklyScheduledDays {
          get { return weeklyScheduledDays_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as WeeklySchedule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(WeeklySchedule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!weeklyScheduledDays_.Equals(other.weeklyScheduledDays_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= weeklyScheduledDays_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          weeklyScheduledDays_.WriteTo(output, _repeated_weeklyScheduledDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          weeklyScheduledDays_.WriteTo(ref output, _repeated_weeklyScheduledDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += weeklyScheduledDays_.CalculateSize(_repeated_weeklyScheduledDays_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(WeeklySchedule other) {
          if (other == null) {
            return;
          }
          weeklyScheduledDays_.Add(other.weeklyScheduledDays_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                weeklyScheduledDays_.AddEntriesFrom(input, _repeated_weeklyScheduledDays_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                weeklyScheduledDays_.AddEntriesFrom(ref input, _repeated_weeklyScheduledDays_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Days of Month to schedule report run.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class MonthlySchedule : pb::IMessage<MonthlySchedule>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MonthlySchedule> _parser = new pb::MessageParser<MonthlySchedule>(() => new MonthlySchedule());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<MonthlySchedule> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Ads.AdManager.V1.Schedule.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MonthlySchedule() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MonthlySchedule(MonthlySchedule other) : this() {
          monthlyScheduledDays_ = other.monthlyScheduledDays_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public MonthlySchedule Clone() {
          return new MonthlySchedule(this);
        }

        /// <summary>Field number for the "monthly_scheduled_days" field.</summary>
        public const int MonthlyScheduledDaysFieldNumber = 1;
        private static readonly pb::FieldCodec<int> _repeated_monthlyScheduledDays_codec
            = pb::FieldCodec.ForInt32(10);
        private readonly pbc::RepeatedField<int> monthlyScheduledDays_ = new pbc::RepeatedField<int>();
        /// <summary>
        /// Specifies days of the month to run report. Range is from 1-31.
        /// Will ignore days that are not valid for the given month.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<int> MonthlyScheduledDays {
          get { return monthlyScheduledDays_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as MonthlySchedule);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(MonthlySchedule other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!monthlyScheduledDays_.Equals(other.monthlyScheduledDays_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= monthlyScheduledDays_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          monthlyScheduledDays_.WriteTo(output, _repeated_monthlyScheduledDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          monthlyScheduledDays_.WriteTo(ref output, _repeated_monthlyScheduledDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += monthlyScheduledDays_.CalculateSize(_repeated_monthlyScheduledDays_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(MonthlySchedule other) {
          if (other == null) {
            return;
          }
          monthlyScheduledDays_.Add(other.monthlyScheduledDays_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                monthlyScheduledDays_.AddEntriesFrom(input, _repeated_monthlyScheduledDays_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                monthlyScheduledDays_.AddEntriesFrom(ref input, _repeated_monthlyScheduledDays_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
