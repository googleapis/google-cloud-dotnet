// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/gkebackup/v1/volume.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.GkeBackup.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/gkebackup/v1/volume.proto</summary>
  public static partial class VolumeReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/gkebackup/v1/volume.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VolumeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZnb29nbGUvY2xvdWQvZ2tlYmFja3VwL3YxL3ZvbHVtZS5wcm90bxIZZ29v",
            "Z2xlLmNsb3VkLmdrZWJhY2t1cC52MRofZ29vZ2xlL2FwaS9maWVsZF9iZWhh",
            "dmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5wcm90bxomZ29vZ2xl",
            "L2Nsb3VkL2drZWJhY2t1cC92MS9jb21tb24ucHJvdG8aH2dvb2dsZS9wcm90",
            "b2J1Zi90aW1lc3RhbXAucHJvdG8iqAcKDFZvbHVtZUJhY2t1cBIRCgRuYW1l",
            "GAEgASgJQgPgQQMSEAoDdWlkGAIgASgJQgPgQQMSNAoLY3JlYXRlX3RpbWUY",
            "AyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSNAoLdXBk",
            "YXRlX3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPg",
            "QQMSQgoKc291cmNlX3B2YxgFIAEoCzIpLmdvb2dsZS5jbG91ZC5na2ViYWNr",
            "dXAudjEuTmFtZXNwYWNlZE5hbWVCA+BBAxIhChR2b2x1bWVfYmFja3VwX2hh",
            "bmRsZRgGIAEoCUID4EEDEk8KBmZvcm1hdBgHIAEoDjI6Lmdvb2dsZS5jbG91",
            "ZC5na2ViYWNrdXAudjEuVm9sdW1lQmFja3VwLlZvbHVtZUJhY2t1cEZvcm1h",
            "dEID4EEDEhoKDXN0b3JhZ2VfYnl0ZXMYCCABKANCA+BBAxIcCg9kaXNrX3Np",
            "emVfYnl0ZXMYCSABKANCA+BBAxI2Cg1jb21wbGV0ZV90aW1lGAogASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEkEKBXN0YXRlGAsgASgO",
            "Mi0uZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5Wb2x1bWVCYWNrdXAuU3Rh",
            "dGVCA+BBAxIaCg1zdGF0ZV9tZXNzYWdlGAwgASgJQgPgQQMSEQoEZXRhZxgN",
            "IAEoCUID4EEDIlMKElZvbHVtZUJhY2t1cEZvcm1hdBIkCiBWT0xVTUVfQkFD",
            "S1VQX0ZPUk1BVF9VTlNQRUNJRklFRBAAEhcKE0dDRV9QRVJTSVNURU5UX0RJ",
            "U0sQASJ2CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgwKCENSRUFU",
            "SU5HEAESEAoMU05BUFNIT1RUSU5HEAISDQoJVVBMT0FESU5HEAMSDQoJU1VD",
            "Q0VFREVEEAQSCgoGRkFJTEVEEAUSDAoIREVMRVRJTkcQBjqdAepBmQEKJWdr",
            "ZWJhY2t1cC5nb29nbGVhcGlzLmNvbS9Wb2x1bWVCYWNrdXAScHByb2plY3Rz",
            "L3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9iYWNrdXBQbGFucy97",
            "YmFja3VwX3BsYW59L2JhY2t1cHMve2JhY2t1cH0vdm9sdW1lQmFja3Vwcy97",
            "dm9sdW1lX2JhY2t1cH0i5wYKDVZvbHVtZVJlc3RvcmUSEQoEbmFtZRgBIAEo",
            "CUID4EEDEhAKA3VpZBgCIAEoCUID4EEDEjQKC2NyZWF0ZV90aW1lGAMgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC3VwZGF0ZV90",
            "aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEhoK",
            "DXZvbHVtZV9iYWNrdXAYBSABKAlCA+BBAxJCCgp0YXJnZXRfcHZjGAYgASgL",
            "MikuZ29vZ2xlLmNsb3VkLmdrZWJhY2t1cC52MS5OYW1lc3BhY2VkTmFtZUID",
            "4EEDEhoKDXZvbHVtZV9oYW5kbGUYByABKAlCA+BBAxJNCgt2b2x1bWVfdHlw",
            "ZRgIIAEoDjIzLmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuVm9sdW1lUmVz",
            "dG9yZS5Wb2x1bWVUeXBlQgPgQQMSNgoNY29tcGxldGVfdGltZRgJIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxJCCgVzdGF0ZRgKIAEo",
            "DjIuLmdvb2dsZS5jbG91ZC5na2ViYWNrdXAudjEuVm9sdW1lUmVzdG9yZS5T",
            "dGF0ZUID4EEDEhoKDXN0YXRlX21lc3NhZ2UYCyABKAlCA+BBAxIRCgRldGFn",
            "GAwgASgJQgPgQQMiQgoKVm9sdW1lVHlwZRIbChdWT0xVTUVfVFlQRV9VTlNQ",
            "RUNJRklFRBAAEhcKE0dDRV9QRVJTSVNURU5UX0RJU0sQASJkCgVTdGF0ZRIV",
            "ChFTVEFURV9VTlNQRUNJRklFRBAAEgwKCENSRUFUSU5HEAESDQoJUkVTVE9S",
            "SU5HEAISDQoJU1VDQ0VFREVEEAMSCgoGRkFJTEVEEAQSDAoIREVMRVRJTkcQ",
            "BTqkAepBoAEKJmdrZWJhY2t1cC5nb29nbGVhcGlzLmNvbS9Wb2x1bWVSZXN0",
            "b3JlEnZwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0v",
            "cmVzdG9yZVBsYW5zL3tyZXN0b3JlX3BsYW59L3Jlc3RvcmVzL3tyZXN0b3Jl",
            "fS92b2x1bWVSZXN0b3Jlcy97dm9sdW1lX3Jlc3RvcmV9QsIBCh1jb20uZ29v",
            "Z2xlLmNsb3VkLmdrZWJhY2t1cC52MUILVm9sdW1lUHJvdG9QAVo7Y2xvdWQu",
            "Z29vZ2xlLmNvbS9nby9na2ViYWNrdXAvYXBpdjEvZ2tlYmFja3VwcGI7Z2tl",
            "YmFja3VwcGKqAhlHb29nbGUuQ2xvdWQuR2tlQmFja3VwLlYxygIZR29vZ2xl",
            "XENsb3VkXEdrZUJhY2t1cFxWMeoCHEdvb2dsZTo6Q2xvdWQ6OkdrZUJhY2t1",
            "cDo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.GkeBackup.V1.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeBackup.V1.VolumeBackup), global::Google.Cloud.GkeBackup.V1.VolumeBackup.Parser, new[]{ "Name", "Uid", "CreateTime", "UpdateTime", "SourcePvc", "VolumeBackupHandle", "Format", "StorageBytes", "DiskSizeBytes", "CompleteTime", "State", "StateMessage", "Etag" }, null, new[]{ typeof(global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat), typeof(global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.GkeBackup.V1.VolumeRestore), global::Google.Cloud.GkeBackup.V1.VolumeRestore.Parser, new[]{ "Name", "Uid", "CreateTime", "UpdateTime", "VolumeBackup", "TargetPvc", "VolumeHandle", "VolumeType", "CompleteTime", "State", "StateMessage", "Etag" }, null, new[]{ typeof(global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType), typeof(global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents the backup of a specific persistent volume as a component of a
  /// Backup - both the record of the operation and a pointer to the underlying
  /// storage-specific artifacts.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VolumeBackup : pb::IMessage<VolumeBackup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VolumeBackup> _parser = new pb::MessageParser<VolumeBackup>(() => new VolumeBackup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VolumeBackup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeBackup.V1.VolumeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeBackup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeBackup(VolumeBackup other) : this() {
      name_ = other.name_;
      uid_ = other.uid_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      sourcePvc_ = other.sourcePvc_ != null ? other.sourcePvc_.Clone() : null;
      volumeBackupHandle_ = other.volumeBackupHandle_;
      format_ = other.format_;
      storageBytes_ = other.storageBytes_;
      diskSizeBytes_ = other.diskSizeBytes_;
      completeTime_ = other.completeTime_ != null ? other.completeTime_.Clone() : null;
      state_ = other.state_;
      stateMessage_ = other.stateMessage_;
      etag_ = other.etag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeBackup Clone() {
      return new VolumeBackup(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The full name of the VolumeBackup resource.
    /// Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private string uid_ = "";
    /// <summary>
    /// Output only. Server generated global unique identifier of
    /// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The timestamp when this VolumeBackup resource was
    /// created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The timestamp when this VolumeBackup resource was last
    /// updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "source_pvc" field.</summary>
    public const int SourcePvcFieldNumber = 5;
    private global::Google.Cloud.GkeBackup.V1.NamespacedName sourcePvc_;
    /// <summary>
    /// Output only. A reference to the source Kubernetes PVC from which this
    /// VolumeBackup was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GkeBackup.V1.NamespacedName SourcePvc {
      get { return sourcePvc_; }
      set {
        sourcePvc_ = value;
      }
    }

    /// <summary>Field number for the "volume_backup_handle" field.</summary>
    public const int VolumeBackupHandleFieldNumber = 6;
    private string volumeBackupHandle_ = "";
    /// <summary>
    /// Output only. A storage system-specific opaque handle to the underlying
    /// volume backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VolumeBackupHandle {
      get { return volumeBackupHandle_; }
      set {
        volumeBackupHandle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 7;
    private global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat format_ = global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat.Unspecified;
    /// <summary>
    /// Output only. The format used for the volume backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat Format {
      get { return format_; }
      set {
        format_ = value;
      }
    }

    /// <summary>Field number for the "storage_bytes" field.</summary>
    public const int StorageBytesFieldNumber = 8;
    private long storageBytes_;
    /// <summary>
    /// Output only. The aggregate size of the underlying artifacts associated with
    /// this VolumeBackup in the backup storage. This may change over time when
    /// multiple backups of the same volume share the same backup storage
    /// location. In particular, this is likely to increase in size when
    /// the immediately preceding backup of the same volume is deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StorageBytes {
      get { return storageBytes_; }
      set {
        storageBytes_ = value;
      }
    }

    /// <summary>Field number for the "disk_size_bytes" field.</summary>
    public const int DiskSizeBytesFieldNumber = 9;
    private long diskSizeBytes_;
    /// <summary>
    /// Output only. The minimum size of the disk to which this VolumeBackup can be
    /// restored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DiskSizeBytes {
      get { return diskSizeBytes_; }
      set {
        diskSizeBytes_ = value;
      }
    }

    /// <summary>Field number for the "complete_time" field.</summary>
    public const int CompleteTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp completeTime_;
    /// <summary>
    /// Output only. The timestamp when the associated underlying volume backup
    /// operation completed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CompleteTime {
      get { return completeTime_; }
      set {
        completeTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 11;
    private global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State state_ = global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of this VolumeBackup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "state_message" field.</summary>
    public const int StateMessageFieldNumber = 12;
    private string stateMessage_ = "";
    /// <summary>
    /// Output only. A human readable message explaining why the VolumeBackup is in
    /// its current state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StateMessage {
      get { return stateMessage_; }
      set {
        stateMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 13;
    private string etag_ = "";
    /// <summary>
    /// Output only. `etag` is used for optimistic concurrency control as a way to
    /// help prevent simultaneous updates of a volume backup from overwriting each
    /// other. It is strongly suggested that systems make use of the `etag` in the
    /// read-modify-write cycle to perform volume backup updates in order to avoid
    /// race conditions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VolumeBackup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VolumeBackup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Uid != other.Uid) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(SourcePvc, other.SourcePvc)) return false;
      if (VolumeBackupHandle != other.VolumeBackupHandle) return false;
      if (Format != other.Format) return false;
      if (StorageBytes != other.StorageBytes) return false;
      if (DiskSizeBytes != other.DiskSizeBytes) return false;
      if (!object.Equals(CompleteTime, other.CompleteTime)) return false;
      if (State != other.State) return false;
      if (StateMessage != other.StateMessage) return false;
      if (Etag != other.Etag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (sourcePvc_ != null) hash ^= SourcePvc.GetHashCode();
      if (VolumeBackupHandle.Length != 0) hash ^= VolumeBackupHandle.GetHashCode();
      if (Format != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat.Unspecified) hash ^= Format.GetHashCode();
      if (StorageBytes != 0L) hash ^= StorageBytes.GetHashCode();
      if (DiskSizeBytes != 0L) hash ^= DiskSizeBytes.GetHashCode();
      if (completeTime_ != null) hash ^= CompleteTime.GetHashCode();
      if (State != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (StateMessage.Length != 0) hash ^= StateMessage.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
      if (sourcePvc_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SourcePvc);
      }
      if (VolumeBackupHandle.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VolumeBackupHandle);
      }
      if (Format != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Format);
      }
      if (StorageBytes != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(StorageBytes);
      }
      if (DiskSizeBytes != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(DiskSizeBytes);
      }
      if (completeTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CompleteTime);
      }
      if (State != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State.Unspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) State);
      }
      if (StateMessage.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(StateMessage);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Etag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
      if (sourcePvc_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SourcePvc);
      }
      if (VolumeBackupHandle.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VolumeBackupHandle);
      }
      if (Format != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Format);
      }
      if (StorageBytes != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(StorageBytes);
      }
      if (DiskSizeBytes != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(DiskSizeBytes);
      }
      if (completeTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CompleteTime);
      }
      if (State != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State.Unspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) State);
      }
      if (StateMessage.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(StateMessage);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Etag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (sourcePvc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourcePvc);
      }
      if (VolumeBackupHandle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VolumeBackupHandle);
      }
      if (Format != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (StorageBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StorageBytes);
      }
      if (DiskSizeBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiskSizeBytes);
      }
      if (completeTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompleteTime);
      }
      if (State != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (StateMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateMessage);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VolumeBackup other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.sourcePvc_ != null) {
        if (sourcePvc_ == null) {
          SourcePvc = new global::Google.Cloud.GkeBackup.V1.NamespacedName();
        }
        SourcePvc.MergeFrom(other.SourcePvc);
      }
      if (other.VolumeBackupHandle.Length != 0) {
        VolumeBackupHandle = other.VolumeBackupHandle;
      }
      if (other.Format != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat.Unspecified) {
        Format = other.Format;
      }
      if (other.StorageBytes != 0L) {
        StorageBytes = other.StorageBytes;
      }
      if (other.DiskSizeBytes != 0L) {
        DiskSizeBytes = other.DiskSizeBytes;
      }
      if (other.completeTime_ != null) {
        if (completeTime_ == null) {
          CompleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CompleteTime.MergeFrom(other.CompleteTime);
      }
      if (other.State != global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.StateMessage.Length != 0) {
        StateMessage = other.StateMessage;
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 42: {
            if (sourcePvc_ == null) {
              SourcePvc = new global::Google.Cloud.GkeBackup.V1.NamespacedName();
            }
            input.ReadMessage(SourcePvc);
            break;
          }
          case 50: {
            VolumeBackupHandle = input.ReadString();
            break;
          }
          case 56: {
            Format = (global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat) input.ReadEnum();
            break;
          }
          case 64: {
            StorageBytes = input.ReadInt64();
            break;
          }
          case 72: {
            DiskSizeBytes = input.ReadInt64();
            break;
          }
          case 82: {
            if (completeTime_ == null) {
              CompleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CompleteTime);
            break;
          }
          case 88: {
            State = (global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State) input.ReadEnum();
            break;
          }
          case 98: {
            StateMessage = input.ReadString();
            break;
          }
          case 106: {
            Etag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 42: {
            if (sourcePvc_ == null) {
              SourcePvc = new global::Google.Cloud.GkeBackup.V1.NamespacedName();
            }
            input.ReadMessage(SourcePvc);
            break;
          }
          case 50: {
            VolumeBackupHandle = input.ReadString();
            break;
          }
          case 56: {
            Format = (global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.VolumeBackupFormat) input.ReadEnum();
            break;
          }
          case 64: {
            StorageBytes = input.ReadInt64();
            break;
          }
          case 72: {
            DiskSizeBytes = input.ReadInt64();
            break;
          }
          case 82: {
            if (completeTime_ == null) {
              CompleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CompleteTime);
            break;
          }
          case 88: {
            State = (global::Google.Cloud.GkeBackup.V1.VolumeBackup.Types.State) input.ReadEnum();
            break;
          }
          case 98: {
            StateMessage = input.ReadString();
            break;
          }
          case 106: {
            Etag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VolumeBackup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Identifies the format used for the volume backup.
      /// </summary>
      public enum VolumeBackupFormat {
        /// <summary>
        /// Default value, not specified.
        /// </summary>
        [pbr::OriginalName("VOLUME_BACKUP_FORMAT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Compute Engine Persistent Disk snapshot based volume backup.
        /// </summary>
        [pbr::OriginalName("GCE_PERSISTENT_DISK")] GcePersistentDisk = 1,
      }

      /// <summary>
      /// The current state of a VolumeBackup
      /// </summary>
      public enum State {
        /// <summary>
        /// This is an illegal state and should not be encountered.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A volume for the backup was identified and backup process is about to
        /// start.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The volume backup operation has begun and is in the initial "snapshot"
        /// phase of the process. Any defined ProtectedApplication "pre" hooks will
        /// be executed before entering this state and "post" hooks will be executed
        /// upon leaving this state.
        /// </summary>
        [pbr::OriginalName("SNAPSHOTTING")] Snapshotting = 2,
        /// <summary>
        /// The snapshot phase of the volume backup operation has completed and
        /// the snapshot is now being uploaded to backup storage.
        /// </summary>
        [pbr::OriginalName("UPLOADING")] Uploading = 3,
        /// <summary>
        /// The volume backup operation has completed successfully.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 4,
        /// <summary>
        /// The volume backup operation has failed.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 5,
        /// <summary>
        /// This VolumeBackup resource (and its associated artifacts) is in the
        /// process of being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// Represents the operation of restoring a volume from a VolumeBackup.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VolumeRestore : pb::IMessage<VolumeRestore>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VolumeRestore> _parser = new pb::MessageParser<VolumeRestore>(() => new VolumeRestore());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VolumeRestore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.GkeBackup.V1.VolumeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeRestore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeRestore(VolumeRestore other) : this() {
      name_ = other.name_;
      uid_ = other.uid_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      volumeBackup_ = other.volumeBackup_;
      targetPvc_ = other.targetPvc_ != null ? other.targetPvc_.Clone() : null;
      volumeHandle_ = other.volumeHandle_;
      volumeType_ = other.volumeType_;
      completeTime_ = other.completeTime_ != null ? other.completeTime_.Clone() : null;
      state_ = other.state_;
      stateMessage_ = other.stateMessage_;
      etag_ = other.etag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VolumeRestore Clone() {
      return new VolumeRestore(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Full name of the VolumeRestore resource.
    /// Format: `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private string uid_ = "";
    /// <summary>
    /// Output only. Server generated global unique identifier of
    /// [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The timestamp when this VolumeRestore resource was
    /// created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The timestamp when this VolumeRestore resource was last
    /// updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "volume_backup" field.</summary>
    public const int VolumeBackupFieldNumber = 5;
    private string volumeBackup_ = "";
    /// <summary>
    /// Output only. The full name of the VolumeBackup from which the volume will
    /// be restored. Format:
    /// `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VolumeBackup {
      get { return volumeBackup_; }
      set {
        volumeBackup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_pvc" field.</summary>
    public const int TargetPvcFieldNumber = 6;
    private global::Google.Cloud.GkeBackup.V1.NamespacedName targetPvc_;
    /// <summary>
    /// Output only. The reference to the target Kubernetes PVC to be restored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GkeBackup.V1.NamespacedName TargetPvc {
      get { return targetPvc_; }
      set {
        targetPvc_ = value;
      }
    }

    /// <summary>Field number for the "volume_handle" field.</summary>
    public const int VolumeHandleFieldNumber = 7;
    private string volumeHandle_ = "";
    /// <summary>
    /// Output only. A storage system-specific opaque handler to the underlying
    /// volume created for the target PVC from the volume backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VolumeHandle {
      get { return volumeHandle_; }
      set {
        volumeHandle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "volume_type" field.</summary>
    public const int VolumeTypeFieldNumber = 8;
    private global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType volumeType_ = global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType.Unspecified;
    /// <summary>
    /// Output only. The type of volume provisioned
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType VolumeType {
      get { return volumeType_; }
      set {
        volumeType_ = value;
      }
    }

    /// <summary>Field number for the "complete_time" field.</summary>
    public const int CompleteTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp completeTime_;
    /// <summary>
    /// Output only. The timestamp when the associated underlying volume
    /// restoration completed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CompleteTime {
      get { return completeTime_; }
      set {
        completeTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 10;
    private global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State state_ = global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of this VolumeRestore.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "state_message" field.</summary>
    public const int StateMessageFieldNumber = 11;
    private string stateMessage_ = "";
    /// <summary>
    /// Output only. A human readable message explaining why the VolumeRestore is
    /// in its current state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StateMessage {
      get { return stateMessage_; }
      set {
        stateMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 12;
    private string etag_ = "";
    /// <summary>
    /// Output only. `etag` is used for optimistic concurrency control as a way to
    /// help prevent simultaneous updates of a volume restore from overwriting each
    /// other. It is strongly suggested that systems make use of the `etag` in the
    /// read-modify-write cycle to perform volume restore updates in order to avoid
    /// race conditions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VolumeRestore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VolumeRestore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Uid != other.Uid) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (VolumeBackup != other.VolumeBackup) return false;
      if (!object.Equals(TargetPvc, other.TargetPvc)) return false;
      if (VolumeHandle != other.VolumeHandle) return false;
      if (VolumeType != other.VolumeType) return false;
      if (!object.Equals(CompleteTime, other.CompleteTime)) return false;
      if (State != other.State) return false;
      if (StateMessage != other.StateMessage) return false;
      if (Etag != other.Etag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (VolumeBackup.Length != 0) hash ^= VolumeBackup.GetHashCode();
      if (targetPvc_ != null) hash ^= TargetPvc.GetHashCode();
      if (VolumeHandle.Length != 0) hash ^= VolumeHandle.GetHashCode();
      if (VolumeType != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType.Unspecified) hash ^= VolumeType.GetHashCode();
      if (completeTime_ != null) hash ^= CompleteTime.GetHashCode();
      if (State != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (StateMessage.Length != 0) hash ^= StateMessage.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
      if (VolumeBackup.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VolumeBackup);
      }
      if (targetPvc_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TargetPvc);
      }
      if (VolumeHandle.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(VolumeHandle);
      }
      if (VolumeType != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) VolumeType);
      }
      if (completeTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CompleteTime);
      }
      if (State != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (StateMessage.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StateMessage);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Etag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateTime);
      }
      if (VolumeBackup.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VolumeBackup);
      }
      if (targetPvc_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TargetPvc);
      }
      if (VolumeHandle.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(VolumeHandle);
      }
      if (VolumeType != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) VolumeType);
      }
      if (completeTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CompleteTime);
      }
      if (State != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (StateMessage.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StateMessage);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Etag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (VolumeBackup.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VolumeBackup);
      }
      if (targetPvc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetPvc);
      }
      if (VolumeHandle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VolumeHandle);
      }
      if (VolumeType != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VolumeType);
      }
      if (completeTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompleteTime);
      }
      if (State != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (StateMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateMessage);
      }
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Etag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VolumeRestore other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.VolumeBackup.Length != 0) {
        VolumeBackup = other.VolumeBackup;
      }
      if (other.targetPvc_ != null) {
        if (targetPvc_ == null) {
          TargetPvc = new global::Google.Cloud.GkeBackup.V1.NamespacedName();
        }
        TargetPvc.MergeFrom(other.TargetPvc);
      }
      if (other.VolumeHandle.Length != 0) {
        VolumeHandle = other.VolumeHandle;
      }
      if (other.VolumeType != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType.Unspecified) {
        VolumeType = other.VolumeType;
      }
      if (other.completeTime_ != null) {
        if (completeTime_ == null) {
          CompleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CompleteTime.MergeFrom(other.CompleteTime);
      }
      if (other.State != global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.StateMessage.Length != 0) {
        StateMessage = other.StateMessage;
      }
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 42: {
            VolumeBackup = input.ReadString();
            break;
          }
          case 50: {
            if (targetPvc_ == null) {
              TargetPvc = new global::Google.Cloud.GkeBackup.V1.NamespacedName();
            }
            input.ReadMessage(TargetPvc);
            break;
          }
          case 58: {
            VolumeHandle = input.ReadString();
            break;
          }
          case 64: {
            VolumeType = (global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType) input.ReadEnum();
            break;
          }
          case 74: {
            if (completeTime_ == null) {
              CompleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CompleteTime);
            break;
          }
          case 80: {
            State = (global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State) input.ReadEnum();
            break;
          }
          case 90: {
            StateMessage = input.ReadString();
            break;
          }
          case 98: {
            Etag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 42: {
            VolumeBackup = input.ReadString();
            break;
          }
          case 50: {
            if (targetPvc_ == null) {
              TargetPvc = new global::Google.Cloud.GkeBackup.V1.NamespacedName();
            }
            input.ReadMessage(TargetPvc);
            break;
          }
          case 58: {
            VolumeHandle = input.ReadString();
            break;
          }
          case 64: {
            VolumeType = (global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.VolumeType) input.ReadEnum();
            break;
          }
          case 74: {
            if (completeTime_ == null) {
              CompleteTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CompleteTime);
            break;
          }
          case 80: {
            State = (global::Google.Cloud.GkeBackup.V1.VolumeRestore.Types.State) input.ReadEnum();
            break;
          }
          case 90: {
            StateMessage = input.ReadString();
            break;
          }
          case 98: {
            Etag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VolumeRestore message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Supported volume types.
      /// </summary>
      public enum VolumeType {
        /// <summary>
        /// Default
        /// </summary>
        [pbr::OriginalName("VOLUME_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Compute Engine Persistent Disk volume
        /// </summary>
        [pbr::OriginalName("GCE_PERSISTENT_DISK")] GcePersistentDisk = 1,
      }

      /// <summary>
      /// The current state of a VolumeRestore
      /// </summary>
      public enum State {
        /// <summary>
        /// This is an illegal state and should not be encountered.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A volume for the restore was identified and restore process is about to
        /// start.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The volume is currently being restored.
        /// </summary>
        [pbr::OriginalName("RESTORING")] Restoring = 2,
        /// <summary>
        /// The volume has been successfully restored.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 3,
        /// <summary>
        /// The volume restoration process failed.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 4,
        /// <summary>
        /// This VolumeRestore resource is in the process of being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 5,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
