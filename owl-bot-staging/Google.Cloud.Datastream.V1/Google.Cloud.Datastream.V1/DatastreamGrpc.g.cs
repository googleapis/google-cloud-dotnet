// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/datastream/v1/datastream.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Datastream.V1 {
  /// <summary>
  /// Datastream service
  /// </summary>
  public static partial class Datastream
  {
    static readonly string __ServiceName = "google.cloud.datastream.v1.Datastream";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest> __Marshaller_google_cloud_datastream_v1_ListConnectionProfilesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse> __Marshaller_google_cloud_datastream_v1_ListConnectionProfilesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest> __Marshaller_google_cloud_datastream_v1_GetConnectionProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ConnectionProfile> __Marshaller_google_cloud_datastream_v1_ConnectionProfile = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ConnectionProfile.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest> __Marshaller_google_cloud_datastream_v1_CreateConnectionProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest> __Marshaller_google_cloud_datastream_v1_UpdateConnectionProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest> __Marshaller_google_cloud_datastream_v1_DeleteConnectionProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest> __Marshaller_google_cloud_datastream_v1_DiscoverConnectionProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse> __Marshaller_google_cloud_datastream_v1_DiscoverConnectionProfileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListStreamsRequest> __Marshaller_google_cloud_datastream_v1_ListStreamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListStreamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListStreamsResponse> __Marshaller_google_cloud_datastream_v1_ListStreamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListStreamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.GetStreamRequest> __Marshaller_google_cloud_datastream_v1_GetStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.GetStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.Stream> __Marshaller_google_cloud_datastream_v1_Stream = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.Stream.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.CreateStreamRequest> __Marshaller_google_cloud_datastream_v1_CreateStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.CreateStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.UpdateStreamRequest> __Marshaller_google_cloud_datastream_v1_UpdateStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.UpdateStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.DeleteStreamRequest> __Marshaller_google_cloud_datastream_v1_DeleteStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.DeleteStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.RunStreamRequest> __Marshaller_google_cloud_datastream_v1_RunStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.RunStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.GetStreamObjectRequest> __Marshaller_google_cloud_datastream_v1_GetStreamObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.GetStreamObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.StreamObject> __Marshaller_google_cloud_datastream_v1_StreamObject = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.StreamObject.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest> __Marshaller_google_cloud_datastream_v1_LookupStreamObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest> __Marshaller_google_cloud_datastream_v1_ListStreamObjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse> __Marshaller_google_cloud_datastream_v1_ListStreamObjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.StartBackfillJobRequest> __Marshaller_google_cloud_datastream_v1_StartBackfillJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.StartBackfillJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.StartBackfillJobResponse> __Marshaller_google_cloud_datastream_v1_StartBackfillJobResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.StartBackfillJobResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.StopBackfillJobRequest> __Marshaller_google_cloud_datastream_v1_StopBackfillJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.StopBackfillJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.StopBackfillJobResponse> __Marshaller_google_cloud_datastream_v1_StopBackfillJobResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.StopBackfillJobResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest> __Marshaller_google_cloud_datastream_v1_FetchStaticIpsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse> __Marshaller_google_cloud_datastream_v1_FetchStaticIpsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest> __Marshaller_google_cloud_datastream_v1_CreatePrivateConnectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest> __Marshaller_google_cloud_datastream_v1_GetPrivateConnectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.PrivateConnection> __Marshaller_google_cloud_datastream_v1_PrivateConnection = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.PrivateConnection.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest> __Marshaller_google_cloud_datastream_v1_ListPrivateConnectionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse> __Marshaller_google_cloud_datastream_v1_ListPrivateConnectionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest> __Marshaller_google_cloud_datastream_v1_DeletePrivateConnectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.CreateRouteRequest> __Marshaller_google_cloud_datastream_v1_CreateRouteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.CreateRouteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.GetRouteRequest> __Marshaller_google_cloud_datastream_v1_GetRouteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.GetRouteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.Route> __Marshaller_google_cloud_datastream_v1_Route = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.Route.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListRoutesRequest> __Marshaller_google_cloud_datastream_v1_ListRoutesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListRoutesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.ListRoutesResponse> __Marshaller_google_cloud_datastream_v1_ListRoutesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.ListRoutesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Datastream.V1.DeleteRouteRequest> __Marshaller_google_cloud_datastream_v1_DeleteRouteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Datastream.V1.DeleteRouteRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest, global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse> __Method_ListConnectionProfiles = new grpc::Method<global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest, global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListConnectionProfiles",
        __Marshaller_google_cloud_datastream_v1_ListConnectionProfilesRequest,
        __Marshaller_google_cloud_datastream_v1_ListConnectionProfilesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest, global::Google.Cloud.Datastream.V1.ConnectionProfile> __Method_GetConnectionProfile = new grpc::Method<global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest, global::Google.Cloud.Datastream.V1.ConnectionProfile>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConnectionProfile",
        __Marshaller_google_cloud_datastream_v1_GetConnectionProfileRequest,
        __Marshaller_google_cloud_datastream_v1_ConnectionProfile);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest, global::Google.LongRunning.Operation> __Method_CreateConnectionProfile = new grpc::Method<global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateConnectionProfile",
        __Marshaller_google_cloud_datastream_v1_CreateConnectionProfileRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest, global::Google.LongRunning.Operation> __Method_UpdateConnectionProfile = new grpc::Method<global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateConnectionProfile",
        __Marshaller_google_cloud_datastream_v1_UpdateConnectionProfileRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest, global::Google.LongRunning.Operation> __Method_DeleteConnectionProfile = new grpc::Method<global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteConnectionProfile",
        __Marshaller_google_cloud_datastream_v1_DeleteConnectionProfileRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest, global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse> __Method_DiscoverConnectionProfile = new grpc::Method<global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest, global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DiscoverConnectionProfile",
        __Marshaller_google_cloud_datastream_v1_DiscoverConnectionProfileRequest,
        __Marshaller_google_cloud_datastream_v1_DiscoverConnectionProfileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.ListStreamsRequest, global::Google.Cloud.Datastream.V1.ListStreamsResponse> __Method_ListStreams = new grpc::Method<global::Google.Cloud.Datastream.V1.ListStreamsRequest, global::Google.Cloud.Datastream.V1.ListStreamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListStreams",
        __Marshaller_google_cloud_datastream_v1_ListStreamsRequest,
        __Marshaller_google_cloud_datastream_v1_ListStreamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.GetStreamRequest, global::Google.Cloud.Datastream.V1.Stream> __Method_GetStream = new grpc::Method<global::Google.Cloud.Datastream.V1.GetStreamRequest, global::Google.Cloud.Datastream.V1.Stream>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStream",
        __Marshaller_google_cloud_datastream_v1_GetStreamRequest,
        __Marshaller_google_cloud_datastream_v1_Stream);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.CreateStreamRequest, global::Google.LongRunning.Operation> __Method_CreateStream = new grpc::Method<global::Google.Cloud.Datastream.V1.CreateStreamRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateStream",
        __Marshaller_google_cloud_datastream_v1_CreateStreamRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.UpdateStreamRequest, global::Google.LongRunning.Operation> __Method_UpdateStream = new grpc::Method<global::Google.Cloud.Datastream.V1.UpdateStreamRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateStream",
        __Marshaller_google_cloud_datastream_v1_UpdateStreamRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.DeleteStreamRequest, global::Google.LongRunning.Operation> __Method_DeleteStream = new grpc::Method<global::Google.Cloud.Datastream.V1.DeleteStreamRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteStream",
        __Marshaller_google_cloud_datastream_v1_DeleteStreamRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.RunStreamRequest, global::Google.LongRunning.Operation> __Method_RunStream = new grpc::Method<global::Google.Cloud.Datastream.V1.RunStreamRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunStream",
        __Marshaller_google_cloud_datastream_v1_RunStreamRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.GetStreamObjectRequest, global::Google.Cloud.Datastream.V1.StreamObject> __Method_GetStreamObject = new grpc::Method<global::Google.Cloud.Datastream.V1.GetStreamObjectRequest, global::Google.Cloud.Datastream.V1.StreamObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStreamObject",
        __Marshaller_google_cloud_datastream_v1_GetStreamObjectRequest,
        __Marshaller_google_cloud_datastream_v1_StreamObject);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest, global::Google.Cloud.Datastream.V1.StreamObject> __Method_LookupStreamObject = new grpc::Method<global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest, global::Google.Cloud.Datastream.V1.StreamObject>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LookupStreamObject",
        __Marshaller_google_cloud_datastream_v1_LookupStreamObjectRequest,
        __Marshaller_google_cloud_datastream_v1_StreamObject);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest, global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse> __Method_ListStreamObjects = new grpc::Method<global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest, global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListStreamObjects",
        __Marshaller_google_cloud_datastream_v1_ListStreamObjectsRequest,
        __Marshaller_google_cloud_datastream_v1_ListStreamObjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.StartBackfillJobRequest, global::Google.Cloud.Datastream.V1.StartBackfillJobResponse> __Method_StartBackfillJob = new grpc::Method<global::Google.Cloud.Datastream.V1.StartBackfillJobRequest, global::Google.Cloud.Datastream.V1.StartBackfillJobResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartBackfillJob",
        __Marshaller_google_cloud_datastream_v1_StartBackfillJobRequest,
        __Marshaller_google_cloud_datastream_v1_StartBackfillJobResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.StopBackfillJobRequest, global::Google.Cloud.Datastream.V1.StopBackfillJobResponse> __Method_StopBackfillJob = new grpc::Method<global::Google.Cloud.Datastream.V1.StopBackfillJobRequest, global::Google.Cloud.Datastream.V1.StopBackfillJobResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopBackfillJob",
        __Marshaller_google_cloud_datastream_v1_StopBackfillJobRequest,
        __Marshaller_google_cloud_datastream_v1_StopBackfillJobResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest, global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse> __Method_FetchStaticIps = new grpc::Method<global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest, global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchStaticIps",
        __Marshaller_google_cloud_datastream_v1_FetchStaticIpsRequest,
        __Marshaller_google_cloud_datastream_v1_FetchStaticIpsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest, global::Google.LongRunning.Operation> __Method_CreatePrivateConnection = new grpc::Method<global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePrivateConnection",
        __Marshaller_google_cloud_datastream_v1_CreatePrivateConnectionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest, global::Google.Cloud.Datastream.V1.PrivateConnection> __Method_GetPrivateConnection = new grpc::Method<global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest, global::Google.Cloud.Datastream.V1.PrivateConnection>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPrivateConnection",
        __Marshaller_google_cloud_datastream_v1_GetPrivateConnectionRequest,
        __Marshaller_google_cloud_datastream_v1_PrivateConnection);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest, global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse> __Method_ListPrivateConnections = new grpc::Method<global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest, global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPrivateConnections",
        __Marshaller_google_cloud_datastream_v1_ListPrivateConnectionsRequest,
        __Marshaller_google_cloud_datastream_v1_ListPrivateConnectionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest, global::Google.LongRunning.Operation> __Method_DeletePrivateConnection = new grpc::Method<global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePrivateConnection",
        __Marshaller_google_cloud_datastream_v1_DeletePrivateConnectionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.CreateRouteRequest, global::Google.LongRunning.Operation> __Method_CreateRoute = new grpc::Method<global::Google.Cloud.Datastream.V1.CreateRouteRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRoute",
        __Marshaller_google_cloud_datastream_v1_CreateRouteRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.GetRouteRequest, global::Google.Cloud.Datastream.V1.Route> __Method_GetRoute = new grpc::Method<global::Google.Cloud.Datastream.V1.GetRouteRequest, global::Google.Cloud.Datastream.V1.Route>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRoute",
        __Marshaller_google_cloud_datastream_v1_GetRouteRequest,
        __Marshaller_google_cloud_datastream_v1_Route);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.ListRoutesRequest, global::Google.Cloud.Datastream.V1.ListRoutesResponse> __Method_ListRoutes = new grpc::Method<global::Google.Cloud.Datastream.V1.ListRoutesRequest, global::Google.Cloud.Datastream.V1.ListRoutesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRoutes",
        __Marshaller_google_cloud_datastream_v1_ListRoutesRequest,
        __Marshaller_google_cloud_datastream_v1_ListRoutesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Datastream.V1.DeleteRouteRequest, global::Google.LongRunning.Operation> __Method_DeleteRoute = new grpc::Method<global::Google.Cloud.Datastream.V1.DeleteRouteRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRoute",
        __Marshaller_google_cloud_datastream_v1_DeleteRouteRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Datastream.V1.DatastreamReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Datastream</summary>
    [grpc::BindServiceMethod(typeof(Datastream), "BindService")]
    public abstract partial class DatastreamBase
    {
      /// <summary>
      /// Use this method to list connection profiles created in a project and
      /// location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse> ListConnectionProfiles(global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to get details about a connection profile.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.ConnectionProfile> GetConnectionProfile(global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to create a connection profile in a project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateConnectionProfile(global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to update the parameters of a connection profile.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateConnectionProfile(global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to delete a connection profile.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteConnectionProfile(global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to discover a connection profile.
      /// The discover API call exposes the data objects and metadata belonging to
      /// the profile. Typically, a request returns children data objects of a
      /// parent data object that's optionally supplied in the request.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse> DiscoverConnectionProfile(global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to list streams in a project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.ListStreamsResponse> ListStreams(global::Google.Cloud.Datastream.V1.ListStreamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to get details about a stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.Stream> GetStream(global::Google.Cloud.Datastream.V1.GetStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to create a stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateStream(global::Google.Cloud.Datastream.V1.CreateStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to update the configuration of a stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateStream(global::Google.Cloud.Datastream.V1.UpdateStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to delete a stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteStream(global::Google.Cloud.Datastream.V1.DeleteStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to start, resume or recover a stream with a non default CDC
      /// strategy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RunStream(global::Google.Cloud.Datastream.V1.RunStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to get details about a stream object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.StreamObject> GetStreamObject(global::Google.Cloud.Datastream.V1.GetStreamObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to look up a stream object by its source object identifier.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.StreamObject> LookupStreamObject(global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to list the objects of a specific stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse> ListStreamObjects(global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to start a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.StartBackfillJobResponse> StartBackfillJob(global::Google.Cloud.Datastream.V1.StartBackfillJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to stop a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.StopBackfillJobResponse> StopBackfillJob(global::Google.Cloud.Datastream.V1.StopBackfillJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// The FetchStaticIps API call exposes the static IP addresses used by
      /// Datastream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse> FetchStaticIps(global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to create a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreatePrivateConnection(global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to get details about a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.PrivateConnection> GetPrivateConnection(global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to list private connectivity configurations in a project
      /// and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse> ListPrivateConnections(global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to delete a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeletePrivateConnection(global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to create a route for a private connectivity configuration
      /// in a project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateRoute(global::Google.Cloud.Datastream.V1.CreateRouteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to get details about a route.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.Route> GetRoute(global::Google.Cloud.Datastream.V1.GetRouteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to list routes created for a private connectivity
      /// configuration in a project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Datastream.V1.ListRoutesResponse> ListRoutes(global::Google.Cloud.Datastream.V1.ListRoutesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Use this method to delete a route.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteRoute(global::Google.Cloud.Datastream.V1.DeleteRouteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Datastream</summary>
    public partial class DatastreamClient : grpc::ClientBase<DatastreamClient>
    {
      /// <summary>Creates a new client for Datastream</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DatastreamClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Datastream that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DatastreamClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DatastreamClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DatastreamClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Use this method to list connection profiles created in a project and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse ListConnectionProfiles(global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConnectionProfiles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list connection profiles created in a project and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse ListConnectionProfiles(global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListConnectionProfiles, null, options, request);
      }
      /// <summary>
      /// Use this method to list connection profiles created in a project and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse> ListConnectionProfilesAsync(global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConnectionProfilesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list connection profiles created in a project and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse> ListConnectionProfilesAsync(global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListConnectionProfiles, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ConnectionProfile GetConnectionProfile(global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConnectionProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ConnectionProfile GetConnectionProfile(global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ConnectionProfile> GetConnectionProfileAsync(global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConnectionProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ConnectionProfile> GetConnectionProfileAsync(global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to create a connection profile in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateConnectionProfile(global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConnectionProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to create a connection profile in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateConnectionProfile(global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to create a connection profile in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateConnectionProfileAsync(global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConnectionProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to create a connection profile in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateConnectionProfileAsync(global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to update the parameters of a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateConnectionProfile(global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConnectionProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to update the parameters of a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateConnectionProfile(global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to update the parameters of a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateConnectionProfileAsync(global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConnectionProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to update the parameters of a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateConnectionProfileAsync(global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to delete a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteConnectionProfile(global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConnectionProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to delete a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteConnectionProfile(global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to delete a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteConnectionProfileAsync(global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConnectionProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to delete a connection profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteConnectionProfileAsync(global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to discover a connection profile.
      /// The discover API call exposes the data objects and metadata belonging to
      /// the profile. Typically, a request returns children data objects of a
      /// parent data object that's optionally supplied in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse DiscoverConnectionProfile(global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DiscoverConnectionProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to discover a connection profile.
      /// The discover API call exposes the data objects and metadata belonging to
      /// the profile. Typically, a request returns children data objects of a
      /// parent data object that's optionally supplied in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse DiscoverConnectionProfile(global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DiscoverConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to discover a connection profile.
      /// The discover API call exposes the data objects and metadata belonging to
      /// the profile. Typically, a request returns children data objects of a
      /// parent data object that's optionally supplied in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse> DiscoverConnectionProfileAsync(global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DiscoverConnectionProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to discover a connection profile.
      /// The discover API call exposes the data objects and metadata belonging to
      /// the profile. Typically, a request returns children data objects of a
      /// parent data object that's optionally supplied in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse> DiscoverConnectionProfileAsync(global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DiscoverConnectionProfile, null, options, request);
      }
      /// <summary>
      /// Use this method to list streams in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListStreamsResponse ListStreams(global::Google.Cloud.Datastream.V1.ListStreamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStreams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list streams in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListStreamsResponse ListStreams(global::Google.Cloud.Datastream.V1.ListStreamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListStreams, null, options, request);
      }
      /// <summary>
      /// Use this method to list streams in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListStreamsResponse> ListStreamsAsync(global::Google.Cloud.Datastream.V1.ListStreamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStreamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list streams in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListStreamsResponse> ListStreamsAsync(global::Google.Cloud.Datastream.V1.ListStreamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListStreams, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.Stream GetStream(global::Google.Cloud.Datastream.V1.GetStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.Stream GetStream(global::Google.Cloud.Datastream.V1.GetStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStream, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.Stream> GetStreamAsync(global::Google.Cloud.Datastream.V1.GetStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.Stream> GetStreamAsync(global::Google.Cloud.Datastream.V1.GetStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStream, null, options, request);
      }
      /// <summary>
      /// Use this method to create a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateStream(global::Google.Cloud.Datastream.V1.CreateStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to create a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateStream(global::Google.Cloud.Datastream.V1.CreateStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateStream, null, options, request);
      }
      /// <summary>
      /// Use this method to create a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateStreamAsync(global::Google.Cloud.Datastream.V1.CreateStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to create a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateStreamAsync(global::Google.Cloud.Datastream.V1.CreateStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateStream, null, options, request);
      }
      /// <summary>
      /// Use this method to update the configuration of a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateStream(global::Google.Cloud.Datastream.V1.UpdateStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to update the configuration of a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateStream(global::Google.Cloud.Datastream.V1.UpdateStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateStream, null, options, request);
      }
      /// <summary>
      /// Use this method to update the configuration of a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateStreamAsync(global::Google.Cloud.Datastream.V1.UpdateStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to update the configuration of a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateStreamAsync(global::Google.Cloud.Datastream.V1.UpdateStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateStream, null, options, request);
      }
      /// <summary>
      /// Use this method to delete a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteStream(global::Google.Cloud.Datastream.V1.DeleteStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to delete a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteStream(global::Google.Cloud.Datastream.V1.DeleteStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteStream, null, options, request);
      }
      /// <summary>
      /// Use this method to delete a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteStreamAsync(global::Google.Cloud.Datastream.V1.DeleteStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to delete a stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteStreamAsync(global::Google.Cloud.Datastream.V1.DeleteStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteStream, null, options, request);
      }
      /// <summary>
      /// Use this method to start, resume or recover a stream with a non default CDC
      /// strategy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunStream(global::Google.Cloud.Datastream.V1.RunStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to start, resume or recover a stream with a non default CDC
      /// strategy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunStream(global::Google.Cloud.Datastream.V1.RunStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunStream, null, options, request);
      }
      /// <summary>
      /// Use this method to start, resume or recover a stream with a non default CDC
      /// strategy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunStreamAsync(global::Google.Cloud.Datastream.V1.RunStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to start, resume or recover a stream with a non default CDC
      /// strategy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunStreamAsync(global::Google.Cloud.Datastream.V1.RunStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunStream, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.StreamObject GetStreamObject(global::Google.Cloud.Datastream.V1.GetStreamObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStreamObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.StreamObject GetStreamObject(global::Google.Cloud.Datastream.V1.GetStreamObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStreamObject, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.StreamObject> GetStreamObjectAsync(global::Google.Cloud.Datastream.V1.GetStreamObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStreamObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.StreamObject> GetStreamObjectAsync(global::Google.Cloud.Datastream.V1.GetStreamObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStreamObject, null, options, request);
      }
      /// <summary>
      /// Use this method to look up a stream object by its source object identifier.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.StreamObject LookupStreamObject(global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupStreamObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to look up a stream object by its source object identifier.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.StreamObject LookupStreamObject(global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LookupStreamObject, null, options, request);
      }
      /// <summary>
      /// Use this method to look up a stream object by its source object identifier.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.StreamObject> LookupStreamObjectAsync(global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupStreamObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to look up a stream object by its source object identifier.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.StreamObject> LookupStreamObjectAsync(global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LookupStreamObject, null, options, request);
      }
      /// <summary>
      /// Use this method to list the objects of a specific stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse ListStreamObjects(global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStreamObjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list the objects of a specific stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse ListStreamObjects(global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListStreamObjects, null, options, request);
      }
      /// <summary>
      /// Use this method to list the objects of a specific stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse> ListStreamObjectsAsync(global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListStreamObjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list the objects of a specific stream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse> ListStreamObjectsAsync(global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListStreamObjects, null, options, request);
      }
      /// <summary>
      /// Use this method to start a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.StartBackfillJobResponse StartBackfillJob(global::Google.Cloud.Datastream.V1.StartBackfillJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartBackfillJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to start a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.StartBackfillJobResponse StartBackfillJob(global::Google.Cloud.Datastream.V1.StartBackfillJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartBackfillJob, null, options, request);
      }
      /// <summary>
      /// Use this method to start a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.StartBackfillJobResponse> StartBackfillJobAsync(global::Google.Cloud.Datastream.V1.StartBackfillJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartBackfillJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to start a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.StartBackfillJobResponse> StartBackfillJobAsync(global::Google.Cloud.Datastream.V1.StartBackfillJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartBackfillJob, null, options, request);
      }
      /// <summary>
      /// Use this method to stop a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.StopBackfillJobResponse StopBackfillJob(global::Google.Cloud.Datastream.V1.StopBackfillJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopBackfillJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to stop a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.StopBackfillJobResponse StopBackfillJob(global::Google.Cloud.Datastream.V1.StopBackfillJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopBackfillJob, null, options, request);
      }
      /// <summary>
      /// Use this method to stop a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.StopBackfillJobResponse> StopBackfillJobAsync(global::Google.Cloud.Datastream.V1.StopBackfillJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopBackfillJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to stop a backfill job for the specified stream object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.StopBackfillJobResponse> StopBackfillJobAsync(global::Google.Cloud.Datastream.V1.StopBackfillJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopBackfillJob, null, options, request);
      }
      /// <summary>
      /// The FetchStaticIps API call exposes the static IP addresses used by
      /// Datastream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse FetchStaticIps(global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchStaticIps(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// The FetchStaticIps API call exposes the static IP addresses used by
      /// Datastream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse FetchStaticIps(global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchStaticIps, null, options, request);
      }
      /// <summary>
      /// The FetchStaticIps API call exposes the static IP addresses used by
      /// Datastream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse> FetchStaticIpsAsync(global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchStaticIpsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// The FetchStaticIps API call exposes the static IP addresses used by
      /// Datastream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse> FetchStaticIpsAsync(global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchStaticIps, null, options, request);
      }
      /// <summary>
      /// Use this method to create a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreatePrivateConnection(global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePrivateConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to create a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreatePrivateConnection(global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePrivateConnection, null, options, request);
      }
      /// <summary>
      /// Use this method to create a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreatePrivateConnectionAsync(global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePrivateConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to create a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreatePrivateConnectionAsync(global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePrivateConnection, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.PrivateConnection GetPrivateConnection(global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPrivateConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.PrivateConnection GetPrivateConnection(global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPrivateConnection, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.PrivateConnection> GetPrivateConnectionAsync(global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPrivateConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.PrivateConnection> GetPrivateConnectionAsync(global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPrivateConnection, null, options, request);
      }
      /// <summary>
      /// Use this method to list private connectivity configurations in a project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse ListPrivateConnections(global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPrivateConnections(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list private connectivity configurations in a project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse ListPrivateConnections(global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPrivateConnections, null, options, request);
      }
      /// <summary>
      /// Use this method to list private connectivity configurations in a project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse> ListPrivateConnectionsAsync(global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPrivateConnectionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list private connectivity configurations in a project
      /// and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse> ListPrivateConnectionsAsync(global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPrivateConnections, null, options, request);
      }
      /// <summary>
      /// Use this method to delete a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeletePrivateConnection(global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePrivateConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to delete a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeletePrivateConnection(global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeletePrivateConnection, null, options, request);
      }
      /// <summary>
      /// Use this method to delete a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeletePrivateConnectionAsync(global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePrivateConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to delete a private connectivity configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeletePrivateConnectionAsync(global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeletePrivateConnection, null, options, request);
      }
      /// <summary>
      /// Use this method to create a route for a private connectivity configuration
      /// in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateRoute(global::Google.Cloud.Datastream.V1.CreateRouteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRoute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to create a route for a private connectivity configuration
      /// in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateRoute(global::Google.Cloud.Datastream.V1.CreateRouteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRoute, null, options, request);
      }
      /// <summary>
      /// Use this method to create a route for a private connectivity configuration
      /// in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateRouteAsync(global::Google.Cloud.Datastream.V1.CreateRouteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRouteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to create a route for a private connectivity configuration
      /// in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateRouteAsync(global::Google.Cloud.Datastream.V1.CreateRouteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRoute, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a route.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.Route GetRoute(global::Google.Cloud.Datastream.V1.GetRouteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRoute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a route.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.Route GetRoute(global::Google.Cloud.Datastream.V1.GetRouteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRoute, null, options, request);
      }
      /// <summary>
      /// Use this method to get details about a route.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.Route> GetRouteAsync(global::Google.Cloud.Datastream.V1.GetRouteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRouteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to get details about a route.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.Route> GetRouteAsync(global::Google.Cloud.Datastream.V1.GetRouteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRoute, null, options, request);
      }
      /// <summary>
      /// Use this method to list routes created for a private connectivity
      /// configuration in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListRoutesResponse ListRoutes(global::Google.Cloud.Datastream.V1.ListRoutesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRoutes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list routes created for a private connectivity
      /// configuration in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Datastream.V1.ListRoutesResponse ListRoutes(global::Google.Cloud.Datastream.V1.ListRoutesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRoutes, null, options, request);
      }
      /// <summary>
      /// Use this method to list routes created for a private connectivity
      /// configuration in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListRoutesResponse> ListRoutesAsync(global::Google.Cloud.Datastream.V1.ListRoutesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRoutesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to list routes created for a private connectivity
      /// configuration in a project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Datastream.V1.ListRoutesResponse> ListRoutesAsync(global::Google.Cloud.Datastream.V1.ListRoutesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRoutes, null, options, request);
      }
      /// <summary>
      /// Use this method to delete a route.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRoute(global::Google.Cloud.Datastream.V1.DeleteRouteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRoute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to delete a route.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRoute(global::Google.Cloud.Datastream.V1.DeleteRouteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRoute, null, options, request);
      }
      /// <summary>
      /// Use this method to delete a route.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteRouteAsync(global::Google.Cloud.Datastream.V1.DeleteRouteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRouteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Use this method to delete a route.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteRouteAsync(global::Google.Cloud.Datastream.V1.DeleteRouteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRoute, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DatastreamClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DatastreamClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DatastreamBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListConnectionProfiles, serviceImpl.ListConnectionProfiles)
          .AddMethod(__Method_GetConnectionProfile, serviceImpl.GetConnectionProfile)
          .AddMethod(__Method_CreateConnectionProfile, serviceImpl.CreateConnectionProfile)
          .AddMethod(__Method_UpdateConnectionProfile, serviceImpl.UpdateConnectionProfile)
          .AddMethod(__Method_DeleteConnectionProfile, serviceImpl.DeleteConnectionProfile)
          .AddMethod(__Method_DiscoverConnectionProfile, serviceImpl.DiscoverConnectionProfile)
          .AddMethod(__Method_ListStreams, serviceImpl.ListStreams)
          .AddMethod(__Method_GetStream, serviceImpl.GetStream)
          .AddMethod(__Method_CreateStream, serviceImpl.CreateStream)
          .AddMethod(__Method_UpdateStream, serviceImpl.UpdateStream)
          .AddMethod(__Method_DeleteStream, serviceImpl.DeleteStream)
          .AddMethod(__Method_RunStream, serviceImpl.RunStream)
          .AddMethod(__Method_GetStreamObject, serviceImpl.GetStreamObject)
          .AddMethod(__Method_LookupStreamObject, serviceImpl.LookupStreamObject)
          .AddMethod(__Method_ListStreamObjects, serviceImpl.ListStreamObjects)
          .AddMethod(__Method_StartBackfillJob, serviceImpl.StartBackfillJob)
          .AddMethod(__Method_StopBackfillJob, serviceImpl.StopBackfillJob)
          .AddMethod(__Method_FetchStaticIps, serviceImpl.FetchStaticIps)
          .AddMethod(__Method_CreatePrivateConnection, serviceImpl.CreatePrivateConnection)
          .AddMethod(__Method_GetPrivateConnection, serviceImpl.GetPrivateConnection)
          .AddMethod(__Method_ListPrivateConnections, serviceImpl.ListPrivateConnections)
          .AddMethod(__Method_DeletePrivateConnection, serviceImpl.DeletePrivateConnection)
          .AddMethod(__Method_CreateRoute, serviceImpl.CreateRoute)
          .AddMethod(__Method_GetRoute, serviceImpl.GetRoute)
          .AddMethod(__Method_ListRoutes, serviceImpl.ListRoutes)
          .AddMethod(__Method_DeleteRoute, serviceImpl.DeleteRoute).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DatastreamBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListConnectionProfiles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.ListConnectionProfilesRequest, global::Google.Cloud.Datastream.V1.ListConnectionProfilesResponse>(serviceImpl.ListConnectionProfiles));
      serviceBinder.AddMethod(__Method_GetConnectionProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.GetConnectionProfileRequest, global::Google.Cloud.Datastream.V1.ConnectionProfile>(serviceImpl.GetConnectionProfile));
      serviceBinder.AddMethod(__Method_CreateConnectionProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.CreateConnectionProfileRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateConnectionProfile));
      serviceBinder.AddMethod(__Method_UpdateConnectionProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.UpdateConnectionProfileRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateConnectionProfile));
      serviceBinder.AddMethod(__Method_DeleteConnectionProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.DeleteConnectionProfileRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteConnectionProfile));
      serviceBinder.AddMethod(__Method_DiscoverConnectionProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileRequest, global::Google.Cloud.Datastream.V1.DiscoverConnectionProfileResponse>(serviceImpl.DiscoverConnectionProfile));
      serviceBinder.AddMethod(__Method_ListStreams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.ListStreamsRequest, global::Google.Cloud.Datastream.V1.ListStreamsResponse>(serviceImpl.ListStreams));
      serviceBinder.AddMethod(__Method_GetStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.GetStreamRequest, global::Google.Cloud.Datastream.V1.Stream>(serviceImpl.GetStream));
      serviceBinder.AddMethod(__Method_CreateStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.CreateStreamRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateStream));
      serviceBinder.AddMethod(__Method_UpdateStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.UpdateStreamRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateStream));
      serviceBinder.AddMethod(__Method_DeleteStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.DeleteStreamRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteStream));
      serviceBinder.AddMethod(__Method_RunStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.RunStreamRequest, global::Google.LongRunning.Operation>(serviceImpl.RunStream));
      serviceBinder.AddMethod(__Method_GetStreamObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.GetStreamObjectRequest, global::Google.Cloud.Datastream.V1.StreamObject>(serviceImpl.GetStreamObject));
      serviceBinder.AddMethod(__Method_LookupStreamObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.LookupStreamObjectRequest, global::Google.Cloud.Datastream.V1.StreamObject>(serviceImpl.LookupStreamObject));
      serviceBinder.AddMethod(__Method_ListStreamObjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.ListStreamObjectsRequest, global::Google.Cloud.Datastream.V1.ListStreamObjectsResponse>(serviceImpl.ListStreamObjects));
      serviceBinder.AddMethod(__Method_StartBackfillJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.StartBackfillJobRequest, global::Google.Cloud.Datastream.V1.StartBackfillJobResponse>(serviceImpl.StartBackfillJob));
      serviceBinder.AddMethod(__Method_StopBackfillJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.StopBackfillJobRequest, global::Google.Cloud.Datastream.V1.StopBackfillJobResponse>(serviceImpl.StopBackfillJob));
      serviceBinder.AddMethod(__Method_FetchStaticIps, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.FetchStaticIpsRequest, global::Google.Cloud.Datastream.V1.FetchStaticIpsResponse>(serviceImpl.FetchStaticIps));
      serviceBinder.AddMethod(__Method_CreatePrivateConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.CreatePrivateConnectionRequest, global::Google.LongRunning.Operation>(serviceImpl.CreatePrivateConnection));
      serviceBinder.AddMethod(__Method_GetPrivateConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.GetPrivateConnectionRequest, global::Google.Cloud.Datastream.V1.PrivateConnection>(serviceImpl.GetPrivateConnection));
      serviceBinder.AddMethod(__Method_ListPrivateConnections, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.ListPrivateConnectionsRequest, global::Google.Cloud.Datastream.V1.ListPrivateConnectionsResponse>(serviceImpl.ListPrivateConnections));
      serviceBinder.AddMethod(__Method_DeletePrivateConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.DeletePrivateConnectionRequest, global::Google.LongRunning.Operation>(serviceImpl.DeletePrivateConnection));
      serviceBinder.AddMethod(__Method_CreateRoute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.CreateRouteRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateRoute));
      serviceBinder.AddMethod(__Method_GetRoute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.GetRouteRequest, global::Google.Cloud.Datastream.V1.Route>(serviceImpl.GetRoute));
      serviceBinder.AddMethod(__Method_ListRoutes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.ListRoutesRequest, global::Google.Cloud.Datastream.V1.ListRoutesResponse>(serviceImpl.ListRoutes));
      serviceBinder.AddMethod(__Method_DeleteRoute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Datastream.V1.DeleteRouteRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteRoute));
    }

  }
}
#endregion
