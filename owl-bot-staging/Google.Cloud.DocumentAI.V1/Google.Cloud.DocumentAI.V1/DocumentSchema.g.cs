// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/documentai/v1/document_schema.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.DocumentAI.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/documentai/v1/document_schema.proto</summary>
  public static partial class DocumentSchemaReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/documentai/v1/document_schema.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DocumentSchemaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBnb29nbGUvY2xvdWQvZG9jdW1lbnRhaS92MS9kb2N1bWVudF9zY2hlbWEu",
            "cHJvdG8SGmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxIr0HCg5Eb2N1bWVu",
            "dFNjaGVtYRIUCgxkaXNwbGF5X25hbWUYASABKAkSEwoLZGVzY3JpcHRpb24Y",
            "AiABKAkSSwoMZW50aXR5X3R5cGVzGAMgAygLMjUuZ29vZ2xlLmNsb3VkLmRv",
            "Y3VtZW50YWkudjEuRG9jdW1lbnRTY2hlbWEuRW50aXR5VHlwZRJFCghtZXRh",
            "ZGF0YRgEIAEoCzIzLmdvb2dsZS5jbG91ZC5kb2N1bWVudGFpLnYxLkRvY3Vt",
            "ZW50U2NoZW1hLk1ldGFkYXRhGtQECgpFbnRpdHlUeXBlElcKC2VudW1fdmFs",
            "dWVzGA4gASgLMkAuZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjEuRG9jdW1l",
            "bnRTY2hlbWEuRW50aXR5VHlwZS5FbnVtVmFsdWVzSAASFAoMZGlzcGxheV9u",
            "YW1lGA0gASgJEgwKBG5hbWUYASABKAkSEgoKYmFzZV90eXBlcxgCIAMoCRJS",
            "Cgpwcm9wZXJ0aWVzGAYgAygLMj4uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWku",
            "djEuRG9jdW1lbnRTY2hlbWEuRW50aXR5VHlwZS5Qcm9wZXJ0eRocCgpFbnVt",
            "VmFsdWVzEg4KBnZhbHVlcxgBIAMoCRqyAgoIUHJvcGVydHkSDAoEbmFtZRgB",
            "IAEoCRIUCgxkaXNwbGF5X25hbWUYBiABKAkSEgoKdmFsdWVfdHlwZRgCIAEo",
            "CRJmCg9vY2N1cnJlbmNlX3R5cGUYAyABKA4yTS5nb29nbGUuY2xvdWQuZG9j",
            "dW1lbnRhaS52MS5Eb2N1bWVudFNjaGVtYS5FbnRpdHlUeXBlLlByb3BlcnR5",
            "Lk9jY3VycmVuY2VUeXBlIoUBCg5PY2N1cnJlbmNlVHlwZRIfChtPQ0NVUlJF",
            "TkNFX1RZUEVfVU5TUEVDSUZJRUQQABIRCg1PUFRJT05BTF9PTkNFEAESFQoR",
            "T1BUSU9OQUxfTVVMVElQTEUQAhIRCg1SRVFVSVJFRF9PTkNFEAMSFQoRUkVR",
            "VUlSRURfTVVMVElQTEUQBEIOCgx2YWx1ZV9zb3VyY2UalAEKCE1ldGFkYXRh",
            "EhkKEWRvY3VtZW50X3NwbGl0dGVyGAEgASgIEiYKHmRvY3VtZW50X2FsbG93",
            "X211bHRpcGxlX2xhYmVscxgCIAEoCBIlCh1wcmVmaXhlZF9uYW1pbmdfb25f",
            "cHJvcGVydGllcxgGIAEoCBIeChZza2lwX25hbWluZ192YWxpZGF0aW9uGAcg",
            "ASgIQtYBCh5jb20uZ29vZ2xlLmNsb3VkLmRvY3VtZW50YWkudjFCGERvY3Vt",
            "ZW50QWlEb2N1bWVudFNjaGVtYVABWj5jbG91ZC5nb29nbGUuY29tL2dvL2Rv",
            "Y3VtZW50YWkvYXBpdjEvZG9jdW1lbnRhaXBiO2RvY3VtZW50YWlwYqoCGkdv",
            "b2dsZS5DbG91ZC5Eb2N1bWVudEFJLlYxygIaR29vZ2xlXENsb3VkXERvY3Vt",
            "ZW50QUlcVjHqAh1Hb29nbGU6OkNsb3VkOjpEb2N1bWVudEFJOjpWMWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1.DocumentSchema), global::Google.Cloud.DocumentAI.V1.DocumentSchema.Parser, new[]{ "DisplayName", "Description", "EntityTypes", "Metadata" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType), global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Parser, new[]{ "EnumValues", "DisplayName", "Name", "BaseTypes", "Properties" }, new[]{ "ValueSource" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues), global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property), global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Parser, new[]{ "Name", "DisplayName", "ValueType", "OccurrenceType" }, null, new[]{ typeof(global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.Metadata), global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.Metadata.Parser, new[]{ "DocumentSplitter", "DocumentAllowMultipleLabels", "PrefixedNamingOnProperties", "SkipNamingValidation" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The schema defines the output of the processed document by a processor.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DocumentSchema : pb::IMessage<DocumentSchema>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DocumentSchema> _parser = new pb::MessageParser<DocumentSchema>(() => new DocumentSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DocumentSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.DocumentAI.V1.DocumentSchemaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DocumentSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DocumentSchema(DocumentSchema other) : this() {
      displayName_ = other.displayName_;
      description_ = other.description_;
      entityTypes_ = other.entityTypes_.Clone();
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DocumentSchema Clone() {
      return new DocumentSchema(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 1;
    private string displayName_ = "";
    /// <summary>
    /// Display name to show to users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Description of the schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entity_types" field.</summary>
    public const int EntityTypesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType> _repeated_entityTypes_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType> entityTypes_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType>();
    /// <summary>
    /// Entity types of the schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType> EntityTypes {
      get { return entityTypes_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.Metadata metadata_;
    /// <summary>
    /// Metadata of the schema.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DocumentSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DocumentSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      if (Description != other.Description) return false;
      if(!entityTypes_.Equals(other.entityTypes_)) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= entityTypes_.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      entityTypes_.WriteTo(output, _repeated_entityTypes_codec);
      if (metadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DisplayName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      entityTypes_.WriteTo(ref output, _repeated_entityTypes_codec);
      if (metadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += entityTypes_.CalculateSize(_repeated_entityTypes_codec);
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DocumentSchema other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      entityTypes_.Add(other.entityTypes_);
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            entityTypes_.AddEntriesFrom(input, _repeated_entityTypes_codec);
            break;
          }
          case 34: {
            if (metadata_ == null) {
              Metadata = new global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DisplayName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            entityTypes_.AddEntriesFrom(ref input, _repeated_entityTypes_codec);
            break;
          }
          case 34: {
            if (metadata_ == null) {
              Metadata = new global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DocumentSchema message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// EntityType is the wrapper of a label of the corresponding model with
      /// detailed attributes and limitations for entity-based processors. Multiple
      /// types can also compose a dependency tree to represent nested types.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class EntityType : pb::IMessage<EntityType>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EntityType> _parser = new pb::MessageParser<EntityType>(() => new EntityType());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<EntityType> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DocumentAI.V1.DocumentSchema.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EntityType() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EntityType(EntityType other) : this() {
          displayName_ = other.displayName_;
          name_ = other.name_;
          baseTypes_ = other.baseTypes_.Clone();
          properties_ = other.properties_.Clone();
          switch (other.ValueSourceCase) {
            case ValueSourceOneofCase.EnumValues:
              EnumValues = other.EnumValues.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EntityType Clone() {
          return new EntityType(this);
        }

        /// <summary>Field number for the "enum_values" field.</summary>
        public const int EnumValuesFieldNumber = 14;
        /// <summary>
        /// If specified, lists all the possible values for this entity.  This
        /// should not be more than a handful of values.  If the number of values
        /// is >10 or could change frequently use the `EntityType.value_ontology`
        /// field and specify a list of all possible values in a value ontology
        /// file.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues EnumValues {
          get { return valueSourceCase_ == ValueSourceOneofCase.EnumValues ? (global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues) valueSource_ : null; }
          set {
            valueSource_ = value;
            valueSourceCase_ = value == null ? ValueSourceOneofCase.None : ValueSourceOneofCase.EnumValues;
          }
        }

        /// <summary>Field number for the "display_name" field.</summary>
        public const int DisplayNameFieldNumber = 13;
        private string displayName_ = "";
        /// <summary>
        /// User defined name for the type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// Name of the type. It must be unique within the schema file and
        /// cannot be a "Common Type".  The following naming conventions are used:
        ///
        /// - Use `snake_casing`.
        /// - Name matching is case-sensitive.
        /// - Maximum 64 characters.
        /// - Must start with a letter.
        /// - Allowed characters: ASCII letters `[a-z0-9_-]`.  (For backward
        ///   compatibility internal infrastructure and tooling can handle any ascii
        ///   character.)
        /// - The `/` is sometimes used to denote a property of a type.  For example
        ///   `line_item/amount`.  This convention is deprecated, but will still be
        ///   honored for backward compatibility.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "base_types" field.</summary>
        public const int BaseTypesFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_baseTypes_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> baseTypes_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// The entity type that this type is derived from.  For now, one and only
        /// one should be set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> BaseTypes {
          get { return baseTypes_; }
        }

        /// <summary>Field number for the "properties" field.</summary>
        public const int PropertiesFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property> _repeated_properties_codec
            = pb::FieldCodec.ForMessage(50, global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property> properties_ = new pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property>();
        /// <summary>
        /// Description the nested structure, or composition of an entity.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property> Properties {
          get { return properties_; }
        }

        private object valueSource_;
        /// <summary>Enum of possible cases for the "value_source" oneof.</summary>
        public enum ValueSourceOneofCase {
          None = 0,
          EnumValues = 14,
        }
        private ValueSourceOneofCase valueSourceCase_ = ValueSourceOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ValueSourceOneofCase ValueSourceCase {
          get { return valueSourceCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearValueSource() {
          valueSourceCase_ = ValueSourceOneofCase.None;
          valueSource_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as EntityType);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(EntityType other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(EnumValues, other.EnumValues)) return false;
          if (DisplayName != other.DisplayName) return false;
          if (Name != other.Name) return false;
          if(!baseTypes_.Equals(other.baseTypes_)) return false;
          if(!properties_.Equals(other.properties_)) return false;
          if (ValueSourceCase != other.ValueSourceCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (valueSourceCase_ == ValueSourceOneofCase.EnumValues) hash ^= EnumValues.GetHashCode();
          if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          hash ^= baseTypes_.GetHashCode();
          hash ^= properties_.GetHashCode();
          hash ^= (int) valueSourceCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          baseTypes_.WriteTo(output, _repeated_baseTypes_codec);
          properties_.WriteTo(output, _repeated_properties_codec);
          if (DisplayName.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(DisplayName);
          }
          if (valueSourceCase_ == ValueSourceOneofCase.EnumValues) {
            output.WriteRawTag(114);
            output.WriteMessage(EnumValues);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          baseTypes_.WriteTo(ref output, _repeated_baseTypes_codec);
          properties_.WriteTo(ref output, _repeated_properties_codec);
          if (DisplayName.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(DisplayName);
          }
          if (valueSourceCase_ == ValueSourceOneofCase.EnumValues) {
            output.WriteRawTag(114);
            output.WriteMessage(EnumValues);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (valueSourceCase_ == ValueSourceOneofCase.EnumValues) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnumValues);
          }
          if (DisplayName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += baseTypes_.CalculateSize(_repeated_baseTypes_codec);
          size += properties_.CalculateSize(_repeated_properties_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(EntityType other) {
          if (other == null) {
            return;
          }
          if (other.DisplayName.Length != 0) {
            DisplayName = other.DisplayName;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          baseTypes_.Add(other.baseTypes_);
          properties_.Add(other.properties_);
          switch (other.ValueSourceCase) {
            case ValueSourceOneofCase.EnumValues:
              if (EnumValues == null) {
                EnumValues = new global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues();
              }
              EnumValues.MergeFrom(other.EnumValues);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                baseTypes_.AddEntriesFrom(input, _repeated_baseTypes_codec);
                break;
              }
              case 50: {
                properties_.AddEntriesFrom(input, _repeated_properties_codec);
                break;
              }
              case 106: {
                DisplayName = input.ReadString();
                break;
              }
              case 114: {
                global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues subBuilder = new global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues();
                if (valueSourceCase_ == ValueSourceOneofCase.EnumValues) {
                  subBuilder.MergeFrom(EnumValues);
                }
                input.ReadMessage(subBuilder);
                EnumValues = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                baseTypes_.AddEntriesFrom(ref input, _repeated_baseTypes_codec);
                break;
              }
              case 50: {
                properties_.AddEntriesFrom(ref input, _repeated_properties_codec);
                break;
              }
              case 106: {
                DisplayName = input.ReadString();
                break;
              }
              case 114: {
                global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues subBuilder = new global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.EnumValues();
                if (valueSourceCase_ == ValueSourceOneofCase.EnumValues) {
                  subBuilder.MergeFrom(EnumValues);
                }
                input.ReadMessage(subBuilder);
                EnumValues = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the EntityType message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Defines the a list of enum values.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class EnumValues : pb::IMessage<EnumValues>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<EnumValues> _parser = new pb::MessageParser<EnumValues>(() => new EnumValues());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<EnumValues> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public EnumValues() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public EnumValues(EnumValues other) : this() {
              values_ = other.values_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public EnumValues Clone() {
              return new EnumValues(this);
            }

            /// <summary>Field number for the "values" field.</summary>
            public const int ValuesFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_values_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// The individual values that this enum values type can include.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<string> Values {
              get { return values_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as EnumValues);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(EnumValues other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!values_.Equals(other.values_)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= values_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              values_.WriteTo(output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              values_.WriteTo(ref output, _repeated_values_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += values_.CalculateSize(_repeated_values_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(EnumValues other) {
              if (other == null) {
                return;
              }
              values_.Add(other.values_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    values_.AddEntriesFrom(input, _repeated_values_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    values_.AddEntriesFrom(ref input, _repeated_values_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Defines properties that can be part of the entity type.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Property : pb::IMessage<Property>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Property> _parser = new pb::MessageParser<Property>(() => new Property());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Property> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Property() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Property(Property other) : this() {
              name_ = other.name_;
              displayName_ = other.displayName_;
              valueType_ = other.valueType_;
              occurrenceType_ = other.occurrenceType_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Property Clone() {
              return new Property(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            /// <summary>
            /// The name of the property.  Follows the same guidelines as the
            /// EntityType name.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "display_name" field.</summary>
            public const int DisplayNameFieldNumber = 6;
            private string displayName_ = "";
            /// <summary>
            /// User defined name for the property.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string DisplayName {
              get { return displayName_; }
              set {
                displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "value_type" field.</summary>
            public const int ValueTypeFieldNumber = 2;
            private string valueType_ = "";
            /// <summary>
            /// A reference to the value type of the property.  This type is subject
            /// to the same conventions as the `Entity.base_types` field.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string ValueType {
              get { return valueType_; }
              set {
                valueType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "occurrence_type" field.</summary>
            public const int OccurrenceTypeFieldNumber = 3;
            private global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType occurrenceType_ = global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType.Unspecified;
            /// <summary>
            /// Occurrence type limits the number of instances an entity type appears
            /// in the document.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType OccurrenceType {
              get { return occurrenceType_; }
              set {
                occurrenceType_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Property);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Property other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (DisplayName != other.DisplayName) return false;
              if (ValueType != other.ValueType) return false;
              if (OccurrenceType != other.OccurrenceType) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
              if (ValueType.Length != 0) hash ^= ValueType.GetHashCode();
              if (OccurrenceType != global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType.Unspecified) hash ^= OccurrenceType.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (ValueType.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(ValueType);
              }
              if (OccurrenceType != global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType.Unspecified) {
                output.WriteRawTag(24);
                output.WriteEnum((int) OccurrenceType);
              }
              if (DisplayName.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(DisplayName);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (ValueType.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(ValueType);
              }
              if (OccurrenceType != global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType.Unspecified) {
                output.WriteRawTag(24);
                output.WriteEnum((int) OccurrenceType);
              }
              if (DisplayName.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(DisplayName);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (DisplayName.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
              }
              if (ValueType.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueType);
              }
              if (OccurrenceType != global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType.Unspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OccurrenceType);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Property other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.DisplayName.Length != 0) {
                DisplayName = other.DisplayName;
              }
              if (other.ValueType.Length != 0) {
                ValueType = other.ValueType;
              }
              if (other.OccurrenceType != global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType.Unspecified) {
                OccurrenceType = other.OccurrenceType;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    ValueType = input.ReadString();
                    break;
                  }
                  case 24: {
                    OccurrenceType = (global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType) input.ReadEnum();
                    break;
                  }
                  case 50: {
                    DisplayName = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    ValueType = input.ReadString();
                    break;
                  }
                  case 24: {
                    OccurrenceType = (global::Google.Cloud.DocumentAI.V1.DocumentSchema.Types.EntityType.Types.Property.Types.OccurrenceType) input.ReadEnum();
                    break;
                  }
                  case 50: {
                    DisplayName = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the Property message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              /// <summary>
              /// Types of occurrences of the entity type in the document.  This
              /// represents the number of instances, not mentions, of an entity.
              /// For example, a bank statement might only have one
              /// `account_number`, but this account number can be mentioned in several
              /// places on the document.  In this case, the `account_number` is
              /// considered a `REQUIRED_ONCE` entity type. If, on the other hand, we
              /// expect a bank statement to contain the status of multiple different
              /// accounts for the customers, the occurrence type is set to
              /// `REQUIRED_MULTIPLE`.
              /// </summary>
              public enum OccurrenceType {
                /// <summary>
                /// Unspecified occurrence type.
                /// </summary>
                [pbr::OriginalName("OCCURRENCE_TYPE_UNSPECIFIED")] Unspecified = 0,
                /// <summary>
                /// There will be zero or one instance of this entity type.  The same
                /// entity instance may be mentioned multiple times.
                /// </summary>
                [pbr::OriginalName("OPTIONAL_ONCE")] OptionalOnce = 1,
                /// <summary>
                /// The entity type will appear zero or multiple times.
                /// </summary>
                [pbr::OriginalName("OPTIONAL_MULTIPLE")] OptionalMultiple = 2,
                /// <summary>
                /// The entity type will only appear exactly once.  The same
                /// entity instance may be mentioned multiple times.
                /// </summary>
                [pbr::OriginalName("REQUIRED_ONCE")] RequiredOnce = 3,
                /// <summary>
                /// The entity type will appear once or more times.
                /// </summary>
                [pbr::OriginalName("REQUIRED_MULTIPLE")] RequiredMultiple = 4,
              }

            }
            #endregion

          }

        }
        #endregion

      }

      /// <summary>
      /// Metadata for global schema behavior.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Metadata : pb::IMessage<Metadata>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.DocumentAI.V1.DocumentSchema.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Metadata() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Metadata(Metadata other) : this() {
          documentSplitter_ = other.documentSplitter_;
          documentAllowMultipleLabels_ = other.documentAllowMultipleLabels_;
          prefixedNamingOnProperties_ = other.prefixedNamingOnProperties_;
          skipNamingValidation_ = other.skipNamingValidation_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Metadata Clone() {
          return new Metadata(this);
        }

        /// <summary>Field number for the "document_splitter" field.</summary>
        public const int DocumentSplitterFieldNumber = 1;
        private bool documentSplitter_;
        /// <summary>
        /// If true, a `document` entity type can be applied to subdocument
        /// (splitting). Otherwise, it can only be applied to the entire document
        /// (classification).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DocumentSplitter {
          get { return documentSplitter_; }
          set {
            documentSplitter_ = value;
          }
        }

        /// <summary>Field number for the "document_allow_multiple_labels" field.</summary>
        public const int DocumentAllowMultipleLabelsFieldNumber = 2;
        private bool documentAllowMultipleLabels_;
        /// <summary>
        /// If true, on a given page, there can be multiple `document` annotations
        /// covering it.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool DocumentAllowMultipleLabels {
          get { return documentAllowMultipleLabels_; }
          set {
            documentAllowMultipleLabels_ = value;
          }
        }

        /// <summary>Field number for the "prefixed_naming_on_properties" field.</summary>
        public const int PrefixedNamingOnPropertiesFieldNumber = 6;
        private bool prefixedNamingOnProperties_;
        /// <summary>
        /// If set, all the nested entities must be prefixed with the parents.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool PrefixedNamingOnProperties {
          get { return prefixedNamingOnProperties_; }
          set {
            prefixedNamingOnProperties_ = value;
          }
        }

        /// <summary>Field number for the "skip_naming_validation" field.</summary>
        public const int SkipNamingValidationFieldNumber = 7;
        private bool skipNamingValidation_;
        /// <summary>
        /// If set, we will skip the naming format validation in the schema. So the
        /// string values in `DocumentSchema.EntityType.name` and
        /// `DocumentSchema.EntityType.Property.name` will not be checked.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool SkipNamingValidation {
          get { return skipNamingValidation_; }
          set {
            skipNamingValidation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Metadata);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Metadata other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DocumentSplitter != other.DocumentSplitter) return false;
          if (DocumentAllowMultipleLabels != other.DocumentAllowMultipleLabels) return false;
          if (PrefixedNamingOnProperties != other.PrefixedNamingOnProperties) return false;
          if (SkipNamingValidation != other.SkipNamingValidation) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (DocumentSplitter != false) hash ^= DocumentSplitter.GetHashCode();
          if (DocumentAllowMultipleLabels != false) hash ^= DocumentAllowMultipleLabels.GetHashCode();
          if (PrefixedNamingOnProperties != false) hash ^= PrefixedNamingOnProperties.GetHashCode();
          if (SkipNamingValidation != false) hash ^= SkipNamingValidation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (DocumentSplitter != false) {
            output.WriteRawTag(8);
            output.WriteBool(DocumentSplitter);
          }
          if (DocumentAllowMultipleLabels != false) {
            output.WriteRawTag(16);
            output.WriteBool(DocumentAllowMultipleLabels);
          }
          if (PrefixedNamingOnProperties != false) {
            output.WriteRawTag(48);
            output.WriteBool(PrefixedNamingOnProperties);
          }
          if (SkipNamingValidation != false) {
            output.WriteRawTag(56);
            output.WriteBool(SkipNamingValidation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (DocumentSplitter != false) {
            output.WriteRawTag(8);
            output.WriteBool(DocumentSplitter);
          }
          if (DocumentAllowMultipleLabels != false) {
            output.WriteRawTag(16);
            output.WriteBool(DocumentAllowMultipleLabels);
          }
          if (PrefixedNamingOnProperties != false) {
            output.WriteRawTag(48);
            output.WriteBool(PrefixedNamingOnProperties);
          }
          if (SkipNamingValidation != false) {
            output.WriteRawTag(56);
            output.WriteBool(SkipNamingValidation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (DocumentSplitter != false) {
            size += 1 + 1;
          }
          if (DocumentAllowMultipleLabels != false) {
            size += 1 + 1;
          }
          if (PrefixedNamingOnProperties != false) {
            size += 1 + 1;
          }
          if (SkipNamingValidation != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Metadata other) {
          if (other == null) {
            return;
          }
          if (other.DocumentSplitter != false) {
            DocumentSplitter = other.DocumentSplitter;
          }
          if (other.DocumentAllowMultipleLabels != false) {
            DocumentAllowMultipleLabels = other.DocumentAllowMultipleLabels;
          }
          if (other.PrefixedNamingOnProperties != false) {
            PrefixedNamingOnProperties = other.PrefixedNamingOnProperties;
          }
          if (other.SkipNamingValidation != false) {
            SkipNamingValidation = other.SkipNamingValidation;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                DocumentSplitter = input.ReadBool();
                break;
              }
              case 16: {
                DocumentAllowMultipleLabels = input.ReadBool();
                break;
              }
              case 48: {
                PrefixedNamingOnProperties = input.ReadBool();
                break;
              }
              case 56: {
                SkipNamingValidation = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                DocumentSplitter = input.ReadBool();
                break;
              }
              case 16: {
                DocumentAllowMultipleLabels = input.ReadBool();
                break;
              }
              case 48: {
                PrefixedNamingOnProperties = input.ReadBool();
                break;
              }
              case 56: {
                SkipNamingValidation = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
