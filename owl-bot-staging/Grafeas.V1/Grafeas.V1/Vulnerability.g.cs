// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grafeas/v1/vulnerability.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grafeas.V1 {

  /// <summary>Holder for reflection information generated from grafeas/v1/vulnerability.proto</summary>
  public static partial class VulnerabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for grafeas/v1/vulnerability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VulnerabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5ncmFmZWFzL3YxL3Z1bG5lcmFiaWxpdHkucHJvdG8SCmdyYWZlYXMudjEa",
            "H2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aH2dvb2dsZS9wcm90",
            "b2J1Zi90aW1lc3RhbXAucHJvdG8aF2dyYWZlYXMvdjEvY29tbW9uLnByb3Rv",
            "GhVncmFmZWFzL3YxL2N2c3MucHJvdG8aGGdyYWZlYXMvdjEvcGFja2FnZS5w",
            "cm90bxoZZ3JhZmVhcy92MS9zZXZlcml0eS5wcm90bxoUZ3JhZmVhcy92MS92",
            "ZXgucHJvdG8i7AcKEVZ1bG5lcmFiaWxpdHlOb3RlEhIKCmN2c3Nfc2NvcmUY",
            "ASABKAISJgoIc2V2ZXJpdHkYAiABKA4yFC5ncmFmZWFzLnYxLlNldmVyaXR5",
            "EjUKB2RldGFpbHMYAyADKAsyJC5ncmFmZWFzLnYxLlZ1bG5lcmFiaWxpdHlO",
            "b3RlLkRldGFpbBIjCgdjdnNzX3YzGAQgASgLMhIuZ3JhZmVhcy52MS5DVlNT",
            "djMSRAoPd2luZG93c19kZXRhaWxzGAUgAygLMisuZ3JhZmVhcy52MS5WdWxu",
            "ZXJhYmlsaXR5Tm90ZS5XaW5kb3dzRGV0YWlsEjYKEnNvdXJjZV91cGRhdGVf",
            "dGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLQoMY3Zz",
            "c192ZXJzaW9uGAcgASgOMhcuZ3JhZmVhcy52MS5DVlNTVmVyc2lvbhIhCgdj",
            "dnNzX3YyGAggASgLMhAuZ3JhZmVhcy52MS5DVlNTGq0DCgZEZXRhaWwSFQoN",
            "c2V2ZXJpdHlfbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIUCgxw",
            "YWNrYWdlX3R5cGUYAyABKAkSGAoQYWZmZWN0ZWRfY3BlX3VyaRgEIAEoCRIY",
            "ChBhZmZlY3RlZF9wYWNrYWdlGAUgASgJEjMKFmFmZmVjdGVkX3ZlcnNpb25f",
            "c3RhcnQYBiABKAsyEy5ncmFmZWFzLnYxLlZlcnNpb24SMQoUYWZmZWN0ZWRf",
            "dmVyc2lvbl9lbmQYByABKAsyEy5ncmFmZWFzLnYxLlZlcnNpb24SFQoNZml4",
            "ZWRfY3BlX3VyaRgIIAEoCRIVCg1maXhlZF9wYWNrYWdlGAkgASgJEioKDWZp",
            "eGVkX3ZlcnNpb24YCiABKAsyEy5ncmFmZWFzLnYxLlZlcnNpb24SEwoLaXNf",
            "b2Jzb2xldGUYCyABKAgSNgoSc291cmNlX3VwZGF0ZV90aW1lGAwgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZzb3VyY2UYDSABKAkSDgoG",
            "dmVuZG9yGA4gASgJGr4BCg1XaW5kb3dzRGV0YWlsEg8KB2NwZV91cmkYASAB",
            "KAkSDAoEbmFtZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCRJNCgpmaXhp",
            "bmdfa2JzGAQgAygLMjkuZ3JhZmVhcy52MS5WdWxuZXJhYmlsaXR5Tm90ZS5X",
            "aW5kb3dzRGV0YWlsLktub3dsZWRnZUJhc2UaKgoNS25vd2xlZGdlQmFzZRIM",
            "CgRuYW1lGAEgASgJEgsKA3VybBgCIAEoCSKYCgoXVnVsbmVyYWJpbGl0eU9j",
            "Y3VycmVuY2USDAoEdHlwZRgBIAEoCRImCghzZXZlcml0eRgCIAEoDjIULmdy",
            "YWZlYXMudjEuU2V2ZXJpdHkSEgoKY3Zzc19zY29yZRgDIAEoAhIgCgZjdnNz",
            "djMYCiABKAsyEC5ncmFmZWFzLnYxLkNWU1MSRwoNcGFja2FnZV9pc3N1ZRgE",
            "IAMoCzIwLmdyYWZlYXMudjEuVnVsbmVyYWJpbGl0eU9jY3VycmVuY2UuUGFj",
            "a2FnZUlzc3VlEhkKEXNob3J0X2Rlc2NyaXB0aW9uGAUgASgJEhgKEGxvbmdf",
            "ZGVzY3JpcHRpb24YBiABKAkSLAoMcmVsYXRlZF91cmxzGAcgAygLMhYuZ3Jh",
            "ZmVhcy52MS5SZWxhdGVkVXJsEjAKEmVmZmVjdGl2ZV9zZXZlcml0eRgIIAEo",
            "DjIULmdyYWZlYXMudjEuU2V2ZXJpdHkSFQoNZml4X2F2YWlsYWJsZRgJIAEo",
            "CBItCgxjdnNzX3ZlcnNpb24YCyABKA4yFy5ncmFmZWFzLnYxLkNWU1NWZXJz",
            "aW9uEiEKB2N2c3NfdjIYDCABKAsyEC5ncmFmZWFzLnYxLkNWU1MSSQoOdmV4",
            "X2Fzc2Vzc21lbnQYDSABKAsyMS5ncmFmZWFzLnYxLlZ1bG5lcmFiaWxpdHlP",
            "Y2N1cnJlbmNlLlZleEFzc2Vzc21lbnQSFQoNZXh0cmFfZGV0YWlscxgOIAEo",
            "CRrgAgoMUGFja2FnZUlzc3VlEhgKEGFmZmVjdGVkX2NwZV91cmkYASABKAkS",
            "GAoQYWZmZWN0ZWRfcGFja2FnZRgCIAEoCRItChBhZmZlY3RlZF92ZXJzaW9u",
            "GAMgASgLMhMuZ3JhZmVhcy52MS5WZXJzaW9uEhUKDWZpeGVkX2NwZV91cmkY",
            "BCABKAkSFQoNZml4ZWRfcGFja2FnZRgFIAEoCRIqCg1maXhlZF92ZXJzaW9u",
            "GAYgASgLMhMuZ3JhZmVhcy52MS5WZXJzaW9uEhUKDWZpeF9hdmFpbGFibGUY",
            "ByABKAgSFAoMcGFja2FnZV90eXBlGAggASgJEjUKEmVmZmVjdGl2ZV9zZXZl",
            "cml0eRgJIAEoDjIULmdyYWZlYXMudjEuU2V2ZXJpdHlCA+BBAxIvCg1maWxl",
            "X2xvY2F0aW9uGAogAygLMhguZ3JhZmVhcy52MS5GaWxlTG9jYXRpb24ahAMK",
            "DVZleEFzc2Vzc21lbnQSDwoDY3ZlGAEgASgJQgIYARIYChB2dWxuZXJhYmls",
            "aXR5X2lkGAggASgJEiwKDHJlbGF0ZWRfdXJpcxgCIAMoCzIWLmdyYWZlYXMu",
            "djEuUmVsYXRlZFVybBIRCglub3RlX25hbWUYAyABKAkSRwoFc3RhdGUYBCAB",
            "KA4yOC5ncmFmZWFzLnYxLlZ1bG5lcmFiaWxpdHlBc3Nlc3NtZW50Tm90ZS5B",
            "c3Nlc3NtZW50LlN0YXRlEg8KB2ltcGFjdHMYBSADKAkSVAoMcmVtZWRpYXRp",
            "b25zGAYgAygLMj4uZ3JhZmVhcy52MS5WdWxuZXJhYmlsaXR5QXNzZXNzbWVu",
            "dE5vdGUuQXNzZXNzbWVudC5SZW1lZGlhdGlvbhJXCg1qdXN0aWZpY2F0aW9u",
            "GAcgASgLMkAuZ3JhZmVhcy52MS5WdWxuZXJhYmlsaXR5QXNzZXNzbWVudE5v",
            "dGUuQXNzZXNzbWVudC5KdXN0aWZpY2F0aW9uQlEKDWlvLmdyYWZlYXMudjFQ",
            "AVo4Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9ncmFm",
            "ZWFzL3YxO2dyYWZlYXOiAgNHUkFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Grafeas.V1.CommonReflection.Descriptor, global::Grafeas.V1.CvssReflection.Descriptor, global::Grafeas.V1.PackageReflection.Descriptor, global::Grafeas.V1.SeverityReflection.Descriptor, global::Grafeas.V1.VexReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.VulnerabilityNote), global::Grafeas.V1.VulnerabilityNote.Parser, new[]{ "CvssScore", "Severity", "Details", "CvssV3", "WindowsDetails", "SourceUpdateTime", "CvssVersion", "CvssV2" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.VulnerabilityNote.Types.Detail), global::Grafeas.V1.VulnerabilityNote.Types.Detail.Parser, new[]{ "SeverityName", "Description", "PackageType", "AffectedCpeUri", "AffectedPackage", "AffectedVersionStart", "AffectedVersionEnd", "FixedCpeUri", "FixedPackage", "FixedVersion", "IsObsolete", "SourceUpdateTime", "Source", "Vendor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail), global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Parser, new[]{ "CpeUri", "Name", "Description", "FixingKbs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Types.KnowledgeBase), global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Types.KnowledgeBase.Parser, new[]{ "Name", "Url" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.VulnerabilityOccurrence), global::Grafeas.V1.VulnerabilityOccurrence.Parser, new[]{ "Type", "Severity", "CvssScore", "Cvssv3", "PackageIssue", "ShortDescription", "LongDescription", "RelatedUrls", "EffectiveSeverity", "FixAvailable", "CvssVersion", "CvssV2", "VexAssessment", "ExtraDetails" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.VulnerabilityOccurrence.Types.PackageIssue), global::Grafeas.V1.VulnerabilityOccurrence.Types.PackageIssue.Parser, new[]{ "AffectedCpeUri", "AffectedPackage", "AffectedVersion", "FixedCpeUri", "FixedPackage", "FixedVersion", "FixAvailable", "PackageType", "EffectiveSeverity", "FileLocation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.VulnerabilityOccurrence.Types.VexAssessment), global::Grafeas.V1.VulnerabilityOccurrence.Types.VexAssessment.Parser, new[]{ "Cve", "VulnerabilityId", "RelatedUris", "NoteName", "State", "Impacts", "Remediations", "Justification" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A security vulnerability that can be found in resources.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VulnerabilityNote : pb::IMessage<VulnerabilityNote>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VulnerabilityNote> _parser = new pb::MessageParser<VulnerabilityNote>(() => new VulnerabilityNote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VulnerabilityNote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1.VulnerabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VulnerabilityNote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VulnerabilityNote(VulnerabilityNote other) : this() {
      cvssScore_ = other.cvssScore_;
      severity_ = other.severity_;
      details_ = other.details_.Clone();
      cvssV3_ = other.cvssV3_ != null ? other.cvssV3_.Clone() : null;
      windowsDetails_ = other.windowsDetails_.Clone();
      sourceUpdateTime_ = other.sourceUpdateTime_ != null ? other.sourceUpdateTime_.Clone() : null;
      cvssVersion_ = other.cvssVersion_;
      cvssV2_ = other.cvssV2_ != null ? other.cvssV2_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VulnerabilityNote Clone() {
      return new VulnerabilityNote(this);
    }

    /// <summary>Field number for the "cvss_score" field.</summary>
    public const int CvssScoreFieldNumber = 1;
    private float cvssScore_;
    /// <summary>
    /// The CVSS score of this vulnerability. CVSS score is on a scale of 0 - 10
    /// where 0 indicates low severity and 10 indicates high severity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CvssScore {
      get { return cvssScore_; }
      set {
        cvssScore_ = value;
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 2;
    private global::Grafeas.V1.Severity severity_ = global::Grafeas.V1.Severity.Unspecified;
    /// <summary>
    /// The note provider assigned severity of this vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Severity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Grafeas.V1.VulnerabilityNote.Types.Detail> _repeated_details_codec
        = pb::FieldCodec.ForMessage(26, global::Grafeas.V1.VulnerabilityNote.Types.Detail.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.Detail> details_ = new pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.Detail>();
    /// <summary>
    /// Details of all known distros and packages affected by this vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.Detail> Details {
      get { return details_; }
    }

    /// <summary>Field number for the "cvss_v3" field.</summary>
    public const int CvssV3FieldNumber = 4;
    private global::Grafeas.V1.CVSSv3 cvssV3_;
    /// <summary>
    /// The full description of the CVSSv3 for this vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.CVSSv3 CvssV3 {
      get { return cvssV3_; }
      set {
        cvssV3_ = value;
      }
    }

    /// <summary>Field number for the "windows_details" field.</summary>
    public const int WindowsDetailsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail> _repeated_windowsDetails_codec
        = pb::FieldCodec.ForMessage(42, global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail> windowsDetails_ = new pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail>();
    /// <summary>
    /// Windows details get their own format because the information format and
    /// model don't match a normal detail. Specifically Windows updates are done as
    /// patches, thus Windows vulnerabilities really are a missing package, rather
    /// than a package being at an incorrect version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail> WindowsDetails {
      get { return windowsDetails_; }
    }

    /// <summary>Field number for the "source_update_time" field.</summary>
    public const int SourceUpdateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp sourceUpdateTime_;
    /// <summary>
    /// The time this information was last changed at the source. This is an
    /// upstream timestamp from the underlying information source - e.g. Ubuntu
    /// security tracker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SourceUpdateTime {
      get { return sourceUpdateTime_; }
      set {
        sourceUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "cvss_version" field.</summary>
    public const int CvssVersionFieldNumber = 7;
    private global::Grafeas.V1.CVSSVersion cvssVersion_ = global::Grafeas.V1.CVSSVersion.Unspecified;
    /// <summary>
    /// CVSS version used to populate cvss_score and severity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.CVSSVersion CvssVersion {
      get { return cvssVersion_; }
      set {
        cvssVersion_ = value;
      }
    }

    /// <summary>Field number for the "cvss_v2" field.</summary>
    public const int CvssV2FieldNumber = 8;
    private global::Grafeas.V1.CVSS cvssV2_;
    /// <summary>
    /// The full description of the v2 CVSS for this vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.CVSS CvssV2 {
      get { return cvssV2_; }
      set {
        cvssV2_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VulnerabilityNote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VulnerabilityNote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CvssScore, other.CvssScore)) return false;
      if (Severity != other.Severity) return false;
      if(!details_.Equals(other.details_)) return false;
      if (!object.Equals(CvssV3, other.CvssV3)) return false;
      if(!windowsDetails_.Equals(other.windowsDetails_)) return false;
      if (!object.Equals(SourceUpdateTime, other.SourceUpdateTime)) return false;
      if (CvssVersion != other.CvssVersion) return false;
      if (!object.Equals(CvssV2, other.CvssV2)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CvssScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CvssScore);
      if (Severity != global::Grafeas.V1.Severity.Unspecified) hash ^= Severity.GetHashCode();
      hash ^= details_.GetHashCode();
      if (cvssV3_ != null) hash ^= CvssV3.GetHashCode();
      hash ^= windowsDetails_.GetHashCode();
      if (sourceUpdateTime_ != null) hash ^= SourceUpdateTime.GetHashCode();
      if (CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) hash ^= CvssVersion.GetHashCode();
      if (cvssV2_ != null) hash ^= CvssV2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CvssScore != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CvssScore);
      }
      if (Severity != global::Grafeas.V1.Severity.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Severity);
      }
      details_.WriteTo(output, _repeated_details_codec);
      if (cvssV3_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CvssV3);
      }
      windowsDetails_.WriteTo(output, _repeated_windowsDetails_codec);
      if (sourceUpdateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SourceUpdateTime);
      }
      if (CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) CvssVersion);
      }
      if (cvssV2_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CvssV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CvssScore != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CvssScore);
      }
      if (Severity != global::Grafeas.V1.Severity.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Severity);
      }
      details_.WriteTo(ref output, _repeated_details_codec);
      if (cvssV3_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CvssV3);
      }
      windowsDetails_.WriteTo(ref output, _repeated_windowsDetails_codec);
      if (sourceUpdateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SourceUpdateTime);
      }
      if (CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) CvssVersion);
      }
      if (cvssV2_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(CvssV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CvssScore != 0F) {
        size += 1 + 4;
      }
      if (Severity != global::Grafeas.V1.Severity.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      size += details_.CalculateSize(_repeated_details_codec);
      if (cvssV3_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CvssV3);
      }
      size += windowsDetails_.CalculateSize(_repeated_windowsDetails_codec);
      if (sourceUpdateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceUpdateTime);
      }
      if (CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CvssVersion);
      }
      if (cvssV2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CvssV2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VulnerabilityNote other) {
      if (other == null) {
        return;
      }
      if (other.CvssScore != 0F) {
        CvssScore = other.CvssScore;
      }
      if (other.Severity != global::Grafeas.V1.Severity.Unspecified) {
        Severity = other.Severity;
      }
      details_.Add(other.details_);
      if (other.cvssV3_ != null) {
        if (cvssV3_ == null) {
          CvssV3 = new global::Grafeas.V1.CVSSv3();
        }
        CvssV3.MergeFrom(other.CvssV3);
      }
      windowsDetails_.Add(other.windowsDetails_);
      if (other.sourceUpdateTime_ != null) {
        if (sourceUpdateTime_ == null) {
          SourceUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SourceUpdateTime.MergeFrom(other.SourceUpdateTime);
      }
      if (other.CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) {
        CvssVersion = other.CvssVersion;
      }
      if (other.cvssV2_ != null) {
        if (cvssV2_ == null) {
          CvssV2 = new global::Grafeas.V1.CVSS();
        }
        CvssV2.MergeFrom(other.CvssV2);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            CvssScore = input.ReadFloat();
            break;
          }
          case 16: {
            Severity = (global::Grafeas.V1.Severity) input.ReadEnum();
            break;
          }
          case 26: {
            details_.AddEntriesFrom(input, _repeated_details_codec);
            break;
          }
          case 34: {
            if (cvssV3_ == null) {
              CvssV3 = new global::Grafeas.V1.CVSSv3();
            }
            input.ReadMessage(CvssV3);
            break;
          }
          case 42: {
            windowsDetails_.AddEntriesFrom(input, _repeated_windowsDetails_codec);
            break;
          }
          case 50: {
            if (sourceUpdateTime_ == null) {
              SourceUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SourceUpdateTime);
            break;
          }
          case 56: {
            CvssVersion = (global::Grafeas.V1.CVSSVersion) input.ReadEnum();
            break;
          }
          case 66: {
            if (cvssV2_ == null) {
              CvssV2 = new global::Grafeas.V1.CVSS();
            }
            input.ReadMessage(CvssV2);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            CvssScore = input.ReadFloat();
            break;
          }
          case 16: {
            Severity = (global::Grafeas.V1.Severity) input.ReadEnum();
            break;
          }
          case 26: {
            details_.AddEntriesFrom(ref input, _repeated_details_codec);
            break;
          }
          case 34: {
            if (cvssV3_ == null) {
              CvssV3 = new global::Grafeas.V1.CVSSv3();
            }
            input.ReadMessage(CvssV3);
            break;
          }
          case 42: {
            windowsDetails_.AddEntriesFrom(ref input, _repeated_windowsDetails_codec);
            break;
          }
          case 50: {
            if (sourceUpdateTime_ == null) {
              SourceUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SourceUpdateTime);
            break;
          }
          case 56: {
            CvssVersion = (global::Grafeas.V1.CVSSVersion) input.ReadEnum();
            break;
          }
          case 66: {
            if (cvssV2_ == null) {
              CvssV2 = new global::Grafeas.V1.CVSS();
            }
            input.ReadMessage(CvssV2);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VulnerabilityNote message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// A detail for a distro and package affected by this vulnerability and its
      /// associated fix (if one is available).
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Detail : pb::IMessage<Detail>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Detail> _parser = new pb::MessageParser<Detail>(() => new Detail());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Detail> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grafeas.V1.VulnerabilityNote.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Detail() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Detail(Detail other) : this() {
          severityName_ = other.severityName_;
          description_ = other.description_;
          packageType_ = other.packageType_;
          affectedCpeUri_ = other.affectedCpeUri_;
          affectedPackage_ = other.affectedPackage_;
          affectedVersionStart_ = other.affectedVersionStart_ != null ? other.affectedVersionStart_.Clone() : null;
          affectedVersionEnd_ = other.affectedVersionEnd_ != null ? other.affectedVersionEnd_.Clone() : null;
          fixedCpeUri_ = other.fixedCpeUri_;
          fixedPackage_ = other.fixedPackage_;
          fixedVersion_ = other.fixedVersion_ != null ? other.fixedVersion_.Clone() : null;
          isObsolete_ = other.isObsolete_;
          sourceUpdateTime_ = other.sourceUpdateTime_ != null ? other.sourceUpdateTime_.Clone() : null;
          source_ = other.source_;
          vendor_ = other.vendor_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Detail Clone() {
          return new Detail(this);
        }

        /// <summary>Field number for the "severity_name" field.</summary>
        public const int SeverityNameFieldNumber = 1;
        private string severityName_ = "";
        /// <summary>
        /// The distro assigned severity of this vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string SeverityName {
          get { return severityName_; }
          set {
            severityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        private string description_ = "";
        /// <summary>
        /// A vendor-specific description of this vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "package_type" field.</summary>
        public const int PackageTypeFieldNumber = 3;
        private string packageType_ = "";
        /// <summary>
        /// The type of package; whether native or non native (e.g., ruby gems,
        /// node.js packages, etc.).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PackageType {
          get { return packageType_; }
          set {
            packageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "affected_cpe_uri" field.</summary>
        public const int AffectedCpeUriFieldNumber = 4;
        private string affectedCpeUri_ = "";
        /// <summary>
        /// Required. The [CPE URI](https://cpe.mitre.org/specification/) this
        /// vulnerability affects.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AffectedCpeUri {
          get { return affectedCpeUri_; }
          set {
            affectedCpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "affected_package" field.</summary>
        public const int AffectedPackageFieldNumber = 5;
        private string affectedPackage_ = "";
        /// <summary>
        /// Required. The package this vulnerability affects.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AffectedPackage {
          get { return affectedPackage_; }
          set {
            affectedPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "affected_version_start" field.</summary>
        public const int AffectedVersionStartFieldNumber = 6;
        private global::Grafeas.V1.Version affectedVersionStart_;
        /// <summary>
        /// The version number at the start of an interval in which this
        /// vulnerability exists. A vulnerability can affect a package between
        /// version numbers that are disjoint sets of intervals (example:
        /// [1.0.0-1.1.0], [2.4.6-2.4.8] and [4.5.6-4.6.8]) each of which will be
        /// represented in its own Detail. If a specific affected version is provided
        /// by a vulnerability database, affected_version_start and
        /// affected_version_end will be the same in that Detail.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Grafeas.V1.Version AffectedVersionStart {
          get { return affectedVersionStart_; }
          set {
            affectedVersionStart_ = value;
          }
        }

        /// <summary>Field number for the "affected_version_end" field.</summary>
        public const int AffectedVersionEndFieldNumber = 7;
        private global::Grafeas.V1.Version affectedVersionEnd_;
        /// <summary>
        /// The version number at the end of an interval in which this vulnerability
        /// exists. A vulnerability can affect a package between version numbers
        /// that are disjoint sets of intervals (example: [1.0.0-1.1.0],
        /// [2.4.6-2.4.8] and [4.5.6-4.6.8]) each of which will be represented in its
        /// own Detail. If a specific affected version is provided by a vulnerability
        /// database, affected_version_start and affected_version_end will be the
        /// same in that Detail.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Grafeas.V1.Version AffectedVersionEnd {
          get { return affectedVersionEnd_; }
          set {
            affectedVersionEnd_ = value;
          }
        }

        /// <summary>Field number for the "fixed_cpe_uri" field.</summary>
        public const int FixedCpeUriFieldNumber = 8;
        private string fixedCpeUri_ = "";
        /// <summary>
        /// The distro recommended [CPE URI](https://cpe.mitre.org/specification/)
        /// to update to that contains a fix for this vulnerability. It is possible
        /// for this to be different from the affected_cpe_uri.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string FixedCpeUri {
          get { return fixedCpeUri_; }
          set {
            fixedCpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fixed_package" field.</summary>
        public const int FixedPackageFieldNumber = 9;
        private string fixedPackage_ = "";
        /// <summary>
        /// The distro recommended package to update to that contains a fix for this
        /// vulnerability. It is possible for this to be different from the
        /// affected_package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string FixedPackage {
          get { return fixedPackage_; }
          set {
            fixedPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fixed_version" field.</summary>
        public const int FixedVersionFieldNumber = 10;
        private global::Grafeas.V1.Version fixedVersion_;
        /// <summary>
        /// The distro recommended version to update to that contains a
        /// fix for this vulnerability. Setting this to VersionKind.MAXIMUM means no
        /// such version is yet available.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Grafeas.V1.Version FixedVersion {
          get { return fixedVersion_; }
          set {
            fixedVersion_ = value;
          }
        }

        /// <summary>Field number for the "is_obsolete" field.</summary>
        public const int IsObsoleteFieldNumber = 11;
        private bool isObsolete_;
        /// <summary>
        /// Whether this detail is obsolete. Occurrences are expected not to point to
        /// obsolete details.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IsObsolete {
          get { return isObsolete_; }
          set {
            isObsolete_ = value;
          }
        }

        /// <summary>Field number for the "source_update_time" field.</summary>
        public const int SourceUpdateTimeFieldNumber = 12;
        private global::Google.Protobuf.WellKnownTypes.Timestamp sourceUpdateTime_;
        /// <summary>
        /// The time this information was last changed at the source. This is an
        /// upstream timestamp from the underlying information source - e.g. Ubuntu
        /// security tracker.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp SourceUpdateTime {
          get { return sourceUpdateTime_; }
          set {
            sourceUpdateTime_ = value;
          }
        }

        /// <summary>Field number for the "source" field.</summary>
        public const int SourceFieldNumber = 13;
        private string source_ = "";
        /// <summary>
        /// The source from which the information in this Detail was obtained.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Source {
          get { return source_; }
          set {
            source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "vendor" field.</summary>
        public const int VendorFieldNumber = 14;
        private string vendor_ = "";
        /// <summary>
        /// The name of the vendor of the product.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Vendor {
          get { return vendor_; }
          set {
            vendor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Detail);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Detail other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SeverityName != other.SeverityName) return false;
          if (Description != other.Description) return false;
          if (PackageType != other.PackageType) return false;
          if (AffectedCpeUri != other.AffectedCpeUri) return false;
          if (AffectedPackage != other.AffectedPackage) return false;
          if (!object.Equals(AffectedVersionStart, other.AffectedVersionStart)) return false;
          if (!object.Equals(AffectedVersionEnd, other.AffectedVersionEnd)) return false;
          if (FixedCpeUri != other.FixedCpeUri) return false;
          if (FixedPackage != other.FixedPackage) return false;
          if (!object.Equals(FixedVersion, other.FixedVersion)) return false;
          if (IsObsolete != other.IsObsolete) return false;
          if (!object.Equals(SourceUpdateTime, other.SourceUpdateTime)) return false;
          if (Source != other.Source) return false;
          if (Vendor != other.Vendor) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (SeverityName.Length != 0) hash ^= SeverityName.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (PackageType.Length != 0) hash ^= PackageType.GetHashCode();
          if (AffectedCpeUri.Length != 0) hash ^= AffectedCpeUri.GetHashCode();
          if (AffectedPackage.Length != 0) hash ^= AffectedPackage.GetHashCode();
          if (affectedVersionStart_ != null) hash ^= AffectedVersionStart.GetHashCode();
          if (affectedVersionEnd_ != null) hash ^= AffectedVersionEnd.GetHashCode();
          if (FixedCpeUri.Length != 0) hash ^= FixedCpeUri.GetHashCode();
          if (FixedPackage.Length != 0) hash ^= FixedPackage.GetHashCode();
          if (fixedVersion_ != null) hash ^= FixedVersion.GetHashCode();
          if (IsObsolete != false) hash ^= IsObsolete.GetHashCode();
          if (sourceUpdateTime_ != null) hash ^= SourceUpdateTime.GetHashCode();
          if (Source.Length != 0) hash ^= Source.GetHashCode();
          if (Vendor.Length != 0) hash ^= Vendor.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (SeverityName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SeverityName);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          if (PackageType.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(PackageType);
          }
          if (AffectedCpeUri.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(AffectedCpeUri);
          }
          if (AffectedPackage.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AffectedPackage);
          }
          if (affectedVersionStart_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(AffectedVersionStart);
          }
          if (affectedVersionEnd_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(AffectedVersionEnd);
          }
          if (FixedCpeUri.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(FixedCpeUri);
          }
          if (FixedPackage.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(FixedPackage);
          }
          if (fixedVersion_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(FixedVersion);
          }
          if (IsObsolete != false) {
            output.WriteRawTag(88);
            output.WriteBool(IsObsolete);
          }
          if (sourceUpdateTime_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(SourceUpdateTime);
          }
          if (Source.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(Source);
          }
          if (Vendor.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(Vendor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (SeverityName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(SeverityName);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          if (PackageType.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(PackageType);
          }
          if (AffectedCpeUri.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(AffectedCpeUri);
          }
          if (AffectedPackage.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AffectedPackage);
          }
          if (affectedVersionStart_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(AffectedVersionStart);
          }
          if (affectedVersionEnd_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(AffectedVersionEnd);
          }
          if (FixedCpeUri.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(FixedCpeUri);
          }
          if (FixedPackage.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(FixedPackage);
          }
          if (fixedVersion_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(FixedVersion);
          }
          if (IsObsolete != false) {
            output.WriteRawTag(88);
            output.WriteBool(IsObsolete);
          }
          if (sourceUpdateTime_ != null) {
            output.WriteRawTag(98);
            output.WriteMessage(SourceUpdateTime);
          }
          if (Source.Length != 0) {
            output.WriteRawTag(106);
            output.WriteString(Source);
          }
          if (Vendor.Length != 0) {
            output.WriteRawTag(114);
            output.WriteString(Vendor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (SeverityName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SeverityName);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (PackageType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageType);
          }
          if (AffectedCpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AffectedCpeUri);
          }
          if (AffectedPackage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AffectedPackage);
          }
          if (affectedVersionStart_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AffectedVersionStart);
          }
          if (affectedVersionEnd_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AffectedVersionEnd);
          }
          if (FixedCpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FixedCpeUri);
          }
          if (FixedPackage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FixedPackage);
          }
          if (fixedVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedVersion);
          }
          if (IsObsolete != false) {
            size += 1 + 1;
          }
          if (sourceUpdateTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceUpdateTime);
          }
          if (Source.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
          }
          if (Vendor.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Vendor);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Detail other) {
          if (other == null) {
            return;
          }
          if (other.SeverityName.Length != 0) {
            SeverityName = other.SeverityName;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.PackageType.Length != 0) {
            PackageType = other.PackageType;
          }
          if (other.AffectedCpeUri.Length != 0) {
            AffectedCpeUri = other.AffectedCpeUri;
          }
          if (other.AffectedPackage.Length != 0) {
            AffectedPackage = other.AffectedPackage;
          }
          if (other.affectedVersionStart_ != null) {
            if (affectedVersionStart_ == null) {
              AffectedVersionStart = new global::Grafeas.V1.Version();
            }
            AffectedVersionStart.MergeFrom(other.AffectedVersionStart);
          }
          if (other.affectedVersionEnd_ != null) {
            if (affectedVersionEnd_ == null) {
              AffectedVersionEnd = new global::Grafeas.V1.Version();
            }
            AffectedVersionEnd.MergeFrom(other.AffectedVersionEnd);
          }
          if (other.FixedCpeUri.Length != 0) {
            FixedCpeUri = other.FixedCpeUri;
          }
          if (other.FixedPackage.Length != 0) {
            FixedPackage = other.FixedPackage;
          }
          if (other.fixedVersion_ != null) {
            if (fixedVersion_ == null) {
              FixedVersion = new global::Grafeas.V1.Version();
            }
            FixedVersion.MergeFrom(other.FixedVersion);
          }
          if (other.IsObsolete != false) {
            IsObsolete = other.IsObsolete;
          }
          if (other.sourceUpdateTime_ != null) {
            if (sourceUpdateTime_ == null) {
              SourceUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            SourceUpdateTime.MergeFrom(other.SourceUpdateTime);
          }
          if (other.Source.Length != 0) {
            Source = other.Source;
          }
          if (other.Vendor.Length != 0) {
            Vendor = other.Vendor;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                SeverityName = input.ReadString();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
              case 26: {
                PackageType = input.ReadString();
                break;
              }
              case 34: {
                AffectedCpeUri = input.ReadString();
                break;
              }
              case 42: {
                AffectedPackage = input.ReadString();
                break;
              }
              case 50: {
                if (affectedVersionStart_ == null) {
                  AffectedVersionStart = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(AffectedVersionStart);
                break;
              }
              case 58: {
                if (affectedVersionEnd_ == null) {
                  AffectedVersionEnd = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(AffectedVersionEnd);
                break;
              }
              case 66: {
                FixedCpeUri = input.ReadString();
                break;
              }
              case 74: {
                FixedPackage = input.ReadString();
                break;
              }
              case 82: {
                if (fixedVersion_ == null) {
                  FixedVersion = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(FixedVersion);
                break;
              }
              case 88: {
                IsObsolete = input.ReadBool();
                break;
              }
              case 98: {
                if (sourceUpdateTime_ == null) {
                  SourceUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(SourceUpdateTime);
                break;
              }
              case 106: {
                Source = input.ReadString();
                break;
              }
              case 114: {
                Vendor = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                SeverityName = input.ReadString();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
              case 26: {
                PackageType = input.ReadString();
                break;
              }
              case 34: {
                AffectedCpeUri = input.ReadString();
                break;
              }
              case 42: {
                AffectedPackage = input.ReadString();
                break;
              }
              case 50: {
                if (affectedVersionStart_ == null) {
                  AffectedVersionStart = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(AffectedVersionStart);
                break;
              }
              case 58: {
                if (affectedVersionEnd_ == null) {
                  AffectedVersionEnd = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(AffectedVersionEnd);
                break;
              }
              case 66: {
                FixedCpeUri = input.ReadString();
                break;
              }
              case 74: {
                FixedPackage = input.ReadString();
                break;
              }
              case 82: {
                if (fixedVersion_ == null) {
                  FixedVersion = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(FixedVersion);
                break;
              }
              case 88: {
                IsObsolete = input.ReadBool();
                break;
              }
              case 98: {
                if (sourceUpdateTime_ == null) {
                  SourceUpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(SourceUpdateTime);
                break;
              }
              case 106: {
                Source = input.ReadString();
                break;
              }
              case 114: {
                Vendor = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class WindowsDetail : pb::IMessage<WindowsDetail>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<WindowsDetail> _parser = new pb::MessageParser<WindowsDetail>(() => new WindowsDetail());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<WindowsDetail> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grafeas.V1.VulnerabilityNote.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WindowsDetail() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WindowsDetail(WindowsDetail other) : this() {
          cpeUri_ = other.cpeUri_;
          name_ = other.name_;
          description_ = other.description_;
          fixingKbs_ = other.fixingKbs_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public WindowsDetail Clone() {
          return new WindowsDetail(this);
        }

        /// <summary>Field number for the "cpe_uri" field.</summary>
        public const int CpeUriFieldNumber = 1;
        private string cpeUri_ = "";
        /// <summary>
        /// Required. The [CPE URI](https://cpe.mitre.org/specification/) this
        /// vulnerability affects.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string CpeUri {
          get { return cpeUri_; }
          set {
            cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// Required. The name of this vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 3;
        private string description_ = "";
        /// <summary>
        /// The description of this vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fixing_kbs" field.</summary>
        public const int FixingKbsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Types.KnowledgeBase> _repeated_fixingKbs_codec
            = pb::FieldCodec.ForMessage(34, global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Types.KnowledgeBase.Parser);
        private readonly pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Types.KnowledgeBase> fixingKbs_ = new pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Types.KnowledgeBase>();
        /// <summary>
        /// Required. The names of the KBs which have hotfixes to mitigate this
        /// vulnerability. Note that there may be multiple hotfixes (and thus
        /// multiple KBs) that mitigate a given vulnerability. Currently any listed
        /// KBs presence is considered a fix.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Types.KnowledgeBase> FixingKbs {
          get { return fixingKbs_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as WindowsDetail);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(WindowsDetail other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CpeUri != other.CpeUri) return false;
          if (Name != other.Name) return false;
          if (Description != other.Description) return false;
          if(!fixingKbs_.Equals(other.fixingKbs_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          hash ^= fixingKbs_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (CpeUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CpeUri);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Description);
          }
          fixingKbs_.WriteTo(output, _repeated_fixingKbs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (CpeUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CpeUri);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Description);
          }
          fixingKbs_.WriteTo(ref output, _repeated_fixingKbs_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (CpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          size += fixingKbs_.CalculateSize(_repeated_fixingKbs_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(WindowsDetail other) {
          if (other == null) {
            return;
          }
          if (other.CpeUri.Length != 0) {
            CpeUri = other.CpeUri;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          fixingKbs_.Add(other.fixingKbs_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CpeUri = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Description = input.ReadString();
                break;
              }
              case 34: {
                fixingKbs_.AddEntriesFrom(input, _repeated_fixingKbs_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                CpeUri = input.ReadString();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Description = input.ReadString();
                break;
              }
              case 34: {
                fixingKbs_.AddEntriesFrom(ref input, _repeated_fixingKbs_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the WindowsDetail message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class KnowledgeBase : pb::IMessage<KnowledgeBase>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<KnowledgeBase> _parser = new pb::MessageParser<KnowledgeBase>(() => new KnowledgeBase());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<KnowledgeBase> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grafeas.V1.VulnerabilityNote.Types.WindowsDetail.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public KnowledgeBase() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public KnowledgeBase(KnowledgeBase other) : this() {
              name_ = other.name_;
              url_ = other.url_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public KnowledgeBase Clone() {
              return new KnowledgeBase(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private string name_ = "";
            /// <summary>
            /// The KB name (generally of the form KB[0-9]+ (e.g., KB123456)).
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "url" field.</summary>
            public const int UrlFieldNumber = 2;
            private string url_ = "";
            /// <summary>
            /// A link to the KB in the [Windows update catalog]
            /// (https://www.catalog.update.microsoft.com/).
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Url {
              get { return url_; }
              set {
                url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as KnowledgeBase);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(KnowledgeBase other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (Url != other.Url) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              if (Url.Length != 0) hash ^= Url.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Url.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Url);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Name.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (Url.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Url);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (Url.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(KnowledgeBase other) {
              if (other == null) {
                return;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              if (other.Url.Length != 0) {
                Url = other.Url;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    Url = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 18: {
                    Url = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// An occurrence of a severity vulnerability on a resource.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VulnerabilityOccurrence : pb::IMessage<VulnerabilityOccurrence>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VulnerabilityOccurrence> _parser = new pb::MessageParser<VulnerabilityOccurrence>(() => new VulnerabilityOccurrence());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VulnerabilityOccurrence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1.VulnerabilityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VulnerabilityOccurrence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VulnerabilityOccurrence(VulnerabilityOccurrence other) : this() {
      type_ = other.type_;
      severity_ = other.severity_;
      cvssScore_ = other.cvssScore_;
      cvssv3_ = other.cvssv3_ != null ? other.cvssv3_.Clone() : null;
      packageIssue_ = other.packageIssue_.Clone();
      shortDescription_ = other.shortDescription_;
      longDescription_ = other.longDescription_;
      relatedUrls_ = other.relatedUrls_.Clone();
      effectiveSeverity_ = other.effectiveSeverity_;
      fixAvailable_ = other.fixAvailable_;
      cvssVersion_ = other.cvssVersion_;
      cvssV2_ = other.cvssV2_ != null ? other.cvssV2_.Clone() : null;
      vexAssessment_ = other.vexAssessment_ != null ? other.vexAssessment_.Clone() : null;
      extraDetails_ = other.extraDetails_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VulnerabilityOccurrence Clone() {
      return new VulnerabilityOccurrence(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    /// <summary>
    /// The type of package; whether native or non native (e.g., ruby gems, node.js
    /// packages, etc.).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 2;
    private global::Grafeas.V1.Severity severity_ = global::Grafeas.V1.Severity.Unspecified;
    /// <summary>
    /// Output only. The note provider assigned severity of this vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Severity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "cvss_score" field.</summary>
    public const int CvssScoreFieldNumber = 3;
    private float cvssScore_;
    /// <summary>
    /// Output only. The CVSS score of this vulnerability. CVSS score is on a
    /// scale of 0 - 10 where 0 indicates low severity and 10 indicates high
    /// severity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CvssScore {
      get { return cvssScore_; }
      set {
        cvssScore_ = value;
      }
    }

    /// <summary>Field number for the "cvssv3" field.</summary>
    public const int Cvssv3FieldNumber = 10;
    private global::Grafeas.V1.CVSS cvssv3_;
    /// <summary>
    /// The cvss v3 score for the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.CVSS Cvssv3 {
      get { return cvssv3_; }
      set {
        cvssv3_ = value;
      }
    }

    /// <summary>Field number for the "package_issue" field.</summary>
    public const int PackageIssueFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Grafeas.V1.VulnerabilityOccurrence.Types.PackageIssue> _repeated_packageIssue_codec
        = pb::FieldCodec.ForMessage(34, global::Grafeas.V1.VulnerabilityOccurrence.Types.PackageIssue.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1.VulnerabilityOccurrence.Types.PackageIssue> packageIssue_ = new pbc::RepeatedField<global::Grafeas.V1.VulnerabilityOccurrence.Types.PackageIssue>();
    /// <summary>
    /// Required. The set of affected locations and their fixes (if available)
    /// within the associated resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Grafeas.V1.VulnerabilityOccurrence.Types.PackageIssue> PackageIssue {
      get { return packageIssue_; }
    }

    /// <summary>Field number for the "short_description" field.</summary>
    public const int ShortDescriptionFieldNumber = 5;
    private string shortDescription_ = "";
    /// <summary>
    /// Output only. A one sentence description of this vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShortDescription {
      get { return shortDescription_; }
      set {
        shortDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "long_description" field.</summary>
    public const int LongDescriptionFieldNumber = 6;
    private string longDescription_ = "";
    /// <summary>
    /// Output only. A detailed description of this vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LongDescription {
      get { return longDescription_; }
      set {
        longDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "related_urls" field.</summary>
    public const int RelatedUrlsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Grafeas.V1.RelatedUrl> _repeated_relatedUrls_codec
        = pb::FieldCodec.ForMessage(58, global::Grafeas.V1.RelatedUrl.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1.RelatedUrl> relatedUrls_ = new pbc::RepeatedField<global::Grafeas.V1.RelatedUrl>();
    /// <summary>
    /// Output only. URLs related to this vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Grafeas.V1.RelatedUrl> RelatedUrls {
      get { return relatedUrls_; }
    }

    /// <summary>Field number for the "effective_severity" field.</summary>
    public const int EffectiveSeverityFieldNumber = 8;
    private global::Grafeas.V1.Severity effectiveSeverity_ = global::Grafeas.V1.Severity.Unspecified;
    /// <summary>
    /// The distro assigned severity for this vulnerability when it is available,
    /// otherwise this is the note provider assigned severity.
    ///
    /// When there are multiple PackageIssues for this vulnerability, they can have
    /// different effective severities because some might be provided by the distro
    /// while others are provided by the language ecosystem for a language pack.
    /// For this reason, it is advised to use the effective severity on the
    /// PackageIssue level. In the case where multiple PackageIssues have differing
    /// effective severities, this field should be the highest severity for any of
    /// the PackageIssues.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Severity EffectiveSeverity {
      get { return effectiveSeverity_; }
      set {
        effectiveSeverity_ = value;
      }
    }

    /// <summary>Field number for the "fix_available" field.</summary>
    public const int FixAvailableFieldNumber = 9;
    private bool fixAvailable_;
    /// <summary>
    /// Output only. Whether at least one of the affected packages has a fix
    /// available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FixAvailable {
      get { return fixAvailable_; }
      set {
        fixAvailable_ = value;
      }
    }

    /// <summary>Field number for the "cvss_version" field.</summary>
    public const int CvssVersionFieldNumber = 11;
    private global::Grafeas.V1.CVSSVersion cvssVersion_ = global::Grafeas.V1.CVSSVersion.Unspecified;
    /// <summary>
    /// Output only. CVSS version used to populate cvss_score and severity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.CVSSVersion CvssVersion {
      get { return cvssVersion_; }
      set {
        cvssVersion_ = value;
      }
    }

    /// <summary>Field number for the "cvss_v2" field.</summary>
    public const int CvssV2FieldNumber = 12;
    private global::Grafeas.V1.CVSS cvssV2_;
    /// <summary>
    /// The cvss v2 score for the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.CVSS CvssV2 {
      get { return cvssV2_; }
      set {
        cvssV2_ = value;
      }
    }

    /// <summary>Field number for the "vex_assessment" field.</summary>
    public const int VexAssessmentFieldNumber = 13;
    private global::Grafeas.V1.VulnerabilityOccurrence.Types.VexAssessment vexAssessment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.VulnerabilityOccurrence.Types.VexAssessment VexAssessment {
      get { return vexAssessment_; }
      set {
        vexAssessment_ = value;
      }
    }

    /// <summary>Field number for the "extra_details" field.</summary>
    public const int ExtraDetailsFieldNumber = 14;
    private string extraDetails_ = "";
    /// <summary>
    /// Occurrence-specific extra details about the vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExtraDetails {
      get { return extraDetails_; }
      set {
        extraDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VulnerabilityOccurrence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VulnerabilityOccurrence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Severity != other.Severity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CvssScore, other.CvssScore)) return false;
      if (!object.Equals(Cvssv3, other.Cvssv3)) return false;
      if(!packageIssue_.Equals(other.packageIssue_)) return false;
      if (ShortDescription != other.ShortDescription) return false;
      if (LongDescription != other.LongDescription) return false;
      if(!relatedUrls_.Equals(other.relatedUrls_)) return false;
      if (EffectiveSeverity != other.EffectiveSeverity) return false;
      if (FixAvailable != other.FixAvailable) return false;
      if (CvssVersion != other.CvssVersion) return false;
      if (!object.Equals(CvssV2, other.CvssV2)) return false;
      if (!object.Equals(VexAssessment, other.VexAssessment)) return false;
      if (ExtraDetails != other.ExtraDetails) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Severity != global::Grafeas.V1.Severity.Unspecified) hash ^= Severity.GetHashCode();
      if (CvssScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CvssScore);
      if (cvssv3_ != null) hash ^= Cvssv3.GetHashCode();
      hash ^= packageIssue_.GetHashCode();
      if (ShortDescription.Length != 0) hash ^= ShortDescription.GetHashCode();
      if (LongDescription.Length != 0) hash ^= LongDescription.GetHashCode();
      hash ^= relatedUrls_.GetHashCode();
      if (EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) hash ^= EffectiveSeverity.GetHashCode();
      if (FixAvailable != false) hash ^= FixAvailable.GetHashCode();
      if (CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) hash ^= CvssVersion.GetHashCode();
      if (cvssV2_ != null) hash ^= CvssV2.GetHashCode();
      if (vexAssessment_ != null) hash ^= VexAssessment.GetHashCode();
      if (ExtraDetails.Length != 0) hash ^= ExtraDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Severity != global::Grafeas.V1.Severity.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Severity);
      }
      if (CvssScore != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CvssScore);
      }
      packageIssue_.WriteTo(output, _repeated_packageIssue_codec);
      if (ShortDescription.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ShortDescription);
      }
      if (LongDescription.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LongDescription);
      }
      relatedUrls_.WriteTo(output, _repeated_relatedUrls_codec);
      if (EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) EffectiveSeverity);
      }
      if (FixAvailable != false) {
        output.WriteRawTag(72);
        output.WriteBool(FixAvailable);
      }
      if (cvssv3_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Cvssv3);
      }
      if (CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CvssVersion);
      }
      if (cvssV2_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CvssV2);
      }
      if (vexAssessment_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(VexAssessment);
      }
      if (ExtraDetails.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ExtraDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (Severity != global::Grafeas.V1.Severity.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Severity);
      }
      if (CvssScore != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(CvssScore);
      }
      packageIssue_.WriteTo(ref output, _repeated_packageIssue_codec);
      if (ShortDescription.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ShortDescription);
      }
      if (LongDescription.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LongDescription);
      }
      relatedUrls_.WriteTo(ref output, _repeated_relatedUrls_codec);
      if (EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) EffectiveSeverity);
      }
      if (FixAvailable != false) {
        output.WriteRawTag(72);
        output.WriteBool(FixAvailable);
      }
      if (cvssv3_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Cvssv3);
      }
      if (CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) CvssVersion);
      }
      if (cvssV2_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CvssV2);
      }
      if (vexAssessment_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(VexAssessment);
      }
      if (ExtraDetails.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ExtraDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Severity != global::Grafeas.V1.Severity.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      if (CvssScore != 0F) {
        size += 1 + 4;
      }
      if (cvssv3_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cvssv3);
      }
      size += packageIssue_.CalculateSize(_repeated_packageIssue_codec);
      if (ShortDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortDescription);
      }
      if (LongDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LongDescription);
      }
      size += relatedUrls_.CalculateSize(_repeated_relatedUrls_codec);
      if (EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectiveSeverity);
      }
      if (FixAvailable != false) {
        size += 1 + 1;
      }
      if (CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CvssVersion);
      }
      if (cvssV2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CvssV2);
      }
      if (vexAssessment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VexAssessment);
      }
      if (ExtraDetails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VulnerabilityOccurrence other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Severity != global::Grafeas.V1.Severity.Unspecified) {
        Severity = other.Severity;
      }
      if (other.CvssScore != 0F) {
        CvssScore = other.CvssScore;
      }
      if (other.cvssv3_ != null) {
        if (cvssv3_ == null) {
          Cvssv3 = new global::Grafeas.V1.CVSS();
        }
        Cvssv3.MergeFrom(other.Cvssv3);
      }
      packageIssue_.Add(other.packageIssue_);
      if (other.ShortDescription.Length != 0) {
        ShortDescription = other.ShortDescription;
      }
      if (other.LongDescription.Length != 0) {
        LongDescription = other.LongDescription;
      }
      relatedUrls_.Add(other.relatedUrls_);
      if (other.EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) {
        EffectiveSeverity = other.EffectiveSeverity;
      }
      if (other.FixAvailable != false) {
        FixAvailable = other.FixAvailable;
      }
      if (other.CvssVersion != global::Grafeas.V1.CVSSVersion.Unspecified) {
        CvssVersion = other.CvssVersion;
      }
      if (other.cvssV2_ != null) {
        if (cvssV2_ == null) {
          CvssV2 = new global::Grafeas.V1.CVSS();
        }
        CvssV2.MergeFrom(other.CvssV2);
      }
      if (other.vexAssessment_ != null) {
        if (vexAssessment_ == null) {
          VexAssessment = new global::Grafeas.V1.VulnerabilityOccurrence.Types.VexAssessment();
        }
        VexAssessment.MergeFrom(other.VexAssessment);
      }
      if (other.ExtraDetails.Length != 0) {
        ExtraDetails = other.ExtraDetails;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Severity = (global::Grafeas.V1.Severity) input.ReadEnum();
            break;
          }
          case 29: {
            CvssScore = input.ReadFloat();
            break;
          }
          case 34: {
            packageIssue_.AddEntriesFrom(input, _repeated_packageIssue_codec);
            break;
          }
          case 42: {
            ShortDescription = input.ReadString();
            break;
          }
          case 50: {
            LongDescription = input.ReadString();
            break;
          }
          case 58: {
            relatedUrls_.AddEntriesFrom(input, _repeated_relatedUrls_codec);
            break;
          }
          case 64: {
            EffectiveSeverity = (global::Grafeas.V1.Severity) input.ReadEnum();
            break;
          }
          case 72: {
            FixAvailable = input.ReadBool();
            break;
          }
          case 82: {
            if (cvssv3_ == null) {
              Cvssv3 = new global::Grafeas.V1.CVSS();
            }
            input.ReadMessage(Cvssv3);
            break;
          }
          case 88: {
            CvssVersion = (global::Grafeas.V1.CVSSVersion) input.ReadEnum();
            break;
          }
          case 98: {
            if (cvssV2_ == null) {
              CvssV2 = new global::Grafeas.V1.CVSS();
            }
            input.ReadMessage(CvssV2);
            break;
          }
          case 106: {
            if (vexAssessment_ == null) {
              VexAssessment = new global::Grafeas.V1.VulnerabilityOccurrence.Types.VexAssessment();
            }
            input.ReadMessage(VexAssessment);
            break;
          }
          case 114: {
            ExtraDetails = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            Severity = (global::Grafeas.V1.Severity) input.ReadEnum();
            break;
          }
          case 29: {
            CvssScore = input.ReadFloat();
            break;
          }
          case 34: {
            packageIssue_.AddEntriesFrom(ref input, _repeated_packageIssue_codec);
            break;
          }
          case 42: {
            ShortDescription = input.ReadString();
            break;
          }
          case 50: {
            LongDescription = input.ReadString();
            break;
          }
          case 58: {
            relatedUrls_.AddEntriesFrom(ref input, _repeated_relatedUrls_codec);
            break;
          }
          case 64: {
            EffectiveSeverity = (global::Grafeas.V1.Severity) input.ReadEnum();
            break;
          }
          case 72: {
            FixAvailable = input.ReadBool();
            break;
          }
          case 82: {
            if (cvssv3_ == null) {
              Cvssv3 = new global::Grafeas.V1.CVSS();
            }
            input.ReadMessage(Cvssv3);
            break;
          }
          case 88: {
            CvssVersion = (global::Grafeas.V1.CVSSVersion) input.ReadEnum();
            break;
          }
          case 98: {
            if (cvssV2_ == null) {
              CvssV2 = new global::Grafeas.V1.CVSS();
            }
            input.ReadMessage(CvssV2);
            break;
          }
          case 106: {
            if (vexAssessment_ == null) {
              VexAssessment = new global::Grafeas.V1.VulnerabilityOccurrence.Types.VexAssessment();
            }
            input.ReadMessage(VexAssessment);
            break;
          }
          case 114: {
            ExtraDetails = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VulnerabilityOccurrence message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// A detail for a distro and package this vulnerability occurrence was found
      /// in and its associated fix (if one is available).
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PackageIssue : pb::IMessage<PackageIssue>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PackageIssue> _parser = new pb::MessageParser<PackageIssue>(() => new PackageIssue());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PackageIssue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grafeas.V1.VulnerabilityOccurrence.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PackageIssue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PackageIssue(PackageIssue other) : this() {
          affectedCpeUri_ = other.affectedCpeUri_;
          affectedPackage_ = other.affectedPackage_;
          affectedVersion_ = other.affectedVersion_ != null ? other.affectedVersion_.Clone() : null;
          fixedCpeUri_ = other.fixedCpeUri_;
          fixedPackage_ = other.fixedPackage_;
          fixedVersion_ = other.fixedVersion_ != null ? other.fixedVersion_.Clone() : null;
          fixAvailable_ = other.fixAvailable_;
          packageType_ = other.packageType_;
          effectiveSeverity_ = other.effectiveSeverity_;
          fileLocation_ = other.fileLocation_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PackageIssue Clone() {
          return new PackageIssue(this);
        }

        /// <summary>Field number for the "affected_cpe_uri" field.</summary>
        public const int AffectedCpeUriFieldNumber = 1;
        private string affectedCpeUri_ = "";
        /// <summary>
        /// Required. The [CPE URI](https://cpe.mitre.org/specification/) this
        /// vulnerability was found in.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AffectedCpeUri {
          get { return affectedCpeUri_; }
          set {
            affectedCpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "affected_package" field.</summary>
        public const int AffectedPackageFieldNumber = 2;
        private string affectedPackage_ = "";
        /// <summary>
        /// Required. The package this vulnerability was found in.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AffectedPackage {
          get { return affectedPackage_; }
          set {
            affectedPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "affected_version" field.</summary>
        public const int AffectedVersionFieldNumber = 3;
        private global::Grafeas.V1.Version affectedVersion_;
        /// <summary>
        /// Required. The version of the package that is installed on the resource
        /// affected by this vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Grafeas.V1.Version AffectedVersion {
          get { return affectedVersion_; }
          set {
            affectedVersion_ = value;
          }
        }

        /// <summary>Field number for the "fixed_cpe_uri" field.</summary>
        public const int FixedCpeUriFieldNumber = 4;
        private string fixedCpeUri_ = "";
        /// <summary>
        /// The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability
        /// was fixed in. It is possible for this to be different from the
        /// affected_cpe_uri.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string FixedCpeUri {
          get { return fixedCpeUri_; }
          set {
            fixedCpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fixed_package" field.</summary>
        public const int FixedPackageFieldNumber = 5;
        private string fixedPackage_ = "";
        /// <summary>
        /// The package this vulnerability was fixed in. It is possible for this to
        /// be different from the affected_package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string FixedPackage {
          get { return fixedPackage_; }
          set {
            fixedPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fixed_version" field.</summary>
        public const int FixedVersionFieldNumber = 6;
        private global::Grafeas.V1.Version fixedVersion_;
        /// <summary>
        /// Required. The version of the package this vulnerability was fixed in.
        /// Setting this to VersionKind.MAXIMUM means no fix is yet available.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Grafeas.V1.Version FixedVersion {
          get { return fixedVersion_; }
          set {
            fixedVersion_ = value;
          }
        }

        /// <summary>Field number for the "fix_available" field.</summary>
        public const int FixAvailableFieldNumber = 7;
        private bool fixAvailable_;
        /// <summary>
        /// Output only. Whether a fix is available for this package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool FixAvailable {
          get { return fixAvailable_; }
          set {
            fixAvailable_ = value;
          }
        }

        /// <summary>Field number for the "package_type" field.</summary>
        public const int PackageTypeFieldNumber = 8;
        private string packageType_ = "";
        /// <summary>
        /// The type of package (e.g. OS, MAVEN, GO).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PackageType {
          get { return packageType_; }
          set {
            packageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "effective_severity" field.</summary>
        public const int EffectiveSeverityFieldNumber = 9;
        private global::Grafeas.V1.Severity effectiveSeverity_ = global::Grafeas.V1.Severity.Unspecified;
        /// <summary>
        /// The distro or language system assigned severity for this vulnerability
        /// when that is available and note provider assigned severity when it is not
        /// available.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Grafeas.V1.Severity EffectiveSeverity {
          get { return effectiveSeverity_; }
          set {
            effectiveSeverity_ = value;
          }
        }

        /// <summary>Field number for the "file_location" field.</summary>
        public const int FileLocationFieldNumber = 10;
        private static readonly pb::FieldCodec<global::Grafeas.V1.FileLocation> _repeated_fileLocation_codec
            = pb::FieldCodec.ForMessage(82, global::Grafeas.V1.FileLocation.Parser);
        private readonly pbc::RepeatedField<global::Grafeas.V1.FileLocation> fileLocation_ = new pbc::RepeatedField<global::Grafeas.V1.FileLocation>();
        /// <summary>
        /// The location at which this package was found.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Grafeas.V1.FileLocation> FileLocation {
          get { return fileLocation_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PackageIssue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PackageIssue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AffectedCpeUri != other.AffectedCpeUri) return false;
          if (AffectedPackage != other.AffectedPackage) return false;
          if (!object.Equals(AffectedVersion, other.AffectedVersion)) return false;
          if (FixedCpeUri != other.FixedCpeUri) return false;
          if (FixedPackage != other.FixedPackage) return false;
          if (!object.Equals(FixedVersion, other.FixedVersion)) return false;
          if (FixAvailable != other.FixAvailable) return false;
          if (PackageType != other.PackageType) return false;
          if (EffectiveSeverity != other.EffectiveSeverity) return false;
          if(!fileLocation_.Equals(other.fileLocation_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (AffectedCpeUri.Length != 0) hash ^= AffectedCpeUri.GetHashCode();
          if (AffectedPackage.Length != 0) hash ^= AffectedPackage.GetHashCode();
          if (affectedVersion_ != null) hash ^= AffectedVersion.GetHashCode();
          if (FixedCpeUri.Length != 0) hash ^= FixedCpeUri.GetHashCode();
          if (FixedPackage.Length != 0) hash ^= FixedPackage.GetHashCode();
          if (fixedVersion_ != null) hash ^= FixedVersion.GetHashCode();
          if (FixAvailable != false) hash ^= FixAvailable.GetHashCode();
          if (PackageType.Length != 0) hash ^= PackageType.GetHashCode();
          if (EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) hash ^= EffectiveSeverity.GetHashCode();
          hash ^= fileLocation_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AffectedCpeUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(AffectedCpeUri);
          }
          if (AffectedPackage.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AffectedPackage);
          }
          if (affectedVersion_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(AffectedVersion);
          }
          if (FixedCpeUri.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(FixedCpeUri);
          }
          if (FixedPackage.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(FixedPackage);
          }
          if (fixedVersion_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(FixedVersion);
          }
          if (FixAvailable != false) {
            output.WriteRawTag(56);
            output.WriteBool(FixAvailable);
          }
          if (PackageType.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(PackageType);
          }
          if (EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) {
            output.WriteRawTag(72);
            output.WriteEnum((int) EffectiveSeverity);
          }
          fileLocation_.WriteTo(output, _repeated_fileLocation_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AffectedCpeUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(AffectedCpeUri);
          }
          if (AffectedPackage.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(AffectedPackage);
          }
          if (affectedVersion_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(AffectedVersion);
          }
          if (FixedCpeUri.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(FixedCpeUri);
          }
          if (FixedPackage.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(FixedPackage);
          }
          if (fixedVersion_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(FixedVersion);
          }
          if (FixAvailable != false) {
            output.WriteRawTag(56);
            output.WriteBool(FixAvailable);
          }
          if (PackageType.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(PackageType);
          }
          if (EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) {
            output.WriteRawTag(72);
            output.WriteEnum((int) EffectiveSeverity);
          }
          fileLocation_.WriteTo(ref output, _repeated_fileLocation_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (AffectedCpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AffectedCpeUri);
          }
          if (AffectedPackage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AffectedPackage);
          }
          if (affectedVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AffectedVersion);
          }
          if (FixedCpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FixedCpeUri);
          }
          if (FixedPackage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FixedPackage);
          }
          if (fixedVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedVersion);
          }
          if (FixAvailable != false) {
            size += 1 + 1;
          }
          if (PackageType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageType);
          }
          if (EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EffectiveSeverity);
          }
          size += fileLocation_.CalculateSize(_repeated_fileLocation_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PackageIssue other) {
          if (other == null) {
            return;
          }
          if (other.AffectedCpeUri.Length != 0) {
            AffectedCpeUri = other.AffectedCpeUri;
          }
          if (other.AffectedPackage.Length != 0) {
            AffectedPackage = other.AffectedPackage;
          }
          if (other.affectedVersion_ != null) {
            if (affectedVersion_ == null) {
              AffectedVersion = new global::Grafeas.V1.Version();
            }
            AffectedVersion.MergeFrom(other.AffectedVersion);
          }
          if (other.FixedCpeUri.Length != 0) {
            FixedCpeUri = other.FixedCpeUri;
          }
          if (other.FixedPackage.Length != 0) {
            FixedPackage = other.FixedPackage;
          }
          if (other.fixedVersion_ != null) {
            if (fixedVersion_ == null) {
              FixedVersion = new global::Grafeas.V1.Version();
            }
            FixedVersion.MergeFrom(other.FixedVersion);
          }
          if (other.FixAvailable != false) {
            FixAvailable = other.FixAvailable;
          }
          if (other.PackageType.Length != 0) {
            PackageType = other.PackageType;
          }
          if (other.EffectiveSeverity != global::Grafeas.V1.Severity.Unspecified) {
            EffectiveSeverity = other.EffectiveSeverity;
          }
          fileLocation_.Add(other.fileLocation_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                AffectedCpeUri = input.ReadString();
                break;
              }
              case 18: {
                AffectedPackage = input.ReadString();
                break;
              }
              case 26: {
                if (affectedVersion_ == null) {
                  AffectedVersion = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(AffectedVersion);
                break;
              }
              case 34: {
                FixedCpeUri = input.ReadString();
                break;
              }
              case 42: {
                FixedPackage = input.ReadString();
                break;
              }
              case 50: {
                if (fixedVersion_ == null) {
                  FixedVersion = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(FixedVersion);
                break;
              }
              case 56: {
                FixAvailable = input.ReadBool();
                break;
              }
              case 66: {
                PackageType = input.ReadString();
                break;
              }
              case 72: {
                EffectiveSeverity = (global::Grafeas.V1.Severity) input.ReadEnum();
                break;
              }
              case 82: {
                fileLocation_.AddEntriesFrom(input, _repeated_fileLocation_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                AffectedCpeUri = input.ReadString();
                break;
              }
              case 18: {
                AffectedPackage = input.ReadString();
                break;
              }
              case 26: {
                if (affectedVersion_ == null) {
                  AffectedVersion = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(AffectedVersion);
                break;
              }
              case 34: {
                FixedCpeUri = input.ReadString();
                break;
              }
              case 42: {
                FixedPackage = input.ReadString();
                break;
              }
              case 50: {
                if (fixedVersion_ == null) {
                  FixedVersion = new global::Grafeas.V1.Version();
                }
                input.ReadMessage(FixedVersion);
                break;
              }
              case 56: {
                FixAvailable = input.ReadBool();
                break;
              }
              case 66: {
                PackageType = input.ReadString();
                break;
              }
              case 72: {
                EffectiveSeverity = (global::Grafeas.V1.Severity) input.ReadEnum();
                break;
              }
              case 82: {
                fileLocation_.AddEntriesFrom(ref input, _repeated_fileLocation_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// VexAssessment provides all publisher provided Vex information that is
      /// related to this vulnerability.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class VexAssessment : pb::IMessage<VexAssessment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VexAssessment> _parser = new pb::MessageParser<VexAssessment>(() => new VexAssessment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<VexAssessment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grafeas.V1.VulnerabilityOccurrence.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VexAssessment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VexAssessment(VexAssessment other) : this() {
          cve_ = other.cve_;
          vulnerabilityId_ = other.vulnerabilityId_;
          relatedUris_ = other.relatedUris_.Clone();
          noteName_ = other.noteName_;
          state_ = other.state_;
          impacts_ = other.impacts_.Clone();
          remediations_ = other.remediations_.Clone();
          justification_ = other.justification_ != null ? other.justification_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VexAssessment Clone() {
          return new VexAssessment(this);
        }

        /// <summary>Field number for the "cve" field.</summary>
        public const int CveFieldNumber = 1;
        private string cve_ = "";
        /// <summary>
        /// Holds the MITRE standard Common Vulnerabilities and Exposures (CVE)
        /// tracking number for the vulnerability.
        /// Deprecated: Use vulnerability_id instead to denote CVEs.
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Cve {
          get { return cve_; }
          set {
            cve_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "vulnerability_id" field.</summary>
        public const int VulnerabilityIdFieldNumber = 8;
        private string vulnerabilityId_ = "";
        /// <summary>
        /// The vulnerability identifier for this Assessment. Will hold one of
        /// common identifiers e.g. CVE, GHSA etc.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string VulnerabilityId {
          get { return vulnerabilityId_; }
          set {
            vulnerabilityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "related_uris" field.</summary>
        public const int RelatedUrisFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Grafeas.V1.RelatedUrl> _repeated_relatedUris_codec
            = pb::FieldCodec.ForMessage(18, global::Grafeas.V1.RelatedUrl.Parser);
        private readonly pbc::RepeatedField<global::Grafeas.V1.RelatedUrl> relatedUris_ = new pbc::RepeatedField<global::Grafeas.V1.RelatedUrl>();
        /// <summary>
        /// Holds a list of references associated with this vulnerability item and
        /// assessment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Grafeas.V1.RelatedUrl> RelatedUris {
          get { return relatedUris_; }
        }

        /// <summary>Field number for the "note_name" field.</summary>
        public const int NoteNameFieldNumber = 3;
        private string noteName_ = "";
        /// <summary>
        /// The VulnerabilityAssessment note from which this VexAssessment was
        /// generated.
        /// This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
        /// (-- api-linter: core::0122::name-suffix=disabled
        ///     aip.dev/not-precedent: The suffix is kept for consistency. --)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NoteName {
          get { return noteName_; }
          set {
            noteName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 4;
        private global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State state_ = global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State.Unspecified;
        /// <summary>
        /// Provides the state of this Vulnerability assessment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        /// <summary>Field number for the "impacts" field.</summary>
        public const int ImpactsFieldNumber = 5;
        private static readonly pb::FieldCodec<string> _repeated_impacts_codec
            = pb::FieldCodec.ForString(42);
        private readonly pbc::RepeatedField<string> impacts_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Contains information about the impact of this vulnerability,
        /// this will change with time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Impacts {
          get { return impacts_; }
        }

        /// <summary>Field number for the "remediations" field.</summary>
        public const int RemediationsFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Remediation> _repeated_remediations_codec
            = pb::FieldCodec.ForMessage(50, global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Remediation.Parser);
        private readonly pbc::RepeatedField<global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Remediation> remediations_ = new pbc::RepeatedField<global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Remediation>();
        /// <summary>
        /// Specifies details on how to handle (and presumably, fix) a vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Remediation> Remediations {
          get { return remediations_; }
        }

        /// <summary>Field number for the "justification" field.</summary>
        public const int JustificationFieldNumber = 7;
        private global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Justification justification_;
        /// <summary>
        /// Justification provides the justification when the state of the
        /// assessment if NOT_AFFECTED.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Justification Justification {
          get { return justification_; }
          set {
            justification_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as VexAssessment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(VexAssessment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Cve != other.Cve) return false;
          if (VulnerabilityId != other.VulnerabilityId) return false;
          if(!relatedUris_.Equals(other.relatedUris_)) return false;
          if (NoteName != other.NoteName) return false;
          if (State != other.State) return false;
          if(!impacts_.Equals(other.impacts_)) return false;
          if(!remediations_.Equals(other.remediations_)) return false;
          if (!object.Equals(Justification, other.Justification)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Cve.Length != 0) hash ^= Cve.GetHashCode();
          if (VulnerabilityId.Length != 0) hash ^= VulnerabilityId.GetHashCode();
          hash ^= relatedUris_.GetHashCode();
          if (NoteName.Length != 0) hash ^= NoteName.GetHashCode();
          if (State != global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State.Unspecified) hash ^= State.GetHashCode();
          hash ^= impacts_.GetHashCode();
          hash ^= remediations_.GetHashCode();
          if (justification_ != null) hash ^= Justification.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Cve.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Cve);
          }
          relatedUris_.WriteTo(output, _repeated_relatedUris_codec);
          if (NoteName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(NoteName);
          }
          if (State != global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) State);
          }
          impacts_.WriteTo(output, _repeated_impacts_codec);
          remediations_.WriteTo(output, _repeated_remediations_codec);
          if (justification_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(Justification);
          }
          if (VulnerabilityId.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(VulnerabilityId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Cve.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Cve);
          }
          relatedUris_.WriteTo(ref output, _repeated_relatedUris_codec);
          if (NoteName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(NoteName);
          }
          if (State != global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) State);
          }
          impacts_.WriteTo(ref output, _repeated_impacts_codec);
          remediations_.WriteTo(ref output, _repeated_remediations_codec);
          if (justification_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(Justification);
          }
          if (VulnerabilityId.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(VulnerabilityId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Cve.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Cve);
          }
          if (VulnerabilityId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(VulnerabilityId);
          }
          size += relatedUris_.CalculateSize(_repeated_relatedUris_codec);
          if (NoteName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NoteName);
          }
          if (State != global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
          }
          size += impacts_.CalculateSize(_repeated_impacts_codec);
          size += remediations_.CalculateSize(_repeated_remediations_codec);
          if (justification_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Justification);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(VexAssessment other) {
          if (other == null) {
            return;
          }
          if (other.Cve.Length != 0) {
            Cve = other.Cve;
          }
          if (other.VulnerabilityId.Length != 0) {
            VulnerabilityId = other.VulnerabilityId;
          }
          relatedUris_.Add(other.relatedUris_);
          if (other.NoteName.Length != 0) {
            NoteName = other.NoteName;
          }
          if (other.State != global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State.Unspecified) {
            State = other.State;
          }
          impacts_.Add(other.impacts_);
          remediations_.Add(other.remediations_);
          if (other.justification_ != null) {
            if (justification_ == null) {
              Justification = new global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Justification();
            }
            Justification.MergeFrom(other.Justification);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Cve = input.ReadString();
                break;
              }
              case 18: {
                relatedUris_.AddEntriesFrom(input, _repeated_relatedUris_codec);
                break;
              }
              case 26: {
                NoteName = input.ReadString();
                break;
              }
              case 32: {
                State = (global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State) input.ReadEnum();
                break;
              }
              case 42: {
                impacts_.AddEntriesFrom(input, _repeated_impacts_codec);
                break;
              }
              case 50: {
                remediations_.AddEntriesFrom(input, _repeated_remediations_codec);
                break;
              }
              case 58: {
                if (justification_ == null) {
                  Justification = new global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Justification();
                }
                input.ReadMessage(Justification);
                break;
              }
              case 66: {
                VulnerabilityId = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Cve = input.ReadString();
                break;
              }
              case 18: {
                relatedUris_.AddEntriesFrom(ref input, _repeated_relatedUris_codec);
                break;
              }
              case 26: {
                NoteName = input.ReadString();
                break;
              }
              case 32: {
                State = (global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.State) input.ReadEnum();
                break;
              }
              case 42: {
                impacts_.AddEntriesFrom(ref input, _repeated_impacts_codec);
                break;
              }
              case 50: {
                remediations_.AddEntriesFrom(ref input, _repeated_remediations_codec);
                break;
              }
              case 58: {
                if (justification_ == null) {
                  Justification = new global::Grafeas.V1.VulnerabilityAssessmentNote.Types.Assessment.Types.Justification();
                }
                input.ReadMessage(Justification);
                break;
              }
              case 66: {
                VulnerabilityId = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
