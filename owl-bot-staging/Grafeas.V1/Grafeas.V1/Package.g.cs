// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grafeas/v1/package.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grafeas.V1 {

  /// <summary>Holder for reflection information generated from grafeas/v1/package.proto</summary>
  public static partial class PackageReflection {

    #region Descriptor
    /// <summary>File descriptor for grafeas/v1/package.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PackageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhncmFmZWFzL3YxL3BhY2thZ2UucHJvdG8SCmdyYWZlYXMudjEaH2dvb2ds",
            "ZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8aF2dyYWZlYXMvdjEvY29tbW9u",
            "LnByb3RvIrcBCgxEaXN0cmlidXRpb24SFAoHY3BlX3VyaRgBIAEoCUID4EEC",
            "Ei4KDGFyY2hpdGVjdHVyZRgCIAEoDjIYLmdyYWZlYXMudjEuQXJjaGl0ZWN0",
            "dXJlEisKDmxhdGVzdF92ZXJzaW9uGAMgASgLMhMuZ3JhZmVhcy52MS5WZXJz",
            "aW9uEhIKCm1haW50YWluZXIYBCABKAkSCwoDdXJsGAUgASgJEhMKC2Rlc2Ny",
            "aXB0aW9uGAYgASgJIk8KCExvY2F0aW9uEg8KB2NwZV91cmkYASABKAkSJAoH",
            "dmVyc2lvbhgCIAEoCzITLmdyYWZlYXMudjEuVmVyc2lvbhIMCgRwYXRoGAMg",
            "ASgJItACCgtQYWNrYWdlTm90ZRIUCgRuYW1lGAEgASgJQgbgQQLgQQUSLgoM",
            "ZGlzdHJpYnV0aW9uGAogAygLMhguZ3JhZmVhcy52MS5EaXN0cmlidXRpb24S",
            "FAoMcGFja2FnZV90eXBlGAsgASgJEg8KB2NwZV91cmkYDCABKAkSLgoMYXJj",
            "aGl0ZWN0dXJlGA0gASgOMhguZ3JhZmVhcy52MS5BcmNoaXRlY3R1cmUSJAoH",
            "dmVyc2lvbhgOIAEoCzITLmdyYWZlYXMudjEuVmVyc2lvbhISCgptYWludGFp",
            "bmVyGA8gASgJEgsKA3VybBgQIAEoCRITCgtkZXNjcmlwdGlvbhgRIAEoCRIk",
            "CgdsaWNlbnNlGBIgASgLMhMuZ3JhZmVhcy52MS5MaWNlbnNlEiIKBmRpZ2Vz",
            "dBgTIAMoCzISLmdyYWZlYXMudjEuRGlnZXN0IogCChFQYWNrYWdlT2NjdXJy",
            "ZW5jZRIUCgRuYW1lGAEgASgJQgbgQQLgQQMSJgoIbG9jYXRpb24YAiADKAsy",
            "FC5ncmFmZWFzLnYxLkxvY2F0aW9uEhkKDHBhY2thZ2VfdHlwZRgDIAEoCUID",
            "4EEDEhQKB2NwZV91cmkYBCABKAlCA+BBAxIzCgxhcmNoaXRlY3R1cmUYBSAB",
            "KA4yGC5ncmFmZWFzLnYxLkFyY2hpdGVjdHVyZUID4EEDEiQKB2xpY2Vuc2UY",
            "BiABKAsyEy5ncmFmZWFzLnYxLkxpY2Vuc2USKQoHdmVyc2lvbhgHIAEoCzIT",
            "LmdyYWZlYXMudjEuVmVyc2lvbkID4EEDIuABCgdWZXJzaW9uEg0KBWVwb2No",
            "GAEgASgFEgwKBG5hbWUYAiABKAkSEAoIcmV2aXNpb24YAyABKAkSEQoJaW5j",
            "bHVzaXZlGAYgASgIEi0KBGtpbmQYBCABKA4yHy5ncmFmZWFzLnYxLlZlcnNp",
            "b24uVmVyc2lvbktpbmQSEQoJZnVsbF9uYW1lGAUgASgJIlEKC1ZlcnNpb25L",
            "aW5kEhwKGFZFUlNJT05fS0lORF9VTlNQRUNJRklFRBAAEgoKBk5PUk1BTBAB",
            "EgsKB01JTklNVU0QAhILCgdNQVhJTVVNEAMqPgoMQXJjaGl0ZWN0dXJlEhwK",
            "GEFSQ0hJVEVDVFVSRV9VTlNQRUNJRklFRBAAEgcKA1g4NhABEgcKA1g2NBAC",
            "QlEKDWlvLmdyYWZlYXMudjFQAVo4Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJv",
            "dG8vZ29vZ2xlYXBpcy9ncmFmZWFzL3YxO2dyYWZlYXOiAgNHUkFiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Grafeas.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Grafeas.V1.Architecture), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.Distribution), global::Grafeas.V1.Distribution.Parser, new[]{ "CpeUri", "Architecture", "LatestVersion", "Maintainer", "Url", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.Location), global::Grafeas.V1.Location.Parser, new[]{ "CpeUri", "Version", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.PackageNote), global::Grafeas.V1.PackageNote.Parser, new[]{ "Name", "Distribution", "PackageType", "CpeUri", "Architecture", "Version", "Maintainer", "Url", "Description", "License", "Digest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.PackageOccurrence), global::Grafeas.V1.PackageOccurrence.Parser, new[]{ "Name", "Location", "PackageType", "CpeUri", "Architecture", "License", "Version" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1.Version), global::Grafeas.V1.Version.Parser, new[]{ "Epoch", "Name", "Revision", "Inclusive", "Kind", "FullName" }, null, new[]{ typeof(global::Grafeas.V1.Version.Types.VersionKind) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Instruction set architectures supported by various package managers.
  /// </summary>
  public enum Architecture {
    /// <summary>
    /// Unknown architecture.
    /// </summary>
    [pbr::OriginalName("ARCHITECTURE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// X86 architecture.
    /// </summary>
    [pbr::OriginalName("X86")] X86 = 1,
    /// <summary>
    /// X64 architecture.
    /// </summary>
    [pbr::OriginalName("X64")] X64 = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// This represents a particular channel of distribution for a given package.
  /// E.g., Debian's jessie-backports dpkg mirror.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Distribution : pb::IMessage<Distribution>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Distribution> _parser = new pb::MessageParser<Distribution>(() => new Distribution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Distribution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1.PackageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Distribution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Distribution(Distribution other) : this() {
      cpeUri_ = other.cpeUri_;
      architecture_ = other.architecture_;
      latestVersion_ = other.latestVersion_ != null ? other.latestVersion_.Clone() : null;
      maintainer_ = other.maintainer_;
      url_ = other.url_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Distribution Clone() {
      return new Distribution(this);
    }

    /// <summary>Field number for the "cpe_uri" field.</summary>
    public const int CpeUriFieldNumber = 1;
    private string cpeUri_ = "";
    /// <summary>
    /// The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)
    /// denoting the package manager version distributing a package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CpeUri {
      get { return cpeUri_; }
      set {
        cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "architecture" field.</summary>
    public const int ArchitectureFieldNumber = 2;
    private global::Grafeas.V1.Architecture architecture_ = global::Grafeas.V1.Architecture.Unspecified;
    /// <summary>
    /// The CPU architecture for which packages in this distribution channel were
    /// built.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Architecture Architecture {
      get { return architecture_; }
      set {
        architecture_ = value;
      }
    }

    /// <summary>Field number for the "latest_version" field.</summary>
    public const int LatestVersionFieldNumber = 3;
    private global::Grafeas.V1.Version latestVersion_;
    /// <summary>
    /// The latest available version of this package in this distribution channel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Version LatestVersion {
      get { return latestVersion_; }
      set {
        latestVersion_ = value;
      }
    }

    /// <summary>Field number for the "maintainer" field.</summary>
    public const int MaintainerFieldNumber = 4;
    private string maintainer_ = "";
    /// <summary>
    /// A freeform string denoting the maintainer of this package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Maintainer {
      get { return maintainer_; }
      set {
        maintainer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private string url_ = "";
    /// <summary>
    /// The distribution channel-specific homepage for this package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 6;
    private string description_ = "";
    /// <summary>
    /// The distribution channel-specific description of this package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Distribution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Distribution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CpeUri != other.CpeUri) return false;
      if (Architecture != other.Architecture) return false;
      if (!object.Equals(LatestVersion, other.LatestVersion)) return false;
      if (Maintainer != other.Maintainer) return false;
      if (Url != other.Url) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) hash ^= Architecture.GetHashCode();
      if (latestVersion_ != null) hash ^= LatestVersion.GetHashCode();
      if (Maintainer.Length != 0) hash ^= Maintainer.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CpeUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Architecture);
      }
      if (latestVersion_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LatestVersion);
      }
      if (Maintainer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Maintainer);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CpeUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Architecture);
      }
      if (latestVersion_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LatestVersion);
      }
      if (Maintainer.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Maintainer);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CpeUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Architecture);
      }
      if (latestVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestVersion);
      }
      if (Maintainer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Maintainer);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Distribution other) {
      if (other == null) {
        return;
      }
      if (other.CpeUri.Length != 0) {
        CpeUri = other.CpeUri;
      }
      if (other.Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        Architecture = other.Architecture;
      }
      if (other.latestVersion_ != null) {
        if (latestVersion_ == null) {
          LatestVersion = new global::Grafeas.V1.Version();
        }
        LatestVersion.MergeFrom(other.LatestVersion);
      }
      if (other.Maintainer.Length != 0) {
        Maintainer = other.Maintainer;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CpeUri = input.ReadString();
            break;
          }
          case 16: {
            Architecture = (global::Grafeas.V1.Architecture) input.ReadEnum();
            break;
          }
          case 26: {
            if (latestVersion_ == null) {
              LatestVersion = new global::Grafeas.V1.Version();
            }
            input.ReadMessage(LatestVersion);
            break;
          }
          case 34: {
            Maintainer = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CpeUri = input.ReadString();
            break;
          }
          case 16: {
            Architecture = (global::Grafeas.V1.Architecture) input.ReadEnum();
            break;
          }
          case 26: {
            if (latestVersion_ == null) {
              LatestVersion = new global::Grafeas.V1.Version();
            }
            input.ReadMessage(LatestVersion);
            break;
          }
          case 34: {
            Maintainer = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 50: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An occurrence of a particular package installation found within a system's
  /// filesystem. E.g., glibc was found in `/var/lib/dpkg/status`.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1.PackageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location(Location other) : this() {
      cpeUri_ = other.cpeUri_;
      version_ = other.version_ != null ? other.version_.Clone() : null;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "cpe_uri" field.</summary>
    public const int CpeUriFieldNumber = 1;
    private string cpeUri_ = "";
    /// <summary>
    /// Deprecated.
    /// The CPE URI in [CPE format](https://cpe.mitre.org/specification/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CpeUri {
      get { return cpeUri_; }
      set {
        cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private global::Grafeas.V1.Version version_;
    /// <summary>
    /// Deprecated.
    /// The version installed at this location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Version Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 3;
    private string path_ = "";
    /// <summary>
    /// The path from which we gathered that this package/version is installed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CpeUri != other.CpeUri) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
      if (version_ != null) hash ^= Version.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CpeUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CpeUri);
      }
      if (version_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Version);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CpeUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CpeUri);
      }
      if (version_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Version);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CpeUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.CpeUri.Length != 0) {
        CpeUri = other.CpeUri;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::Grafeas.V1.Version();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CpeUri = input.ReadString();
            break;
          }
          case 18: {
            if (version_ == null) {
              Version = new global::Grafeas.V1.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CpeUri = input.ReadString();
            break;
          }
          case 18: {
            if (version_ == null) {
              Version = new global::Grafeas.V1.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 26: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// PackageNote represents a particular package version.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PackageNote : pb::IMessage<PackageNote>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PackageNote> _parser = new pb::MessageParser<PackageNote>(() => new PackageNote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PackageNote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1.PackageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageNote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageNote(PackageNote other) : this() {
      name_ = other.name_;
      distribution_ = other.distribution_.Clone();
      packageType_ = other.packageType_;
      cpeUri_ = other.cpeUri_;
      architecture_ = other.architecture_;
      version_ = other.version_ != null ? other.version_.Clone() : null;
      maintainer_ = other.maintainer_;
      url_ = other.url_;
      description_ = other.description_;
      license_ = other.license_ != null ? other.license_.Clone() : null;
      digest_ = other.digest_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageNote Clone() {
      return new PackageNote(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "distribution" field.</summary>
    public const int DistributionFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Grafeas.V1.Distribution> _repeated_distribution_codec
        = pb::FieldCodec.ForMessage(82, global::Grafeas.V1.Distribution.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1.Distribution> distribution_ = new pbc::RepeatedField<global::Grafeas.V1.Distribution>();
    /// <summary>
    /// Deprecated.
    /// The various channels by which a package is distributed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Grafeas.V1.Distribution> Distribution {
      get { return distribution_; }
    }

    /// <summary>Field number for the "package_type" field.</summary>
    public const int PackageTypeFieldNumber = 11;
    private string packageType_ = "";
    /// <summary>
    /// The type of package; whether native or non native (e.g., ruby gems,
    /// node.js packages, etc.).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PackageType {
      get { return packageType_; }
      set {
        packageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cpe_uri" field.</summary>
    public const int CpeUriFieldNumber = 12;
    private string cpeUri_ = "";
    /// <summary>
    /// The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)
    /// denoting the package manager version distributing a package.
    /// The cpe_uri will be blank for language packages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CpeUri {
      get { return cpeUri_; }
      set {
        cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "architecture" field.</summary>
    public const int ArchitectureFieldNumber = 13;
    private global::Grafeas.V1.Architecture architecture_ = global::Grafeas.V1.Architecture.Unspecified;
    /// <summary>
    /// The CPU architecture for which packages in this distribution channel were
    /// built. Architecture will be blank for language packages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Architecture Architecture {
      get { return architecture_; }
      set {
        architecture_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 14;
    private global::Grafeas.V1.Version version_;
    /// <summary>
    /// The version of the package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Version Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "maintainer" field.</summary>
    public const int MaintainerFieldNumber = 15;
    private string maintainer_ = "";
    /// <summary>
    /// A freeform text denoting the maintainer of this package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Maintainer {
      get { return maintainer_; }
      set {
        maintainer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 16;
    private string url_ = "";
    /// <summary>
    /// The homepage for this package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 17;
    private string description_ = "";
    /// <summary>
    /// The description of this package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "license" field.</summary>
    public const int LicenseFieldNumber = 18;
    private global::Grafeas.V1.License license_;
    /// <summary>
    /// Licenses that have been declared by the authors of the package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.License License {
      get { return license_; }
      set {
        license_ = value;
      }
    }

    /// <summary>Field number for the "digest" field.</summary>
    public const int DigestFieldNumber = 19;
    private static readonly pb::FieldCodec<global::Grafeas.V1.Digest> _repeated_digest_codec
        = pb::FieldCodec.ForMessage(154, global::Grafeas.V1.Digest.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1.Digest> digest_ = new pbc::RepeatedField<global::Grafeas.V1.Digest>();
    /// <summary>
    /// Hash value, typically a file digest, that allows unique
    /// identification a specific package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Grafeas.V1.Digest> Digest {
      get { return digest_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PackageNote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PackageNote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!distribution_.Equals(other.distribution_)) return false;
      if (PackageType != other.PackageType) return false;
      if (CpeUri != other.CpeUri) return false;
      if (Architecture != other.Architecture) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if (Maintainer != other.Maintainer) return false;
      if (Url != other.Url) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(License, other.License)) return false;
      if(!digest_.Equals(other.digest_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= distribution_.GetHashCode();
      if (PackageType.Length != 0) hash ^= PackageType.GetHashCode();
      if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) hash ^= Architecture.GetHashCode();
      if (version_ != null) hash ^= Version.GetHashCode();
      if (Maintainer.Length != 0) hash ^= Maintainer.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (license_ != null) hash ^= License.GetHashCode();
      hash ^= digest_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      distribution_.WriteTo(output, _repeated_distribution_codec);
      if (PackageType.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(PackageType);
      }
      if (CpeUri.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Architecture);
      }
      if (version_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Version);
      }
      if (Maintainer.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Maintainer);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Url);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Description);
      }
      if (license_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(License);
      }
      digest_.WriteTo(output, _repeated_digest_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      distribution_.WriteTo(ref output, _repeated_distribution_codec);
      if (PackageType.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(PackageType);
      }
      if (CpeUri.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        output.WriteRawTag(104);
        output.WriteEnum((int) Architecture);
      }
      if (version_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Version);
      }
      if (Maintainer.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Maintainer);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Url);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Description);
      }
      if (license_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(License);
      }
      digest_.WriteTo(ref output, _repeated_digest_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += distribution_.CalculateSize(_repeated_distribution_codec);
      if (PackageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageType);
      }
      if (CpeUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Architecture);
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (Maintainer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Maintainer);
      }
      if (Url.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Description.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (license_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(License);
      }
      size += digest_.CalculateSize(_repeated_digest_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PackageNote other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      distribution_.Add(other.distribution_);
      if (other.PackageType.Length != 0) {
        PackageType = other.PackageType;
      }
      if (other.CpeUri.Length != 0) {
        CpeUri = other.CpeUri;
      }
      if (other.Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        Architecture = other.Architecture;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::Grafeas.V1.Version();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.Maintainer.Length != 0) {
        Maintainer = other.Maintainer;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.license_ != null) {
        if (license_ == null) {
          License = new global::Grafeas.V1.License();
        }
        License.MergeFrom(other.License);
      }
      digest_.Add(other.digest_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            distribution_.AddEntriesFrom(input, _repeated_distribution_codec);
            break;
          }
          case 90: {
            PackageType = input.ReadString();
            break;
          }
          case 98: {
            CpeUri = input.ReadString();
            break;
          }
          case 104: {
            Architecture = (global::Grafeas.V1.Architecture) input.ReadEnum();
            break;
          }
          case 114: {
            if (version_ == null) {
              Version = new global::Grafeas.V1.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 122: {
            Maintainer = input.ReadString();
            break;
          }
          case 130: {
            Url = input.ReadString();
            break;
          }
          case 138: {
            Description = input.ReadString();
            break;
          }
          case 146: {
            if (license_ == null) {
              License = new global::Grafeas.V1.License();
            }
            input.ReadMessage(License);
            break;
          }
          case 154: {
            digest_.AddEntriesFrom(input, _repeated_digest_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 82: {
            distribution_.AddEntriesFrom(ref input, _repeated_distribution_codec);
            break;
          }
          case 90: {
            PackageType = input.ReadString();
            break;
          }
          case 98: {
            CpeUri = input.ReadString();
            break;
          }
          case 104: {
            Architecture = (global::Grafeas.V1.Architecture) input.ReadEnum();
            break;
          }
          case 114: {
            if (version_ == null) {
              Version = new global::Grafeas.V1.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 122: {
            Maintainer = input.ReadString();
            break;
          }
          case 130: {
            Url = input.ReadString();
            break;
          }
          case 138: {
            Description = input.ReadString();
            break;
          }
          case 146: {
            if (license_ == null) {
              License = new global::Grafeas.V1.License();
            }
            input.ReadMessage(License);
            break;
          }
          case 154: {
            digest_.AddEntriesFrom(ref input, _repeated_digest_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details on how a particular software package was installed on a system.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PackageOccurrence : pb::IMessage<PackageOccurrence>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PackageOccurrence> _parser = new pb::MessageParser<PackageOccurrence>(() => new PackageOccurrence());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PackageOccurrence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1.PackageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageOccurrence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageOccurrence(PackageOccurrence other) : this() {
      name_ = other.name_;
      location_ = other.location_.Clone();
      packageType_ = other.packageType_;
      cpeUri_ = other.cpeUri_;
      architecture_ = other.architecture_;
      license_ = other.license_ != null ? other.license_.Clone() : null;
      version_ = other.version_ != null ? other.version_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PackageOccurrence Clone() {
      return new PackageOccurrence(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the installed package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Grafeas.V1.Location> _repeated_location_codec
        = pb::FieldCodec.ForMessage(18, global::Grafeas.V1.Location.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1.Location> location_ = new pbc::RepeatedField<global::Grafeas.V1.Location>();
    /// <summary>
    /// All of the places within the filesystem versions of this package
    /// have been found.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Grafeas.V1.Location> Location {
      get { return location_; }
    }

    /// <summary>Field number for the "package_type" field.</summary>
    public const int PackageTypeFieldNumber = 3;
    private string packageType_ = "";
    /// <summary>
    /// The type of package; whether native or non native (e.g., ruby gems,
    /// node.js packages, etc.).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PackageType {
      get { return packageType_; }
      set {
        packageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cpe_uri" field.</summary>
    public const int CpeUriFieldNumber = 4;
    private string cpeUri_ = "";
    /// <summary>
    /// The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)
    /// denoting the package manager version distributing a package.
    /// The cpe_uri will be blank for language packages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CpeUri {
      get { return cpeUri_; }
      set {
        cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "architecture" field.</summary>
    public const int ArchitectureFieldNumber = 5;
    private global::Grafeas.V1.Architecture architecture_ = global::Grafeas.V1.Architecture.Unspecified;
    /// <summary>
    /// The CPU architecture for which packages in this distribution channel were
    /// built. Architecture will be blank for language packages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Architecture Architecture {
      get { return architecture_; }
      set {
        architecture_ = value;
      }
    }

    /// <summary>Field number for the "license" field.</summary>
    public const int LicenseFieldNumber = 6;
    private global::Grafeas.V1.License license_;
    /// <summary>
    /// Licenses that have been declared by the authors of the package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.License License {
      get { return license_; }
      set {
        license_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 7;
    private global::Grafeas.V1.Version version_;
    /// <summary>
    /// The version of the package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Version Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PackageOccurrence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PackageOccurrence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!location_.Equals(other.location_)) return false;
      if (PackageType != other.PackageType) return false;
      if (CpeUri != other.CpeUri) return false;
      if (Architecture != other.Architecture) return false;
      if (!object.Equals(License, other.License)) return false;
      if (!object.Equals(Version, other.Version)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= location_.GetHashCode();
      if (PackageType.Length != 0) hash ^= PackageType.GetHashCode();
      if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) hash ^= Architecture.GetHashCode();
      if (license_ != null) hash ^= License.GetHashCode();
      if (version_ != null) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      location_.WriteTo(output, _repeated_location_codec);
      if (PackageType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PackageType);
      }
      if (CpeUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Architecture);
      }
      if (license_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(License);
      }
      if (version_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      location_.WriteTo(ref output, _repeated_location_codec);
      if (PackageType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PackageType);
      }
      if (CpeUri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Architecture);
      }
      if (license_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(License);
      }
      if (version_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += location_.CalculateSize(_repeated_location_codec);
      if (PackageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageType);
      }
      if (CpeUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
      }
      if (Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Architecture);
      }
      if (license_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(License);
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PackageOccurrence other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      location_.Add(other.location_);
      if (other.PackageType.Length != 0) {
        PackageType = other.PackageType;
      }
      if (other.CpeUri.Length != 0) {
        CpeUri = other.CpeUri;
      }
      if (other.Architecture != global::Grafeas.V1.Architecture.Unspecified) {
        Architecture = other.Architecture;
      }
      if (other.license_ != null) {
        if (license_ == null) {
          License = new global::Grafeas.V1.License();
        }
        License.MergeFrom(other.License);
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::Grafeas.V1.Version();
        }
        Version.MergeFrom(other.Version);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            location_.AddEntriesFrom(input, _repeated_location_codec);
            break;
          }
          case 26: {
            PackageType = input.ReadString();
            break;
          }
          case 34: {
            CpeUri = input.ReadString();
            break;
          }
          case 40: {
            Architecture = (global::Grafeas.V1.Architecture) input.ReadEnum();
            break;
          }
          case 50: {
            if (license_ == null) {
              License = new global::Grafeas.V1.License();
            }
            input.ReadMessage(License);
            break;
          }
          case 58: {
            if (version_ == null) {
              Version = new global::Grafeas.V1.Version();
            }
            input.ReadMessage(Version);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            location_.AddEntriesFrom(ref input, _repeated_location_codec);
            break;
          }
          case 26: {
            PackageType = input.ReadString();
            break;
          }
          case 34: {
            CpeUri = input.ReadString();
            break;
          }
          case 40: {
            Architecture = (global::Grafeas.V1.Architecture) input.ReadEnum();
            break;
          }
          case 50: {
            if (license_ == null) {
              License = new global::Grafeas.V1.License();
            }
            input.ReadMessage(License);
            break;
          }
          case 58: {
            if (version_ == null) {
              Version = new global::Grafeas.V1.Version();
            }
            input.ReadMessage(Version);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Version contains structured information about the version of a package.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Version : pb::IMessage<Version>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Version> _parser = new pb::MessageParser<Version>(() => new Version());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Version> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1.PackageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Version() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Version(Version other) : this() {
      epoch_ = other.epoch_;
      name_ = other.name_;
      revision_ = other.revision_;
      inclusive_ = other.inclusive_;
      kind_ = other.kind_;
      fullName_ = other.fullName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Version Clone() {
      return new Version(this);
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 1;
    private int epoch_;
    /// <summary>
    /// Used to correct mistakes in the version numbering scheme.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Required only when version kind is NORMAL. The main part of the version
    /// name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 3;
    private string revision_ = "";
    /// <summary>
    /// The iteration of the package build from the above version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Revision {
      get { return revision_; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inclusive" field.</summary>
    public const int InclusiveFieldNumber = 6;
    private bool inclusive_;
    /// <summary>
    /// Whether this version is specifying part of an inclusive range. Grafeas
    /// does not have the capability to specify version ranges; instead we have
    /// fields that specify start version and end versions. At times this is
    /// insufficient - we also need to specify whether the version is included in
    /// the range or is excluded from the range. This boolean is expected to be set
    /// to true when the version is included in a range.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Inclusive {
      get { return inclusive_; }
      set {
        inclusive_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 4;
    private global::Grafeas.V1.Version.Types.VersionKind kind_ = global::Grafeas.V1.Version.Types.VersionKind.Unspecified;
    /// <summary>
    /// Required. Distinguishes between sentinel MIN/MAX versions and normal
    /// versions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Grafeas.V1.Version.Types.VersionKind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "full_name" field.</summary>
    public const int FullNameFieldNumber = 5;
    private string fullName_ = "";
    /// <summary>
    /// Human readable version string. This string is of the form
    /// &lt;epoch>:&lt;name>-&lt;revision> and is only set when kind is NORMAL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FullName {
      get { return fullName_; }
      set {
        fullName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Version);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Version other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Epoch != other.Epoch) return false;
      if (Name != other.Name) return false;
      if (Revision != other.Revision) return false;
      if (Inclusive != other.Inclusive) return false;
      if (Kind != other.Kind) return false;
      if (FullName != other.FullName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Epoch != 0) hash ^= Epoch.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Revision.Length != 0) hash ^= Revision.GetHashCode();
      if (Inclusive != false) hash ^= Inclusive.GetHashCode();
      if (Kind != global::Grafeas.V1.Version.Types.VersionKind.Unspecified) hash ^= Kind.GetHashCode();
      if (FullName.Length != 0) hash ^= FullName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Epoch != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Epoch);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Revision.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Revision);
      }
      if (Kind != global::Grafeas.V1.Version.Types.VersionKind.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Kind);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FullName);
      }
      if (Inclusive != false) {
        output.WriteRawTag(48);
        output.WriteBool(Inclusive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Epoch != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Epoch);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Revision.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Revision);
      }
      if (Kind != global::Grafeas.V1.Version.Types.VersionKind.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Kind);
      }
      if (FullName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FullName);
      }
      if (Inclusive != false) {
        output.WriteRawTag(48);
        output.WriteBool(Inclusive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Epoch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Epoch);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Revision.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Revision);
      }
      if (Inclusive != false) {
        size += 1 + 1;
      }
      if (Kind != global::Grafeas.V1.Version.Types.VersionKind.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (FullName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Version other) {
      if (other == null) {
        return;
      }
      if (other.Epoch != 0) {
        Epoch = other.Epoch;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Revision.Length != 0) {
        Revision = other.Revision;
      }
      if (other.Inclusive != false) {
        Inclusive = other.Inclusive;
      }
      if (other.Kind != global::Grafeas.V1.Version.Types.VersionKind.Unspecified) {
        Kind = other.Kind;
      }
      if (other.FullName.Length != 0) {
        FullName = other.FullName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Epoch = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Revision = input.ReadString();
            break;
          }
          case 32: {
            Kind = (global::Grafeas.V1.Version.Types.VersionKind) input.ReadEnum();
            break;
          }
          case 42: {
            FullName = input.ReadString();
            break;
          }
          case 48: {
            Inclusive = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Epoch = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Revision = input.ReadString();
            break;
          }
          case 32: {
            Kind = (global::Grafeas.V1.Version.Types.VersionKind) input.ReadEnum();
            break;
          }
          case 42: {
            FullName = input.ReadString();
            break;
          }
          case 48: {
            Inclusive = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Version message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Whether this is an ordinary package version or a sentinel MIN/MAX version.
      /// </summary>
      public enum VersionKind {
        /// <summary>
        /// Unknown.
        /// </summary>
        [pbr::OriginalName("VERSION_KIND_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A standard package version.
        /// </summary>
        [pbr::OriginalName("NORMAL")] Normal = 1,
        /// <summary>
        /// A special version representing negative infinity.
        /// </summary>
        [pbr::OriginalName("MINIMUM")] Minimum = 2,
        /// <summary>
        /// A special version representing positive infinity.
        /// </summary>
        [pbr::OriginalName("MAXIMUM")] Maximum = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
