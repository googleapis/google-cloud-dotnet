// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/channel/v1/service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Channel.V1 {
  /// <summary>
  /// CloudChannelService lets Google cloud resellers and distributors manage
  /// their customers, channel partners, entitlements, and reports.
  ///
  /// Using this service:
  /// 1. Resellers and distributors can manage a customer entity.
  /// 2. Distributors can register an authorized reseller in their channel and
  ///    provide them with delegated admin access.
  /// 3. Resellers and distributors can manage customer entitlements.
  ///
  /// CloudChannelService exposes the following resources:
  /// - [Customer][google.cloud.channel.v1.Customer]s: An entity-usually an
  /// enterprise-managed by a reseller or distributor.
  ///
  /// - [Entitlement][google.cloud.channel.v1.Entitlement]s: An entity that
  /// provides a customer with the means to use a service. Entitlements are created
  /// or updated as a result of a successful fulfillment.
  ///
  /// - [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s: An
  /// entity that identifies links between distributors and their indirect
  /// resellers in a channel.
  /// </summary>
  public static partial class CloudChannelService
  {
    static readonly string __ServiceName = "google.cloud.channel.v1.CloudChannelService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListCustomersRequest> __Marshaller_google_cloud_channel_v1_ListCustomersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListCustomersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListCustomersResponse> __Marshaller_google_cloud_channel_v1_ListCustomersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListCustomersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.GetCustomerRequest> __Marshaller_google_cloud_channel_v1_GetCustomerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.GetCustomerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.Customer> __Marshaller_google_cloud_channel_v1_Customer = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.Customer.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest> __Marshaller_google_cloud_channel_v1_CheckCloudIdentityAccountsExistRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse> __Marshaller_google_cloud_channel_v1_CheckCloudIdentityAccountsExistResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CreateCustomerRequest> __Marshaller_google_cloud_channel_v1_CreateCustomerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CreateCustomerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.UpdateCustomerRequest> __Marshaller_google_cloud_channel_v1_UpdateCustomerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.UpdateCustomerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.DeleteCustomerRequest> __Marshaller_google_cloud_channel_v1_DeleteCustomerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.DeleteCustomerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ImportCustomerRequest> __Marshaller_google_cloud_channel_v1_ImportCustomerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ImportCustomerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest> __Marshaller_google_cloud_channel_v1_ProvisionCloudIdentityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListEntitlementsRequest> __Marshaller_google_cloud_channel_v1_ListEntitlementsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListEntitlementsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListEntitlementsResponse> __Marshaller_google_cloud_channel_v1_ListEntitlementsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListEntitlementsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListTransferableSkusRequest> __Marshaller_google_cloud_channel_v1_ListTransferableSkusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListTransferableSkusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListTransferableSkusResponse> __Marshaller_google_cloud_channel_v1_ListTransferableSkusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListTransferableSkusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListTransferableOffersRequest> __Marshaller_google_cloud_channel_v1_ListTransferableOffersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListTransferableOffersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListTransferableOffersResponse> __Marshaller_google_cloud_channel_v1_ListTransferableOffersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListTransferableOffersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.GetEntitlementRequest> __Marshaller_google_cloud_channel_v1_GetEntitlementRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.GetEntitlementRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.Entitlement> __Marshaller_google_cloud_channel_v1_Entitlement = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.Entitlement.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CreateEntitlementRequest> __Marshaller_google_cloud_channel_v1_CreateEntitlementRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CreateEntitlementRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ChangeParametersRequest> __Marshaller_google_cloud_channel_v1_ChangeParametersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ChangeParametersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest> __Marshaller_google_cloud_channel_v1_ChangeRenewalSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ChangeOfferRequest> __Marshaller_google_cloud_channel_v1_ChangeOfferRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ChangeOfferRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.StartPaidServiceRequest> __Marshaller_google_cloud_channel_v1_StartPaidServiceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.StartPaidServiceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.SuspendEntitlementRequest> __Marshaller_google_cloud_channel_v1_SuspendEntitlementRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.SuspendEntitlementRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CancelEntitlementRequest> __Marshaller_google_cloud_channel_v1_CancelEntitlementRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CancelEntitlementRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ActivateEntitlementRequest> __Marshaller_google_cloud_channel_v1_ActivateEntitlementRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ActivateEntitlementRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.TransferEntitlementsRequest> __Marshaller_google_cloud_channel_v1_TransferEntitlementsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.TransferEntitlementsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest> __Marshaller_google_cloud_channel_v1_TransferEntitlementsToGoogleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest> __Marshaller_google_cloud_channel_v1_ListChannelPartnerLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse> __Marshaller_google_cloud_channel_v1_ListChannelPartnerLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest> __Marshaller_google_cloud_channel_v1_GetChannelPartnerLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ChannelPartnerLink> __Marshaller_google_cloud_channel_v1_ChannelPartnerLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ChannelPartnerLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest> __Marshaller_google_cloud_channel_v1_CreateChannelPartnerLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest> __Marshaller_google_cloud_channel_v1_UpdateChannelPartnerLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest> __Marshaller_google_cloud_channel_v1_GetCustomerRepricingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> __Marshaller_google_cloud_channel_v1_CustomerRepricingConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CustomerRepricingConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest> __Marshaller_google_cloud_channel_v1_ListCustomerRepricingConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse> __Marshaller_google_cloud_channel_v1_ListCustomerRepricingConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest> __Marshaller_google_cloud_channel_v1_CreateCustomerRepricingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest> __Marshaller_google_cloud_channel_v1_UpdateCustomerRepricingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest> __Marshaller_google_cloud_channel_v1_DeleteCustomerRepricingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest> __Marshaller_google_cloud_channel_v1_GetChannelPartnerRepricingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> __Marshaller_google_cloud_channel_v1_ChannelPartnerRepricingConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest> __Marshaller_google_cloud_channel_v1_ListChannelPartnerRepricingConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse> __Marshaller_google_cloud_channel_v1_ListChannelPartnerRepricingConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest> __Marshaller_google_cloud_channel_v1_CreateChannelPartnerRepricingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest> __Marshaller_google_cloud_channel_v1_UpdateChannelPartnerRepricingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest> __Marshaller_google_cloud_channel_v1_DeleteChannelPartnerRepricingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListSkuGroupsRequest> __Marshaller_google_cloud_channel_v1_ListSkuGroupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListSkuGroupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListSkuGroupsResponse> __Marshaller_google_cloud_channel_v1_ListSkuGroupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListSkuGroupsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest> __Marshaller_google_cloud_channel_v1_ListSkuGroupBillableSkusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse> __Marshaller_google_cloud_channel_v1_ListSkuGroupBillableSkusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.LookupOfferRequest> __Marshaller_google_cloud_channel_v1_LookupOfferRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.LookupOfferRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.Offer> __Marshaller_google_cloud_channel_v1_Offer = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.Offer.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListProductsRequest> __Marshaller_google_cloud_channel_v1_ListProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListProductsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListProductsResponse> __Marshaller_google_cloud_channel_v1_ListProductsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListProductsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListSkusRequest> __Marshaller_google_cloud_channel_v1_ListSkusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListSkusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListSkusResponse> __Marshaller_google_cloud_channel_v1_ListSkusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListSkusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListOffersRequest> __Marshaller_google_cloud_channel_v1_ListOffersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListOffersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListOffersResponse> __Marshaller_google_cloud_channel_v1_ListOffersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListOffersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest> __Marshaller_google_cloud_channel_v1_ListPurchasableSkusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse> __Marshaller_google_cloud_channel_v1_ListPurchasableSkusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest> __Marshaller_google_cloud_channel_v1_ListPurchasableOffersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse> __Marshaller_google_cloud_channel_v1_ListPurchasableOffersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest> __Marshaller_google_cloud_channel_v1_QueryEligibleBillingAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse> __Marshaller_google_cloud_channel_v1_QueryEligibleBillingAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.RegisterSubscriberRequest> __Marshaller_google_cloud_channel_v1_RegisterSubscriberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.RegisterSubscriberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.RegisterSubscriberResponse> __Marshaller_google_cloud_channel_v1_RegisterSubscriberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.RegisterSubscriberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest> __Marshaller_google_cloud_channel_v1_UnregisterSubscriberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse> __Marshaller_google_cloud_channel_v1_UnregisterSubscriberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListSubscribersRequest> __Marshaller_google_cloud_channel_v1_ListSubscribersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListSubscribersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListSubscribersResponse> __Marshaller_google_cloud_channel_v1_ListSubscribersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListSubscribersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest> __Marshaller_google_cloud_channel_v1_ListEntitlementChangesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse> __Marshaller_google_cloud_channel_v1_ListEntitlementChangesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListCustomersRequest, global::Google.Cloud.Channel.V1.ListCustomersResponse> __Method_ListCustomers = new grpc::Method<global::Google.Cloud.Channel.V1.ListCustomersRequest, global::Google.Cloud.Channel.V1.ListCustomersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCustomers",
        __Marshaller_google_cloud_channel_v1_ListCustomersRequest,
        __Marshaller_google_cloud_channel_v1_ListCustomersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.GetCustomerRequest, global::Google.Cloud.Channel.V1.Customer> __Method_GetCustomer = new grpc::Method<global::Google.Cloud.Channel.V1.GetCustomerRequest, global::Google.Cloud.Channel.V1.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomer",
        __Marshaller_google_cloud_channel_v1_GetCustomerRequest,
        __Marshaller_google_cloud_channel_v1_Customer);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest, global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse> __Method_CheckCloudIdentityAccountsExist = new grpc::Method<global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest, global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckCloudIdentityAccountsExist",
        __Marshaller_google_cloud_channel_v1_CheckCloudIdentityAccountsExistRequest,
        __Marshaller_google_cloud_channel_v1_CheckCloudIdentityAccountsExistResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.CreateCustomerRequest, global::Google.Cloud.Channel.V1.Customer> __Method_CreateCustomer = new grpc::Method<global::Google.Cloud.Channel.V1.CreateCustomerRequest, global::Google.Cloud.Channel.V1.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomer",
        __Marshaller_google_cloud_channel_v1_CreateCustomerRequest,
        __Marshaller_google_cloud_channel_v1_Customer);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.UpdateCustomerRequest, global::Google.Cloud.Channel.V1.Customer> __Method_UpdateCustomer = new grpc::Method<global::Google.Cloud.Channel.V1.UpdateCustomerRequest, global::Google.Cloud.Channel.V1.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomer",
        __Marshaller_google_cloud_channel_v1_UpdateCustomerRequest,
        __Marshaller_google_cloud_channel_v1_Customer);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.DeleteCustomerRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCustomer = new grpc::Method<global::Google.Cloud.Channel.V1.DeleteCustomerRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCustomer",
        __Marshaller_google_cloud_channel_v1_DeleteCustomerRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ImportCustomerRequest, global::Google.Cloud.Channel.V1.Customer> __Method_ImportCustomer = new grpc::Method<global::Google.Cloud.Channel.V1.ImportCustomerRequest, global::Google.Cloud.Channel.V1.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportCustomer",
        __Marshaller_google_cloud_channel_v1_ImportCustomerRequest,
        __Marshaller_google_cloud_channel_v1_Customer);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest, global::Google.LongRunning.Operation> __Method_ProvisionCloudIdentity = new grpc::Method<global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ProvisionCloudIdentity",
        __Marshaller_google_cloud_channel_v1_ProvisionCloudIdentityRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListEntitlementsRequest, global::Google.Cloud.Channel.V1.ListEntitlementsResponse> __Method_ListEntitlements = new grpc::Method<global::Google.Cloud.Channel.V1.ListEntitlementsRequest, global::Google.Cloud.Channel.V1.ListEntitlementsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEntitlements",
        __Marshaller_google_cloud_channel_v1_ListEntitlementsRequest,
        __Marshaller_google_cloud_channel_v1_ListEntitlementsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListTransferableSkusRequest, global::Google.Cloud.Channel.V1.ListTransferableSkusResponse> __Method_ListTransferableSkus = new grpc::Method<global::Google.Cloud.Channel.V1.ListTransferableSkusRequest, global::Google.Cloud.Channel.V1.ListTransferableSkusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTransferableSkus",
        __Marshaller_google_cloud_channel_v1_ListTransferableSkusRequest,
        __Marshaller_google_cloud_channel_v1_ListTransferableSkusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListTransferableOffersRequest, global::Google.Cloud.Channel.V1.ListTransferableOffersResponse> __Method_ListTransferableOffers = new grpc::Method<global::Google.Cloud.Channel.V1.ListTransferableOffersRequest, global::Google.Cloud.Channel.V1.ListTransferableOffersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTransferableOffers",
        __Marshaller_google_cloud_channel_v1_ListTransferableOffersRequest,
        __Marshaller_google_cloud_channel_v1_ListTransferableOffersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.GetEntitlementRequest, global::Google.Cloud.Channel.V1.Entitlement> __Method_GetEntitlement = new grpc::Method<global::Google.Cloud.Channel.V1.GetEntitlementRequest, global::Google.Cloud.Channel.V1.Entitlement>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEntitlement",
        __Marshaller_google_cloud_channel_v1_GetEntitlementRequest,
        __Marshaller_google_cloud_channel_v1_Entitlement);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.CreateEntitlementRequest, global::Google.LongRunning.Operation> __Method_CreateEntitlement = new grpc::Method<global::Google.Cloud.Channel.V1.CreateEntitlementRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEntitlement",
        __Marshaller_google_cloud_channel_v1_CreateEntitlementRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ChangeParametersRequest, global::Google.LongRunning.Operation> __Method_ChangeParameters = new grpc::Method<global::Google.Cloud.Channel.V1.ChangeParametersRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeParameters",
        __Marshaller_google_cloud_channel_v1_ChangeParametersRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest, global::Google.LongRunning.Operation> __Method_ChangeRenewalSettings = new grpc::Method<global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeRenewalSettings",
        __Marshaller_google_cloud_channel_v1_ChangeRenewalSettingsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ChangeOfferRequest, global::Google.LongRunning.Operation> __Method_ChangeOffer = new grpc::Method<global::Google.Cloud.Channel.V1.ChangeOfferRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeOffer",
        __Marshaller_google_cloud_channel_v1_ChangeOfferRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.StartPaidServiceRequest, global::Google.LongRunning.Operation> __Method_StartPaidService = new grpc::Method<global::Google.Cloud.Channel.V1.StartPaidServiceRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartPaidService",
        __Marshaller_google_cloud_channel_v1_StartPaidServiceRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.SuspendEntitlementRequest, global::Google.LongRunning.Operation> __Method_SuspendEntitlement = new grpc::Method<global::Google.Cloud.Channel.V1.SuspendEntitlementRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SuspendEntitlement",
        __Marshaller_google_cloud_channel_v1_SuspendEntitlementRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.CancelEntitlementRequest, global::Google.LongRunning.Operation> __Method_CancelEntitlement = new grpc::Method<global::Google.Cloud.Channel.V1.CancelEntitlementRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelEntitlement",
        __Marshaller_google_cloud_channel_v1_CancelEntitlementRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ActivateEntitlementRequest, global::Google.LongRunning.Operation> __Method_ActivateEntitlement = new grpc::Method<global::Google.Cloud.Channel.V1.ActivateEntitlementRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ActivateEntitlement",
        __Marshaller_google_cloud_channel_v1_ActivateEntitlementRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.TransferEntitlementsRequest, global::Google.LongRunning.Operation> __Method_TransferEntitlements = new grpc::Method<global::Google.Cloud.Channel.V1.TransferEntitlementsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransferEntitlements",
        __Marshaller_google_cloud_channel_v1_TransferEntitlementsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest, global::Google.LongRunning.Operation> __Method_TransferEntitlementsToGoogle = new grpc::Method<global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransferEntitlementsToGoogle",
        __Marshaller_google_cloud_channel_v1_TransferEntitlementsToGoogleRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest, global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse> __Method_ListChannelPartnerLinks = new grpc::Method<global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest, global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListChannelPartnerLinks",
        __Marshaller_google_cloud_channel_v1_ListChannelPartnerLinksRequest,
        __Marshaller_google_cloud_channel_v1_ListChannelPartnerLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink> __Method_GetChannelPartnerLink = new grpc::Method<global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetChannelPartnerLink",
        __Marshaller_google_cloud_channel_v1_GetChannelPartnerLinkRequest,
        __Marshaller_google_cloud_channel_v1_ChannelPartnerLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink> __Method_CreateChannelPartnerLink = new grpc::Method<global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateChannelPartnerLink",
        __Marshaller_google_cloud_channel_v1_CreateChannelPartnerLinkRequest,
        __Marshaller_google_cloud_channel_v1_ChannelPartnerLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink> __Method_UpdateChannelPartnerLink = new grpc::Method<global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateChannelPartnerLink",
        __Marshaller_google_cloud_channel_v1_UpdateChannelPartnerLinkRequest,
        __Marshaller_google_cloud_channel_v1_ChannelPartnerLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig> __Method_GetCustomerRepricingConfig = new grpc::Method<global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomerRepricingConfig",
        __Marshaller_google_cloud_channel_v1_GetCustomerRepricingConfigRequest,
        __Marshaller_google_cloud_channel_v1_CustomerRepricingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest, global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse> __Method_ListCustomerRepricingConfigs = new grpc::Method<global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest, global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCustomerRepricingConfigs",
        __Marshaller_google_cloud_channel_v1_ListCustomerRepricingConfigsRequest,
        __Marshaller_google_cloud_channel_v1_ListCustomerRepricingConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig> __Method_CreateCustomerRepricingConfig = new grpc::Method<global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomerRepricingConfig",
        __Marshaller_google_cloud_channel_v1_CreateCustomerRepricingConfigRequest,
        __Marshaller_google_cloud_channel_v1_CustomerRepricingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig> __Method_UpdateCustomerRepricingConfig = new grpc::Method<global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomerRepricingConfig",
        __Marshaller_google_cloud_channel_v1_UpdateCustomerRepricingConfigRequest,
        __Marshaller_google_cloud_channel_v1_CustomerRepricingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteCustomerRepricingConfig = new grpc::Method<global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteCustomerRepricingConfig",
        __Marshaller_google_cloud_channel_v1_DeleteCustomerRepricingConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> __Method_GetChannelPartnerRepricingConfig = new grpc::Method<global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetChannelPartnerRepricingConfig",
        __Marshaller_google_cloud_channel_v1_GetChannelPartnerRepricingConfigRequest,
        __Marshaller_google_cloud_channel_v1_ChannelPartnerRepricingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest, global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse> __Method_ListChannelPartnerRepricingConfigs = new grpc::Method<global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest, global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListChannelPartnerRepricingConfigs",
        __Marshaller_google_cloud_channel_v1_ListChannelPartnerRepricingConfigsRequest,
        __Marshaller_google_cloud_channel_v1_ListChannelPartnerRepricingConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> __Method_CreateChannelPartnerRepricingConfig = new grpc::Method<global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateChannelPartnerRepricingConfig",
        __Marshaller_google_cloud_channel_v1_CreateChannelPartnerRepricingConfigRequest,
        __Marshaller_google_cloud_channel_v1_ChannelPartnerRepricingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> __Method_UpdateChannelPartnerRepricingConfig = new grpc::Method<global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateChannelPartnerRepricingConfig",
        __Marshaller_google_cloud_channel_v1_UpdateChannelPartnerRepricingConfigRequest,
        __Marshaller_google_cloud_channel_v1_ChannelPartnerRepricingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteChannelPartnerRepricingConfig = new grpc::Method<global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteChannelPartnerRepricingConfig",
        __Marshaller_google_cloud_channel_v1_DeleteChannelPartnerRepricingConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListSkuGroupsRequest, global::Google.Cloud.Channel.V1.ListSkuGroupsResponse> __Method_ListSkuGroups = new grpc::Method<global::Google.Cloud.Channel.V1.ListSkuGroupsRequest, global::Google.Cloud.Channel.V1.ListSkuGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSkuGroups",
        __Marshaller_google_cloud_channel_v1_ListSkuGroupsRequest,
        __Marshaller_google_cloud_channel_v1_ListSkuGroupsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest, global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse> __Method_ListSkuGroupBillableSkus = new grpc::Method<global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest, global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSkuGroupBillableSkus",
        __Marshaller_google_cloud_channel_v1_ListSkuGroupBillableSkusRequest,
        __Marshaller_google_cloud_channel_v1_ListSkuGroupBillableSkusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.LookupOfferRequest, global::Google.Cloud.Channel.V1.Offer> __Method_LookupOffer = new grpc::Method<global::Google.Cloud.Channel.V1.LookupOfferRequest, global::Google.Cloud.Channel.V1.Offer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LookupOffer",
        __Marshaller_google_cloud_channel_v1_LookupOfferRequest,
        __Marshaller_google_cloud_channel_v1_Offer);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListProductsRequest, global::Google.Cloud.Channel.V1.ListProductsResponse> __Method_ListProducts = new grpc::Method<global::Google.Cloud.Channel.V1.ListProductsRequest, global::Google.Cloud.Channel.V1.ListProductsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProducts",
        __Marshaller_google_cloud_channel_v1_ListProductsRequest,
        __Marshaller_google_cloud_channel_v1_ListProductsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListSkusRequest, global::Google.Cloud.Channel.V1.ListSkusResponse> __Method_ListSkus = new grpc::Method<global::Google.Cloud.Channel.V1.ListSkusRequest, global::Google.Cloud.Channel.V1.ListSkusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSkus",
        __Marshaller_google_cloud_channel_v1_ListSkusRequest,
        __Marshaller_google_cloud_channel_v1_ListSkusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListOffersRequest, global::Google.Cloud.Channel.V1.ListOffersResponse> __Method_ListOffers = new grpc::Method<global::Google.Cloud.Channel.V1.ListOffersRequest, global::Google.Cloud.Channel.V1.ListOffersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOffers",
        __Marshaller_google_cloud_channel_v1_ListOffersRequest,
        __Marshaller_google_cloud_channel_v1_ListOffersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest, global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse> __Method_ListPurchasableSkus = new grpc::Method<global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest, global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPurchasableSkus",
        __Marshaller_google_cloud_channel_v1_ListPurchasableSkusRequest,
        __Marshaller_google_cloud_channel_v1_ListPurchasableSkusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest, global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse> __Method_ListPurchasableOffers = new grpc::Method<global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest, global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPurchasableOffers",
        __Marshaller_google_cloud_channel_v1_ListPurchasableOffersRequest,
        __Marshaller_google_cloud_channel_v1_ListPurchasableOffersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest, global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse> __Method_QueryEligibleBillingAccounts = new grpc::Method<global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest, global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryEligibleBillingAccounts",
        __Marshaller_google_cloud_channel_v1_QueryEligibleBillingAccountsRequest,
        __Marshaller_google_cloud_channel_v1_QueryEligibleBillingAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.RegisterSubscriberRequest, global::Google.Cloud.Channel.V1.RegisterSubscriberResponse> __Method_RegisterSubscriber = new grpc::Method<global::Google.Cloud.Channel.V1.RegisterSubscriberRequest, global::Google.Cloud.Channel.V1.RegisterSubscriberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterSubscriber",
        __Marshaller_google_cloud_channel_v1_RegisterSubscriberRequest,
        __Marshaller_google_cloud_channel_v1_RegisterSubscriberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest, global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse> __Method_UnregisterSubscriber = new grpc::Method<global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest, global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnregisterSubscriber",
        __Marshaller_google_cloud_channel_v1_UnregisterSubscriberRequest,
        __Marshaller_google_cloud_channel_v1_UnregisterSubscriberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListSubscribersRequest, global::Google.Cloud.Channel.V1.ListSubscribersResponse> __Method_ListSubscribers = new grpc::Method<global::Google.Cloud.Channel.V1.ListSubscribersRequest, global::Google.Cloud.Channel.V1.ListSubscribersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSubscribers",
        __Marshaller_google_cloud_channel_v1_ListSubscribersRequest,
        __Marshaller_google_cloud_channel_v1_ListSubscribersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest, global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse> __Method_ListEntitlementChanges = new grpc::Method<global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest, global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEntitlementChanges",
        __Marshaller_google_cloud_channel_v1_ListEntitlementChangesRequest,
        __Marshaller_google_cloud_channel_v1_ListEntitlementChangesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Channel.V1.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CloudChannelService</summary>
    [grpc::BindServiceMethod(typeof(CloudChannelService), "BindService")]
    public abstract partial class CloudChannelServiceBase
    {
      /// <summary>
      /// List [Customer][google.cloud.channel.v1.Customer]s.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [Customer][google.cloud.channel.v1.Customer]s, or an empty list if
      /// there are no customers.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListCustomersResponse> ListCustomers(global::Google.Cloud.Channel.V1.ListCustomersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the requested [Customer][google.cloud.channel.v1.Customer]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.Customer> GetCustomer(global::Google.Cloud.Channel.V1.GetCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Confirms the existence of Cloud Identity accounts based on the domain and
      /// if the Cloud Identity accounts are owned by the reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INVALID_VALUE: Invalid domain value in the request.
      ///
      /// Return value:
      /// A list of
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources for the domain (may be empty)
      ///
      /// Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if
      /// no
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources match the domain.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse> CheckCloudIdentityAccountsExist(global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new [Customer][google.cloud.channel.v1.Customer] resource under
      /// the reseller or distributor account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to create a customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Domain field value doesn't match the primary email domain.
      ///
      /// Return value:
      /// The newly created [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.Customer> CreateCustomer(global::Google.Cloud.Channel.V1.CreateCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing [Customer][google.cloud.channel.v1.Customer] resource
      /// for the reseller or distributor.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      ///
      /// Return value:
      /// The updated [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.Customer> UpdateCustomer(global::Google.Cloud.Channel.V1.UpdateCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the given [Customer][google.cloud.channel.v1.Customer] permanently.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The customer has existing entitlements.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCustomer(global::Google.Cloud.Channel.V1.DeleteCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports a [Customer][google.cloud.channel.v1.Customer] from the Cloud
      /// Identity associated with the provided Cloud Identity ID or domain before a
      /// TransferEntitlements call. If a linked Customer already exists and
      /// overwrite_if_exists is true, it will update that Customer's data.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to import the customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * NOT_FOUND: Cloud Identity doesn't exist or was deleted.
      /// * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
      /// expired or invalid.
      /// * ALREADY_EXISTS: A customer already exists and has conflicting critical
      /// fields. Requires an overwrite.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.Customer> ImportCustomer(global::Google.Cloud.Channel.V1.ImportCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a Cloud Identity for the given customer using the customer's
      /// information, or the information provided here.
      ///
      /// Possible error codes:
      ///
      /// *  PERMISSION_DENIED:
      ///      * The customer doesn't belong to the reseller.
      ///      * You are not authorized to provision cloud identity id. See
      ///      https://support.google.com/channelservices/answer/9759265
      /// *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// *  NOT_FOUND: The customer was not found.
      /// *  ALREADY_EXISTS: The customer's primary email already exists. Retry
      ///    after changing the customer's primary contact email.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata contains an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ProvisionCloudIdentity(global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists [Entitlement][google.cloud.channel.v1.Entitlement]s belonging to a
      /// customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [Entitlement][google.cloud.channel.v1.Entitlement]s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListEntitlementsResponse> ListEntitlements(global::Google.Cloud.Channel.V1.ListEntitlementsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List [TransferableSku][google.cloud.channel.v1.TransferableSku]s of a
      /// customer based on the Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method to list the entitlements information of an
      /// unowned customer. You should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The supplied auth token is invalid.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [TransferableSku][google.cloud.channel.v1.TransferableSku].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListTransferableSkusResponse> ListTransferableSkus(global::Google.Cloud.Channel.V1.ListTransferableSkusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List [TransferableOffer][google.cloud.channel.v1.TransferableOffer]s of a
      /// customer based on Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method when a reseller gets the entitlement information of an
      /// unowned customer. The reseller should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The customer provided incorrect reseller information when generating
      ///     auth token.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [TransferableOffer][google.cloud.channel.v1.TransferableOffer] for
      /// the given customer and SKU.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListTransferableOffersResponse> ListTransferableOffers(global::Google.Cloud.Channel.V1.ListTransferableOffersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the requested [Entitlement][google.cloud.channel.v1.Entitlement]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer entitlement was not found.
      ///
      /// Return value:
      /// The requested [Entitlement][google.cloud.channel.v1.Entitlement] resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.Entitlement> GetEntitlement(global::Google.Cloud.Channel.V1.GetEntitlementRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an entitlement for a customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * There is already a customer entitlement for a SKU from the same
      ///     product family.
      /// * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
      /// Google Channel support for further troubleshooting.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS:
      ///     * The SKU was already purchased for the customer.
      ///     * The customer's primary email already exists. Retry
      ///     after changing the customer's primary contact email.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The domain required for purchasing a SKU has not been verified.
      ///     * A pre-requisite SKU required to purchase an Add-On SKU is missing.
      ///     For example, Google Workspace Business Starter is required to purchase
      ///     Vault or Drive.
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateEntitlement(global::Google.Cloud.Channel.V1.CreateEntitlementRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change parameters of the entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// For example, the number of seats being changed is greater than the allowed
      /// number of max seats, or decreasing seats for a commitment based plan.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ChangeParameters(global::Google.Cloud.Channel.V1.ChangeParametersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the renewal settings for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a
      /// commitment plan. Can't enable or disable renewals for non-commitment plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      ///   Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ChangeRenewalSettings(global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the Offer for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Offer or Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ChangeOffer(global::Google.Cloud.Channel.V1.ChangeOfferRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts paid service for a trial entitlement.
      ///
      /// Starts paid service for a trial entitlement immediately. This method is
      /// only applicable if a plan is set up for a trial entitlement but has some
      /// trial days remaining.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
      /// entitlement on trial plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StartPaidService(global::Google.Cloud.Channel.V1.StartPaidServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Suspends a previously fulfilled entitlement.
      ///
      /// An entitlement suspension is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_ACTIVE: Entitlement is not active.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> SuspendEntitlement(global::Google.Cloud.Channel.V1.SuspendEntitlementRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Cancels a previously fulfilled entitlement.
      ///
      /// An entitlement cancellation is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * FAILED_PRECONDITION: There are Google Cloud projects linked to the
      /// Google Cloud entitlement's Cloud Billing subaccount.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace
      /// add-ons, or entitlements for Google Cloud's development platform.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CancelEntitlement(global::Google.Cloud.Channel.V1.CancelEntitlementRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Activates a previously suspended entitlement. Entitlements suspended for
      /// pending ToS acceptance can't be activated using this method.
      ///
      /// An entitlement activation is a long-running operation and it updates
      /// the state of the customer entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
      /// suspensions and entitlements that have accepted the TOS.
      /// * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE
      /// state.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ActivateEntitlement(global::Google.Cloud.Channel.V1.ActivateEntitlementRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Transfers customer entitlements to new reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      ///     * Specify all transferring entitlements.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> TransferEntitlements(global::Google.Cloud.Channel.V1.TransferEntitlementsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Transfers customer entitlements from their current reseller to Google.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> TransferEntitlementsToGoogle(global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s
      /// belonging to a distributor. You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// The list of the distributor account's
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resources.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse> ListChannelPartnerLinks(global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the requested
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: ChannelPartnerLink resource not found because of an
      /// invalid channel partner link name.
      ///
      /// Return value:
      /// The [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ChannelPartnerLink> GetChannelPartnerLink(global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Initiates a channel partner link between a distributor and a reseller, or
      /// between resellers in an n-tier reseller channel.
      /// Invited partners need to follow the invite_link_uri provided in the
      /// response to accept. After accepting the invitation, a link is set up
      /// between the two parties.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already
      /// exists.
      /// * NOT_FOUND: No Cloud Identity customer exists for provided domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The new [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ChannelPartnerLink> CreateChannelPartnerLink(global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a channel partner link. Distributors call this method to change a
      /// link's status. For example, to suspend a partner link.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Link state cannot change from invited to active or suspended.
      ///     * Cannot send reseller_cloud_identity_id, invite_url, or name in update
      ///     mask.
      /// * NOT_FOUND: ChannelPartnerLink resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The updated
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ChannelPartnerLink> UpdateChannelPartnerLink(global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> GetCustomerRepricingConfig(global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Customer ID
      /// * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement]
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [CustomerRepricingConfig.update_time][google.cloud.channel.v1.CustomerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse> ListCustomerRepricingConfigs(global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. You can only create configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [CustomerRepricingConfig.repricing_config][google.cloud.channel.v1.CustomerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement].
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> CreateCustomerRepricingConfig(global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. This method overwrites the existing
      /// CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> UpdateCustomerRepricingConfig(global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the given
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCustomerRepricingConfig(global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about how a Distributor modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> GetChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Channel Partner ID
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [ChannelPartnerRepricingConfig.update_time][google.cloud.channel.v1.ChannelPartnerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse> ListChannelPartnerRepricingConfigs(global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. You can only create
      /// configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any ChannelPartner or
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [ChannelPartnerRepricingConfig.repricing_config][google.cloud.channel.v1.ChannelPartnerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> CreateChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. This method overwrites
      /// the existing CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> UpdateChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the given
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the Rebilling supported SKU groups the account is authorized to
      /// sell.
      /// Reference: https://cloud.google.com/skus/sku-groups
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different, or the account doesn't exist.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the [SkuGroup][google.cloud.channel.v1.SkuGroup] resources.
      /// The data for each resource is displayed in the alphabetical order of SKU
      /// group display name.
      /// The data for each resource is displayed in the ascending order of
      /// [SkuGroup.display_name][google.cloud.channel.v1.SkuGroup.display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListSkuGroupsResponse> ListSkuGroups(global::Google.Cloud.Channel.V1.ListSkuGroupsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the Billable SKUs in a given SKU group.
      ///
      /// Possible error codes:
      /// PERMISSION_DENIED: If the account making the request and the account
      /// being queried for are different, or the account doesn't exist.
      /// INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request.
      /// INTERNAL: Any non-user error related to technical issue in the
      /// backend. In this case, contact cloud channel support.
      ///
      /// Return Value:
      /// If successful, the [BillableSku][google.cloud.channel.v1.BillableSku]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * [BillableSku.service_display_name][google.cloud.channel.v1.BillableSku.service_display_name]
      /// * [BillableSku.sku_display_name][google.cloud.channel.v1.BillableSku.sku_display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse> ListSkuGroupBillableSkus(global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the requested [Offer][google.cloud.channel.v1.Offer] resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The entitlement doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement or offer was not found.
      ///
      /// Return value:
      /// The [Offer][google.cloud.channel.v1.Offer] resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.Offer> LookupOffer(global::Google.Cloud.Channel.V1.LookupOfferRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the Products the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListProductsResponse> ListProducts(global::Google.Cloud.Channel.V1.ListProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the SKUs for a product the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListSkusResponse> ListSkus(global::Google.Cloud.Channel.V1.ListSkusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the Offers the reseller can sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListOffersResponse> ListOffers(global::Google.Cloud.Channel.V1.ListOffersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the following:
      ///
      /// * SKUs that you can purchase for a customer
      /// * SKUs that you can upgrade or downgrade for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse> ListPurchasableSkus(global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the following:
      ///
      /// * Offers that you can purchase for a customer.
      /// * Offers that you can change for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse> ListPurchasableOffers(global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the billing accounts that are eligible to purchase particular SKUs
      /// for a given customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// Based on the provided list of SKUs, returns a list of SKU groups that must
      /// be purchased using the same billing account and the billing accounts
      /// eligible to purchase each SKU group.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse> QueryEligibleBillingAccounts(global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Registers a service account with subscriber privileges on the Cloud Pub/Sub
      /// topic for this Channel Services account. After you create a
      /// subscriber, you get the events through
      /// [SubscriberEvent][google.cloud.channel.v1.SubscriberEvent]
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name with the registered service email address.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.RegisterSubscriberResponse> RegisterSubscriber(global::Google.Cloud.Channel.V1.RegisterSubscriberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unregisters a service account with subscriber privileges on the Cloud
      /// Pub/Sub topic created for this Channel Services account. If there are no
      /// service accounts left with subscriber privileges, this deletes the topic.
      /// You can call ListSubscribers to check for these accounts.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name that unregistered the service email address.
      /// Returns a success response if the service email address wasn't registered
      /// with the topic.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse> UnregisterSubscriber(global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists service accounts with subscriber privileges on the Cloud Pub/Sub
      /// topic created for this Channel Services account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// A list of service email addresses.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListSubscribersResponse> ListSubscribers(global::Google.Cloud.Channel.V1.ListSubscribersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List entitlement history.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different.
      /// * INVALID_ARGUMENT: Missing or invalid required fields in the request.
      /// * NOT_FOUND: The parent resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      /// * INTERNAL: Any non-user error related to a technical issue in the backend.
      /// In this case, contact CloudChannel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// In this case, contact Cloud Channel support.
      ///
      /// Return value:
      /// List of [EntitlementChange][google.cloud.channel.v1.EntitlementChange]s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse> ListEntitlementChanges(global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CloudChannelService</summary>
    public partial class CloudChannelServiceClient : grpc::ClientBase<CloudChannelServiceClient>
    {
      /// <summary>Creates a new client for CloudChannelService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudChannelServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CloudChannelService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudChannelServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudChannelServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudChannelServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// List [Customer][google.cloud.channel.v1.Customer]s.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [Customer][google.cloud.channel.v1.Customer]s, or an empty list if
      /// there are no customers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListCustomersResponse ListCustomers(global::Google.Cloud.Channel.V1.ListCustomersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List [Customer][google.cloud.channel.v1.Customer]s.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [Customer][google.cloud.channel.v1.Customer]s, or an empty list if
      /// there are no customers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListCustomersResponse ListCustomers(global::Google.Cloud.Channel.V1.ListCustomersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCustomers, null, options, request);
      }
      /// <summary>
      /// List [Customer][google.cloud.channel.v1.Customer]s.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [Customer][google.cloud.channel.v1.Customer]s, or an empty list if
      /// there are no customers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListCustomersResponse> ListCustomersAsync(global::Google.Cloud.Channel.V1.ListCustomersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List [Customer][google.cloud.channel.v1.Customer]s.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [Customer][google.cloud.channel.v1.Customer]s, or an empty list if
      /// there are no customers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListCustomersResponse> ListCustomersAsync(global::Google.Cloud.Channel.V1.ListCustomersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCustomers, null, options, request);
      }
      /// <summary>
      /// Returns the requested [Customer][google.cloud.channel.v1.Customer]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Customer GetCustomer(global::Google.Cloud.Channel.V1.GetCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested [Customer][google.cloud.channel.v1.Customer]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Customer GetCustomer(global::Google.Cloud.Channel.V1.GetCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomer, null, options, request);
      }
      /// <summary>
      /// Returns the requested [Customer][google.cloud.channel.v1.Customer]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Customer> GetCustomerAsync(global::Google.Cloud.Channel.V1.GetCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested [Customer][google.cloud.channel.v1.Customer]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Customer> GetCustomerAsync(global::Google.Cloud.Channel.V1.GetCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomer, null, options, request);
      }
      /// <summary>
      /// Confirms the existence of Cloud Identity accounts based on the domain and
      /// if the Cloud Identity accounts are owned by the reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INVALID_VALUE: Invalid domain value in the request.
      ///
      /// Return value:
      /// A list of
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources for the domain (may be empty)
      ///
      /// Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if
      /// no
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources match the domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse CheckCloudIdentityAccountsExist(global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckCloudIdentityAccountsExist(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Confirms the existence of Cloud Identity accounts based on the domain and
      /// if the Cloud Identity accounts are owned by the reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INVALID_VALUE: Invalid domain value in the request.
      ///
      /// Return value:
      /// A list of
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources for the domain (may be empty)
      ///
      /// Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if
      /// no
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources match the domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse CheckCloudIdentityAccountsExist(global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckCloudIdentityAccountsExist, null, options, request);
      }
      /// <summary>
      /// Confirms the existence of Cloud Identity accounts based on the domain and
      /// if the Cloud Identity accounts are owned by the reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INVALID_VALUE: Invalid domain value in the request.
      ///
      /// Return value:
      /// A list of
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources for the domain (may be empty)
      ///
      /// Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if
      /// no
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources match the domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse> CheckCloudIdentityAccountsExistAsync(global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckCloudIdentityAccountsExistAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Confirms the existence of Cloud Identity accounts based on the domain and
      /// if the Cloud Identity accounts are owned by the reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INVALID_VALUE: Invalid domain value in the request.
      ///
      /// Return value:
      /// A list of
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources for the domain (may be empty)
      ///
      /// Note: in the v1alpha1 version of the API, a NOT_FOUND error returns if
      /// no
      /// [CloudIdentityCustomerAccount][google.cloud.channel.v1.CloudIdentityCustomerAccount]
      /// resources match the domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse> CheckCloudIdentityAccountsExistAsync(global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckCloudIdentityAccountsExist, null, options, request);
      }
      /// <summary>
      /// Creates a new [Customer][google.cloud.channel.v1.Customer] resource under
      /// the reseller or distributor account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to create a customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Domain field value doesn't match the primary email domain.
      ///
      /// Return value:
      /// The newly created [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Customer CreateCustomer(global::Google.Cloud.Channel.V1.CreateCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new [Customer][google.cloud.channel.v1.Customer] resource under
      /// the reseller or distributor account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to create a customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Domain field value doesn't match the primary email domain.
      ///
      /// Return value:
      /// The newly created [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Customer CreateCustomer(global::Google.Cloud.Channel.V1.CreateCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomer, null, options, request);
      }
      /// <summary>
      /// Creates a new [Customer][google.cloud.channel.v1.Customer] resource under
      /// the reseller or distributor account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to create a customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Domain field value doesn't match the primary email domain.
      ///
      /// Return value:
      /// The newly created [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Customer> CreateCustomerAsync(global::Google.Cloud.Channel.V1.CreateCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new [Customer][google.cloud.channel.v1.Customer] resource under
      /// the reseller or distributor account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to create a customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Domain field value doesn't match the primary email domain.
      ///
      /// Return value:
      /// The newly created [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Customer> CreateCustomerAsync(global::Google.Cloud.Channel.V1.CreateCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomer, null, options, request);
      }
      /// <summary>
      /// Updates an existing [Customer][google.cloud.channel.v1.Customer] resource
      /// for the reseller or distributor.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      ///
      /// Return value:
      /// The updated [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Customer UpdateCustomer(global::Google.Cloud.Channel.V1.UpdateCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing [Customer][google.cloud.channel.v1.Customer] resource
      /// for the reseller or distributor.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      ///
      /// Return value:
      /// The updated [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Customer UpdateCustomer(global::Google.Cloud.Channel.V1.UpdateCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomer, null, options, request);
      }
      /// <summary>
      /// Updates an existing [Customer][google.cloud.channel.v1.Customer] resource
      /// for the reseller or distributor.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      ///
      /// Return value:
      /// The updated [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Customer> UpdateCustomerAsync(global::Google.Cloud.Channel.V1.UpdateCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing [Customer][google.cloud.channel.v1.Customer] resource
      /// for the reseller or distributor.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      ///
      /// Return value:
      /// The updated [Customer][google.cloud.channel.v1.Customer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Customer> UpdateCustomerAsync(global::Google.Cloud.Channel.V1.UpdateCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomer, null, options, request);
      }
      /// <summary>
      /// Deletes the given [Customer][google.cloud.channel.v1.Customer] permanently.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The customer has existing entitlements.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCustomer(global::Google.Cloud.Channel.V1.DeleteCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the given [Customer][google.cloud.channel.v1.Customer] permanently.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The customer has existing entitlements.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCustomer(global::Google.Cloud.Channel.V1.DeleteCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCustomer, null, options, request);
      }
      /// <summary>
      /// Deletes the given [Customer][google.cloud.channel.v1.Customer] permanently.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The customer has existing entitlements.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCustomerAsync(global::Google.Cloud.Channel.V1.DeleteCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the given [Customer][google.cloud.channel.v1.Customer] permanently.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The customer has existing entitlements.
      /// * NOT_FOUND: No [Customer][google.cloud.channel.v1.Customer] resource found
      /// for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCustomerAsync(global::Google.Cloud.Channel.V1.DeleteCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCustomer, null, options, request);
      }
      /// <summary>
      /// Imports a [Customer][google.cloud.channel.v1.Customer] from the Cloud
      /// Identity associated with the provided Cloud Identity ID or domain before a
      /// TransferEntitlements call. If a linked Customer already exists and
      /// overwrite_if_exists is true, it will update that Customer's data.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to import the customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * NOT_FOUND: Cloud Identity doesn't exist or was deleted.
      /// * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
      /// expired or invalid.
      /// * ALREADY_EXISTS: A customer already exists and has conflicting critical
      /// fields. Requires an overwrite.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Customer ImportCustomer(global::Google.Cloud.Channel.V1.ImportCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports a [Customer][google.cloud.channel.v1.Customer] from the Cloud
      /// Identity associated with the provided Cloud Identity ID or domain before a
      /// TransferEntitlements call. If a linked Customer already exists and
      /// overwrite_if_exists is true, it will update that Customer's data.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to import the customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * NOT_FOUND: Cloud Identity doesn't exist or was deleted.
      /// * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
      /// expired or invalid.
      /// * ALREADY_EXISTS: A customer already exists and has conflicting critical
      /// fields. Requires an overwrite.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Customer ImportCustomer(global::Google.Cloud.Channel.V1.ImportCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportCustomer, null, options, request);
      }
      /// <summary>
      /// Imports a [Customer][google.cloud.channel.v1.Customer] from the Cloud
      /// Identity associated with the provided Cloud Identity ID or domain before a
      /// TransferEntitlements call. If a linked Customer already exists and
      /// overwrite_if_exists is true, it will update that Customer's data.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to import the customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * NOT_FOUND: Cloud Identity doesn't exist or was deleted.
      /// * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
      /// expired or invalid.
      /// * ALREADY_EXISTS: A customer already exists and has conflicting critical
      /// fields. Requires an overwrite.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Customer> ImportCustomerAsync(global::Google.Cloud.Channel.V1.ImportCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports a [Customer][google.cloud.channel.v1.Customer] from the Cloud
      /// Identity associated with the provided Cloud Identity ID or domain before a
      /// TransferEntitlements call. If a linked Customer already exists and
      /// overwrite_if_exists is true, it will update that Customer's data.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The reseller account making the request is different from the
      ///     reseller account in the API request.
      ///     * You are not authorized to import the customer. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * NOT_FOUND: Cloud Identity doesn't exist or was deleted.
      /// * INVALID_ARGUMENT: Required parameters are missing, or the auth_token is
      /// expired or invalid.
      /// * ALREADY_EXISTS: A customer already exists and has conflicting critical
      /// fields. Requires an overwrite.
      ///
      /// Return value:
      /// The [Customer][google.cloud.channel.v1.Customer].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Customer> ImportCustomerAsync(global::Google.Cloud.Channel.V1.ImportCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportCustomer, null, options, request);
      }
      /// <summary>
      /// Creates a Cloud Identity for the given customer using the customer's
      /// information, or the information provided here.
      ///
      /// Possible error codes:
      ///
      /// *  PERMISSION_DENIED:
      ///      * The customer doesn't belong to the reseller.
      ///      * You are not authorized to provision cloud identity id. See
      ///      https://support.google.com/channelservices/answer/9759265
      /// *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// *  NOT_FOUND: The customer was not found.
      /// *  ALREADY_EXISTS: The customer's primary email already exists. Retry
      ///    after changing the customer's primary contact email.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata contains an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ProvisionCloudIdentity(global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionCloudIdentity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Cloud Identity for the given customer using the customer's
      /// information, or the information provided here.
      ///
      /// Possible error codes:
      ///
      /// *  PERMISSION_DENIED:
      ///      * The customer doesn't belong to the reseller.
      ///      * You are not authorized to provision cloud identity id. See
      ///      https://support.google.com/channelservices/answer/9759265
      /// *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// *  NOT_FOUND: The customer was not found.
      /// *  ALREADY_EXISTS: The customer's primary email already exists. Retry
      ///    after changing the customer's primary contact email.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata contains an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ProvisionCloudIdentity(global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ProvisionCloudIdentity, null, options, request);
      }
      /// <summary>
      /// Creates a Cloud Identity for the given customer using the customer's
      /// information, or the information provided here.
      ///
      /// Possible error codes:
      ///
      /// *  PERMISSION_DENIED:
      ///      * The customer doesn't belong to the reseller.
      ///      * You are not authorized to provision cloud identity id. See
      ///      https://support.google.com/channelservices/answer/9759265
      /// *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// *  NOT_FOUND: The customer was not found.
      /// *  ALREADY_EXISTS: The customer's primary email already exists. Retry
      ///    after changing the customer's primary contact email.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata contains an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ProvisionCloudIdentityAsync(global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionCloudIdentityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Cloud Identity for the given customer using the customer's
      /// information, or the information provided here.
      ///
      /// Possible error codes:
      ///
      /// *  PERMISSION_DENIED:
      ///      * The customer doesn't belong to the reseller.
      ///      * You are not authorized to provision cloud identity id. See
      ///      https://support.google.com/channelservices/answer/9759265
      /// *  INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// *  NOT_FOUND: The customer was not found.
      /// *  ALREADY_EXISTS: The customer's primary email already exists. Retry
      ///    after changing the customer's primary contact email.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata contains an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ProvisionCloudIdentityAsync(global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ProvisionCloudIdentity, null, options, request);
      }
      /// <summary>
      /// Lists [Entitlement][google.cloud.channel.v1.Entitlement]s belonging to a
      /// customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [Entitlement][google.cloud.channel.v1.Entitlement]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListEntitlementsResponse ListEntitlements(global::Google.Cloud.Channel.V1.ListEntitlementsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntitlements(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists [Entitlement][google.cloud.channel.v1.Entitlement]s belonging to a
      /// customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [Entitlement][google.cloud.channel.v1.Entitlement]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListEntitlementsResponse ListEntitlements(global::Google.Cloud.Channel.V1.ListEntitlementsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEntitlements, null, options, request);
      }
      /// <summary>
      /// Lists [Entitlement][google.cloud.channel.v1.Entitlement]s belonging to a
      /// customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [Entitlement][google.cloud.channel.v1.Entitlement]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListEntitlementsResponse> ListEntitlementsAsync(global::Google.Cloud.Channel.V1.ListEntitlementsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntitlementsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists [Entitlement][google.cloud.channel.v1.Entitlement]s belonging to a
      /// customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [Entitlement][google.cloud.channel.v1.Entitlement]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListEntitlementsResponse> ListEntitlementsAsync(global::Google.Cloud.Channel.V1.ListEntitlementsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEntitlements, null, options, request);
      }
      /// <summary>
      /// List [TransferableSku][google.cloud.channel.v1.TransferableSku]s of a
      /// customer based on the Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method to list the entitlements information of an
      /// unowned customer. You should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The supplied auth token is invalid.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [TransferableSku][google.cloud.channel.v1.TransferableSku].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListTransferableSkusResponse ListTransferableSkus(global::Google.Cloud.Channel.V1.ListTransferableSkusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferableSkus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List [TransferableSku][google.cloud.channel.v1.TransferableSku]s of a
      /// customer based on the Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method to list the entitlements information of an
      /// unowned customer. You should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The supplied auth token is invalid.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [TransferableSku][google.cloud.channel.v1.TransferableSku].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListTransferableSkusResponse ListTransferableSkus(global::Google.Cloud.Channel.V1.ListTransferableSkusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTransferableSkus, null, options, request);
      }
      /// <summary>
      /// List [TransferableSku][google.cloud.channel.v1.TransferableSku]s of a
      /// customer based on the Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method to list the entitlements information of an
      /// unowned customer. You should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The supplied auth token is invalid.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [TransferableSku][google.cloud.channel.v1.TransferableSku].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListTransferableSkusResponse> ListTransferableSkusAsync(global::Google.Cloud.Channel.V1.ListTransferableSkusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferableSkusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List [TransferableSku][google.cloud.channel.v1.TransferableSku]s of a
      /// customer based on the Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method to list the entitlements information of an
      /// unowned customer. You should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The supplied auth token is invalid.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// A list of the customer's
      /// [TransferableSku][google.cloud.channel.v1.TransferableSku].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListTransferableSkusResponse> ListTransferableSkusAsync(global::Google.Cloud.Channel.V1.ListTransferableSkusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTransferableSkus, null, options, request);
      }
      /// <summary>
      /// List [TransferableOffer][google.cloud.channel.v1.TransferableOffer]s of a
      /// customer based on Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method when a reseller gets the entitlement information of an
      /// unowned customer. The reseller should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The customer provided incorrect reseller information when generating
      ///     auth token.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [TransferableOffer][google.cloud.channel.v1.TransferableOffer] for
      /// the given customer and SKU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListTransferableOffersResponse ListTransferableOffers(global::Google.Cloud.Channel.V1.ListTransferableOffersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferableOffers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List [TransferableOffer][google.cloud.channel.v1.TransferableOffer]s of a
      /// customer based on Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method when a reseller gets the entitlement information of an
      /// unowned customer. The reseller should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The customer provided incorrect reseller information when generating
      ///     auth token.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [TransferableOffer][google.cloud.channel.v1.TransferableOffer] for
      /// the given customer and SKU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListTransferableOffersResponse ListTransferableOffers(global::Google.Cloud.Channel.V1.ListTransferableOffersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTransferableOffers, null, options, request);
      }
      /// <summary>
      /// List [TransferableOffer][google.cloud.channel.v1.TransferableOffer]s of a
      /// customer based on Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method when a reseller gets the entitlement information of an
      /// unowned customer. The reseller should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The customer provided incorrect reseller information when generating
      ///     auth token.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [TransferableOffer][google.cloud.channel.v1.TransferableOffer] for
      /// the given customer and SKU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListTransferableOffersResponse> ListTransferableOffersAsync(global::Google.Cloud.Channel.V1.ListTransferableOffersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferableOffersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List [TransferableOffer][google.cloud.channel.v1.TransferableOffer]s of a
      /// customer based on Cloud Identity ID or Customer Name in the request.
      ///
      /// Use this method when a reseller gets the entitlement information of an
      /// unowned customer. The reseller should provide the customer's
      /// Cloud Identity ID or Customer Name.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller and has no auth token.
      ///     * The customer provided incorrect reseller information when generating
      ///     auth token.
      ///     * The reseller account making the request is different
      ///     from the reseller account in the query.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// List of [TransferableOffer][google.cloud.channel.v1.TransferableOffer] for
      /// the given customer and SKU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListTransferableOffersResponse> ListTransferableOffersAsync(global::Google.Cloud.Channel.V1.ListTransferableOffersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTransferableOffers, null, options, request);
      }
      /// <summary>
      /// Returns the requested [Entitlement][google.cloud.channel.v1.Entitlement]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer entitlement was not found.
      ///
      /// Return value:
      /// The requested [Entitlement][google.cloud.channel.v1.Entitlement] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Entitlement GetEntitlement(global::Google.Cloud.Channel.V1.GetEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEntitlement(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested [Entitlement][google.cloud.channel.v1.Entitlement]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer entitlement was not found.
      ///
      /// Return value:
      /// The requested [Entitlement][google.cloud.channel.v1.Entitlement] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Entitlement GetEntitlement(global::Google.Cloud.Channel.V1.GetEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEntitlement, null, options, request);
      }
      /// <summary>
      /// Returns the requested [Entitlement][google.cloud.channel.v1.Entitlement]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer entitlement was not found.
      ///
      /// Return value:
      /// The requested [Entitlement][google.cloud.channel.v1.Entitlement] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Entitlement> GetEntitlementAsync(global::Google.Cloud.Channel.V1.GetEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEntitlementAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested [Entitlement][google.cloud.channel.v1.Entitlement]
      /// resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer entitlement was not found.
      ///
      /// Return value:
      /// The requested [Entitlement][google.cloud.channel.v1.Entitlement] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Entitlement> GetEntitlementAsync(global::Google.Cloud.Channel.V1.GetEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEntitlement, null, options, request);
      }
      /// <summary>
      /// Creates an entitlement for a customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * There is already a customer entitlement for a SKU from the same
      ///     product family.
      /// * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
      /// Google Channel support for further troubleshooting.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS:
      ///     * The SKU was already purchased for the customer.
      ///     * The customer's primary email already exists. Retry
      ///     after changing the customer's primary contact email.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The domain required for purchasing a SKU has not been verified.
      ///     * A pre-requisite SKU required to purchase an Add-On SKU is missing.
      ///     For example, Google Workspace Business Starter is required to purchase
      ///     Vault or Drive.
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateEntitlement(global::Google.Cloud.Channel.V1.CreateEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEntitlement(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an entitlement for a customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * There is already a customer entitlement for a SKU from the same
      ///     product family.
      /// * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
      /// Google Channel support for further troubleshooting.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS:
      ///     * The SKU was already purchased for the customer.
      ///     * The customer's primary email already exists. Retry
      ///     after changing the customer's primary contact email.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The domain required for purchasing a SKU has not been verified.
      ///     * A pre-requisite SKU required to purchase an Add-On SKU is missing.
      ///     For example, Google Workspace Business Starter is required to purchase
      ///     Vault or Drive.
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateEntitlement(global::Google.Cloud.Channel.V1.CreateEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEntitlement, null, options, request);
      }
      /// <summary>
      /// Creates an entitlement for a customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * There is already a customer entitlement for a SKU from the same
      ///     product family.
      /// * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
      /// Google Channel support for further troubleshooting.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS:
      ///     * The SKU was already purchased for the customer.
      ///     * The customer's primary email already exists. Retry
      ///     after changing the customer's primary contact email.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The domain required for purchasing a SKU has not been verified.
      ///     * A pre-requisite SKU required to purchase an Add-On SKU is missing.
      ///     For example, Google Workspace Business Starter is required to purchase
      ///     Vault or Drive.
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateEntitlementAsync(global::Google.Cloud.Channel.V1.CreateEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEntitlementAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an entitlement for a customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * There is already a customer entitlement for a SKU from the same
      ///     product family.
      /// * INVALID_VALUE: Make sure the OfferId is valid. If it is, contact
      /// Google Channel support for further troubleshooting.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS:
      ///     * The SKU was already purchased for the customer.
      ///     * The customer's primary email already exists. Retry
      ///     after changing the customer's primary contact email.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The domain required for purchasing a SKU has not been verified.
      ///     * A pre-requisite SKU required to purchase an Add-On SKU is missing.
      ///     For example, Google Workspace Business Starter is required to purchase
      ///     Vault or Drive.
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateEntitlementAsync(global::Google.Cloud.Channel.V1.CreateEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEntitlement, null, options, request);
      }
      /// <summary>
      /// Change parameters of the entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// For example, the number of seats being changed is greater than the allowed
      /// number of max seats, or decreasing seats for a commitment based plan.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ChangeParameters(global::Google.Cloud.Channel.V1.ChangeParametersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeParameters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change parameters of the entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// For example, the number of seats being changed is greater than the allowed
      /// number of max seats, or decreasing seats for a commitment based plan.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ChangeParameters(global::Google.Cloud.Channel.V1.ChangeParametersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeParameters, null, options, request);
      }
      /// <summary>
      /// Change parameters of the entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// For example, the number of seats being changed is greater than the allowed
      /// number of max seats, or decreasing seats for a commitment based plan.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ChangeParametersAsync(global::Google.Cloud.Channel.V1.ChangeParametersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeParametersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change parameters of the entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// For example, the number of seats being changed is greater than the allowed
      /// number of max seats, or decreasing seats for a commitment based plan.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ChangeParametersAsync(global::Google.Cloud.Channel.V1.ChangeParametersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeParameters, null, options, request);
      }
      /// <summary>
      /// Updates the renewal settings for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a
      /// commitment plan. Can't enable or disable renewals for non-commitment plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      ///   Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ChangeRenewalSettings(global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeRenewalSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the renewal settings for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a
      /// commitment plan. Can't enable or disable renewals for non-commitment plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      ///   Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ChangeRenewalSettings(global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeRenewalSettings, null, options, request);
      }
      /// <summary>
      /// Updates the renewal settings for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a
      /// commitment plan. Can't enable or disable renewals for non-commitment plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      ///   Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ChangeRenewalSettingsAsync(global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeRenewalSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the renewal settings for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_COMMITMENT_PLAN: Renewal Settings are only applicable for a
      /// commitment plan. Can't enable or disable renewals for non-commitment plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      ///   Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ChangeRenewalSettingsAsync(global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeRenewalSettings, null, options, request);
      }
      /// <summary>
      /// Updates the Offer for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Offer or Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ChangeOffer(global::Google.Cloud.Channel.V1.ChangeOfferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeOffer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the Offer for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Offer or Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ChangeOffer(global::Google.Cloud.Channel.V1.ChangeOfferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeOffer, null, options, request);
      }
      /// <summary>
      /// Updates the Offer for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Offer or Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ChangeOfferAsync(global::Google.Cloud.Channel.V1.ChangeOfferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeOfferAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the Offer for an existing customer entitlement.
      ///
      /// An entitlement update is a long-running operation and it updates the
      /// entitlement as a result of fulfillment.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Offer or Entitlement resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ChangeOfferAsync(global::Google.Cloud.Channel.V1.ChangeOfferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeOffer, null, options, request);
      }
      /// <summary>
      /// Starts paid service for a trial entitlement.
      ///
      /// Starts paid service for a trial entitlement immediately. This method is
      /// only applicable if a plan is set up for a trial entitlement but has some
      /// trial days remaining.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
      /// entitlement on trial plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartPaidService(global::Google.Cloud.Channel.V1.StartPaidServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartPaidService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts paid service for a trial entitlement.
      ///
      /// Starts paid service for a trial entitlement immediately. This method is
      /// only applicable if a plan is set up for a trial entitlement but has some
      /// trial days remaining.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
      /// entitlement on trial plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartPaidService(global::Google.Cloud.Channel.V1.StartPaidServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartPaidService, null, options, request);
      }
      /// <summary>
      /// Starts paid service for a trial entitlement.
      ///
      /// Starts paid service for a trial entitlement immediately. This method is
      /// only applicable if a plan is set up for a trial entitlement but has some
      /// trial days remaining.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
      /// entitlement on trial plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartPaidServiceAsync(global::Google.Cloud.Channel.V1.StartPaidServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartPaidServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts paid service for a trial entitlement.
      ///
      /// Starts paid service for a trial entitlement immediately. This method is
      /// only applicable if a plan is set up for a trial entitlement but has some
      /// trial days remaining.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * FAILED_PRECONDITION/NOT_IN_TRIAL: This method only works for
      /// entitlement on trial plans.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartPaidServiceAsync(global::Google.Cloud.Channel.V1.StartPaidServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartPaidService, null, options, request);
      }
      /// <summary>
      /// Suspends a previously fulfilled entitlement.
      ///
      /// An entitlement suspension is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_ACTIVE: Entitlement is not active.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SuspendEntitlement(global::Google.Cloud.Channel.V1.SuspendEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SuspendEntitlement(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Suspends a previously fulfilled entitlement.
      ///
      /// An entitlement suspension is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_ACTIVE: Entitlement is not active.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SuspendEntitlement(global::Google.Cloud.Channel.V1.SuspendEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SuspendEntitlement, null, options, request);
      }
      /// <summary>
      /// Suspends a previously fulfilled entitlement.
      ///
      /// An entitlement suspension is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_ACTIVE: Entitlement is not active.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SuspendEntitlementAsync(global::Google.Cloud.Channel.V1.SuspendEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SuspendEntitlementAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Suspends a previously fulfilled entitlement.
      ///
      /// An entitlement suspension is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * NOT_ACTIVE: Entitlement is not active.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SuspendEntitlementAsync(global::Google.Cloud.Channel.V1.SuspendEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SuspendEntitlement, null, options, request);
      }
      /// <summary>
      /// Cancels a previously fulfilled entitlement.
      ///
      /// An entitlement cancellation is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * FAILED_PRECONDITION: There are Google Cloud projects linked to the
      /// Google Cloud entitlement's Cloud Billing subaccount.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace
      /// add-ons, or entitlements for Google Cloud's development platform.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CancelEntitlement(global::Google.Cloud.Channel.V1.CancelEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelEntitlement(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels a previously fulfilled entitlement.
      ///
      /// An entitlement cancellation is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * FAILED_PRECONDITION: There are Google Cloud projects linked to the
      /// Google Cloud entitlement's Cloud Billing subaccount.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace
      /// add-ons, or entitlements for Google Cloud's development platform.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CancelEntitlement(global::Google.Cloud.Channel.V1.CancelEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelEntitlement, null, options, request);
      }
      /// <summary>
      /// Cancels a previously fulfilled entitlement.
      ///
      /// An entitlement cancellation is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * FAILED_PRECONDITION: There are Google Cloud projects linked to the
      /// Google Cloud entitlement's Cloud Billing subaccount.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace
      /// add-ons, or entitlements for Google Cloud's development platform.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CancelEntitlementAsync(global::Google.Cloud.Channel.V1.CancelEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelEntitlementAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels a previously fulfilled entitlement.
      ///
      /// An entitlement cancellation is a long-running operation.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * FAILED_PRECONDITION: There are Google Cloud projects linked to the
      /// Google Cloud entitlement's Cloud Billing subaccount.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * DELETION_TYPE_NOT_ALLOWED: Cancel is only allowed for Google Workspace
      /// add-ons, or entitlements for Google Cloud's development platform.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CancelEntitlementAsync(global::Google.Cloud.Channel.V1.CancelEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelEntitlement, null, options, request);
      }
      /// <summary>
      /// Activates a previously suspended entitlement. Entitlements suspended for
      /// pending ToS acceptance can't be activated using this method.
      ///
      /// An entitlement activation is a long-running operation and it updates
      /// the state of the customer entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
      /// suspensions and entitlements that have accepted the TOS.
      /// * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE
      /// state.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ActivateEntitlement(global::Google.Cloud.Channel.V1.ActivateEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActivateEntitlement(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Activates a previously suspended entitlement. Entitlements suspended for
      /// pending ToS acceptance can't be activated using this method.
      ///
      /// An entitlement activation is a long-running operation and it updates
      /// the state of the customer entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
      /// suspensions and entitlements that have accepted the TOS.
      /// * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE
      /// state.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ActivateEntitlement(global::Google.Cloud.Channel.V1.ActivateEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ActivateEntitlement, null, options, request);
      }
      /// <summary>
      /// Activates a previously suspended entitlement. Entitlements suspended for
      /// pending ToS acceptance can't be activated using this method.
      ///
      /// An entitlement activation is a long-running operation and it updates
      /// the state of the customer entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
      /// suspensions and entitlements that have accepted the TOS.
      /// * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE
      /// state.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ActivateEntitlementAsync(global::Google.Cloud.Channel.V1.ActivateEntitlementRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActivateEntitlementAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Activates a previously suspended entitlement. Entitlements suspended for
      /// pending ToS acceptance can't be activated using this method.
      ///
      /// An entitlement activation is a long-running operation and it updates
      /// the state of the customer entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement resource not found.
      /// * SUSPENSION_NOT_RESELLER_INITIATED: Can only activate reseller-initiated
      /// suspensions and entitlements that have accepted the TOS.
      /// * NOT_SUSPENDED: Can only activate suspended entitlements not in an ACTIVE
      /// state.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ActivateEntitlementAsync(global::Google.Cloud.Channel.V1.ActivateEntitlementRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ActivateEntitlement, null, options, request);
      }
      /// <summary>
      /// Transfers customer entitlements to new reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      ///     * Specify all transferring entitlements.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TransferEntitlements(global::Google.Cloud.Channel.V1.TransferEntitlementsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferEntitlements(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Transfers customer entitlements to new reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      ///     * Specify all transferring entitlements.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TransferEntitlements(global::Google.Cloud.Channel.V1.TransferEntitlementsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransferEntitlements, null, options, request);
      }
      /// <summary>
      /// Transfers customer entitlements to new reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      ///     * Specify all transferring entitlements.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TransferEntitlementsAsync(global::Google.Cloud.Channel.V1.TransferEntitlementsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferEntitlementsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Transfers customer entitlements to new reseller.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller.
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      ///     * Specify all transferring entitlements.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TransferEntitlementsAsync(global::Google.Cloud.Channel.V1.TransferEntitlementsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransferEntitlements, null, options, request);
      }
      /// <summary>
      /// Transfers customer entitlements from their current reseller to Google.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TransferEntitlementsToGoogle(global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferEntitlementsToGoogle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Transfers customer entitlements from their current reseller to Google.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TransferEntitlementsToGoogle(global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransferEntitlementsToGoogle, null, options, request);
      }
      /// <summary>
      /// Transfers customer entitlements from their current reseller to Google.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TransferEntitlementsToGoogleAsync(global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferEntitlementsToGoogleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Transfers customer entitlements from their current reseller to Google.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The customer or offer resource was not found.
      /// * ALREADY_EXISTS: The SKU was already transferred for the customer.
      /// * CONDITION_NOT_MET or FAILED_PRECONDITION:
      ///     * The SKU requires domain verification to transfer, but the domain is
      ///     not verified.
      ///     * An Add-On SKU (example, Vault or Drive) is missing the
      ///     pre-requisite SKU (example, G Suite Basic).
      ///     * (Developer accounts only) Reseller and resold domain must meet the
      ///     following naming requirements:
      ///         * Domain names must start with goog-test.
      ///         * Domain names must include the reseller domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The ID of a long-running operation.
      ///
      /// To get the results of the operation, call the GetOperation method of
      /// CloudChannelOperationsService. The response will contain
      /// google.protobuf.Empty on success. The Operation metadata will contain an
      /// instance of [OperationMetadata][google.cloud.channel.v1.OperationMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TransferEntitlementsToGoogleAsync(global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransferEntitlementsToGoogle, null, options, request);
      }
      /// <summary>
      /// List [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s
      /// belonging to a distributor. You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// The list of the distributor account's
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resources.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse ListChannelPartnerLinks(global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListChannelPartnerLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s
      /// belonging to a distributor. You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// The list of the distributor account's
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resources.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse ListChannelPartnerLinks(global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListChannelPartnerLinks, null, options, request);
      }
      /// <summary>
      /// List [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s
      /// belonging to a distributor. You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// The list of the distributor account's
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resources.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse> ListChannelPartnerLinksAsync(global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListChannelPartnerLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]s
      /// belonging to a distributor. You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// The list of the distributor account's
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resources.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse> ListChannelPartnerLinksAsync(global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListChannelPartnerLinks, null, options, request);
      }
      /// <summary>
      /// Returns the requested
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: ChannelPartnerLink resource not found because of an
      /// invalid channel partner link name.
      ///
      /// Return value:
      /// The [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerLink GetChannelPartnerLink(global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelPartnerLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: ChannelPartnerLink resource not found because of an
      /// invalid channel partner link name.
      ///
      /// Return value:
      /// The [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerLink GetChannelPartnerLink(global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetChannelPartnerLink, null, options, request);
      }
      /// <summary>
      /// Returns the requested
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: ChannelPartnerLink resource not found because of an
      /// invalid channel partner link name.
      ///
      /// Return value:
      /// The [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerLink> GetChannelPartnerLinkAsync(global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelPartnerLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: ChannelPartnerLink resource not found because of an
      /// invalid channel partner link name.
      ///
      /// Return value:
      /// The [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerLink> GetChannelPartnerLinkAsync(global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetChannelPartnerLink, null, options, request);
      }
      /// <summary>
      /// Initiates a channel partner link between a distributor and a reseller, or
      /// between resellers in an n-tier reseller channel.
      /// Invited partners need to follow the invite_link_uri provided in the
      /// response to accept. After accepting the invitation, a link is set up
      /// between the two parties.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already
      /// exists.
      /// * NOT_FOUND: No Cloud Identity customer exists for provided domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The new [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerLink CreateChannelPartnerLink(global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateChannelPartnerLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates a channel partner link between a distributor and a reseller, or
      /// between resellers in an n-tier reseller channel.
      /// Invited partners need to follow the invite_link_uri provided in the
      /// response to accept. After accepting the invitation, a link is set up
      /// between the two parties.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already
      /// exists.
      /// * NOT_FOUND: No Cloud Identity customer exists for provided domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The new [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerLink CreateChannelPartnerLink(global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateChannelPartnerLink, null, options, request);
      }
      /// <summary>
      /// Initiates a channel partner link between a distributor and a reseller, or
      /// between resellers in an n-tier reseller channel.
      /// Invited partners need to follow the invite_link_uri provided in the
      /// response to accept. After accepting the invitation, a link is set up
      /// between the two parties.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already
      /// exists.
      /// * NOT_FOUND: No Cloud Identity customer exists for provided domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The new [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerLink> CreateChannelPartnerLinkAsync(global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateChannelPartnerLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Initiates a channel partner link between a distributor and a reseller, or
      /// between resellers in an n-tier reseller channel.
      /// Invited partners need to follow the invite_link_uri provided in the
      /// response to accept. After accepting the invitation, a link is set up
      /// between the two parties.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * ALREADY_EXISTS: The ChannelPartnerLink sent in the request already
      /// exists.
      /// * NOT_FOUND: No Cloud Identity customer exists for provided domain.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The new [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink]
      /// resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerLink> CreateChannelPartnerLinkAsync(global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateChannelPartnerLink, null, options, request);
      }
      /// <summary>
      /// Updates a channel partner link. Distributors call this method to change a
      /// link's status. For example, to suspend a partner link.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Link state cannot change from invited to active or suspended.
      ///     * Cannot send reseller_cloud_identity_id, invite_url, or name in update
      ///     mask.
      /// * NOT_FOUND: ChannelPartnerLink resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The updated
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerLink UpdateChannelPartnerLink(global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateChannelPartnerLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a channel partner link. Distributors call this method to change a
      /// link's status. For example, to suspend a partner link.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Link state cannot change from invited to active or suspended.
      ///     * Cannot send reseller_cloud_identity_id, invite_url, or name in update
      ///     mask.
      /// * NOT_FOUND: ChannelPartnerLink resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The updated
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerLink UpdateChannelPartnerLink(global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateChannelPartnerLink, null, options, request);
      }
      /// <summary>
      /// Updates a channel partner link. Distributors call this method to change a
      /// link's status. For example, to suspend a partner link.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Link state cannot change from invited to active or suspended.
      ///     * Cannot send reseller_cloud_identity_id, invite_url, or name in update
      ///     mask.
      /// * NOT_FOUND: ChannelPartnerLink resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The updated
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerLink> UpdateChannelPartnerLinkAsync(global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateChannelPartnerLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a channel partner link. Distributors call this method to change a
      /// link's status. For example, to suspend a partner link.
      /// You must be a distributor to call this method.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request is different
      /// from the reseller account in the API request.
      /// * INVALID_ARGUMENT:
      ///     * Required request parameters are missing or invalid.
      ///     * Link state cannot change from invited to active or suspended.
      ///     * Cannot send reseller_cloud_identity_id, invite_url, or name in update
      ///     mask.
      /// * NOT_FOUND: ChannelPartnerLink resource not found.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The updated
      /// [ChannelPartnerLink][google.cloud.channel.v1.ChannelPartnerLink] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerLink> UpdateChannelPartnerLinkAsync(global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateChannelPartnerLink, null, options, request);
      }
      /// <summary>
      /// Gets information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.CustomerRepricingConfig GetCustomerRepricingConfig(global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomerRepricingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.CustomerRepricingConfig GetCustomerRepricingConfig(global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Gets information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> GetCustomerRepricingConfigAsync(global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomerRepricingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> GetCustomerRepricingConfigAsync(global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Customer ID
      /// * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement]
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [CustomerRepricingConfig.update_time][google.cloud.channel.v1.CustomerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse ListCustomerRepricingConfigs(global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomerRepricingConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Customer ID
      /// * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement]
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [CustomerRepricingConfig.update_time][google.cloud.channel.v1.CustomerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse ListCustomerRepricingConfigs(global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCustomerRepricingConfigs, null, options, request);
      }
      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Customer ID
      /// * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement]
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [CustomerRepricingConfig.update_time][google.cloud.channel.v1.CustomerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse> ListCustomerRepricingConfigsAsync(global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomerRepricingConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a Customer.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Customer ID
      /// * [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement]
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [CustomerRepricingConfig.update_time][google.cloud.channel.v1.CustomerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse> ListCustomerRepricingConfigsAsync(global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCustomerRepricingConfigs, null, options, request);
      }
      /// <summary>
      /// Creates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. You can only create configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [CustomerRepricingConfig.repricing_config][google.cloud.channel.v1.CustomerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement].
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.CustomerRepricingConfig CreateCustomerRepricingConfig(global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomerRepricingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. You can only create configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [CustomerRepricingConfig.repricing_config][google.cloud.channel.v1.CustomerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement].
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.CustomerRepricingConfig CreateCustomerRepricingConfig(global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Creates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. You can only create configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [CustomerRepricingConfig.repricing_config][google.cloud.channel.v1.CustomerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement].
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> CreateCustomerRepricingConfigAsync(global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomerRepricingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. You can only create configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [CustomerRepricingConfig.repricing_config][google.cloud.channel.v1.CustomerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement].
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> CreateCustomerRepricingConfigAsync(global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Updates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. This method overwrites the existing
      /// CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.CustomerRepricingConfig UpdateCustomerRepricingConfig(global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomerRepricingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. This method overwrites the existing
      /// CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.CustomerRepricingConfig UpdateCustomerRepricingConfig(global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Updates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. This method overwrites the existing
      /// CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> UpdateCustomerRepricingConfigAsync(global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomerRepricingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomerRepricingConfig. Call this method to set modifications
      /// for a specific customer's bill. This method overwrites the existing
      /// CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateCustomerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateCustomerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.CustomerRepricingConfig> UpdateCustomerRepricingConfigAsync(global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Deletes the given
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCustomerRepricingConfig(global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCustomerRepricingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the given
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteCustomerRepricingConfig(global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteCustomerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Deletes the given
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCustomerRepricingConfigAsync(global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteCustomerRepricingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the given
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [CustomerRepricingConfig][google.cloud.channel.v1.CustomerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteCustomerRepricingConfigAsync(global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteCustomerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Gets information about how a Distributor modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig GetChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelPartnerRepricingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about how a Distributor modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig GetChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetChannelPartnerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Gets information about how a Distributor modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> GetChannelPartnerRepricingConfigAsync(global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetChannelPartnerRepricingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about how a Distributor modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// was not found.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> GetChannelPartnerRepricingConfigAsync(global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetChannelPartnerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Channel Partner ID
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [ChannelPartnerRepricingConfig.update_time][google.cloud.channel.v1.ChannelPartnerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse ListChannelPartnerRepricingConfigs(global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListChannelPartnerRepricingConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Channel Partner ID
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [ChannelPartnerRepricingConfig.update_time][google.cloud.channel.v1.ChannelPartnerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse ListChannelPartnerRepricingConfigs(global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListChannelPartnerRepricingConfigs, null, options, request);
      }
      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Channel Partner ID
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [ChannelPartnerRepricingConfig.update_time][google.cloud.channel.v1.ChannelPartnerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse> ListChannelPartnerRepricingConfigsAsync(global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListChannelPartnerRepricingConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists information about how a Reseller modifies their bill before sending
      /// it to a ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * Channel Partner ID
      /// * [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// * [ChannelPartnerRepricingConfig.update_time][google.cloud.channel.v1.ChannelPartnerRepricingConfig.update_time]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse> ListChannelPartnerRepricingConfigsAsync(global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListChannelPartnerRepricingConfigs, null, options, request);
      }
      /// <summary>
      /// Creates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. You can only create
      /// configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any ChannelPartner or
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [ChannelPartnerRepricingConfig.repricing_config][google.cloud.channel.v1.ChannelPartnerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig CreateChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateChannelPartnerRepricingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. You can only create
      /// configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any ChannelPartner or
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [ChannelPartnerRepricingConfig.repricing_config][google.cloud.channel.v1.ChannelPartnerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig CreateChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateChannelPartnerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Creates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. You can only create
      /// configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any ChannelPartner or
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [ChannelPartnerRepricingConfig.repricing_config][google.cloud.channel.v1.ChannelPartnerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> CreateChannelPartnerRepricingConfigAsync(global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateChannelPartnerRepricingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. You can only create
      /// configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. If needed, you can create a config for the current
      /// month, with some restrictions.
      ///
      /// When creating a config for a future month, make sure there are no existing
      /// configs for that
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// The following restrictions are for creating configs in the current month.
      ///
      /// * This functionality is reserved for recovering from an erroneous config,
      /// and should not be used for regular business cases.
      /// * The new config will not modify exports used with other configs.
      /// Changes to the config may be immediate, but may take up to 24 hours.
      /// * There is a limit of ten configs for any ChannelPartner or
      /// [RepricingConfig.EntitlementGranularity.entitlement][google.cloud.channel.v1.RepricingConfig.EntitlementGranularity.entitlement],
      /// for any
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      /// * The contained
      /// [ChannelPartnerRepricingConfig.repricing_config][google.cloud.channel.v1.ChannelPartnerRepricingConfig.repricing_config]
      /// value must be different from the value used in the current config for a
      /// ChannelPartner.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> CreateChannelPartnerRepricingConfigAsync(global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateChannelPartnerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Updates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. This method overwrites
      /// the existing CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig UpdateChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateChannelPartnerRepricingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. This method overwrites
      /// the existing CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig UpdateChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateChannelPartnerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Updates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. This method overwrites
      /// the existing CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> UpdateChannelPartnerRepricingConfigAsync(global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateChannelPartnerRepricingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ChannelPartnerRepricingConfig. Call this method to set
      /// modifications for a specific ChannelPartner's bill. This method overwrites
      /// the existing CustomerRepricingConfig.
      ///
      /// You can only update configs if the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is a future month. To make changes to configs for the current month, use
      /// [CreateChannelPartnerRepricingConfig][google.cloud.channel.v1.CloudChannelService.CreateChannelPartnerRepricingConfig],
      /// taking note of its restrictions. You cannot update the
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month].
      ///
      /// When updating a config in the future:
      ///
      /// * This config must already exist.
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different.
      /// * INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request. Also displays if the updated config is for the current month or
      /// past months.
      /// * NOT_FOUND: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// specified does not exist or is not associated with the given account.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the updated
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// resource, otherwise returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig> UpdateChannelPartnerRepricingConfigAsync(global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateChannelPartnerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Deletes the given
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteChannelPartnerRepricingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the given
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteChannelPartnerRepricingConfig(global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteChannelPartnerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Deletes the given
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteChannelPartnerRepricingConfigAsync(global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteChannelPartnerRepricingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the given
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// permanently. You can only delete configs if their
      /// [RepricingConfig.effective_invoice_month][google.cloud.channel.v1.RepricingConfig.effective_invoice_month]
      /// is set to a date after the current month.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The account making the request does not own
      /// this customer.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * FAILED_PRECONDITION: The
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// is active or in the past.
      /// * NOT_FOUND: No
      /// [ChannelPartnerRepricingConfig][google.cloud.channel.v1.ChannelPartnerRepricingConfig]
      /// found for the name in the request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteChannelPartnerRepricingConfigAsync(global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteChannelPartnerRepricingConfig, null, options, request);
      }
      /// <summary>
      /// Lists the Rebilling supported SKU groups the account is authorized to
      /// sell.
      /// Reference: https://cloud.google.com/skus/sku-groups
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different, or the account doesn't exist.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the [SkuGroup][google.cloud.channel.v1.SkuGroup] resources.
      /// The data for each resource is displayed in the alphabetical order of SKU
      /// group display name.
      /// The data for each resource is displayed in the ascending order of
      /// [SkuGroup.display_name][google.cloud.channel.v1.SkuGroup.display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListSkuGroupsResponse ListSkuGroups(global::Google.Cloud.Channel.V1.ListSkuGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSkuGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Rebilling supported SKU groups the account is authorized to
      /// sell.
      /// Reference: https://cloud.google.com/skus/sku-groups
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different, or the account doesn't exist.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the [SkuGroup][google.cloud.channel.v1.SkuGroup] resources.
      /// The data for each resource is displayed in the alphabetical order of SKU
      /// group display name.
      /// The data for each resource is displayed in the ascending order of
      /// [SkuGroup.display_name][google.cloud.channel.v1.SkuGroup.display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListSkuGroupsResponse ListSkuGroups(global::Google.Cloud.Channel.V1.ListSkuGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSkuGroups, null, options, request);
      }
      /// <summary>
      /// Lists the Rebilling supported SKU groups the account is authorized to
      /// sell.
      /// Reference: https://cloud.google.com/skus/sku-groups
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different, or the account doesn't exist.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the [SkuGroup][google.cloud.channel.v1.SkuGroup] resources.
      /// The data for each resource is displayed in the alphabetical order of SKU
      /// group display name.
      /// The data for each resource is displayed in the ascending order of
      /// [SkuGroup.display_name][google.cloud.channel.v1.SkuGroup.display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListSkuGroupsResponse> ListSkuGroupsAsync(global::Google.Cloud.Channel.V1.ListSkuGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSkuGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Rebilling supported SKU groups the account is authorized to
      /// sell.
      /// Reference: https://cloud.google.com/skus/sku-groups
      ///
      /// Possible Error Codes:
      ///
      /// * PERMISSION_DENIED: If the account making the request and the account
      /// being queried are different, or the account doesn't exist.
      /// * INTERNAL: Any non-user error related to technical issues in the
      /// backend. In this case, contact Cloud Channel support.
      ///
      /// Return Value:
      /// If successful, the [SkuGroup][google.cloud.channel.v1.SkuGroup] resources.
      /// The data for each resource is displayed in the alphabetical order of SKU
      /// group display name.
      /// The data for each resource is displayed in the ascending order of
      /// [SkuGroup.display_name][google.cloud.channel.v1.SkuGroup.display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListSkuGroupsResponse> ListSkuGroupsAsync(global::Google.Cloud.Channel.V1.ListSkuGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSkuGroups, null, options, request);
      }
      /// <summary>
      /// Lists the Billable SKUs in a given SKU group.
      ///
      /// Possible error codes:
      /// PERMISSION_DENIED: If the account making the request and the account
      /// being queried for are different, or the account doesn't exist.
      /// INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request.
      /// INTERNAL: Any non-user error related to technical issue in the
      /// backend. In this case, contact cloud channel support.
      ///
      /// Return Value:
      /// If successful, the [BillableSku][google.cloud.channel.v1.BillableSku]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * [BillableSku.service_display_name][google.cloud.channel.v1.BillableSku.service_display_name]
      /// * [BillableSku.sku_display_name][google.cloud.channel.v1.BillableSku.sku_display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse ListSkuGroupBillableSkus(global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSkuGroupBillableSkus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Billable SKUs in a given SKU group.
      ///
      /// Possible error codes:
      /// PERMISSION_DENIED: If the account making the request and the account
      /// being queried for are different, or the account doesn't exist.
      /// INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request.
      /// INTERNAL: Any non-user error related to technical issue in the
      /// backend. In this case, contact cloud channel support.
      ///
      /// Return Value:
      /// If successful, the [BillableSku][google.cloud.channel.v1.BillableSku]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * [BillableSku.service_display_name][google.cloud.channel.v1.BillableSku.service_display_name]
      /// * [BillableSku.sku_display_name][google.cloud.channel.v1.BillableSku.sku_display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse ListSkuGroupBillableSkus(global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSkuGroupBillableSkus, null, options, request);
      }
      /// <summary>
      /// Lists the Billable SKUs in a given SKU group.
      ///
      /// Possible error codes:
      /// PERMISSION_DENIED: If the account making the request and the account
      /// being queried for are different, or the account doesn't exist.
      /// INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request.
      /// INTERNAL: Any non-user error related to technical issue in the
      /// backend. In this case, contact cloud channel support.
      ///
      /// Return Value:
      /// If successful, the [BillableSku][google.cloud.channel.v1.BillableSku]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * [BillableSku.service_display_name][google.cloud.channel.v1.BillableSku.service_display_name]
      /// * [BillableSku.sku_display_name][google.cloud.channel.v1.BillableSku.sku_display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse> ListSkuGroupBillableSkusAsync(global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSkuGroupBillableSkusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Billable SKUs in a given SKU group.
      ///
      /// Possible error codes:
      /// PERMISSION_DENIED: If the account making the request and the account
      /// being queried for are different, or the account doesn't exist.
      /// INVALID_ARGUMENT: Missing or invalid required parameters in the
      /// request.
      /// INTERNAL: Any non-user error related to technical issue in the
      /// backend. In this case, contact cloud channel support.
      ///
      /// Return Value:
      /// If successful, the [BillableSku][google.cloud.channel.v1.BillableSku]
      /// resources. The data for each resource is displayed in the ascending order
      /// of:
      ///
      /// * [BillableSku.service_display_name][google.cloud.channel.v1.BillableSku.service_display_name]
      /// * [BillableSku.sku_display_name][google.cloud.channel.v1.BillableSku.sku_display_name]
      ///
      /// If unsuccessful, returns an error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse> ListSkuGroupBillableSkusAsync(global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSkuGroupBillableSkus, null, options, request);
      }
      /// <summary>
      /// Returns the requested [Offer][google.cloud.channel.v1.Offer] resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The entitlement doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement or offer was not found.
      ///
      /// Return value:
      /// The [Offer][google.cloud.channel.v1.Offer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Offer LookupOffer(global::Google.Cloud.Channel.V1.LookupOfferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupOffer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested [Offer][google.cloud.channel.v1.Offer] resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The entitlement doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement or offer was not found.
      ///
      /// Return value:
      /// The [Offer][google.cloud.channel.v1.Offer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.Offer LookupOffer(global::Google.Cloud.Channel.V1.LookupOfferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LookupOffer, null, options, request);
      }
      /// <summary>
      /// Returns the requested [Offer][google.cloud.channel.v1.Offer] resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The entitlement doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement or offer was not found.
      ///
      /// Return value:
      /// The [Offer][google.cloud.channel.v1.Offer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Offer> LookupOfferAsync(global::Google.Cloud.Channel.V1.LookupOfferRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupOfferAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the requested [Offer][google.cloud.channel.v1.Offer] resource.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The entitlement doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: Entitlement or offer was not found.
      ///
      /// Return value:
      /// The [Offer][google.cloud.channel.v1.Offer] resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.Offer> LookupOfferAsync(global::Google.Cloud.Channel.V1.LookupOfferRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LookupOffer, null, options, request);
      }
      /// <summary>
      /// Lists the Products the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListProductsResponse ListProducts(global::Google.Cloud.Channel.V1.ListProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Products the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListProductsResponse ListProducts(global::Google.Cloud.Channel.V1.ListProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProducts, null, options, request);
      }
      /// <summary>
      /// Lists the Products the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListProductsResponse> ListProductsAsync(global::Google.Cloud.Channel.V1.ListProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Products the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListProductsResponse> ListProductsAsync(global::Google.Cloud.Channel.V1.ListProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProducts, null, options, request);
      }
      /// <summary>
      /// Lists the SKUs for a product the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListSkusResponse ListSkus(global::Google.Cloud.Channel.V1.ListSkusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSkus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the SKUs for a product the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListSkusResponse ListSkus(global::Google.Cloud.Channel.V1.ListSkusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSkus, null, options, request);
      }
      /// <summary>
      /// Lists the SKUs for a product the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListSkusResponse> ListSkusAsync(global::Google.Cloud.Channel.V1.ListSkusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSkusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the SKUs for a product the reseller is authorized to sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListSkusResponse> ListSkusAsync(global::Google.Cloud.Channel.V1.ListSkusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSkus, null, options, request);
      }
      /// <summary>
      /// Lists the Offers the reseller can sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListOffersResponse ListOffers(global::Google.Cloud.Channel.V1.ListOffersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOffers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Offers the reseller can sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListOffersResponse ListOffers(global::Google.Cloud.Channel.V1.ListOffersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOffers, null, options, request);
      }
      /// <summary>
      /// Lists the Offers the reseller can sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListOffersResponse> ListOffersAsync(global::Google.Cloud.Channel.V1.ListOffersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOffersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Offers the reseller can sell.
      ///
      /// Possible error codes:
      ///
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListOffersResponse> ListOffersAsync(global::Google.Cloud.Channel.V1.ListOffersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOffers, null, options, request);
      }
      /// <summary>
      /// Lists the following:
      ///
      /// * SKUs that you can purchase for a customer
      /// * SKUs that you can upgrade or downgrade for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse ListPurchasableSkus(global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPurchasableSkus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the following:
      ///
      /// * SKUs that you can purchase for a customer
      /// * SKUs that you can upgrade or downgrade for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse ListPurchasableSkus(global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPurchasableSkus, null, options, request);
      }
      /// <summary>
      /// Lists the following:
      ///
      /// * SKUs that you can purchase for a customer
      /// * SKUs that you can upgrade or downgrade for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse> ListPurchasableSkusAsync(global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPurchasableSkusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the following:
      ///
      /// * SKUs that you can purchase for a customer
      /// * SKUs that you can upgrade or downgrade for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse> ListPurchasableSkusAsync(global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPurchasableSkus, null, options, request);
      }
      /// <summary>
      /// Lists the following:
      ///
      /// * Offers that you can purchase for a customer.
      /// * Offers that you can change for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse ListPurchasableOffers(global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPurchasableOffers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the following:
      ///
      /// * Offers that you can purchase for a customer.
      /// * Offers that you can change for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse ListPurchasableOffers(global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPurchasableOffers, null, options, request);
      }
      /// <summary>
      /// Lists the following:
      ///
      /// * Offers that you can purchase for a customer.
      /// * Offers that you can change for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse> ListPurchasableOffersAsync(global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPurchasableOffersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the following:
      ///
      /// * Offers that you can purchase for a customer.
      /// * Offers that you can change for an entitlement.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED:
      ///     * The customer doesn't belong to the reseller
      ///     * The reseller is not authorized to transact on this Product. See
      ///     https://support.google.com/channelservices/answer/9759265
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse> ListPurchasableOffersAsync(global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPurchasableOffers, null, options, request);
      }
      /// <summary>
      /// Lists the billing accounts that are eligible to purchase particular SKUs
      /// for a given customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// Based on the provided list of SKUs, returns a list of SKU groups that must
      /// be purchased using the same billing account and the billing accounts
      /// eligible to purchase each SKU group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse QueryEligibleBillingAccounts(global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryEligibleBillingAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the billing accounts that are eligible to purchase particular SKUs
      /// for a given customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// Based on the provided list of SKUs, returns a list of SKU groups that must
      /// be purchased using the same billing account and the billing accounts
      /// eligible to purchase each SKU group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse QueryEligibleBillingAccounts(global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryEligibleBillingAccounts, null, options, request);
      }
      /// <summary>
      /// Lists the billing accounts that are eligible to purchase particular SKUs
      /// for a given customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// Based on the provided list of SKUs, returns a list of SKU groups that must
      /// be purchased using the same billing account and the billing accounts
      /// eligible to purchase each SKU group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse> QueryEligibleBillingAccountsAsync(global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryEligibleBillingAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the billing accounts that are eligible to purchase particular SKUs
      /// for a given customer.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The customer doesn't belong to the reseller.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      ///
      /// Return value:
      /// Based on the provided list of SKUs, returns a list of SKU groups that must
      /// be purchased using the same billing account and the billing accounts
      /// eligible to purchase each SKU group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse> QueryEligibleBillingAccountsAsync(global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryEligibleBillingAccounts, null, options, request);
      }
      /// <summary>
      /// Registers a service account with subscriber privileges on the Cloud Pub/Sub
      /// topic for this Channel Services account. After you create a
      /// subscriber, you get the events through
      /// [SubscriberEvent][google.cloud.channel.v1.SubscriberEvent]
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name with the registered service email address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.RegisterSubscriberResponse RegisterSubscriber(global::Google.Cloud.Channel.V1.RegisterSubscriberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterSubscriber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Registers a service account with subscriber privileges on the Cloud Pub/Sub
      /// topic for this Channel Services account. After you create a
      /// subscriber, you get the events through
      /// [SubscriberEvent][google.cloud.channel.v1.SubscriberEvent]
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name with the registered service email address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.RegisterSubscriberResponse RegisterSubscriber(global::Google.Cloud.Channel.V1.RegisterSubscriberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterSubscriber, null, options, request);
      }
      /// <summary>
      /// Registers a service account with subscriber privileges on the Cloud Pub/Sub
      /// topic for this Channel Services account. After you create a
      /// subscriber, you get the events through
      /// [SubscriberEvent][google.cloud.channel.v1.SubscriberEvent]
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name with the registered service email address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.RegisterSubscriberResponse> RegisterSubscriberAsync(global::Google.Cloud.Channel.V1.RegisterSubscriberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterSubscriberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Registers a service account with subscriber privileges on the Cloud Pub/Sub
      /// topic for this Channel Services account. After you create a
      /// subscriber, you get the events through
      /// [SubscriberEvent][google.cloud.channel.v1.SubscriberEvent]
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name with the registered service email address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.RegisterSubscriberResponse> RegisterSubscriberAsync(global::Google.Cloud.Channel.V1.RegisterSubscriberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterSubscriber, null, options, request);
      }
      /// <summary>
      /// Unregisters a service account with subscriber privileges on the Cloud
      /// Pub/Sub topic created for this Channel Services account. If there are no
      /// service accounts left with subscriber privileges, this deletes the topic.
      /// You can call ListSubscribers to check for these accounts.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name that unregistered the service email address.
      /// Returns a success response if the service email address wasn't registered
      /// with the topic.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse UnregisterSubscriber(global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnregisterSubscriber(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unregisters a service account with subscriber privileges on the Cloud
      /// Pub/Sub topic created for this Channel Services account. If there are no
      /// service accounts left with subscriber privileges, this deletes the topic.
      /// You can call ListSubscribers to check for these accounts.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name that unregistered the service email address.
      /// Returns a success response if the service email address wasn't registered
      /// with the topic.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse UnregisterSubscriber(global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnregisterSubscriber, null, options, request);
      }
      /// <summary>
      /// Unregisters a service account with subscriber privileges on the Cloud
      /// Pub/Sub topic created for this Channel Services account. If there are no
      /// service accounts left with subscriber privileges, this deletes the topic.
      /// You can call ListSubscribers to check for these accounts.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name that unregistered the service email address.
      /// Returns a success response if the service email address wasn't registered
      /// with the topic.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse> UnregisterSubscriberAsync(global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnregisterSubscriberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unregisters a service account with subscriber privileges on the Cloud
      /// Pub/Sub topic created for this Channel Services account. If there are no
      /// service accounts left with subscriber privileges, this deletes the topic.
      /// You can call ListSubscribers to check for these accounts.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// The topic name that unregistered the service email address.
      /// Returns a success response if the service email address wasn't registered
      /// with the topic.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse> UnregisterSubscriberAsync(global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnregisterSubscriber, null, options, request);
      }
      /// <summary>
      /// Lists service accounts with subscriber privileges on the Cloud Pub/Sub
      /// topic created for this Channel Services account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// A list of service email addresses.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListSubscribersResponse ListSubscribers(global::Google.Cloud.Channel.V1.ListSubscribersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubscribers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists service accounts with subscriber privileges on the Cloud Pub/Sub
      /// topic created for this Channel Services account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// A list of service email addresses.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListSubscribersResponse ListSubscribers(global::Google.Cloud.Channel.V1.ListSubscribersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSubscribers, null, options, request);
      }
      /// <summary>
      /// Lists service accounts with subscriber privileges on the Cloud Pub/Sub
      /// topic created for this Channel Services account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// A list of service email addresses.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListSubscribersResponse> ListSubscribersAsync(global::Google.Cloud.Channel.V1.ListSubscribersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubscribersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists service accounts with subscriber privileges on the Cloud Pub/Sub
      /// topic created for this Channel Services account.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different, or the impersonated user
      /// is not a super admin.
      /// * INVALID_ARGUMENT: Required request parameters are missing or invalid.
      /// * NOT_FOUND: The topic resource doesn't exist.
      /// * INTERNAL: Any non-user error related to a technical issue in the
      /// backend. Contact Cloud Channel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// Contact Cloud Channel support.
      ///
      /// Return value:
      /// A list of service email addresses.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListSubscribersResponse> ListSubscribersAsync(global::Google.Cloud.Channel.V1.ListSubscribersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSubscribers, null, options, request);
      }
      /// <summary>
      /// List entitlement history.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different.
      /// * INVALID_ARGUMENT: Missing or invalid required fields in the request.
      /// * NOT_FOUND: The parent resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      /// * INTERNAL: Any non-user error related to a technical issue in the backend.
      /// In this case, contact CloudChannel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// In this case, contact Cloud Channel support.
      ///
      /// Return value:
      /// List of [EntitlementChange][google.cloud.channel.v1.EntitlementChange]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse ListEntitlementChanges(global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntitlementChanges(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List entitlement history.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different.
      /// * INVALID_ARGUMENT: Missing or invalid required fields in the request.
      /// * NOT_FOUND: The parent resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      /// * INTERNAL: Any non-user error related to a technical issue in the backend.
      /// In this case, contact CloudChannel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// In this case, contact Cloud Channel support.
      ///
      /// Return value:
      /// List of [EntitlementChange][google.cloud.channel.v1.EntitlementChange]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse ListEntitlementChanges(global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEntitlementChanges, null, options, request);
      }
      /// <summary>
      /// List entitlement history.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different.
      /// * INVALID_ARGUMENT: Missing or invalid required fields in the request.
      /// * NOT_FOUND: The parent resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      /// * INTERNAL: Any non-user error related to a technical issue in the backend.
      /// In this case, contact CloudChannel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// In this case, contact Cloud Channel support.
      ///
      /// Return value:
      /// List of [EntitlementChange][google.cloud.channel.v1.EntitlementChange]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse> ListEntitlementChangesAsync(global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntitlementChangesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List entitlement history.
      ///
      /// Possible error codes:
      ///
      /// * PERMISSION_DENIED: The reseller account making the request and the
      /// provided reseller account are different.
      /// * INVALID_ARGUMENT: Missing or invalid required fields in the request.
      /// * NOT_FOUND: The parent resource doesn't exist. Usually the result of an
      /// invalid name parameter.
      /// * INTERNAL: Any non-user error related to a technical issue in the backend.
      /// In this case, contact CloudChannel support.
      /// * UNKNOWN: Any non-user error related to a technical issue in the backend.
      /// In this case, contact Cloud Channel support.
      ///
      /// Return value:
      /// List of [EntitlementChange][google.cloud.channel.v1.EntitlementChange]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse> ListEntitlementChangesAsync(global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEntitlementChanges, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CloudChannelServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CloudChannelServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CloudChannelServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListCustomers, serviceImpl.ListCustomers)
          .AddMethod(__Method_GetCustomer, serviceImpl.GetCustomer)
          .AddMethod(__Method_CheckCloudIdentityAccountsExist, serviceImpl.CheckCloudIdentityAccountsExist)
          .AddMethod(__Method_CreateCustomer, serviceImpl.CreateCustomer)
          .AddMethod(__Method_UpdateCustomer, serviceImpl.UpdateCustomer)
          .AddMethod(__Method_DeleteCustomer, serviceImpl.DeleteCustomer)
          .AddMethod(__Method_ImportCustomer, serviceImpl.ImportCustomer)
          .AddMethod(__Method_ProvisionCloudIdentity, serviceImpl.ProvisionCloudIdentity)
          .AddMethod(__Method_ListEntitlements, serviceImpl.ListEntitlements)
          .AddMethod(__Method_ListTransferableSkus, serviceImpl.ListTransferableSkus)
          .AddMethod(__Method_ListTransferableOffers, serviceImpl.ListTransferableOffers)
          .AddMethod(__Method_GetEntitlement, serviceImpl.GetEntitlement)
          .AddMethod(__Method_CreateEntitlement, serviceImpl.CreateEntitlement)
          .AddMethod(__Method_ChangeParameters, serviceImpl.ChangeParameters)
          .AddMethod(__Method_ChangeRenewalSettings, serviceImpl.ChangeRenewalSettings)
          .AddMethod(__Method_ChangeOffer, serviceImpl.ChangeOffer)
          .AddMethod(__Method_StartPaidService, serviceImpl.StartPaidService)
          .AddMethod(__Method_SuspendEntitlement, serviceImpl.SuspendEntitlement)
          .AddMethod(__Method_CancelEntitlement, serviceImpl.CancelEntitlement)
          .AddMethod(__Method_ActivateEntitlement, serviceImpl.ActivateEntitlement)
          .AddMethod(__Method_TransferEntitlements, serviceImpl.TransferEntitlements)
          .AddMethod(__Method_TransferEntitlementsToGoogle, serviceImpl.TransferEntitlementsToGoogle)
          .AddMethod(__Method_ListChannelPartnerLinks, serviceImpl.ListChannelPartnerLinks)
          .AddMethod(__Method_GetChannelPartnerLink, serviceImpl.GetChannelPartnerLink)
          .AddMethod(__Method_CreateChannelPartnerLink, serviceImpl.CreateChannelPartnerLink)
          .AddMethod(__Method_UpdateChannelPartnerLink, serviceImpl.UpdateChannelPartnerLink)
          .AddMethod(__Method_GetCustomerRepricingConfig, serviceImpl.GetCustomerRepricingConfig)
          .AddMethod(__Method_ListCustomerRepricingConfigs, serviceImpl.ListCustomerRepricingConfigs)
          .AddMethod(__Method_CreateCustomerRepricingConfig, serviceImpl.CreateCustomerRepricingConfig)
          .AddMethod(__Method_UpdateCustomerRepricingConfig, serviceImpl.UpdateCustomerRepricingConfig)
          .AddMethod(__Method_DeleteCustomerRepricingConfig, serviceImpl.DeleteCustomerRepricingConfig)
          .AddMethod(__Method_GetChannelPartnerRepricingConfig, serviceImpl.GetChannelPartnerRepricingConfig)
          .AddMethod(__Method_ListChannelPartnerRepricingConfigs, serviceImpl.ListChannelPartnerRepricingConfigs)
          .AddMethod(__Method_CreateChannelPartnerRepricingConfig, serviceImpl.CreateChannelPartnerRepricingConfig)
          .AddMethod(__Method_UpdateChannelPartnerRepricingConfig, serviceImpl.UpdateChannelPartnerRepricingConfig)
          .AddMethod(__Method_DeleteChannelPartnerRepricingConfig, serviceImpl.DeleteChannelPartnerRepricingConfig)
          .AddMethod(__Method_ListSkuGroups, serviceImpl.ListSkuGroups)
          .AddMethod(__Method_ListSkuGroupBillableSkus, serviceImpl.ListSkuGroupBillableSkus)
          .AddMethod(__Method_LookupOffer, serviceImpl.LookupOffer)
          .AddMethod(__Method_ListProducts, serviceImpl.ListProducts)
          .AddMethod(__Method_ListSkus, serviceImpl.ListSkus)
          .AddMethod(__Method_ListOffers, serviceImpl.ListOffers)
          .AddMethod(__Method_ListPurchasableSkus, serviceImpl.ListPurchasableSkus)
          .AddMethod(__Method_ListPurchasableOffers, serviceImpl.ListPurchasableOffers)
          .AddMethod(__Method_QueryEligibleBillingAccounts, serviceImpl.QueryEligibleBillingAccounts)
          .AddMethod(__Method_RegisterSubscriber, serviceImpl.RegisterSubscriber)
          .AddMethod(__Method_UnregisterSubscriber, serviceImpl.UnregisterSubscriber)
          .AddMethod(__Method_ListSubscribers, serviceImpl.ListSubscribers)
          .AddMethod(__Method_ListEntitlementChanges, serviceImpl.ListEntitlementChanges).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CloudChannelServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListCustomers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListCustomersRequest, global::Google.Cloud.Channel.V1.ListCustomersResponse>(serviceImpl.ListCustomers));
      serviceBinder.AddMethod(__Method_GetCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.GetCustomerRequest, global::Google.Cloud.Channel.V1.Customer>(serviceImpl.GetCustomer));
      serviceBinder.AddMethod(__Method_CheckCloudIdentityAccountsExist, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistRequest, global::Google.Cloud.Channel.V1.CheckCloudIdentityAccountsExistResponse>(serviceImpl.CheckCloudIdentityAccountsExist));
      serviceBinder.AddMethod(__Method_CreateCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.CreateCustomerRequest, global::Google.Cloud.Channel.V1.Customer>(serviceImpl.CreateCustomer));
      serviceBinder.AddMethod(__Method_UpdateCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.UpdateCustomerRequest, global::Google.Cloud.Channel.V1.Customer>(serviceImpl.UpdateCustomer));
      serviceBinder.AddMethod(__Method_DeleteCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.DeleteCustomerRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCustomer));
      serviceBinder.AddMethod(__Method_ImportCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ImportCustomerRequest, global::Google.Cloud.Channel.V1.Customer>(serviceImpl.ImportCustomer));
      serviceBinder.AddMethod(__Method_ProvisionCloudIdentity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ProvisionCloudIdentityRequest, global::Google.LongRunning.Operation>(serviceImpl.ProvisionCloudIdentity));
      serviceBinder.AddMethod(__Method_ListEntitlements, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListEntitlementsRequest, global::Google.Cloud.Channel.V1.ListEntitlementsResponse>(serviceImpl.ListEntitlements));
      serviceBinder.AddMethod(__Method_ListTransferableSkus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListTransferableSkusRequest, global::Google.Cloud.Channel.V1.ListTransferableSkusResponse>(serviceImpl.ListTransferableSkus));
      serviceBinder.AddMethod(__Method_ListTransferableOffers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListTransferableOffersRequest, global::Google.Cloud.Channel.V1.ListTransferableOffersResponse>(serviceImpl.ListTransferableOffers));
      serviceBinder.AddMethod(__Method_GetEntitlement, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.GetEntitlementRequest, global::Google.Cloud.Channel.V1.Entitlement>(serviceImpl.GetEntitlement));
      serviceBinder.AddMethod(__Method_CreateEntitlement, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.CreateEntitlementRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateEntitlement));
      serviceBinder.AddMethod(__Method_ChangeParameters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ChangeParametersRequest, global::Google.LongRunning.Operation>(serviceImpl.ChangeParameters));
      serviceBinder.AddMethod(__Method_ChangeRenewalSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ChangeRenewalSettingsRequest, global::Google.LongRunning.Operation>(serviceImpl.ChangeRenewalSettings));
      serviceBinder.AddMethod(__Method_ChangeOffer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ChangeOfferRequest, global::Google.LongRunning.Operation>(serviceImpl.ChangeOffer));
      serviceBinder.AddMethod(__Method_StartPaidService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.StartPaidServiceRequest, global::Google.LongRunning.Operation>(serviceImpl.StartPaidService));
      serviceBinder.AddMethod(__Method_SuspendEntitlement, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.SuspendEntitlementRequest, global::Google.LongRunning.Operation>(serviceImpl.SuspendEntitlement));
      serviceBinder.AddMethod(__Method_CancelEntitlement, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.CancelEntitlementRequest, global::Google.LongRunning.Operation>(serviceImpl.CancelEntitlement));
      serviceBinder.AddMethod(__Method_ActivateEntitlement, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ActivateEntitlementRequest, global::Google.LongRunning.Operation>(serviceImpl.ActivateEntitlement));
      serviceBinder.AddMethod(__Method_TransferEntitlements, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.TransferEntitlementsRequest, global::Google.LongRunning.Operation>(serviceImpl.TransferEntitlements));
      serviceBinder.AddMethod(__Method_TransferEntitlementsToGoogle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.TransferEntitlementsToGoogleRequest, global::Google.LongRunning.Operation>(serviceImpl.TransferEntitlementsToGoogle));
      serviceBinder.AddMethod(__Method_ListChannelPartnerLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListChannelPartnerLinksRequest, global::Google.Cloud.Channel.V1.ListChannelPartnerLinksResponse>(serviceImpl.ListChannelPartnerLinks));
      serviceBinder.AddMethod(__Method_GetChannelPartnerLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.GetChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink>(serviceImpl.GetChannelPartnerLink));
      serviceBinder.AddMethod(__Method_CreateChannelPartnerLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.CreateChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink>(serviceImpl.CreateChannelPartnerLink));
      serviceBinder.AddMethod(__Method_UpdateChannelPartnerLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.UpdateChannelPartnerLinkRequest, global::Google.Cloud.Channel.V1.ChannelPartnerLink>(serviceImpl.UpdateChannelPartnerLink));
      serviceBinder.AddMethod(__Method_GetCustomerRepricingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.GetCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig>(serviceImpl.GetCustomerRepricingConfig));
      serviceBinder.AddMethod(__Method_ListCustomerRepricingConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsRequest, global::Google.Cloud.Channel.V1.ListCustomerRepricingConfigsResponse>(serviceImpl.ListCustomerRepricingConfigs));
      serviceBinder.AddMethod(__Method_CreateCustomerRepricingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.CreateCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig>(serviceImpl.CreateCustomerRepricingConfig));
      serviceBinder.AddMethod(__Method_UpdateCustomerRepricingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.UpdateCustomerRepricingConfigRequest, global::Google.Cloud.Channel.V1.CustomerRepricingConfig>(serviceImpl.UpdateCustomerRepricingConfig));
      serviceBinder.AddMethod(__Method_DeleteCustomerRepricingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.DeleteCustomerRepricingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteCustomerRepricingConfig));
      serviceBinder.AddMethod(__Method_GetChannelPartnerRepricingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.GetChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig>(serviceImpl.GetChannelPartnerRepricingConfig));
      serviceBinder.AddMethod(__Method_ListChannelPartnerRepricingConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsRequest, global::Google.Cloud.Channel.V1.ListChannelPartnerRepricingConfigsResponse>(serviceImpl.ListChannelPartnerRepricingConfigs));
      serviceBinder.AddMethod(__Method_CreateChannelPartnerRepricingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.CreateChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig>(serviceImpl.CreateChannelPartnerRepricingConfig));
      serviceBinder.AddMethod(__Method_UpdateChannelPartnerRepricingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.UpdateChannelPartnerRepricingConfigRequest, global::Google.Cloud.Channel.V1.ChannelPartnerRepricingConfig>(serviceImpl.UpdateChannelPartnerRepricingConfig));
      serviceBinder.AddMethod(__Method_DeleteChannelPartnerRepricingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.DeleteChannelPartnerRepricingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteChannelPartnerRepricingConfig));
      serviceBinder.AddMethod(__Method_ListSkuGroups, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListSkuGroupsRequest, global::Google.Cloud.Channel.V1.ListSkuGroupsResponse>(serviceImpl.ListSkuGroups));
      serviceBinder.AddMethod(__Method_ListSkuGroupBillableSkus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusRequest, global::Google.Cloud.Channel.V1.ListSkuGroupBillableSkusResponse>(serviceImpl.ListSkuGroupBillableSkus));
      serviceBinder.AddMethod(__Method_LookupOffer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.LookupOfferRequest, global::Google.Cloud.Channel.V1.Offer>(serviceImpl.LookupOffer));
      serviceBinder.AddMethod(__Method_ListProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListProductsRequest, global::Google.Cloud.Channel.V1.ListProductsResponse>(serviceImpl.ListProducts));
      serviceBinder.AddMethod(__Method_ListSkus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListSkusRequest, global::Google.Cloud.Channel.V1.ListSkusResponse>(serviceImpl.ListSkus));
      serviceBinder.AddMethod(__Method_ListOffers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListOffersRequest, global::Google.Cloud.Channel.V1.ListOffersResponse>(serviceImpl.ListOffers));
      serviceBinder.AddMethod(__Method_ListPurchasableSkus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListPurchasableSkusRequest, global::Google.Cloud.Channel.V1.ListPurchasableSkusResponse>(serviceImpl.ListPurchasableSkus));
      serviceBinder.AddMethod(__Method_ListPurchasableOffers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListPurchasableOffersRequest, global::Google.Cloud.Channel.V1.ListPurchasableOffersResponse>(serviceImpl.ListPurchasableOffers));
      serviceBinder.AddMethod(__Method_QueryEligibleBillingAccounts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsRequest, global::Google.Cloud.Channel.V1.QueryEligibleBillingAccountsResponse>(serviceImpl.QueryEligibleBillingAccounts));
      serviceBinder.AddMethod(__Method_RegisterSubscriber, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.RegisterSubscriberRequest, global::Google.Cloud.Channel.V1.RegisterSubscriberResponse>(serviceImpl.RegisterSubscriber));
      serviceBinder.AddMethod(__Method_UnregisterSubscriber, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.UnregisterSubscriberRequest, global::Google.Cloud.Channel.V1.UnregisterSubscriberResponse>(serviceImpl.UnregisterSubscriber));
      serviceBinder.AddMethod(__Method_ListSubscribers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListSubscribersRequest, global::Google.Cloud.Channel.V1.ListSubscribersResponse>(serviceImpl.ListSubscribers));
      serviceBinder.AddMethod(__Method_ListEntitlementChanges, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Channel.V1.ListEntitlementChangesRequest, global::Google.Cloud.Channel.V1.ListEntitlementChangesResponse>(serviceImpl.ListEntitlementChanges));
    }

  }
}
#endregion
