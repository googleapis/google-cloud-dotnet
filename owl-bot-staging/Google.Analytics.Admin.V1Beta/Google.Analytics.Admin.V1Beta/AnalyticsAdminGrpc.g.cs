// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/analytics/admin/v1beta/analytics_admin.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Analytics.Admin.V1Beta {
  /// <summary>
  /// Service Interface for the Google Analytics Admin API.
  /// </summary>
  public static partial class AnalyticsAdminService
  {
    static readonly string __ServiceName = "google.analytics.admin.v1beta.AnalyticsAdminService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetAccountRequest> __Marshaller_google_analytics_admin_v1beta_GetAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.Account> __Marshaller_google_analytics_admin_v1beta_Account = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.Account.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListAccountsRequest> __Marshaller_google_analytics_admin_v1beta_ListAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListAccountsResponse> __Marshaller_google_analytics_admin_v1beta_ListAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest> __Marshaller_google_analytics_admin_v1beta_DeleteAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest> __Marshaller_google_analytics_admin_v1beta_UpdateAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest> __Marshaller_google_analytics_admin_v1beta_ProvisionAccountTicketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse> __Marshaller_google_analytics_admin_v1beta_ProvisionAccountTicketResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest> __Marshaller_google_analytics_admin_v1beta_ListAccountSummariesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse> __Marshaller_google_analytics_admin_v1beta_ListAccountSummariesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetPropertyRequest> __Marshaller_google_analytics_admin_v1beta_GetPropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetPropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.Property> __Marshaller_google_analytics_admin_v1beta_Property = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.Property.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest> __Marshaller_google_analytics_admin_v1beta_ListPropertiesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse> __Marshaller_google_analytics_admin_v1beta_ListPropertiesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest> __Marshaller_google_analytics_admin_v1beta_CreatePropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest> __Marshaller_google_analytics_admin_v1beta_DeletePropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest> __Marshaller_google_analytics_admin_v1beta_UpdatePropertyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest> __Marshaller_google_analytics_admin_v1beta_CreateFirebaseLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.FirebaseLink> __Marshaller_google_analytics_admin_v1beta_FirebaseLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.FirebaseLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest> __Marshaller_google_analytics_admin_v1beta_DeleteFirebaseLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest> __Marshaller_google_analytics_admin_v1beta_ListFirebaseLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse> __Marshaller_google_analytics_admin_v1beta_ListFirebaseLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest> __Marshaller_google_analytics_admin_v1beta_CreateGoogleAdsLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> __Marshaller_google_analytics_admin_v1beta_GoogleAdsLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GoogleAdsLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest> __Marshaller_google_analytics_admin_v1beta_UpdateGoogleAdsLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest> __Marshaller_google_analytics_admin_v1beta_DeleteGoogleAdsLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest> __Marshaller_google_analytics_admin_v1beta_ListGoogleAdsLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse> __Marshaller_google_analytics_admin_v1beta_ListGoogleAdsLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest> __Marshaller_google_analytics_admin_v1beta_GetDataSharingSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DataSharingSettings> __Marshaller_google_analytics_admin_v1beta_DataSharingSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DataSharingSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest> __Marshaller_google_analytics_admin_v1beta_GetMeasurementProtocolSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> __Marshaller_google_analytics_admin_v1beta_MeasurementProtocolSecret = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest> __Marshaller_google_analytics_admin_v1beta_ListMeasurementProtocolSecretsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse> __Marshaller_google_analytics_admin_v1beta_ListMeasurementProtocolSecretsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest> __Marshaller_google_analytics_admin_v1beta_CreateMeasurementProtocolSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest> __Marshaller_google_analytics_admin_v1beta_DeleteMeasurementProtocolSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest> __Marshaller_google_analytics_admin_v1beta_UpdateMeasurementProtocolSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest> __Marshaller_google_analytics_admin_v1beta_AcknowledgeUserDataCollectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse> __Marshaller_google_analytics_admin_v1beta_AcknowledgeUserDataCollectionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest> __Marshaller_google_analytics_admin_v1beta_SearchChangeHistoryEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse> __Marshaller_google_analytics_admin_v1beta_SearchChangeHistoryEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest> __Marshaller_google_analytics_admin_v1beta_CreateConversionEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ConversionEvent> __Marshaller_google_analytics_admin_v1beta_ConversionEvent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ConversionEvent.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest> __Marshaller_google_analytics_admin_v1beta_UpdateConversionEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest> __Marshaller_google_analytics_admin_v1beta_GetConversionEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest> __Marshaller_google_analytics_admin_v1beta_DeleteConversionEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest> __Marshaller_google_analytics_admin_v1beta_ListConversionEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse> __Marshaller_google_analytics_admin_v1beta_ListConversionEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest> __Marshaller_google_analytics_admin_v1beta_CreateKeyEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.KeyEvent> __Marshaller_google_analytics_admin_v1beta_KeyEvent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.KeyEvent.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest> __Marshaller_google_analytics_admin_v1beta_UpdateKeyEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest> __Marshaller_google_analytics_admin_v1beta_GetKeyEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest> __Marshaller_google_analytics_admin_v1beta_DeleteKeyEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest> __Marshaller_google_analytics_admin_v1beta_ListKeyEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse> __Marshaller_google_analytics_admin_v1beta_ListKeyEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest> __Marshaller_google_analytics_admin_v1beta_CreateCustomDimensionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CustomDimension> __Marshaller_google_analytics_admin_v1beta_CustomDimension = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CustomDimension.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest> __Marshaller_google_analytics_admin_v1beta_UpdateCustomDimensionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest> __Marshaller_google_analytics_admin_v1beta_ListCustomDimensionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse> __Marshaller_google_analytics_admin_v1beta_ListCustomDimensionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest> __Marshaller_google_analytics_admin_v1beta_ArchiveCustomDimensionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest> __Marshaller_google_analytics_admin_v1beta_GetCustomDimensionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest> __Marshaller_google_analytics_admin_v1beta_CreateCustomMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CustomMetric> __Marshaller_google_analytics_admin_v1beta_CustomMetric = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CustomMetric.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest> __Marshaller_google_analytics_admin_v1beta_UpdateCustomMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest> __Marshaller_google_analytics_admin_v1beta_ListCustomMetricsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse> __Marshaller_google_analytics_admin_v1beta_ListCustomMetricsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest> __Marshaller_google_analytics_admin_v1beta_ArchiveCustomMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest> __Marshaller_google_analytics_admin_v1beta_GetCustomMetricRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest> __Marshaller_google_analytics_admin_v1beta_GetDataRetentionSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> __Marshaller_google_analytics_admin_v1beta_DataRetentionSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DataRetentionSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest> __Marshaller_google_analytics_admin_v1beta_UpdateDataRetentionSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest> __Marshaller_google_analytics_admin_v1beta_CreateDataStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DataStream> __Marshaller_google_analytics_admin_v1beta_DataStream = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DataStream.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest> __Marshaller_google_analytics_admin_v1beta_DeleteDataStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest> __Marshaller_google_analytics_admin_v1beta_UpdateDataStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest> __Marshaller_google_analytics_admin_v1beta_ListDataStreamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse> __Marshaller_google_analytics_admin_v1beta_ListDataStreamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest> __Marshaller_google_analytics_admin_v1beta_GetDataStreamRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest> __Marshaller_google_analytics_admin_v1beta_RunAccessReportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse> __Marshaller_google_analytics_admin_v1beta_RunAccessReportResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetAccountRequest, global::Google.Analytics.Admin.V1Beta.Account> __Method_GetAccount = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetAccountRequest, global::Google.Analytics.Admin.V1Beta.Account>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccount",
        __Marshaller_google_analytics_admin_v1beta_GetAccountRequest,
        __Marshaller_google_analytics_admin_v1beta_Account);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListAccountsRequest, global::Google.Analytics.Admin.V1Beta.ListAccountsResponse> __Method_ListAccounts = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListAccountsRequest, global::Google.Analytics.Admin.V1Beta.ListAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccounts",
        __Marshaller_google_analytics_admin_v1beta_ListAccountsRequest,
        __Marshaller_google_analytics_admin_v1beta_ListAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAccount = new grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccount",
        __Marshaller_google_analytics_admin_v1beta_DeleteAccountRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest, global::Google.Analytics.Admin.V1Beta.Account> __Method_UpdateAccount = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest, global::Google.Analytics.Admin.V1Beta.Account>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAccount",
        __Marshaller_google_analytics_admin_v1beta_UpdateAccountRequest,
        __Marshaller_google_analytics_admin_v1beta_Account);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest, global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse> __Method_ProvisionAccountTicket = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest, global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ProvisionAccountTicket",
        __Marshaller_google_analytics_admin_v1beta_ProvisionAccountTicketRequest,
        __Marshaller_google_analytics_admin_v1beta_ProvisionAccountTicketResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest, global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse> __Method_ListAccountSummaries = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest, global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccountSummaries",
        __Marshaller_google_analytics_admin_v1beta_ListAccountSummariesRequest,
        __Marshaller_google_analytics_admin_v1beta_ListAccountSummariesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetPropertyRequest, global::Google.Analytics.Admin.V1Beta.Property> __Method_GetProperty = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetPropertyRequest, global::Google.Analytics.Admin.V1Beta.Property>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProperty",
        __Marshaller_google_analytics_admin_v1beta_GetPropertyRequest,
        __Marshaller_google_analytics_admin_v1beta_Property);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest, global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse> __Method_ListProperties = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest, global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProperties",
        __Marshaller_google_analytics_admin_v1beta_ListPropertiesRequest,
        __Marshaller_google_analytics_admin_v1beta_ListPropertiesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property> __Method_CreateProperty = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProperty",
        __Marshaller_google_analytics_admin_v1beta_CreatePropertyRequest,
        __Marshaller_google_analytics_admin_v1beta_Property);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property> __Method_DeleteProperty = new grpc::Method<global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProperty",
        __Marshaller_google_analytics_admin_v1beta_DeletePropertyRequest,
        __Marshaller_google_analytics_admin_v1beta_Property);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property> __Method_UpdateProperty = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProperty",
        __Marshaller_google_analytics_admin_v1beta_UpdatePropertyRequest,
        __Marshaller_google_analytics_admin_v1beta_Property);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest, global::Google.Analytics.Admin.V1Beta.FirebaseLink> __Method_CreateFirebaseLink = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest, global::Google.Analytics.Admin.V1Beta.FirebaseLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFirebaseLink",
        __Marshaller_google_analytics_admin_v1beta_CreateFirebaseLinkRequest,
        __Marshaller_google_analytics_admin_v1beta_FirebaseLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteFirebaseLink = new grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFirebaseLink",
        __Marshaller_google_analytics_admin_v1beta_DeleteFirebaseLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest, global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse> __Method_ListFirebaseLinks = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest, global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFirebaseLinks",
        __Marshaller_google_analytics_admin_v1beta_ListFirebaseLinksRequest,
        __Marshaller_google_analytics_admin_v1beta_ListFirebaseLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> __Method_CreateGoogleAdsLink = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Beta.GoogleAdsLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateGoogleAdsLink",
        __Marshaller_google_analytics_admin_v1beta_CreateGoogleAdsLinkRequest,
        __Marshaller_google_analytics_admin_v1beta_GoogleAdsLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> __Method_UpdateGoogleAdsLink = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Beta.GoogleAdsLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGoogleAdsLink",
        __Marshaller_google_analytics_admin_v1beta_UpdateGoogleAdsLinkRequest,
        __Marshaller_google_analytics_admin_v1beta_GoogleAdsLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteGoogleAdsLink = new grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteGoogleAdsLink",
        __Marshaller_google_analytics_admin_v1beta_DeleteGoogleAdsLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest, global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse> __Method_ListGoogleAdsLinks = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest, global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGoogleAdsLinks",
        __Marshaller_google_analytics_admin_v1beta_ListGoogleAdsLinksRequest,
        __Marshaller_google_analytics_admin_v1beta_ListGoogleAdsLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataSharingSettings> __Method_GetDataSharingSettings = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataSharingSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataSharingSettings",
        __Marshaller_google_analytics_admin_v1beta_GetDataSharingSettingsRequest,
        __Marshaller_google_analytics_admin_v1beta_DataSharingSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> __Method_GetMeasurementProtocolSecret = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMeasurementProtocolSecret",
        __Marshaller_google_analytics_admin_v1beta_GetMeasurementProtocolSecretRequest,
        __Marshaller_google_analytics_admin_v1beta_MeasurementProtocolSecret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest, global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse> __Method_ListMeasurementProtocolSecrets = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest, global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMeasurementProtocolSecrets",
        __Marshaller_google_analytics_admin_v1beta_ListMeasurementProtocolSecretsRequest,
        __Marshaller_google_analytics_admin_v1beta_ListMeasurementProtocolSecretsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> __Method_CreateMeasurementProtocolSecret = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateMeasurementProtocolSecret",
        __Marshaller_google_analytics_admin_v1beta_CreateMeasurementProtocolSecretRequest,
        __Marshaller_google_analytics_admin_v1beta_MeasurementProtocolSecret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteMeasurementProtocolSecret = new grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteMeasurementProtocolSecret",
        __Marshaller_google_analytics_admin_v1beta_DeleteMeasurementProtocolSecretRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> __Method_UpdateMeasurementProtocolSecret = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMeasurementProtocolSecret",
        __Marshaller_google_analytics_admin_v1beta_UpdateMeasurementProtocolSecretRequest,
        __Marshaller_google_analytics_admin_v1beta_MeasurementProtocolSecret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest, global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse> __Method_AcknowledgeUserDataCollection = new grpc::Method<global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest, global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AcknowledgeUserDataCollection",
        __Marshaller_google_analytics_admin_v1beta_AcknowledgeUserDataCollectionRequest,
        __Marshaller_google_analytics_admin_v1beta_AcknowledgeUserDataCollectionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest, global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse> __Method_SearchChangeHistoryEvents = new grpc::Method<global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest, global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchChangeHistoryEvents",
        __Marshaller_google_analytics_admin_v1beta_SearchChangeHistoryEventsRequest,
        __Marshaller_google_analytics_admin_v1beta_SearchChangeHistoryEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent> __Method_CreateConversionEvent = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateConversionEvent",
        __Marshaller_google_analytics_admin_v1beta_CreateConversionEventRequest,
        __Marshaller_google_analytics_admin_v1beta_ConversionEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent> __Method_UpdateConversionEvent = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateConversionEvent",
        __Marshaller_google_analytics_admin_v1beta_UpdateConversionEventRequest,
        __Marshaller_google_analytics_admin_v1beta_ConversionEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent> __Method_GetConversionEvent = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetConversionEvent",
        __Marshaller_google_analytics_admin_v1beta_GetConversionEventRequest,
        __Marshaller_google_analytics_admin_v1beta_ConversionEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteConversionEvent = new grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteConversionEvent",
        __Marshaller_google_analytics_admin_v1beta_DeleteConversionEventRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest, global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse> __Method_ListConversionEvents = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest, global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListConversionEvents",
        __Marshaller_google_analytics_admin_v1beta_ListConversionEventsRequest,
        __Marshaller_google_analytics_admin_v1beta_ListConversionEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent> __Method_CreateKeyEvent = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateKeyEvent",
        __Marshaller_google_analytics_admin_v1beta_CreateKeyEventRequest,
        __Marshaller_google_analytics_admin_v1beta_KeyEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent> __Method_UpdateKeyEvent = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateKeyEvent",
        __Marshaller_google_analytics_admin_v1beta_UpdateKeyEventRequest,
        __Marshaller_google_analytics_admin_v1beta_KeyEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent> __Method_GetKeyEvent = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetKeyEvent",
        __Marshaller_google_analytics_admin_v1beta_GetKeyEventRequest,
        __Marshaller_google_analytics_admin_v1beta_KeyEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteKeyEvent = new grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteKeyEvent",
        __Marshaller_google_analytics_admin_v1beta_DeleteKeyEventRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest, global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse> __Method_ListKeyEvents = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest, global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListKeyEvents",
        __Marshaller_google_analytics_admin_v1beta_ListKeyEventsRequest,
        __Marshaller_google_analytics_admin_v1beta_ListKeyEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension> __Method_CreateCustomDimension = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomDimension",
        __Marshaller_google_analytics_admin_v1beta_CreateCustomDimensionRequest,
        __Marshaller_google_analytics_admin_v1beta_CustomDimension);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension> __Method_UpdateCustomDimension = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomDimension",
        __Marshaller_google_analytics_admin_v1beta_UpdateCustomDimensionRequest,
        __Marshaller_google_analytics_admin_v1beta_CustomDimension);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest, global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse> __Method_ListCustomDimensions = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest, global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCustomDimensions",
        __Marshaller_google_analytics_admin_v1beta_ListCustomDimensionsRequest,
        __Marshaller_google_analytics_admin_v1beta_ListCustomDimensionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ArchiveCustomDimension = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ArchiveCustomDimension",
        __Marshaller_google_analytics_admin_v1beta_ArchiveCustomDimensionRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension> __Method_GetCustomDimension = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomDimension",
        __Marshaller_google_analytics_admin_v1beta_GetCustomDimensionRequest,
        __Marshaller_google_analytics_admin_v1beta_CustomDimension);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric> __Method_CreateCustomMetric = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCustomMetric",
        __Marshaller_google_analytics_admin_v1beta_CreateCustomMetricRequest,
        __Marshaller_google_analytics_admin_v1beta_CustomMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric> __Method_UpdateCustomMetric = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomMetric",
        __Marshaller_google_analytics_admin_v1beta_UpdateCustomMetricRequest,
        __Marshaller_google_analytics_admin_v1beta_CustomMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest, global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse> __Method_ListCustomMetrics = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest, global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCustomMetrics",
        __Marshaller_google_analytics_admin_v1beta_ListCustomMetricsRequest,
        __Marshaller_google_analytics_admin_v1beta_ListCustomMetricsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ArchiveCustomMetric = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ArchiveCustomMetric",
        __Marshaller_google_analytics_admin_v1beta_ArchiveCustomMetricRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric> __Method_GetCustomMetric = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomMetric",
        __Marshaller_google_analytics_admin_v1beta_GetCustomMetricRequest,
        __Marshaller_google_analytics_admin_v1beta_CustomMetric);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> __Method_GetDataRetentionSettings = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataRetentionSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataRetentionSettings",
        __Marshaller_google_analytics_admin_v1beta_GetDataRetentionSettingsRequest,
        __Marshaller_google_analytics_admin_v1beta_DataRetentionSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> __Method_UpdateDataRetentionSettings = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataRetentionSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDataRetentionSettings",
        __Marshaller_google_analytics_admin_v1beta_UpdateDataRetentionSettingsRequest,
        __Marshaller_google_analytics_admin_v1beta_DataRetentionSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream> __Method_CreateDataStream = new grpc::Method<global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDataStream",
        __Marshaller_google_analytics_admin_v1beta_CreateDataStreamRequest,
        __Marshaller_google_analytics_admin_v1beta_DataStream);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteDataStream = new grpc::Method<global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDataStream",
        __Marshaller_google_analytics_admin_v1beta_DeleteDataStreamRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream> __Method_UpdateDataStream = new grpc::Method<global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDataStream",
        __Marshaller_google_analytics_admin_v1beta_UpdateDataStreamRequest,
        __Marshaller_google_analytics_admin_v1beta_DataStream);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest, global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse> __Method_ListDataStreams = new grpc::Method<global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest, global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDataStreams",
        __Marshaller_google_analytics_admin_v1beta_ListDataStreamsRequest,
        __Marshaller_google_analytics_admin_v1beta_ListDataStreamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream> __Method_GetDataStream = new grpc::Method<global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataStream",
        __Marshaller_google_analytics_admin_v1beta_GetDataStreamRequest,
        __Marshaller_google_analytics_admin_v1beta_DataStream);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest, global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse> __Method_RunAccessReport = new grpc::Method<global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest, global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunAccessReport",
        __Marshaller_google_analytics_admin_v1beta_RunAccessReportRequest,
        __Marshaller_google_analytics_admin_v1beta_RunAccessReportResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Analytics.Admin.V1Beta.AnalyticsAdminReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AnalyticsAdminService</summary>
    [grpc::BindServiceMethod(typeof(AnalyticsAdminService), "BindService")]
    public abstract partial class AnalyticsAdminServiceBase
    {
      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.Account> GetAccount(global::Google.Analytics.Admin.V1Beta.GetAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListAccountsResponse> ListAccounts(global::Google.Analytics.Admin.V1Beta.ListAccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccount(global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.Account> UpdateAccount(global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse> ProvisionAccountTicket(global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse> ListAccountSummaries(global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.Property> GetProperty(global::Google.Analytics.Admin.V1Beta.GetPropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse> ListProperties(global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.Property> CreateProperty(global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.Property> DeleteProperty(global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.Property> UpdateProperty(global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.FirebaseLink> CreateFirebaseLink(global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFirebaseLink(global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse> ListFirebaseLinks(global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> CreateGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> UpdateGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse> ListGoogleAdsLinks(global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.DataSharingSettings> GetDataSharingSettings(global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> GetMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse> ListMeasurementProtocolSecrets(global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> CreateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> UpdateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse> AcknowledgeUserDataCollection(global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse> SearchChangeHistoryEvents(global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ConversionEvent> CreateConversionEvent(global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ConversionEvent> UpdateConversionEvent(global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ConversionEvent> GetConversionEvent(global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversionEvent(global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse> ListConversionEvents(global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.KeyEvent> CreateKeyEvent(global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.KeyEvent> UpdateKeyEvent(global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.KeyEvent> GetKeyEvent(global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteKeyEvent(global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse> ListKeyEvents(global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.CustomDimension> CreateCustomDimension(global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.CustomDimension> UpdateCustomDimension(global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse> ListCustomDimensions(global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomDimension(global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.CustomDimension> GetCustomDimension(global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.CustomMetric> CreateCustomMetric(global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.CustomMetric> UpdateCustomMetric(global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse> ListCustomMetrics(global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomMetric(global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.CustomMetric> GetCustomMetric(global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> GetDataRetentionSettings(global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> UpdateDataRetentionSettings(global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.DataStream> CreateDataStream(global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDataStream(global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.DataStream> UpdateDataStream(global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse> ListDataStreams(global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.DataStream> GetDataStream(global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse> RunAccessReport(global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AnalyticsAdminService</summary>
    public partial class AnalyticsAdminServiceClient : grpc::ClientBase<AnalyticsAdminServiceClient>
    {
      /// <summary>Creates a new client for AnalyticsAdminService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AnalyticsAdminServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AnalyticsAdminService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AnalyticsAdminServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AnalyticsAdminServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AnalyticsAdminServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Account GetAccount(global::Google.Analytics.Admin.V1Beta.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Account GetAccount(global::Google.Analytics.Admin.V1Beta.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Account> GetAccountAsync(global::Google.Analytics.Admin.V1Beta.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single Account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Account> GetAccountAsync(global::Google.Analytics.Admin.V1Beta.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListAccountsResponse ListAccounts(global::Google.Analytics.Admin.V1Beta.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListAccountsResponse ListAccounts(global::Google.Analytics.Admin.V1Beta.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccounts, null, options, request);
      }
      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListAccountsResponse> ListAccountsAsync(global::Google.Analytics.Admin.V1Beta.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all accounts accessible by the caller.
      ///
      /// Note that these accounts might not currently have GA properties.
      /// Soft-deleted (ie: "trashed") accounts are excluded by default.
      /// Returns an empty list if no relevant accounts are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListAccountsResponse> ListAccountsAsync(global::Google.Analytics.Admin.V1Beta.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccounts, null, options, request);
      }
      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccount(global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccount(global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccount, null, options, request);
      }
      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccountAsync(global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks target Account as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted accounts.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the accounts are not restored before the expiration time, the account
      /// and all child resources (eg: Properties, GoogleAdsLinks, Streams,
      /// AccessBindings) will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccountAsync(global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccount, null, options, request);
      }
      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Account UpdateAccount(global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Account UpdateAccount(global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAccount, null, options, request);
      }
      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Account> UpdateAccountAsync(global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Account> UpdateAccountAsync(global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAccount, null, options, request);
      }
      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse ProvisionAccountTicket(global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionAccountTicket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse ProvisionAccountTicket(global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ProvisionAccountTicket, null, options, request);
      }
      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse> ProvisionAccountTicketAsync(global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProvisionAccountTicketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Requests a ticket for creating an account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse> ProvisionAccountTicketAsync(global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ProvisionAccountTicket, null, options, request);
      }
      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse ListAccountSummaries(global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountSummaries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse ListAccountSummaries(global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccountSummaries, null, options, request);
      }
      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse> ListAccountSummariesAsync(global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountSummariesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns summaries of all accounts accessible by the caller.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse> ListAccountSummariesAsync(global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccountSummaries, null, options, request);
      }
      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Property GetProperty(global::Google.Analytics.Admin.V1Beta.GetPropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Property GetProperty(global::Google.Analytics.Admin.V1Beta.GetPropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProperty, null, options, request);
      }
      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Property> GetPropertyAsync(global::Google.Analytics.Admin.V1Beta.GetPropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single GA Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Property> GetPropertyAsync(global::Google.Analytics.Admin.V1Beta.GetPropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProperty, null, options, request);
      }
      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse ListProperties(global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProperties(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse ListProperties(global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProperties, null, options, request);
      }
      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse> ListPropertiesAsync(global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPropertiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns child Properties under the specified parent Account.
      ///
      /// Properties will be excluded if the caller does not have access.
      /// Soft-deleted (ie: "trashed") properties are excluded by default.
      /// Returns an empty list if no relevant properties are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse> ListPropertiesAsync(global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProperties, null, options, request);
      }
      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Property CreateProperty(global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Property CreateProperty(global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProperty, null, options, request);
      }
      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Property> CreatePropertyAsync(global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Google Analytics property with the specified location and
      /// attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Property> CreatePropertyAsync(global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProperty, null, options, request);
      }
      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Property DeleteProperty(global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Property DeleteProperty(global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProperty, null, options, request);
      }
      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Property> DeletePropertyAsync(global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeletePropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks target Property as soft-deleted (ie: "trashed") and returns it.
      ///
      /// This API does not have a method to restore soft-deleted properties.
      /// However, they can be restored using the Trash Can UI.
      ///
      /// If the properties are not restored before the expiration time, the Property
      /// and all child resources (eg: GoogleAdsLinks, Streams, AccessBindings)
      /// will be permanently purged.
      /// https://support.google.com/analytics/answer/6154772
      ///
      /// Returns an error if the target is not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Property> DeletePropertyAsync(global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProperty, null, options, request);
      }
      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Property UpdateProperty(global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProperty(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.Property UpdateProperty(global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProperty, null, options, request);
      }
      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Property> UpdatePropertyAsync(global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePropertyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.Property> UpdatePropertyAsync(global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProperty, null, options, request);
      }
      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.FirebaseLink CreateFirebaseLink(global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFirebaseLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.FirebaseLink CreateFirebaseLink(global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFirebaseLink, null, options, request);
      }
      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.FirebaseLink> CreateFirebaseLinkAsync(global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFirebaseLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a FirebaseLink.
      ///
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.FirebaseLink> CreateFirebaseLinkAsync(global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFirebaseLink, null, options, request);
      }
      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteFirebaseLink(global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFirebaseLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteFirebaseLink(global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFirebaseLink, null, options, request);
      }
      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFirebaseLinkAsync(global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFirebaseLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a FirebaseLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFirebaseLinkAsync(global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFirebaseLink, null, options, request);
      }
      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse ListFirebaseLinks(global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFirebaseLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse ListFirebaseLinks(global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFirebaseLinks, null, options, request);
      }
      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse> ListFirebaseLinksAsync(global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFirebaseLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists FirebaseLinks on a property.
      /// Properties can have at most one FirebaseLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse> ListFirebaseLinksAsync(global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFirebaseLinks, null, options, request);
      }
      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.GoogleAdsLink CreateGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGoogleAdsLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.GoogleAdsLink CreateGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> CreateGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateGoogleAdsLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a GoogleAdsLink.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> CreateGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.GoogleAdsLink UpdateGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGoogleAdsLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.GoogleAdsLink UpdateGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> UpdateGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGoogleAdsLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.GoogleAdsLink> UpdateGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGoogleAdsLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteGoogleAdsLink(global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteGoogleAdsLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a GoogleAdsLink on a property
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteGoogleAdsLinkAsync(global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteGoogleAdsLink, null, options, request);
      }
      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse ListGoogleAdsLinks(global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGoogleAdsLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse ListGoogleAdsLinks(global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGoogleAdsLinks, null, options, request);
      }
      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse> ListGoogleAdsLinksAsync(global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGoogleAdsLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists GoogleAdsLinks on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse> ListGoogleAdsLinksAsync(global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGoogleAdsLinks, null, options, request);
      }
      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataSharingSettings GetDataSharingSettings(global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataSharingSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataSharingSettings GetDataSharingSettings(global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataSharingSettings, null, options, request);
      }
      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataSharingSettings> GetDataSharingSettingsAsync(global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataSharingSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get data sharing settings on an account.
      /// Data sharing settings are singletons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataSharingSettings> GetDataSharingSettingsAsync(global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataSharingSettings, null, options, request);
      }
      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret GetMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMeasurementProtocolSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret GetMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> GetMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMeasurementProtocolSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> GetMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse ListMeasurementProtocolSecrets(global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMeasurementProtocolSecrets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse ListMeasurementProtocolSecrets(global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMeasurementProtocolSecrets, null, options, request);
      }
      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse> ListMeasurementProtocolSecretsAsync(global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMeasurementProtocolSecretsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns child MeasurementProtocolSecrets under the specified parent
      /// Property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse> ListMeasurementProtocolSecretsAsync(global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMeasurementProtocolSecrets, null, options, request);
      }
      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret CreateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMeasurementProtocolSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret CreateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> CreateMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMeasurementProtocolSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> CreateMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMeasurementProtocolSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMeasurementProtocolSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes target MeasurementProtocolSecret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret UpdateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMeasurementProtocolSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret UpdateMeasurementProtocolSecret(global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> UpdateMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMeasurementProtocolSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a measurement protocol secret.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret> UpdateMeasurementProtocolSecretAsync(global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMeasurementProtocolSecret, null, options, request);
      }
      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse AcknowledgeUserDataCollection(global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcknowledgeUserDataCollection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse AcknowledgeUserDataCollection(global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AcknowledgeUserDataCollection, null, options, request);
      }
      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse> AcknowledgeUserDataCollectionAsync(global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AcknowledgeUserDataCollectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Acknowledges the terms of user data collection for the specified property.
      ///
      /// This acknowledgement must be completed (either in the Google Analytics UI
      /// or through this API) before MeasurementProtocolSecret resources may be
      /// created.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse> AcknowledgeUserDataCollectionAsync(global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AcknowledgeUserDataCollection, null, options, request);
      }
      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse SearchChangeHistoryEvents(global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchChangeHistoryEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse SearchChangeHistoryEvents(global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchChangeHistoryEvents, null, options, request);
      }
      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse> SearchChangeHistoryEventsAsync(global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchChangeHistoryEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches through all changes to an account or its children given the
      /// specified set of filters.
      ///
      /// Only returns the subset of changes supported by the API. The UI may return
      /// additional changes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse> SearchChangeHistoryEventsAsync(global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchChangeHistoryEvents, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ConversionEvent CreateConversionEvent(global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConversionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ConversionEvent CreateConversionEvent(global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ConversionEvent> CreateConversionEventAsync(global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateConversionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `CreateKeyEvent` instead.
      /// Creates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ConversionEvent> CreateConversionEventAsync(global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ConversionEvent UpdateConversionEvent(global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConversionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ConversionEvent UpdateConversionEvent(global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ConversionEvent> UpdateConversionEventAsync(global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateConversionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `UpdateKeyEvent` instead.
      /// Updates a conversion event with the specified attributes.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ConversionEvent> UpdateConversionEventAsync(global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ConversionEvent GetConversionEvent(global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConversionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ConversionEvent GetConversionEvent(global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ConversionEvent> GetConversionEventAsync(global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetConversionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `GetKeyEvent` instead.
      /// Retrieve a single conversion event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ConversionEvent> GetConversionEventAsync(global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteConversionEvent(global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConversionEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteConversionEvent(global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversionEventAsync(global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteConversionEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `DeleteKeyEvent` instead.
      /// Deletes a conversion event in a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteConversionEventAsync(global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteConversionEvent, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse ListConversionEvents(global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConversionEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse ListConversionEvents(global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListConversionEvents, null, options, request);
      }
      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse> ListConversionEventsAsync(global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListConversionEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Use `ListKeyEvents` instead.
      /// Returns a list of conversion events in the specified parent property.
      ///
      /// Returns an empty list if no conversion events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse> ListConversionEventsAsync(global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListConversionEvents, null, options, request);
      }
      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.KeyEvent CreateKeyEvent(global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKeyEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.KeyEvent CreateKeyEvent(global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateKeyEvent, null, options, request);
      }
      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.KeyEvent> CreateKeyEventAsync(global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateKeyEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.KeyEvent> CreateKeyEventAsync(global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateKeyEvent, null, options, request);
      }
      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.KeyEvent UpdateKeyEvent(global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateKeyEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.KeyEvent UpdateKeyEvent(global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateKeyEvent, null, options, request);
      }
      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.KeyEvent> UpdateKeyEventAsync(global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateKeyEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.KeyEvent> UpdateKeyEventAsync(global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateKeyEvent, null, options, request);
      }
      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.KeyEvent GetKeyEvent(global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKeyEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.KeyEvent GetKeyEvent(global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetKeyEvent, null, options, request);
      }
      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.KeyEvent> GetKeyEventAsync(global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetKeyEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a single Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.KeyEvent> GetKeyEventAsync(global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetKeyEvent, null, options, request);
      }
      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteKeyEvent(global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteKeyEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteKeyEvent(global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteKeyEvent, null, options, request);
      }
      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteKeyEventAsync(global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteKeyEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Key Event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteKeyEventAsync(global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteKeyEvent, null, options, request);
      }
      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse ListKeyEvents(global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListKeyEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse ListKeyEvents(global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListKeyEvents, null, options, request);
      }
      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse> ListKeyEventsAsync(global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListKeyEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a list of Key Events in the specified parent property.
      /// Returns an empty list if no Key Events are found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse> ListKeyEventsAsync(global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListKeyEvents, null, options, request);
      }
      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomDimension CreateCustomDimension(global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomDimension(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomDimension CreateCustomDimension(global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomDimension, null, options, request);
      }
      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomDimension> CreateCustomDimensionAsync(global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomDimensionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomDimension> CreateCustomDimensionAsync(global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomDimension, null, options, request);
      }
      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomDimension UpdateCustomDimension(global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomDimension(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomDimension UpdateCustomDimension(global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomDimension, null, options, request);
      }
      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomDimension> UpdateCustomDimensionAsync(global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomDimensionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomDimension> UpdateCustomDimensionAsync(global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomDimension, null, options, request);
      }
      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse ListCustomDimensions(global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomDimensions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse ListCustomDimensions(global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCustomDimensions, null, options, request);
      }
      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse> ListCustomDimensionsAsync(global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomDimensionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CustomDimensions on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse> ListCustomDimensionsAsync(global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCustomDimensions, null, options, request);
      }
      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveCustomDimension(global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveCustomDimension(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveCustomDimension(global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ArchiveCustomDimension, null, options, request);
      }
      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomDimensionAsync(global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveCustomDimensionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives a CustomDimension on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomDimensionAsync(global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ArchiveCustomDimension, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomDimension GetCustomDimension(global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomDimension(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomDimension GetCustomDimension(global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomDimension, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomDimension> GetCustomDimensionAsync(global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomDimensionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CustomDimension.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomDimension> GetCustomDimensionAsync(global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomDimension, null, options, request);
      }
      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomMetric CreateCustomMetric(global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomMetric CreateCustomMetric(global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCustomMetric, null, options, request);
      }
      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomMetric> CreateCustomMetricAsync(global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCustomMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomMetric> CreateCustomMetricAsync(global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCustomMetric, null, options, request);
      }
      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomMetric UpdateCustomMetric(global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomMetric UpdateCustomMetric(global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomMetric, null, options, request);
      }
      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomMetric> UpdateCustomMetricAsync(global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomMetric> UpdateCustomMetricAsync(global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomMetric, null, options, request);
      }
      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse ListCustomMetrics(global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomMetrics(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse ListCustomMetrics(global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCustomMetrics, null, options, request);
      }
      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse> ListCustomMetricsAsync(global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomMetricsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists CustomMetrics on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse> ListCustomMetricsAsync(global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCustomMetrics, null, options, request);
      }
      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveCustomMetric(global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveCustomMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ArchiveCustomMetric(global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ArchiveCustomMetric, null, options, request);
      }
      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomMetricAsync(global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArchiveCustomMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Archives a CustomMetric on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ArchiveCustomMetricAsync(global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ArchiveCustomMetric, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomMetric GetCustomMetric(global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomMetric(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.CustomMetric GetCustomMetric(global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomMetric, null, options, request);
      }
      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomMetric> GetCustomMetricAsync(global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomMetricAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single CustomMetric.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.CustomMetric> GetCustomMetricAsync(global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomMetric, null, options, request);
      }
      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataRetentionSettings GetDataRetentionSettings(global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataRetentionSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataRetentionSettings GetDataRetentionSettings(global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataRetentionSettings, null, options, request);
      }
      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> GetDataRetentionSettingsAsync(global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataRetentionSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> GetDataRetentionSettingsAsync(global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataRetentionSettings, null, options, request);
      }
      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataRetentionSettings UpdateDataRetentionSettings(global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataRetentionSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataRetentionSettings UpdateDataRetentionSettings(global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDataRetentionSettings, null, options, request);
      }
      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> UpdateDataRetentionSettingsAsync(global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataRetentionSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the singleton data retention settings for this property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataRetentionSettings> UpdateDataRetentionSettingsAsync(global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDataRetentionSettings, null, options, request);
      }
      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataStream CreateDataStream(global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDataStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataStream CreateDataStream(global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDataStream, null, options, request);
      }
      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataStream> CreateDataStreamAsync(global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDataStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataStream> CreateDataStreamAsync(global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDataStream, null, options, request);
      }
      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDataStream(global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDataStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteDataStream(global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDataStream, null, options, request);
      }
      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDataStreamAsync(global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDataStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteDataStreamAsync(global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDataStream, null, options, request);
      }
      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataStream UpdateDataStream(global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataStream UpdateDataStream(global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDataStream, null, options, request);
      }
      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataStream> UpdateDataStreamAsync(global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDataStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a DataStream on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataStream> UpdateDataStreamAsync(global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDataStream, null, options, request);
      }
      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse ListDataStreams(global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDataStreams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse ListDataStreams(global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDataStreams, null, options, request);
      }
      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse> ListDataStreamsAsync(global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDataStreamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists DataStreams on a property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse> ListDataStreamsAsync(global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDataStreams, null, options, request);
      }
      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataStream GetDataStream(global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataStream(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.DataStream GetDataStream(global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataStream, null, options, request);
      }
      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataStream> GetDataStreamAsync(global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataStreamAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single DataStream.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.DataStream> GetDataStreamAsync(global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataStream, null, options, request);
      }
      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse RunAccessReport(global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunAccessReport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse RunAccessReport(global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunAccessReport, null, options, request);
      }
      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse> RunAccessReportAsync(global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunAccessReportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a customized report of data access records. The report provides
      /// records of each time a user reads Google Analytics reporting data. Access
      /// records are retained for up to 2 years.
      ///
      /// Data Access Reports can be requested for a property. Reports may be
      /// requested for any property, but dimensions that aren't related to quota can
      /// only be requested on Google Analytics 360 properties. This method is only
      /// available to Administrators.
      ///
      /// These data access records include GA UI Reporting, GA UI Explorations,
      /// GA Data API, and other products like Firebase &amp; Admob that can retrieve
      /// data from Google Analytics through a linkage. These records don't include
      /// property configuration changes like adding a stream or changing a
      /// property's time zone. For configuration change history, see
      /// [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
      ///
      /// To give your feedback on this API, complete the [Google Analytics Access
      /// Reports
      /// feedback](https://docs.google.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform)
      /// form.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse> RunAccessReportAsync(global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunAccessReport, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AnalyticsAdminServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AnalyticsAdminServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AnalyticsAdminServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAccount, serviceImpl.GetAccount)
          .AddMethod(__Method_ListAccounts, serviceImpl.ListAccounts)
          .AddMethod(__Method_DeleteAccount, serviceImpl.DeleteAccount)
          .AddMethod(__Method_UpdateAccount, serviceImpl.UpdateAccount)
          .AddMethod(__Method_ProvisionAccountTicket, serviceImpl.ProvisionAccountTicket)
          .AddMethod(__Method_ListAccountSummaries, serviceImpl.ListAccountSummaries)
          .AddMethod(__Method_GetProperty, serviceImpl.GetProperty)
          .AddMethod(__Method_ListProperties, serviceImpl.ListProperties)
          .AddMethod(__Method_CreateProperty, serviceImpl.CreateProperty)
          .AddMethod(__Method_DeleteProperty, serviceImpl.DeleteProperty)
          .AddMethod(__Method_UpdateProperty, serviceImpl.UpdateProperty)
          .AddMethod(__Method_CreateFirebaseLink, serviceImpl.CreateFirebaseLink)
          .AddMethod(__Method_DeleteFirebaseLink, serviceImpl.DeleteFirebaseLink)
          .AddMethod(__Method_ListFirebaseLinks, serviceImpl.ListFirebaseLinks)
          .AddMethod(__Method_CreateGoogleAdsLink, serviceImpl.CreateGoogleAdsLink)
          .AddMethod(__Method_UpdateGoogleAdsLink, serviceImpl.UpdateGoogleAdsLink)
          .AddMethod(__Method_DeleteGoogleAdsLink, serviceImpl.DeleteGoogleAdsLink)
          .AddMethod(__Method_ListGoogleAdsLinks, serviceImpl.ListGoogleAdsLinks)
          .AddMethod(__Method_GetDataSharingSettings, serviceImpl.GetDataSharingSettings)
          .AddMethod(__Method_GetMeasurementProtocolSecret, serviceImpl.GetMeasurementProtocolSecret)
          .AddMethod(__Method_ListMeasurementProtocolSecrets, serviceImpl.ListMeasurementProtocolSecrets)
          .AddMethod(__Method_CreateMeasurementProtocolSecret, serviceImpl.CreateMeasurementProtocolSecret)
          .AddMethod(__Method_DeleteMeasurementProtocolSecret, serviceImpl.DeleteMeasurementProtocolSecret)
          .AddMethod(__Method_UpdateMeasurementProtocolSecret, serviceImpl.UpdateMeasurementProtocolSecret)
          .AddMethod(__Method_AcknowledgeUserDataCollection, serviceImpl.AcknowledgeUserDataCollection)
          .AddMethod(__Method_SearchChangeHistoryEvents, serviceImpl.SearchChangeHistoryEvents)
          .AddMethod(__Method_CreateConversionEvent, serviceImpl.CreateConversionEvent)
          .AddMethod(__Method_UpdateConversionEvent, serviceImpl.UpdateConversionEvent)
          .AddMethod(__Method_GetConversionEvent, serviceImpl.GetConversionEvent)
          .AddMethod(__Method_DeleteConversionEvent, serviceImpl.DeleteConversionEvent)
          .AddMethod(__Method_ListConversionEvents, serviceImpl.ListConversionEvents)
          .AddMethod(__Method_CreateKeyEvent, serviceImpl.CreateKeyEvent)
          .AddMethod(__Method_UpdateKeyEvent, serviceImpl.UpdateKeyEvent)
          .AddMethod(__Method_GetKeyEvent, serviceImpl.GetKeyEvent)
          .AddMethod(__Method_DeleteKeyEvent, serviceImpl.DeleteKeyEvent)
          .AddMethod(__Method_ListKeyEvents, serviceImpl.ListKeyEvents)
          .AddMethod(__Method_CreateCustomDimension, serviceImpl.CreateCustomDimension)
          .AddMethod(__Method_UpdateCustomDimension, serviceImpl.UpdateCustomDimension)
          .AddMethod(__Method_ListCustomDimensions, serviceImpl.ListCustomDimensions)
          .AddMethod(__Method_ArchiveCustomDimension, serviceImpl.ArchiveCustomDimension)
          .AddMethod(__Method_GetCustomDimension, serviceImpl.GetCustomDimension)
          .AddMethod(__Method_CreateCustomMetric, serviceImpl.CreateCustomMetric)
          .AddMethod(__Method_UpdateCustomMetric, serviceImpl.UpdateCustomMetric)
          .AddMethod(__Method_ListCustomMetrics, serviceImpl.ListCustomMetrics)
          .AddMethod(__Method_ArchiveCustomMetric, serviceImpl.ArchiveCustomMetric)
          .AddMethod(__Method_GetCustomMetric, serviceImpl.GetCustomMetric)
          .AddMethod(__Method_GetDataRetentionSettings, serviceImpl.GetDataRetentionSettings)
          .AddMethod(__Method_UpdateDataRetentionSettings, serviceImpl.UpdateDataRetentionSettings)
          .AddMethod(__Method_CreateDataStream, serviceImpl.CreateDataStream)
          .AddMethod(__Method_DeleteDataStream, serviceImpl.DeleteDataStream)
          .AddMethod(__Method_UpdateDataStream, serviceImpl.UpdateDataStream)
          .AddMethod(__Method_ListDataStreams, serviceImpl.ListDataStreams)
          .AddMethod(__Method_GetDataStream, serviceImpl.GetDataStream)
          .AddMethod(__Method_RunAccessReport, serviceImpl.RunAccessReport).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AnalyticsAdminServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetAccountRequest, global::Google.Analytics.Admin.V1Beta.Account>(serviceImpl.GetAccount));
      serviceBinder.AddMethod(__Method_ListAccounts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListAccountsRequest, global::Google.Analytics.Admin.V1Beta.ListAccountsResponse>(serviceImpl.ListAccounts));
      serviceBinder.AddMethod(__Method_DeleteAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAccount));
      serviceBinder.AddMethod(__Method_UpdateAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateAccountRequest, global::Google.Analytics.Admin.V1Beta.Account>(serviceImpl.UpdateAccount));
      serviceBinder.AddMethod(__Method_ProvisionAccountTicket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketRequest, global::Google.Analytics.Admin.V1Beta.ProvisionAccountTicketResponse>(serviceImpl.ProvisionAccountTicket));
      serviceBinder.AddMethod(__Method_ListAccountSummaries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListAccountSummariesRequest, global::Google.Analytics.Admin.V1Beta.ListAccountSummariesResponse>(serviceImpl.ListAccountSummaries));
      serviceBinder.AddMethod(__Method_GetProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetPropertyRequest, global::Google.Analytics.Admin.V1Beta.Property>(serviceImpl.GetProperty));
      serviceBinder.AddMethod(__Method_ListProperties, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListPropertiesRequest, global::Google.Analytics.Admin.V1Beta.ListPropertiesResponse>(serviceImpl.ListProperties));
      serviceBinder.AddMethod(__Method_CreateProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreatePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property>(serviceImpl.CreateProperty));
      serviceBinder.AddMethod(__Method_DeleteProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.DeletePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property>(serviceImpl.DeleteProperty));
      serviceBinder.AddMethod(__Method_UpdateProperty, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdatePropertyRequest, global::Google.Analytics.Admin.V1Beta.Property>(serviceImpl.UpdateProperty));
      serviceBinder.AddMethod(__Method_CreateFirebaseLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreateFirebaseLinkRequest, global::Google.Analytics.Admin.V1Beta.FirebaseLink>(serviceImpl.CreateFirebaseLink));
      serviceBinder.AddMethod(__Method_DeleteFirebaseLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.DeleteFirebaseLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteFirebaseLink));
      serviceBinder.AddMethod(__Method_ListFirebaseLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksRequest, global::Google.Analytics.Admin.V1Beta.ListFirebaseLinksResponse>(serviceImpl.ListFirebaseLinks));
      serviceBinder.AddMethod(__Method_CreateGoogleAdsLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Beta.GoogleAdsLink>(serviceImpl.CreateGoogleAdsLink));
      serviceBinder.AddMethod(__Method_UpdateGoogleAdsLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateGoogleAdsLinkRequest, global::Google.Analytics.Admin.V1Beta.GoogleAdsLink>(serviceImpl.UpdateGoogleAdsLink));
      serviceBinder.AddMethod(__Method_DeleteGoogleAdsLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.DeleteGoogleAdsLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteGoogleAdsLink));
      serviceBinder.AddMethod(__Method_ListGoogleAdsLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksRequest, global::Google.Analytics.Admin.V1Beta.ListGoogleAdsLinksResponse>(serviceImpl.ListGoogleAdsLinks));
      serviceBinder.AddMethod(__Method_GetDataSharingSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetDataSharingSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataSharingSettings>(serviceImpl.GetDataSharingSettings));
      serviceBinder.AddMethod(__Method_GetMeasurementProtocolSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret>(serviceImpl.GetMeasurementProtocolSecret));
      serviceBinder.AddMethod(__Method_ListMeasurementProtocolSecrets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsRequest, global::Google.Analytics.Admin.V1Beta.ListMeasurementProtocolSecretsResponse>(serviceImpl.ListMeasurementProtocolSecrets));
      serviceBinder.AddMethod(__Method_CreateMeasurementProtocolSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret>(serviceImpl.CreateMeasurementProtocolSecret));
      serviceBinder.AddMethod(__Method_DeleteMeasurementProtocolSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.DeleteMeasurementProtocolSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteMeasurementProtocolSecret));
      serviceBinder.AddMethod(__Method_UpdateMeasurementProtocolSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateMeasurementProtocolSecretRequest, global::Google.Analytics.Admin.V1Beta.MeasurementProtocolSecret>(serviceImpl.UpdateMeasurementProtocolSecret));
      serviceBinder.AddMethod(__Method_AcknowledgeUserDataCollection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionRequest, global::Google.Analytics.Admin.V1Beta.AcknowledgeUserDataCollectionResponse>(serviceImpl.AcknowledgeUserDataCollection));
      serviceBinder.AddMethod(__Method_SearchChangeHistoryEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsRequest, global::Google.Analytics.Admin.V1Beta.SearchChangeHistoryEventsResponse>(serviceImpl.SearchChangeHistoryEvents));
      serviceBinder.AddMethod(__Method_CreateConversionEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreateConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent>(serviceImpl.CreateConversionEvent));
      serviceBinder.AddMethod(__Method_UpdateConversionEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent>(serviceImpl.UpdateConversionEvent));
      serviceBinder.AddMethod(__Method_GetConversionEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetConversionEventRequest, global::Google.Analytics.Admin.V1Beta.ConversionEvent>(serviceImpl.GetConversionEvent));
      serviceBinder.AddMethod(__Method_DeleteConversionEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.DeleteConversionEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteConversionEvent));
      serviceBinder.AddMethod(__Method_ListConversionEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListConversionEventsRequest, global::Google.Analytics.Admin.V1Beta.ListConversionEventsResponse>(serviceImpl.ListConversionEvents));
      serviceBinder.AddMethod(__Method_CreateKeyEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreateKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent>(serviceImpl.CreateKeyEvent));
      serviceBinder.AddMethod(__Method_UpdateKeyEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent>(serviceImpl.UpdateKeyEvent));
      serviceBinder.AddMethod(__Method_GetKeyEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetKeyEventRequest, global::Google.Analytics.Admin.V1Beta.KeyEvent>(serviceImpl.GetKeyEvent));
      serviceBinder.AddMethod(__Method_DeleteKeyEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.DeleteKeyEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteKeyEvent));
      serviceBinder.AddMethod(__Method_ListKeyEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListKeyEventsRequest, global::Google.Analytics.Admin.V1Beta.ListKeyEventsResponse>(serviceImpl.ListKeyEvents));
      serviceBinder.AddMethod(__Method_CreateCustomDimension, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreateCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension>(serviceImpl.CreateCustomDimension));
      serviceBinder.AddMethod(__Method_UpdateCustomDimension, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension>(serviceImpl.UpdateCustomDimension));
      serviceBinder.AddMethod(__Method_ListCustomDimensions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsRequest, global::Google.Analytics.Admin.V1Beta.ListCustomDimensionsResponse>(serviceImpl.ListCustomDimensions));
      serviceBinder.AddMethod(__Method_ArchiveCustomDimension, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ArchiveCustomDimensionRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ArchiveCustomDimension));
      serviceBinder.AddMethod(__Method_GetCustomDimension, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetCustomDimensionRequest, global::Google.Analytics.Admin.V1Beta.CustomDimension>(serviceImpl.GetCustomDimension));
      serviceBinder.AddMethod(__Method_CreateCustomMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreateCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric>(serviceImpl.CreateCustomMetric));
      serviceBinder.AddMethod(__Method_UpdateCustomMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric>(serviceImpl.UpdateCustomMetric));
      serviceBinder.AddMethod(__Method_ListCustomMetrics, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListCustomMetricsRequest, global::Google.Analytics.Admin.V1Beta.ListCustomMetricsResponse>(serviceImpl.ListCustomMetrics));
      serviceBinder.AddMethod(__Method_ArchiveCustomMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ArchiveCustomMetricRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ArchiveCustomMetric));
      serviceBinder.AddMethod(__Method_GetCustomMetric, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetCustomMetricRequest, global::Google.Analytics.Admin.V1Beta.CustomMetric>(serviceImpl.GetCustomMetric));
      serviceBinder.AddMethod(__Method_GetDataRetentionSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataRetentionSettings>(serviceImpl.GetDataRetentionSettings));
      serviceBinder.AddMethod(__Method_UpdateDataRetentionSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateDataRetentionSettingsRequest, global::Google.Analytics.Admin.V1Beta.DataRetentionSettings>(serviceImpl.UpdateDataRetentionSettings));
      serviceBinder.AddMethod(__Method_CreateDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.CreateDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream>(serviceImpl.CreateDataStream));
      serviceBinder.AddMethod(__Method_DeleteDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.DeleteDataStreamRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteDataStream));
      serviceBinder.AddMethod(__Method_UpdateDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.UpdateDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream>(serviceImpl.UpdateDataStream));
      serviceBinder.AddMethod(__Method_ListDataStreams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.ListDataStreamsRequest, global::Google.Analytics.Admin.V1Beta.ListDataStreamsResponse>(serviceImpl.ListDataStreams));
      serviceBinder.AddMethod(__Method_GetDataStream, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.GetDataStreamRequest, global::Google.Analytics.Admin.V1Beta.DataStream>(serviceImpl.GetDataStream));
      serviceBinder.AddMethod(__Method_RunAccessReport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Analytics.Admin.V1Beta.RunAccessReportRequest, global::Google.Analytics.Admin.V1Beta.RunAccessReportResponse>(serviceImpl.RunAccessReport));
    }

  }
}
#endregion
