// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/fleetengine/delivery/v1/tasks.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Maps.FleetEngine.Delivery.V1 {

  /// <summary>Holder for reflection information generated from google/maps/fleetengine/delivery/v1/tasks.proto</summary>
  public static partial class TasksReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/fleetengine/delivery/v1/tasks.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TasksReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci9nb29nbGUvbWFwcy9mbGVldGVuZ2luZS9kZWxpdmVyeS92MS90YXNrcy5w",
            "cm90bxIcbWFwcy5mbGVldGVuZ2luZS5kZWxpdmVyeS52MRofZ29vZ2xlL2Fw",
            "aS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNvdXJjZS5w",
            "cm90bxowZ29vZ2xlL21hcHMvZmxlZXRlbmdpbmUvZGVsaXZlcnkvdjEvY29t",
            "bW9uLnByb3RvGjtnb29nbGUvbWFwcy9mbGVldGVuZ2luZS9kZWxpdmVyeS92",
            "MS9kZWxpdmVyeV92ZWhpY2xlcy5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1",
            "cmF0aW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "IrcMCgRUYXNrEgwKBG5hbWUYASABKAkSPQoEdHlwZRgCIAEoDjInLm1hcHMu",
            "ZmxlZXRlbmdpbmUuZGVsaXZlcnkudjEuVGFzay5UeXBlQgbgQQLgQQUSPAoF",
            "c3RhdGUYAyABKA4yKC5tYXBzLmZsZWV0ZW5naW5lLmRlbGl2ZXJ5LnYxLlRh",
            "c2suU3RhdGVCA+BBAhJECgx0YXNrX291dGNvbWUYCSABKA4yLi5tYXBzLmZs",
            "ZWV0ZW5naW5lLmRlbGl2ZXJ5LnYxLlRhc2suVGFza091dGNvbWUSNQoRdGFz",
            "a19vdXRjb21lX3RpbWUYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEkkKFXRhc2tfb3V0Y29tZV9sb2NhdGlvbhgLIAEoCzIqLm1hcHMuZmxl",
            "ZXRlbmdpbmUuZGVsaXZlcnkudjEuTG9jYXRpb25JbmZvEmIKHHRhc2tfb3V0",
            "Y29tZV9sb2NhdGlvbl9zb3VyY2UYDCABKA4yPC5tYXBzLmZsZWV0ZW5naW5l",
            "LmRlbGl2ZXJ5LnYxLlRhc2suVGFza091dGNvbWVMb2NhdGlvblNvdXJjZRIY",
            "Cgt0cmFja2luZ19pZBgEIAEoCUID4EEFEiAKE2RlbGl2ZXJ5X3ZlaGljbGVf",
            "aWQYBSABKAlCA+BBAxJJChBwbGFubmVkX2xvY2F0aW9uGAYgASgLMioubWFw",
            "cy5mbGVldGVuZ2luZS5kZWxpdmVyeS52MS5Mb2NhdGlvbkluZm9CA+BBBRI4",
            "Cg10YXNrX2R1cmF0aW9uGAcgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0",
            "aW9uQgbgQQLgQQUSRAoSdGFyZ2V0X3RpbWVfd2luZG93GA4gASgLMigubWFw",
            "cy5mbGVldGVuZ2luZS5kZWxpdmVyeS52MS5UaW1lV2luZG93ElgKFGpvdXJu",
            "ZXlfc2hhcmluZ19pbmZvGAggASgLMjUubWFwcy5mbGVldGVuZ2luZS5kZWxp",
            "dmVyeS52MS5UYXNrLkpvdXJuZXlTaGFyaW5nSW5mb0ID4EEDElcKGXRhc2tf",
            "dHJhY2tpbmdfdmlld19jb25maWcYDSABKAsyNC5tYXBzLmZsZWV0ZW5naW5l",
            "LmRlbGl2ZXJ5LnYxLlRhc2tUcmFja2luZ1ZpZXdDb25maWcSPwoKYXR0cmli",
            "dXRlcxgPIAMoCzIrLm1hcHMuZmxlZXRlbmdpbmUuZGVsaXZlcnkudjEuVGFz",
            "a0F0dHJpYnV0ZRrkAQoSSm91cm5leVNoYXJpbmdJbmZvEl8KInJlbWFpbmlu",
            "Z192ZWhpY2xlX2pvdXJuZXlfc2VnbWVudHMYASADKAsyMy5tYXBzLmZsZWV0",
            "ZW5naW5lLmRlbGl2ZXJ5LnYxLlZlaGljbGVKb3VybmV5U2VnbWVudBJMCg1s",
            "YXN0X2xvY2F0aW9uGAIgASgLMjUubWFwcy5mbGVldGVuZ2luZS5kZWxpdmVy",
            "eS52MS5EZWxpdmVyeVZlaGljbGVMb2NhdGlvbhIfChdsYXN0X2xvY2F0aW9u",
            "X3NuYXBwYWJsZRgDIAEoCCJbCgRUeXBlEhQKEFRZUEVfVU5TUEVDSUZJRUQQ",
            "ABIKCgZQSUNLVVAQARIMCghERUxJVkVSWRACEhIKDlNDSEVEVUxFRF9TVE9Q",
            "EAMSDwoLVU5BVkFJTEFCTEUQBCI0CgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJ",
            "RklFRBAAEggKBE9QRU4QARIKCgZDTE9TRUQQAiJGCgtUYXNrT3V0Y29tZRIc",
            "ChhUQVNLX09VVENPTUVfVU5TUEVDSUZJRUQQABINCglTVUNDRUVERUQQARIK",
            "CgZGQUlMRUQQAiJyChlUYXNrT3V0Y29tZUxvY2F0aW9uU291cmNlEiwKKFRB",
            "U0tfT1VUQ09NRV9MT0NBVElPTl9TT1VSQ0VfVU5TUEVDSUZJRUQQABIMCghQ",
            "Uk9WSURFUhACEhkKFUxBU1RfVkVISUNMRV9MT0NBVElPThADOkfqQUQKH2Zs",
            "ZWV0ZW5naW5lLmdvb2dsZWFwaXMuY29tL1Rhc2sSIXByb3ZpZGVycy97cHJv",
            "dmlkZXJ9L3Rhc2tzL3t0YXNrfSLLBwoWVGFza1RyYWNraW5nVmlld0NvbmZp",
            "ZxJvCiByb3V0ZV9wb2x5bGluZV9wb2ludHNfdmlzaWJpbGl0eRgBIAEoCzJF",
            "Lm1hcHMuZmxlZXRlbmdpbmUuZGVsaXZlcnkudjEuVGFza1RyYWNraW5nVmll",
            "d0NvbmZpZy5WaXNpYmlsaXR5T3B0aW9uEnAKIWVzdGltYXRlZF9hcnJpdmFs",
            "X3RpbWVfdmlzaWJpbGl0eRgCIAEoCzJFLm1hcHMuZmxlZXRlbmdpbmUuZGVs",
            "aXZlcnkudjEuVGFza1RyYWNraW5nVmlld0NvbmZpZy5WaXNpYmlsaXR5T3B0",
            "aW9uEngKKWVzdGltYXRlZF90YXNrX2NvbXBsZXRpb25fdGltZV92aXNpYmls",
            "aXR5GAMgASgLMkUubWFwcy5mbGVldGVuZ2luZS5kZWxpdmVyeS52MS5UYXNr",
            "VHJhY2tpbmdWaWV3Q29uZmlnLlZpc2liaWxpdHlPcHRpb24SdAolcmVtYWlu",
            "aW5nX2RyaXZpbmdfZGlzdGFuY2VfdmlzaWJpbGl0eRgEIAEoCzJFLm1hcHMu",
            "ZmxlZXRlbmdpbmUuZGVsaXZlcnkudjEuVGFza1RyYWNraW5nVmlld0NvbmZp",
            "Zy5WaXNpYmlsaXR5T3B0aW9uEm4KH3JlbWFpbmluZ19zdG9wX2NvdW50X3Zp",
            "c2liaWxpdHkYBSABKAsyRS5tYXBzLmZsZWV0ZW5naW5lLmRlbGl2ZXJ5LnYx",
            "LlRhc2tUcmFja2luZ1ZpZXdDb25maWcuVmlzaWJpbGl0eU9wdGlvbhJqCht2",
            "ZWhpY2xlX2xvY2F0aW9uX3Zpc2liaWxpdHkYBiABKAsyRS5tYXBzLmZsZWV0",
            "ZW5naW5lLmRlbGl2ZXJ5LnYxLlRhc2tUcmFja2luZ1ZpZXdDb25maWcuVmlz",
            "aWJpbGl0eU9wdGlvbhqBAgoQVmlzaWJpbGl0eU9wdGlvbhIoCh5yZW1haW5p",
            "bmdfc3RvcF9jb3VudF90aHJlc2hvbGQYASABKAVIABJUCi9kdXJhdGlvbl91",
            "bnRpbF9lc3RpbWF0ZWRfYXJyaXZhbF90aW1lX3RocmVzaG9sZBgCIAEoCzIZ",
            "Lmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkgAEjUKK3JlbWFpbmluZ19kcml2",
            "aW5nX2Rpc3RhbmNlX21ldGVyc190aHJlc2hvbGQYAyABKAVIABIQCgZhbHdh",
            "eXMYBCABKAhIABIPCgVuZXZlchgFIAEoCEgAQhMKEXZpc2liaWxpdHlfb3B0",
            "aW9uQvoBCidjb20uZ29vZ2xlLm1hcHMuZmxlZXRlbmdpbmUuZGVsaXZlcnku",
            "djFCBVRhc2tzUAFaSWNsb3VkLmdvb2dsZS5jb20vZ28vbWFwcy9mbGVldGVu",
            "Z2luZS9kZWxpdmVyeS9hcGl2MS9kZWxpdmVyeXBiO2RlbGl2ZXJ5cGKiAgRD",
            "RkVEqgIjR29vZ2xlLk1hcHMuRmxlZXRFbmdpbmUuRGVsaXZlcnkuVjHKAiNH",
            "b29nbGVcTWFwc1xGbGVldEVuZ2luZVxEZWxpdmVyeVxWMeoCJ0dvb2dsZTo6",
            "TWFwczo6RmxlZXRFbmdpbmU6OkRlbGl2ZXJ5OjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Maps.FleetEngine.Delivery.V1.CommonReflection.Descriptor, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehiclesReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.FleetEngine.Delivery.V1.Task), global::Google.Maps.FleetEngine.Delivery.V1.Task.Parser, new[]{ "Name", "Type", "State", "TaskOutcome", "TaskOutcomeTime", "TaskOutcomeLocation", "TaskOutcomeLocationSource", "TrackingId", "DeliveryVehicleId", "PlannedLocation", "TaskDuration", "TargetTimeWindow", "JourneySharingInfo", "TaskTrackingViewConfig", "Attributes" }, null, new[]{ typeof(global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type), typeof(global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State), typeof(global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome), typeof(global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.JourneySharingInfo), global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.JourneySharingInfo.Parser, new[]{ "RemainingVehicleJourneySegments", "LastLocation", "LastLocationSnappable" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig), global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Parser, new[]{ "RoutePolylinePointsVisibility", "EstimatedArrivalTimeVisibility", "EstimatedTaskCompletionTimeVisibility", "RemainingDrivingDistanceVisibility", "RemainingStopCountVisibility", "VehicleLocationVisibility" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption), global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption.Parser, new[]{ "RemainingStopCountThreshold", "DurationUntilEstimatedArrivalTimeThreshold", "RemainingDrivingDistanceMetersThreshold", "Always", "Never" }, new[]{ "VisibilityOption" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A Task in the Delivery API represents a single action to track. In general,
  /// there is a distinction between shipment-related Tasks and break Tasks. A
  /// shipment can have multiple Tasks associated with it. For example, there could
  /// be one Task for the pickup, and one for the drop-off or transfer. Also,
  /// different Tasks for a given shipment can be handled by different vehicles.
  /// For example, one vehicle could handle the pickup, driving the shipment to the
  /// hub, while another vehicle drives the same shipment from the hub to the
  /// drop-off location.
  ///
  /// Note: gRPC and REST APIs use different field naming conventions. For example,
  /// the `Task.journey_sharing_info` field in the gRPC API and the
  /// `Task.journeySharingInfo` field in the REST API refer to the same
  /// field.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Task : pb::IMessage<Task>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Task> _parser = new pb::MessageParser<Task>(() => new Task());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Task> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Maps.FleetEngine.Delivery.V1.TasksReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Task() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Task(Task other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      state_ = other.state_;
      taskOutcome_ = other.taskOutcome_;
      taskOutcomeTime_ = other.taskOutcomeTime_ != null ? other.taskOutcomeTime_.Clone() : null;
      taskOutcomeLocation_ = other.taskOutcomeLocation_ != null ? other.taskOutcomeLocation_.Clone() : null;
      taskOutcomeLocationSource_ = other.taskOutcomeLocationSource_;
      trackingId_ = other.trackingId_;
      deliveryVehicleId_ = other.deliveryVehicleId_;
      plannedLocation_ = other.plannedLocation_ != null ? other.plannedLocation_.Clone() : null;
      taskDuration_ = other.taskDuration_ != null ? other.taskDuration_.Clone() : null;
      targetTimeWindow_ = other.targetTimeWindow_ != null ? other.targetTimeWindow_.Clone() : null;
      journeySharingInfo_ = other.journeySharingInfo_ != null ? other.journeySharingInfo_.Clone() : null;
      taskTrackingViewConfig_ = other.taskTrackingViewConfig_ != null ? other.taskTrackingViewConfig_.Clone() : null;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Task Clone() {
      return new Task(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Must be in the format `providers/{provider}/tasks/{task}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type type_ = global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type.Unspecified;
    /// <summary>
    /// Required. Immutable. Defines the type of the Task. For example, a break or
    /// shipment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State state_ = global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State.Unspecified;
    /// <summary>
    /// Required. The current execution state of the Task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "task_outcome" field.</summary>
    public const int TaskOutcomeFieldNumber = 9;
    private global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome taskOutcome_ = global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome.Unspecified;
    /// <summary>
    /// The outcome of the Task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome TaskOutcome {
      get { return taskOutcome_; }
      set {
        taskOutcome_ = value;
      }
    }

    /// <summary>Field number for the "task_outcome_time" field.</summary>
    public const int TaskOutcomeTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp taskOutcomeTime_;
    /// <summary>
    /// The timestamp that indicates when the `Task`'s outcome was set by the
    /// provider.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp TaskOutcomeTime {
      get { return taskOutcomeTime_; }
      set {
        taskOutcomeTime_ = value;
      }
    }

    /// <summary>Field number for the "task_outcome_location" field.</summary>
    public const int TaskOutcomeLocationFieldNumber = 11;
    private global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo taskOutcomeLocation_;
    /// <summary>
    /// The location where the `Task`'s outcome was set. This value is updated as
    /// part of `UpdateTask`. If this value isn't explicitly updated by the
    /// provider, then Fleet Engine populates it by default with the last known
    /// vehicle location (the *raw* location).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo TaskOutcomeLocation {
      get { return taskOutcomeLocation_; }
      set {
        taskOutcomeLocation_ = value;
      }
    }

    /// <summary>Field number for the "task_outcome_location_source" field.</summary>
    public const int TaskOutcomeLocationSourceFieldNumber = 12;
    private global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource taskOutcomeLocationSource_ = global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource.Unspecified;
    /// <summary>
    /// Indicates where the value of the `task_outcome_location` came from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource TaskOutcomeLocationSource {
      get { return taskOutcomeLocationSource_; }
      set {
        taskOutcomeLocationSource_ = value;
      }
    }

    /// <summary>Field number for the "tracking_id" field.</summary>
    public const int TrackingIdFieldNumber = 4;
    private string trackingId_ = "";
    /// <summary>
    /// Immutable. This field facilitates the storing of an ID so you can avoid
    /// using a complicated mapping. You cannot set `tracking_id` for Tasks of type
    /// `UNAVAILABLE` and `SCHEDULED_STOP`. These IDs are subject to the
    /// following restrictions:
    ///
    /// * Must be a valid Unicode string.
    /// * Limited to a maximum length of 64 characters.
    /// * Normalized according to [Unicode Normalization Form C]
    /// (http://www.unicode.org/reports/tr15/).
    /// * May not contain any of the following ASCII characters: '/', ':', '?',
    /// ',', or '#'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackingId {
      get { return trackingId_; }
      set {
        trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "delivery_vehicle_id" field.</summary>
    public const int DeliveryVehicleIdFieldNumber = 5;
    private string deliveryVehicleId_ = "";
    /// <summary>
    /// Output only. The ID of the vehicle that is executing this Task. Delivery
    /// Vehicle IDs are subject to the following restrictions:
    ///
    /// * Must be a valid Unicode string.
    /// * Limited to a maximum length of 64 characters.
    /// * Normalized according to [Unicode Normalization Form C]
    /// (http://www.unicode.org/reports/tr15/).
    /// * May not contain any of the following ASCII characters: '/', ':', '?',
    /// ',', or '#'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeliveryVehicleId {
      get { return deliveryVehicleId_; }
      set {
        deliveryVehicleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "planned_location" field.</summary>
    public const int PlannedLocationFieldNumber = 6;
    private global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo plannedLocation_;
    /// <summary>
    /// Immutable. The location where the Task will be completed.
    /// Optional for `UNAVAILABLE` Tasks, but required for all other Tasks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo PlannedLocation {
      get { return plannedLocation_; }
      set {
        plannedLocation_ = value;
      }
    }

    /// <summary>Field number for the "task_duration" field.</summary>
    public const int TaskDurationFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Duration taskDuration_;
    /// <summary>
    /// Required. Immutable. The time needed to execute a Task at this location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TaskDuration {
      get { return taskDuration_; }
      set {
        taskDuration_ = value;
      }
    }

    /// <summary>Field number for the "target_time_window" field.</summary>
    public const int TargetTimeWindowFieldNumber = 14;
    private global::Google.Maps.FleetEngine.Delivery.V1.TimeWindow targetTimeWindow_;
    /// <summary>
    /// The time window during which the task should be completed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.TimeWindow TargetTimeWindow {
      get { return targetTimeWindow_; }
      set {
        targetTimeWindow_ = value;
      }
    }

    /// <summary>Field number for the "journey_sharing_info" field.</summary>
    public const int JourneySharingInfoFieldNumber = 8;
    private global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.JourneySharingInfo journeySharingInfo_;
    /// <summary>
    /// Output only. Journey sharing-specific fields. Not populated when state is
    /// `CLOSED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.JourneySharingInfo JourneySharingInfo {
      get { return journeySharingInfo_; }
      set {
        journeySharingInfo_ = value;
      }
    }

    /// <summary>Field number for the "task_tracking_view_config" field.</summary>
    public const int TaskTrackingViewConfigFieldNumber = 13;
    private global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig taskTrackingViewConfig_;
    /// <summary>
    /// The configuration for task tracking that specifies which data elements are
    /// visible to the end users under what circumstances.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig TaskTrackingViewConfig {
      get { return taskTrackingViewConfig_; }
      set {
        taskTrackingViewConfig_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Google.Maps.FleetEngine.Delivery.V1.TaskAttribute> _repeated_attributes_codec
        = pb::FieldCodec.ForMessage(122, global::Google.Maps.FleetEngine.Delivery.V1.TaskAttribute.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.FleetEngine.Delivery.V1.TaskAttribute> attributes_ = new pbc::RepeatedField<global::Google.Maps.FleetEngine.Delivery.V1.TaskAttribute>();
    /// <summary>
    /// A list of custom Task attributes. Each attribute must have a unique key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.FleetEngine.Delivery.V1.TaskAttribute> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Task);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Task other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (State != other.State) return false;
      if (TaskOutcome != other.TaskOutcome) return false;
      if (!object.Equals(TaskOutcomeTime, other.TaskOutcomeTime)) return false;
      if (!object.Equals(TaskOutcomeLocation, other.TaskOutcomeLocation)) return false;
      if (TaskOutcomeLocationSource != other.TaskOutcomeLocationSource) return false;
      if (TrackingId != other.TrackingId) return false;
      if (DeliveryVehicleId != other.DeliveryVehicleId) return false;
      if (!object.Equals(PlannedLocation, other.PlannedLocation)) return false;
      if (!object.Equals(TaskDuration, other.TaskDuration)) return false;
      if (!object.Equals(TargetTimeWindow, other.TargetTimeWindow)) return false;
      if (!object.Equals(JourneySharingInfo, other.JourneySharingInfo)) return false;
      if (!object.Equals(TaskTrackingViewConfig, other.TaskTrackingViewConfig)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type.Unspecified) hash ^= Type.GetHashCode();
      if (State != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (TaskOutcome != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome.Unspecified) hash ^= TaskOutcome.GetHashCode();
      if (taskOutcomeTime_ != null) hash ^= TaskOutcomeTime.GetHashCode();
      if (taskOutcomeLocation_ != null) hash ^= TaskOutcomeLocation.GetHashCode();
      if (TaskOutcomeLocationSource != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource.Unspecified) hash ^= TaskOutcomeLocationSource.GetHashCode();
      if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
      if (DeliveryVehicleId.Length != 0) hash ^= DeliveryVehicleId.GetHashCode();
      if (plannedLocation_ != null) hash ^= PlannedLocation.GetHashCode();
      if (taskDuration_ != null) hash ^= TaskDuration.GetHashCode();
      if (targetTimeWindow_ != null) hash ^= TargetTimeWindow.GetHashCode();
      if (journeySharingInfo_ != null) hash ^= JourneySharingInfo.GetHashCode();
      if (taskTrackingViewConfig_ != null) hash ^= TaskTrackingViewConfig.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (State != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (TrackingId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TrackingId);
      }
      if (DeliveryVehicleId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeliveryVehicleId);
      }
      if (plannedLocation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlannedLocation);
      }
      if (taskDuration_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TaskDuration);
      }
      if (journeySharingInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(JourneySharingInfo);
      }
      if (TaskOutcome != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) TaskOutcome);
      }
      if (taskOutcomeTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TaskOutcomeTime);
      }
      if (taskOutcomeLocation_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(TaskOutcomeLocation);
      }
      if (TaskOutcomeLocationSource != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) TaskOutcomeLocationSource);
      }
      if (taskTrackingViewConfig_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TaskTrackingViewConfig);
      }
      if (targetTimeWindow_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(TargetTimeWindow);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (State != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (TrackingId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TrackingId);
      }
      if (DeliveryVehicleId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DeliveryVehicleId);
      }
      if (plannedLocation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlannedLocation);
      }
      if (taskDuration_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TaskDuration);
      }
      if (journeySharingInfo_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(JourneySharingInfo);
      }
      if (TaskOutcome != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) TaskOutcome);
      }
      if (taskOutcomeTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TaskOutcomeTime);
      }
      if (taskOutcomeLocation_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(TaskOutcomeLocation);
      }
      if (TaskOutcomeLocationSource != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource.Unspecified) {
        output.WriteRawTag(96);
        output.WriteEnum((int) TaskOutcomeLocationSource);
      }
      if (taskTrackingViewConfig_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(TaskTrackingViewConfig);
      }
      if (targetTimeWindow_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(TargetTimeWindow);
      }
      attributes_.WriteTo(ref output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (State != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (TaskOutcome != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TaskOutcome);
      }
      if (taskOutcomeTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskOutcomeTime);
      }
      if (taskOutcomeLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskOutcomeLocation);
      }
      if (TaskOutcomeLocationSource != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TaskOutcomeLocationSource);
      }
      if (TrackingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
      }
      if (DeliveryVehicleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeliveryVehicleId);
      }
      if (plannedLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlannedLocation);
      }
      if (taskDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskDuration);
      }
      if (targetTimeWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetTimeWindow);
      }
      if (journeySharingInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JourneySharingInfo);
      }
      if (taskTrackingViewConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskTrackingViewConfig);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Task other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type.Unspecified) {
        Type = other.Type;
      }
      if (other.State != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.TaskOutcome != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome.Unspecified) {
        TaskOutcome = other.TaskOutcome;
      }
      if (other.taskOutcomeTime_ != null) {
        if (taskOutcomeTime_ == null) {
          TaskOutcomeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        TaskOutcomeTime.MergeFrom(other.TaskOutcomeTime);
      }
      if (other.taskOutcomeLocation_ != null) {
        if (taskOutcomeLocation_ == null) {
          TaskOutcomeLocation = new global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo();
        }
        TaskOutcomeLocation.MergeFrom(other.TaskOutcomeLocation);
      }
      if (other.TaskOutcomeLocationSource != global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource.Unspecified) {
        TaskOutcomeLocationSource = other.TaskOutcomeLocationSource;
      }
      if (other.TrackingId.Length != 0) {
        TrackingId = other.TrackingId;
      }
      if (other.DeliveryVehicleId.Length != 0) {
        DeliveryVehicleId = other.DeliveryVehicleId;
      }
      if (other.plannedLocation_ != null) {
        if (plannedLocation_ == null) {
          PlannedLocation = new global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo();
        }
        PlannedLocation.MergeFrom(other.PlannedLocation);
      }
      if (other.taskDuration_ != null) {
        if (taskDuration_ == null) {
          TaskDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TaskDuration.MergeFrom(other.TaskDuration);
      }
      if (other.targetTimeWindow_ != null) {
        if (targetTimeWindow_ == null) {
          TargetTimeWindow = new global::Google.Maps.FleetEngine.Delivery.V1.TimeWindow();
        }
        TargetTimeWindow.MergeFrom(other.TargetTimeWindow);
      }
      if (other.journeySharingInfo_ != null) {
        if (journeySharingInfo_ == null) {
          JourneySharingInfo = new global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.JourneySharingInfo();
        }
        JourneySharingInfo.MergeFrom(other.JourneySharingInfo);
      }
      if (other.taskTrackingViewConfig_ != null) {
        if (taskTrackingViewConfig_ == null) {
          TaskTrackingViewConfig = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig();
        }
        TaskTrackingViewConfig.MergeFrom(other.TaskTrackingViewConfig);
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type) input.ReadEnum();
            break;
          }
          case 24: {
            State = (global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            TrackingId = input.ReadString();
            break;
          }
          case 42: {
            DeliveryVehicleId = input.ReadString();
            break;
          }
          case 50: {
            if (plannedLocation_ == null) {
              PlannedLocation = new global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo();
            }
            input.ReadMessage(PlannedLocation);
            break;
          }
          case 58: {
            if (taskDuration_ == null) {
              TaskDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TaskDuration);
            break;
          }
          case 66: {
            if (journeySharingInfo_ == null) {
              JourneySharingInfo = new global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.JourneySharingInfo();
            }
            input.ReadMessage(JourneySharingInfo);
            break;
          }
          case 72: {
            TaskOutcome = (global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome) input.ReadEnum();
            break;
          }
          case 82: {
            if (taskOutcomeTime_ == null) {
              TaskOutcomeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(TaskOutcomeTime);
            break;
          }
          case 90: {
            if (taskOutcomeLocation_ == null) {
              TaskOutcomeLocation = new global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo();
            }
            input.ReadMessage(TaskOutcomeLocation);
            break;
          }
          case 96: {
            TaskOutcomeLocationSource = (global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource) input.ReadEnum();
            break;
          }
          case 106: {
            if (taskTrackingViewConfig_ == null) {
              TaskTrackingViewConfig = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig();
            }
            input.ReadMessage(TaskTrackingViewConfig);
            break;
          }
          case 114: {
            if (targetTimeWindow_ == null) {
              TargetTimeWindow = new global::Google.Maps.FleetEngine.Delivery.V1.TimeWindow();
            }
            input.ReadMessage(TargetTimeWindow);
            break;
          }
          case 122: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.Type) input.ReadEnum();
            break;
          }
          case 24: {
            State = (global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            TrackingId = input.ReadString();
            break;
          }
          case 42: {
            DeliveryVehicleId = input.ReadString();
            break;
          }
          case 50: {
            if (plannedLocation_ == null) {
              PlannedLocation = new global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo();
            }
            input.ReadMessage(PlannedLocation);
            break;
          }
          case 58: {
            if (taskDuration_ == null) {
              TaskDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TaskDuration);
            break;
          }
          case 66: {
            if (journeySharingInfo_ == null) {
              JourneySharingInfo = new global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.JourneySharingInfo();
            }
            input.ReadMessage(JourneySharingInfo);
            break;
          }
          case 72: {
            TaskOutcome = (global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcome) input.ReadEnum();
            break;
          }
          case 82: {
            if (taskOutcomeTime_ == null) {
              TaskOutcomeTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(TaskOutcomeTime);
            break;
          }
          case 90: {
            if (taskOutcomeLocation_ == null) {
              TaskOutcomeLocation = new global::Google.Maps.FleetEngine.Delivery.V1.LocationInfo();
            }
            input.ReadMessage(TaskOutcomeLocation);
            break;
          }
          case 96: {
            TaskOutcomeLocationSource = (global::Google.Maps.FleetEngine.Delivery.V1.Task.Types.TaskOutcomeLocationSource) input.ReadEnum();
            break;
          }
          case 106: {
            if (taskTrackingViewConfig_ == null) {
              TaskTrackingViewConfig = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig();
            }
            input.ReadMessage(TaskTrackingViewConfig);
            break;
          }
          case 114: {
            if (targetTimeWindow_ == null) {
              TargetTimeWindow = new global::Google.Maps.FleetEngine.Delivery.V1.TimeWindow();
            }
            input.ReadMessage(TargetTimeWindow);
            break;
          }
          case 122: {
            attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Task message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The type of Task.
      /// </summary>
      public enum Type {
        /// <summary>
        /// Default, the Task type is unknown.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A pickup Task is the action taken for picking up a shipment from a
        /// customer. Depot or feeder vehicle pickups should use the `SCHEDULED_STOP`
        /// type.
        /// </summary>
        [pbr::OriginalName("PICKUP")] Pickup = 1,
        /// <summary>
        /// A delivery Task is the action taken for delivering a shipment to an end
        /// customer. Depot or feeder vehicle dropoffs should use the
        /// `SCHEDULED_STOP` type.
        /// </summary>
        [pbr::OriginalName("DELIVERY")] Delivery = 2,
        /// <summary>
        /// A scheduled stop Task is used for planning purposes. For example, it
        /// could represent picking up or dropping off shipments from feeder vehicles
        /// or depots. It shouldn't be used for any shipments that are picked up or
        /// dropped off from an end customer.
        /// </summary>
        [pbr::OriginalName("SCHEDULED_STOP")] ScheduledStop = 3,
        /// <summary>
        /// A Task that means the Vehicle is not available for service. For example,
        /// this can happen when the driver takes a break, or when the vehicle
        /// is being refueled.
        /// </summary>
        [pbr::OriginalName("UNAVAILABLE")] Unavailable = 4,
      }

      /// <summary>
      /// The state of a Task. This indicates the Tasks's progress.
      /// </summary>
      public enum State {
        /// <summary>
        /// Default. Used for an unspecified or unrecognized Task state.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Either the Task has not yet been assigned to a delivery vehicle, or the
        /// delivery vehicle has not yet passed the `Task`'s assigned vehicle stop.
        /// </summary>
        [pbr::OriginalName("OPEN")] Open = 1,
        /// <summary>
        /// When the vehicle passes the vehicle stop for this Task.
        /// </summary>
        [pbr::OriginalName("CLOSED")] Closed = 2,
      }

      /// <summary>
      /// The outcome of attempting to execute a Task. When `TaskState` is closed,
      /// `TaskOutcome` indicates whether it was completed successfully.
      /// </summary>
      public enum TaskOutcome {
        /// <summary>
        /// The Task outcome before its value is set.
        /// </summary>
        [pbr::OriginalName("TASK_OUTCOME_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The Task completed successfully.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 1,
        /// <summary>
        /// Either the Task couldn't be completed, or it was cancelled.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 2,
      }

      /// <summary>
      /// The identity of the source that populated the `task_outcome_location`.
      /// </summary>
      public enum TaskOutcomeLocationSource {
        /// <summary>
        /// The task outcome before it is set.
        /// </summary>
        [pbr::OriginalName("TASK_OUTCOME_LOCATION_SOURCE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The provider-specified the `task_outcome_location`.
        /// </summary>
        [pbr::OriginalName("PROVIDER")] Provider = 2,
        /// <summary>
        /// The provider didn't specify the `task_outcome_location`, so Fleet Engine
        /// used the last known vehicle location.
        /// </summary>
        [pbr::OriginalName("LAST_VEHICLE_LOCATION")] LastVehicleLocation = 3,
      }

      /// <summary>
      /// Journey sharing specific fields.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class JourneySharingInfo : pb::IMessage<JourneySharingInfo>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<JourneySharingInfo> _parser = new pb::MessageParser<JourneySharingInfo>(() => new JourneySharingInfo());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<JourneySharingInfo> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.FleetEngine.Delivery.V1.Task.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JourneySharingInfo() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JourneySharingInfo(JourneySharingInfo other) : this() {
          remainingVehicleJourneySegments_ = other.remainingVehicleJourneySegments_.Clone();
          lastLocation_ = other.lastLocation_ != null ? other.lastLocation_.Clone() : null;
          lastLocationSnappable_ = other.lastLocationSnappable_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JourneySharingInfo Clone() {
          return new JourneySharingInfo(this);
        }

        /// <summary>Field number for the "remaining_vehicle_journey_segments" field.</summary>
        public const int RemainingVehicleJourneySegmentsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Maps.FleetEngine.Delivery.V1.VehicleJourneySegment> _repeated_remainingVehicleJourneySegments_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Maps.FleetEngine.Delivery.V1.VehicleJourneySegment.Parser);
        private readonly pbc::RepeatedField<global::Google.Maps.FleetEngine.Delivery.V1.VehicleJourneySegment> remainingVehicleJourneySegments_ = new pbc::RepeatedField<global::Google.Maps.FleetEngine.Delivery.V1.VehicleJourneySegment>();
        /// <summary>
        /// Tracking information for the stops that the assigned vehicle will make
        /// before it completes this Task. Note that this list can contain stops
        /// from other tasks.
        ///
        /// The first segment,
        /// `Task.journey_sharing_info.remaining_vehicle_journey_segments[0]` (gRPC)
        /// or `Task.journeySharingInfo.remainingVehicleJourneySegments[0]` (REST),
        /// contains route information from the driver's last known location to the
        /// upcoming `VehicleStop`. Current route information usually comes from the
        /// driver app, except for some cases noted in the documentation for
        /// [DeliveryVehicle.current_route_segment][maps.fleetengine.delivery.v1.DeliveryVehicle.current_route_segment].
        /// The other segments in
        /// `Task.journey_sharing_info.remaining_vehicle_journey_segments` (gRPC) or
        /// `Task.journeySharingInfo.remainingVehicleJourneySegments` (REST) are
        /// populated by Fleet Engine. They provide route information between the
        /// remaining `VehicleStops`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Maps.FleetEngine.Delivery.V1.VehicleJourneySegment> RemainingVehicleJourneySegments {
          get { return remainingVehicleJourneySegments_; }
        }

        /// <summary>Field number for the "last_location" field.</summary>
        public const int LastLocationFieldNumber = 2;
        private global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicleLocation lastLocation_;
        /// <summary>
        /// Indicates the vehicle's last reported location of the assigned vehicle.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicleLocation LastLocation {
          get { return lastLocation_; }
          set {
            lastLocation_ = value;
          }
        }

        /// <summary>Field number for the "last_location_snappable" field.</summary>
        public const int LastLocationSnappableFieldNumber = 3;
        private bool lastLocationSnappable_;
        /// <summary>
        /// Indicates whether the vehicle's lastLocation can be snapped to
        /// the `current_route_segment`. This value is False if either
        /// `last_location` or `current_route_segment` don't exist. This value is
        /// computed by Fleet Engine. Updates from clients are ignored.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool LastLocationSnappable {
          get { return lastLocationSnappable_; }
          set {
            lastLocationSnappable_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as JourneySharingInfo);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(JourneySharingInfo other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!remainingVehicleJourneySegments_.Equals(other.remainingVehicleJourneySegments_)) return false;
          if (!object.Equals(LastLocation, other.LastLocation)) return false;
          if (LastLocationSnappable != other.LastLocationSnappable) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= remainingVehicleJourneySegments_.GetHashCode();
          if (lastLocation_ != null) hash ^= LastLocation.GetHashCode();
          if (LastLocationSnappable != false) hash ^= LastLocationSnappable.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          remainingVehicleJourneySegments_.WriteTo(output, _repeated_remainingVehicleJourneySegments_codec);
          if (lastLocation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(LastLocation);
          }
          if (LastLocationSnappable != false) {
            output.WriteRawTag(24);
            output.WriteBool(LastLocationSnappable);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          remainingVehicleJourneySegments_.WriteTo(ref output, _repeated_remainingVehicleJourneySegments_codec);
          if (lastLocation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(LastLocation);
          }
          if (LastLocationSnappable != false) {
            output.WriteRawTag(24);
            output.WriteBool(LastLocationSnappable);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += remainingVehicleJourneySegments_.CalculateSize(_repeated_remainingVehicleJourneySegments_codec);
          if (lastLocation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastLocation);
          }
          if (LastLocationSnappable != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(JourneySharingInfo other) {
          if (other == null) {
            return;
          }
          remainingVehicleJourneySegments_.Add(other.remainingVehicleJourneySegments_);
          if (other.lastLocation_ != null) {
            if (lastLocation_ == null) {
              LastLocation = new global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicleLocation();
            }
            LastLocation.MergeFrom(other.LastLocation);
          }
          if (other.LastLocationSnappable != false) {
            LastLocationSnappable = other.LastLocationSnappable;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                remainingVehicleJourneySegments_.AddEntriesFrom(input, _repeated_remainingVehicleJourneySegments_codec);
                break;
              }
              case 18: {
                if (lastLocation_ == null) {
                  LastLocation = new global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicleLocation();
                }
                input.ReadMessage(LastLocation);
                break;
              }
              case 24: {
                LastLocationSnappable = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                remainingVehicleJourneySegments_.AddEntriesFrom(ref input, _repeated_remainingVehicleJourneySegments_codec);
                break;
              }
              case 18: {
                if (lastLocation_ == null) {
                  LastLocation = new global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicleLocation();
                }
                input.ReadMessage(LastLocation);
                break;
              }
              case 24: {
                LastLocationSnappable = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// The configuration message that defines when a data element of a Task should
  /// be visible to the end users.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TaskTrackingViewConfig : pb::IMessage<TaskTrackingViewConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskTrackingViewConfig> _parser = new pb::MessageParser<TaskTrackingViewConfig>(() => new TaskTrackingViewConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskTrackingViewConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Maps.FleetEngine.Delivery.V1.TasksReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskTrackingViewConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskTrackingViewConfig(TaskTrackingViewConfig other) : this() {
      routePolylinePointsVisibility_ = other.routePolylinePointsVisibility_ != null ? other.routePolylinePointsVisibility_.Clone() : null;
      estimatedArrivalTimeVisibility_ = other.estimatedArrivalTimeVisibility_ != null ? other.estimatedArrivalTimeVisibility_.Clone() : null;
      estimatedTaskCompletionTimeVisibility_ = other.estimatedTaskCompletionTimeVisibility_ != null ? other.estimatedTaskCompletionTimeVisibility_.Clone() : null;
      remainingDrivingDistanceVisibility_ = other.remainingDrivingDistanceVisibility_ != null ? other.remainingDrivingDistanceVisibility_.Clone() : null;
      remainingStopCountVisibility_ = other.remainingStopCountVisibility_ != null ? other.remainingStopCountVisibility_.Clone() : null;
      vehicleLocationVisibility_ = other.vehicleLocationVisibility_ != null ? other.vehicleLocationVisibility_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskTrackingViewConfig Clone() {
      return new TaskTrackingViewConfig(this);
    }

    /// <summary>Field number for the "route_polyline_points_visibility" field.</summary>
    public const int RoutePolylinePointsVisibilityFieldNumber = 1;
    private global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption routePolylinePointsVisibility_;
    /// <summary>
    /// The field that specifies when route polyline points can be visible. If this
    /// field is not specified, the project level default visibility configuration
    /// for this data will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption RoutePolylinePointsVisibility {
      get { return routePolylinePointsVisibility_; }
      set {
        routePolylinePointsVisibility_ = value;
      }
    }

    /// <summary>Field number for the "estimated_arrival_time_visibility" field.</summary>
    public const int EstimatedArrivalTimeVisibilityFieldNumber = 2;
    private global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption estimatedArrivalTimeVisibility_;
    /// <summary>
    /// The field that specifies when estimated arrival time can be visible. If
    /// this field is not specified, the project level default visibility
    /// configuration for this data will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption EstimatedArrivalTimeVisibility {
      get { return estimatedArrivalTimeVisibility_; }
      set {
        estimatedArrivalTimeVisibility_ = value;
      }
    }

    /// <summary>Field number for the "estimated_task_completion_time_visibility" field.</summary>
    public const int EstimatedTaskCompletionTimeVisibilityFieldNumber = 3;
    private global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption estimatedTaskCompletionTimeVisibility_;
    /// <summary>
    /// The field that specifies when estimated task completion time can be
    /// visible. If this field is not specified, the project level default
    /// visibility configuration for this data will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption EstimatedTaskCompletionTimeVisibility {
      get { return estimatedTaskCompletionTimeVisibility_; }
      set {
        estimatedTaskCompletionTimeVisibility_ = value;
      }
    }

    /// <summary>Field number for the "remaining_driving_distance_visibility" field.</summary>
    public const int RemainingDrivingDistanceVisibilityFieldNumber = 4;
    private global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption remainingDrivingDistanceVisibility_;
    /// <summary>
    /// The field that specifies when remaining driving distance can be visible. If
    /// this field is not specified, the project level default visibility
    /// configuration for this data will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption RemainingDrivingDistanceVisibility {
      get { return remainingDrivingDistanceVisibility_; }
      set {
        remainingDrivingDistanceVisibility_ = value;
      }
    }

    /// <summary>Field number for the "remaining_stop_count_visibility" field.</summary>
    public const int RemainingStopCountVisibilityFieldNumber = 5;
    private global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption remainingStopCountVisibility_;
    /// <summary>
    /// The field that specifies when remaining stop count can be visible. If this
    /// field is not specified, the project level default visibility configuration
    /// for this data will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption RemainingStopCountVisibility {
      get { return remainingStopCountVisibility_; }
      set {
        remainingStopCountVisibility_ = value;
      }
    }

    /// <summary>Field number for the "vehicle_location_visibility" field.</summary>
    public const int VehicleLocationVisibilityFieldNumber = 6;
    private global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption vehicleLocationVisibility_;
    /// <summary>
    /// The field that specifies when vehicle location can be visible. If this
    /// field is not specified, the project level default visibility configuration
    /// for this data will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption VehicleLocationVisibility {
      get { return vehicleLocationVisibility_; }
      set {
        vehicleLocationVisibility_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskTrackingViewConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskTrackingViewConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RoutePolylinePointsVisibility, other.RoutePolylinePointsVisibility)) return false;
      if (!object.Equals(EstimatedArrivalTimeVisibility, other.EstimatedArrivalTimeVisibility)) return false;
      if (!object.Equals(EstimatedTaskCompletionTimeVisibility, other.EstimatedTaskCompletionTimeVisibility)) return false;
      if (!object.Equals(RemainingDrivingDistanceVisibility, other.RemainingDrivingDistanceVisibility)) return false;
      if (!object.Equals(RemainingStopCountVisibility, other.RemainingStopCountVisibility)) return false;
      if (!object.Equals(VehicleLocationVisibility, other.VehicleLocationVisibility)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (routePolylinePointsVisibility_ != null) hash ^= RoutePolylinePointsVisibility.GetHashCode();
      if (estimatedArrivalTimeVisibility_ != null) hash ^= EstimatedArrivalTimeVisibility.GetHashCode();
      if (estimatedTaskCompletionTimeVisibility_ != null) hash ^= EstimatedTaskCompletionTimeVisibility.GetHashCode();
      if (remainingDrivingDistanceVisibility_ != null) hash ^= RemainingDrivingDistanceVisibility.GetHashCode();
      if (remainingStopCountVisibility_ != null) hash ^= RemainingStopCountVisibility.GetHashCode();
      if (vehicleLocationVisibility_ != null) hash ^= VehicleLocationVisibility.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (routePolylinePointsVisibility_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoutePolylinePointsVisibility);
      }
      if (estimatedArrivalTimeVisibility_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EstimatedArrivalTimeVisibility);
      }
      if (estimatedTaskCompletionTimeVisibility_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EstimatedTaskCompletionTimeVisibility);
      }
      if (remainingDrivingDistanceVisibility_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RemainingDrivingDistanceVisibility);
      }
      if (remainingStopCountVisibility_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RemainingStopCountVisibility);
      }
      if (vehicleLocationVisibility_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VehicleLocationVisibility);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (routePolylinePointsVisibility_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RoutePolylinePointsVisibility);
      }
      if (estimatedArrivalTimeVisibility_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EstimatedArrivalTimeVisibility);
      }
      if (estimatedTaskCompletionTimeVisibility_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EstimatedTaskCompletionTimeVisibility);
      }
      if (remainingDrivingDistanceVisibility_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RemainingDrivingDistanceVisibility);
      }
      if (remainingStopCountVisibility_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RemainingStopCountVisibility);
      }
      if (vehicleLocationVisibility_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VehicleLocationVisibility);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (routePolylinePointsVisibility_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoutePolylinePointsVisibility);
      }
      if (estimatedArrivalTimeVisibility_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EstimatedArrivalTimeVisibility);
      }
      if (estimatedTaskCompletionTimeVisibility_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EstimatedTaskCompletionTimeVisibility);
      }
      if (remainingDrivingDistanceVisibility_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemainingDrivingDistanceVisibility);
      }
      if (remainingStopCountVisibility_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RemainingStopCountVisibility);
      }
      if (vehicleLocationVisibility_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VehicleLocationVisibility);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskTrackingViewConfig other) {
      if (other == null) {
        return;
      }
      if (other.routePolylinePointsVisibility_ != null) {
        if (routePolylinePointsVisibility_ == null) {
          RoutePolylinePointsVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
        }
        RoutePolylinePointsVisibility.MergeFrom(other.RoutePolylinePointsVisibility);
      }
      if (other.estimatedArrivalTimeVisibility_ != null) {
        if (estimatedArrivalTimeVisibility_ == null) {
          EstimatedArrivalTimeVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
        }
        EstimatedArrivalTimeVisibility.MergeFrom(other.EstimatedArrivalTimeVisibility);
      }
      if (other.estimatedTaskCompletionTimeVisibility_ != null) {
        if (estimatedTaskCompletionTimeVisibility_ == null) {
          EstimatedTaskCompletionTimeVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
        }
        EstimatedTaskCompletionTimeVisibility.MergeFrom(other.EstimatedTaskCompletionTimeVisibility);
      }
      if (other.remainingDrivingDistanceVisibility_ != null) {
        if (remainingDrivingDistanceVisibility_ == null) {
          RemainingDrivingDistanceVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
        }
        RemainingDrivingDistanceVisibility.MergeFrom(other.RemainingDrivingDistanceVisibility);
      }
      if (other.remainingStopCountVisibility_ != null) {
        if (remainingStopCountVisibility_ == null) {
          RemainingStopCountVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
        }
        RemainingStopCountVisibility.MergeFrom(other.RemainingStopCountVisibility);
      }
      if (other.vehicleLocationVisibility_ != null) {
        if (vehicleLocationVisibility_ == null) {
          VehicleLocationVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
        }
        VehicleLocationVisibility.MergeFrom(other.VehicleLocationVisibility);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (routePolylinePointsVisibility_ == null) {
              RoutePolylinePointsVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(RoutePolylinePointsVisibility);
            break;
          }
          case 18: {
            if (estimatedArrivalTimeVisibility_ == null) {
              EstimatedArrivalTimeVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(EstimatedArrivalTimeVisibility);
            break;
          }
          case 26: {
            if (estimatedTaskCompletionTimeVisibility_ == null) {
              EstimatedTaskCompletionTimeVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(EstimatedTaskCompletionTimeVisibility);
            break;
          }
          case 34: {
            if (remainingDrivingDistanceVisibility_ == null) {
              RemainingDrivingDistanceVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(RemainingDrivingDistanceVisibility);
            break;
          }
          case 42: {
            if (remainingStopCountVisibility_ == null) {
              RemainingStopCountVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(RemainingStopCountVisibility);
            break;
          }
          case 50: {
            if (vehicleLocationVisibility_ == null) {
              VehicleLocationVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(VehicleLocationVisibility);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (routePolylinePointsVisibility_ == null) {
              RoutePolylinePointsVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(RoutePolylinePointsVisibility);
            break;
          }
          case 18: {
            if (estimatedArrivalTimeVisibility_ == null) {
              EstimatedArrivalTimeVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(EstimatedArrivalTimeVisibility);
            break;
          }
          case 26: {
            if (estimatedTaskCompletionTimeVisibility_ == null) {
              EstimatedTaskCompletionTimeVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(EstimatedTaskCompletionTimeVisibility);
            break;
          }
          case 34: {
            if (remainingDrivingDistanceVisibility_ == null) {
              RemainingDrivingDistanceVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(RemainingDrivingDistanceVisibility);
            break;
          }
          case 42: {
            if (remainingStopCountVisibility_ == null) {
              RemainingStopCountVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(RemainingStopCountVisibility);
            break;
          }
          case 50: {
            if (vehicleLocationVisibility_ == null) {
              VehicleLocationVisibility = new global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Types.VisibilityOption();
            }
            input.ReadMessage(VehicleLocationVisibility);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TaskTrackingViewConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The option message that defines when a data element should be visible to
      /// the end users.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class VisibilityOption : pb::IMessage<VisibilityOption>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VisibilityOption> _parser = new pb::MessageParser<VisibilityOption>(() => new VisibilityOption());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<VisibilityOption> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingViewConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VisibilityOption() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VisibilityOption(VisibilityOption other) : this() {
          switch (other.VisibilityOptionCase) {
            case VisibilityOptionOneofCase.RemainingStopCountThreshold:
              RemainingStopCountThreshold = other.RemainingStopCountThreshold;
              break;
            case VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold:
              DurationUntilEstimatedArrivalTimeThreshold = other.DurationUntilEstimatedArrivalTimeThreshold.Clone();
              break;
            case VisibilityOptionOneofCase.RemainingDrivingDistanceMetersThreshold:
              RemainingDrivingDistanceMetersThreshold = other.RemainingDrivingDistanceMetersThreshold;
              break;
            case VisibilityOptionOneofCase.Always:
              Always = other.Always;
              break;
            case VisibilityOptionOneofCase.Never:
              Never = other.Never;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VisibilityOption Clone() {
          return new VisibilityOption(this);
        }

        /// <summary>Field number for the "remaining_stop_count_threshold" field.</summary>
        public const int RemainingStopCountThresholdFieldNumber = 1;
        /// <summary>
        /// This data element is visible to the end users if the remaining stop
        /// count &lt;= remaining_stop_count_threshold.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int RemainingStopCountThreshold {
          get { return HasRemainingStopCountThreshold ? (int) visibilityOption_ : 0; }
          set {
            visibilityOption_ = value;
            visibilityOptionCase_ = VisibilityOptionOneofCase.RemainingStopCountThreshold;
          }
        }
        /// <summary>Gets whether the "remaining_stop_count_threshold" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRemainingStopCountThreshold {
          get { return visibilityOptionCase_ == VisibilityOptionOneofCase.RemainingStopCountThreshold; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "remaining_stop_count_threshold" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRemainingStopCountThreshold() {
          if (HasRemainingStopCountThreshold) {
            ClearVisibilityOption();
          }
        }

        /// <summary>Field number for the "duration_until_estimated_arrival_time_threshold" field.</summary>
        public const int DurationUntilEstimatedArrivalTimeThresholdFieldNumber = 2;
        /// <summary>
        /// This data element is visible to the end users if the ETA to the stop
        /// &lt;= duration_until_estimated_arrival_time_threshold.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Duration DurationUntilEstimatedArrivalTimeThreshold {
          get { return visibilityOptionCase_ == VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold ? (global::Google.Protobuf.WellKnownTypes.Duration) visibilityOption_ : null; }
          set {
            visibilityOption_ = value;
            visibilityOptionCase_ = value == null ? VisibilityOptionOneofCase.None : VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold;
          }
        }

        /// <summary>Field number for the "remaining_driving_distance_meters_threshold" field.</summary>
        public const int RemainingDrivingDistanceMetersThresholdFieldNumber = 3;
        /// <summary>
        /// This data element is visible to the end users if the remaining
        /// driving distance in meters &lt;=
        /// remaining_driving_distance_meters_threshold.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int RemainingDrivingDistanceMetersThreshold {
          get { return HasRemainingDrivingDistanceMetersThreshold ? (int) visibilityOption_ : 0; }
          set {
            visibilityOption_ = value;
            visibilityOptionCase_ = VisibilityOptionOneofCase.RemainingDrivingDistanceMetersThreshold;
          }
        }
        /// <summary>Gets whether the "remaining_driving_distance_meters_threshold" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRemainingDrivingDistanceMetersThreshold {
          get { return visibilityOptionCase_ == VisibilityOptionOneofCase.RemainingDrivingDistanceMetersThreshold; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "remaining_driving_distance_meters_threshold" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRemainingDrivingDistanceMetersThreshold() {
          if (HasRemainingDrivingDistanceMetersThreshold) {
            ClearVisibilityOption();
          }
        }

        /// <summary>Field number for the "always" field.</summary>
        public const int AlwaysFieldNumber = 4;
        /// <summary>
        /// If set to true, this data element is always visible to the end users
        /// with no thresholds. This field cannot be set to false.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Always {
          get { return HasAlways ? (bool) visibilityOption_ : false; }
          set {
            visibilityOption_ = value;
            visibilityOptionCase_ = VisibilityOptionOneofCase.Always;
          }
        }
        /// <summary>Gets whether the "always" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAlways {
          get { return visibilityOptionCase_ == VisibilityOptionOneofCase.Always; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "always" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAlways() {
          if (HasAlways) {
            ClearVisibilityOption();
          }
        }

        /// <summary>Field number for the "never" field.</summary>
        public const int NeverFieldNumber = 5;
        /// <summary>
        /// If set to true, this data element is always hidden from the end users
        /// with no thresholds. This field cannot be set to false.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Never {
          get { return HasNever ? (bool) visibilityOption_ : false; }
          set {
            visibilityOption_ = value;
            visibilityOptionCase_ = VisibilityOptionOneofCase.Never;
          }
        }
        /// <summary>Gets whether the "never" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNever {
          get { return visibilityOptionCase_ == VisibilityOptionOneofCase.Never; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "never" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNever() {
          if (HasNever) {
            ClearVisibilityOption();
          }
        }

        private object visibilityOption_;
        /// <summary>Enum of possible cases for the "visibility_option" oneof.</summary>
        public enum VisibilityOptionOneofCase {
          None = 0,
          RemainingStopCountThreshold = 1,
          DurationUntilEstimatedArrivalTimeThreshold = 2,
          RemainingDrivingDistanceMetersThreshold = 3,
          Always = 4,
          Never = 5,
        }
        private VisibilityOptionOneofCase visibilityOptionCase_ = VisibilityOptionOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VisibilityOptionOneofCase VisibilityOptionCase {
          get { return visibilityOptionCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVisibilityOption() {
          visibilityOptionCase_ = VisibilityOptionOneofCase.None;
          visibilityOption_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as VisibilityOption);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(VisibilityOption other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RemainingStopCountThreshold != other.RemainingStopCountThreshold) return false;
          if (!object.Equals(DurationUntilEstimatedArrivalTimeThreshold, other.DurationUntilEstimatedArrivalTimeThreshold)) return false;
          if (RemainingDrivingDistanceMetersThreshold != other.RemainingDrivingDistanceMetersThreshold) return false;
          if (Always != other.Always) return false;
          if (Never != other.Never) return false;
          if (VisibilityOptionCase != other.VisibilityOptionCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasRemainingStopCountThreshold) hash ^= RemainingStopCountThreshold.GetHashCode();
          if (visibilityOptionCase_ == VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold) hash ^= DurationUntilEstimatedArrivalTimeThreshold.GetHashCode();
          if (HasRemainingDrivingDistanceMetersThreshold) hash ^= RemainingDrivingDistanceMetersThreshold.GetHashCode();
          if (HasAlways) hash ^= Always.GetHashCode();
          if (HasNever) hash ^= Never.GetHashCode();
          hash ^= (int) visibilityOptionCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasRemainingStopCountThreshold) {
            output.WriteRawTag(8);
            output.WriteInt32(RemainingStopCountThreshold);
          }
          if (visibilityOptionCase_ == VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold) {
            output.WriteRawTag(18);
            output.WriteMessage(DurationUntilEstimatedArrivalTimeThreshold);
          }
          if (HasRemainingDrivingDistanceMetersThreshold) {
            output.WriteRawTag(24);
            output.WriteInt32(RemainingDrivingDistanceMetersThreshold);
          }
          if (HasAlways) {
            output.WriteRawTag(32);
            output.WriteBool(Always);
          }
          if (HasNever) {
            output.WriteRawTag(40);
            output.WriteBool(Never);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasRemainingStopCountThreshold) {
            output.WriteRawTag(8);
            output.WriteInt32(RemainingStopCountThreshold);
          }
          if (visibilityOptionCase_ == VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold) {
            output.WriteRawTag(18);
            output.WriteMessage(DurationUntilEstimatedArrivalTimeThreshold);
          }
          if (HasRemainingDrivingDistanceMetersThreshold) {
            output.WriteRawTag(24);
            output.WriteInt32(RemainingDrivingDistanceMetersThreshold);
          }
          if (HasAlways) {
            output.WriteRawTag(32);
            output.WriteBool(Always);
          }
          if (HasNever) {
            output.WriteRawTag(40);
            output.WriteBool(Never);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasRemainingStopCountThreshold) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainingStopCountThreshold);
          }
          if (visibilityOptionCase_ == VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DurationUntilEstimatedArrivalTimeThreshold);
          }
          if (HasRemainingDrivingDistanceMetersThreshold) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RemainingDrivingDistanceMetersThreshold);
          }
          if (HasAlways) {
            size += 1 + 1;
          }
          if (HasNever) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(VisibilityOption other) {
          if (other == null) {
            return;
          }
          switch (other.VisibilityOptionCase) {
            case VisibilityOptionOneofCase.RemainingStopCountThreshold:
              RemainingStopCountThreshold = other.RemainingStopCountThreshold;
              break;
            case VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold:
              if (DurationUntilEstimatedArrivalTimeThreshold == null) {
                DurationUntilEstimatedArrivalTimeThreshold = new global::Google.Protobuf.WellKnownTypes.Duration();
              }
              DurationUntilEstimatedArrivalTimeThreshold.MergeFrom(other.DurationUntilEstimatedArrivalTimeThreshold);
              break;
            case VisibilityOptionOneofCase.RemainingDrivingDistanceMetersThreshold:
              RemainingDrivingDistanceMetersThreshold = other.RemainingDrivingDistanceMetersThreshold;
              break;
            case VisibilityOptionOneofCase.Always:
              Always = other.Always;
              break;
            case VisibilityOptionOneofCase.Never:
              Never = other.Never;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                RemainingStopCountThreshold = input.ReadInt32();
                break;
              }
              case 18: {
                global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
                if (visibilityOptionCase_ == VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold) {
                  subBuilder.MergeFrom(DurationUntilEstimatedArrivalTimeThreshold);
                }
                input.ReadMessage(subBuilder);
                DurationUntilEstimatedArrivalTimeThreshold = subBuilder;
                break;
              }
              case 24: {
                RemainingDrivingDistanceMetersThreshold = input.ReadInt32();
                break;
              }
              case 32: {
                Always = input.ReadBool();
                break;
              }
              case 40: {
                Never = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                RemainingStopCountThreshold = input.ReadInt32();
                break;
              }
              case 18: {
                global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
                if (visibilityOptionCase_ == VisibilityOptionOneofCase.DurationUntilEstimatedArrivalTimeThreshold) {
                  subBuilder.MergeFrom(DurationUntilEstimatedArrivalTimeThreshold);
                }
                input.ReadMessage(subBuilder);
                DurationUntilEstimatedArrivalTimeThreshold = subBuilder;
                break;
              }
              case 24: {
                RemainingDrivingDistanceMetersThreshold = input.ReadInt32();
                break;
              }
              case 32: {
                Always = input.ReadBool();
                break;
              }
              case 40: {
                Never = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
