// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/fleetengine/delivery/v1/delivery_api.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Maps.FleetEngine.Delivery.V1 {
  /// <summary>
  /// The Last Mile Delivery service.
  /// </summary>
  public static partial class DeliveryService
  {
    static readonly string __ServiceName = "maps.fleetengine.delivery.v1.DeliveryService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest> __Marshaller_maps_fleetengine_delivery_v1_CreateDeliveryVehicleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> __Marshaller_maps_fleetengine_delivery_v1_DeliveryVehicle = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest> __Marshaller_maps_fleetengine_delivery_v1_GetDeliveryVehicleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest> __Marshaller_maps_fleetengine_delivery_v1_UpdateDeliveryVehicleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest> __Marshaller_maps_fleetengine_delivery_v1_BatchCreateTasksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse> __Marshaller_maps_fleetengine_delivery_v1_BatchCreateTasksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest> __Marshaller_maps_fleetengine_delivery_v1_CreateTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.Task> __Marshaller_maps_fleetengine_delivery_v1_Task = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.Task.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest> __Marshaller_maps_fleetengine_delivery_v1_GetTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest> __Marshaller_maps_fleetengine_delivery_v1_UpdateTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest> __Marshaller_maps_fleetengine_delivery_v1_ListTasksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse> __Marshaller_maps_fleetengine_delivery_v1_ListTasksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest> __Marshaller_maps_fleetengine_delivery_v1_GetTaskTrackingInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo> __Marshaller_maps_fleetengine_delivery_v1_TaskTrackingInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest> __Marshaller_maps_fleetengine_delivery_v1_ListDeliveryVehiclesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse> __Marshaller_maps_fleetengine_delivery_v1_ListDeliveryVehiclesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> __Method_CreateDeliveryVehicle = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateDeliveryVehicle",
        __Marshaller_maps_fleetengine_delivery_v1_CreateDeliveryVehicleRequest,
        __Marshaller_maps_fleetengine_delivery_v1_DeliveryVehicle);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> __Method_GetDeliveryVehicle = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeliveryVehicle",
        __Marshaller_maps_fleetengine_delivery_v1_GetDeliveryVehicleRequest,
        __Marshaller_maps_fleetengine_delivery_v1_DeliveryVehicle);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> __Method_UpdateDeliveryVehicle = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDeliveryVehicle",
        __Marshaller_maps_fleetengine_delivery_v1_UpdateDeliveryVehicleRequest,
        __Marshaller_maps_fleetengine_delivery_v1_DeliveryVehicle);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest, global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse> __Method_BatchCreateTasks = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest, global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchCreateTasks",
        __Marshaller_maps_fleetengine_delivery_v1_BatchCreateTasksRequest,
        __Marshaller_maps_fleetengine_delivery_v1_BatchCreateTasksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task> __Method_CreateTask = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTask",
        __Marshaller_maps_fleetengine_delivery_v1_CreateTaskRequest,
        __Marshaller_maps_fleetengine_delivery_v1_Task);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task> __Method_GetTask = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTask",
        __Marshaller_maps_fleetengine_delivery_v1_GetTaskRequest,
        __Marshaller_maps_fleetengine_delivery_v1_Task);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task> __Method_UpdateTask = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTask",
        __Marshaller_maps_fleetengine_delivery_v1_UpdateTaskRequest,
        __Marshaller_maps_fleetengine_delivery_v1_Task);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest, global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse> __Method_ListTasks = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest, global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTasks",
        __Marshaller_maps_fleetengine_delivery_v1_ListTasksRequest,
        __Marshaller_maps_fleetengine_delivery_v1_ListTasksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest, global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo> __Method_GetTaskTrackingInfo = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest, global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTaskTrackingInfo",
        __Marshaller_maps_fleetengine_delivery_v1_GetTaskTrackingInfoRequest,
        __Marshaller_maps_fleetengine_delivery_v1_TaskTrackingInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest, global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse> __Method_ListDeliveryVehicles = new grpc::Method<global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest, global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDeliveryVehicles",
        __Marshaller_maps_fleetengine_delivery_v1_ListDeliveryVehiclesRequest,
        __Marshaller_maps_fleetengine_delivery_v1_ListDeliveryVehiclesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Maps.FleetEngine.Delivery.V1.DeliveryApiReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DeliveryService</summary>
    [grpc::BindServiceMethod(typeof(DeliveryService), "BindService")]
    public abstract partial class DeliveryServiceBase
    {
      /// <summary>
      /// Creates and returns a new `DeliveryVehicle`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> CreateDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the specified `DeliveryVehicle` instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> GetDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Writes updated `DeliveryVehicle` data to Fleet Engine, and assigns
      /// `Tasks` to the `DeliveryVehicle`. You cannot update the name of the
      /// `DeliveryVehicle`. You *can* update `remaining_vehicle_journey_segments`,
      /// but it must contain all of the `VehicleJourneySegment`s to be persisted on
      /// the `DeliveryVehicle`. The `task_id`s are retrieved from
      /// `remaining_vehicle_journey_segments`, and their corresponding `Tasks` are
      /// assigned to the `DeliveryVehicle` if they have not yet been assigned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> UpdateDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates and returns a batch of new `Task` objects.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse> BatchCreateTasks(global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates and returns a new `Task` object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.Task> CreateTask(global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about a `Task`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.Task> GetTask(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates `Task` data.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.Task> UpdateTask(global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets all `Task`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse> ListTasks(global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the specified `TaskTrackingInfo` instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo> GetTaskTrackingInfo(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets all `DeliveryVehicle`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse> ListDeliveryVehicles(global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DeliveryService</summary>
    public partial class DeliveryServiceClient : grpc::ClientBase<DeliveryServiceClient>
    {
      /// <summary>Creates a new client for DeliveryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DeliveryServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DeliveryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DeliveryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DeliveryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DeliveryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates and returns a new `DeliveryVehicle`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle CreateDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeliveryVehicle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new `DeliveryVehicle`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle CreateDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateDeliveryVehicle, null, options, request);
      }
      /// <summary>
      /// Creates and returns a new `DeliveryVehicle`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> CreateDeliveryVehicleAsync(global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateDeliveryVehicleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new `DeliveryVehicle`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> CreateDeliveryVehicleAsync(global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateDeliveryVehicle, null, options, request);
      }
      /// <summary>
      /// Returns the specified `DeliveryVehicle` instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle GetDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeliveryVehicle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified `DeliveryVehicle` instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle GetDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeliveryVehicle, null, options, request);
      }
      /// <summary>
      /// Returns the specified `DeliveryVehicle` instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> GetDeliveryVehicleAsync(global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeliveryVehicleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified `DeliveryVehicle` instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> GetDeliveryVehicleAsync(global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeliveryVehicle, null, options, request);
      }
      /// <summary>
      /// Writes updated `DeliveryVehicle` data to Fleet Engine, and assigns
      /// `Tasks` to the `DeliveryVehicle`. You cannot update the name of the
      /// `DeliveryVehicle`. You *can* update `remaining_vehicle_journey_segments`,
      /// but it must contain all of the `VehicleJourneySegment`s to be persisted on
      /// the `DeliveryVehicle`. The `task_id`s are retrieved from
      /// `remaining_vehicle_journey_segments`, and their corresponding `Tasks` are
      /// assigned to the `DeliveryVehicle` if they have not yet been assigned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle UpdateDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDeliveryVehicle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Writes updated `DeliveryVehicle` data to Fleet Engine, and assigns
      /// `Tasks` to the `DeliveryVehicle`. You cannot update the name of the
      /// `DeliveryVehicle`. You *can* update `remaining_vehicle_journey_segments`,
      /// but it must contain all of the `VehicleJourneySegment`s to be persisted on
      /// the `DeliveryVehicle`. The `task_id`s are retrieved from
      /// `remaining_vehicle_journey_segments`, and their corresponding `Tasks` are
      /// assigned to the `DeliveryVehicle` if they have not yet been assigned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle UpdateDeliveryVehicle(global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDeliveryVehicle, null, options, request);
      }
      /// <summary>
      /// Writes updated `DeliveryVehicle` data to Fleet Engine, and assigns
      /// `Tasks` to the `DeliveryVehicle`. You cannot update the name of the
      /// `DeliveryVehicle`. You *can* update `remaining_vehicle_journey_segments`,
      /// but it must contain all of the `VehicleJourneySegment`s to be persisted on
      /// the `DeliveryVehicle`. The `task_id`s are retrieved from
      /// `remaining_vehicle_journey_segments`, and their corresponding `Tasks` are
      /// assigned to the `DeliveryVehicle` if they have not yet been assigned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> UpdateDeliveryVehicleAsync(global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDeliveryVehicleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Writes updated `DeliveryVehicle` data to Fleet Engine, and assigns
      /// `Tasks` to the `DeliveryVehicle`. You cannot update the name of the
      /// `DeliveryVehicle`. You *can* update `remaining_vehicle_journey_segments`,
      /// but it must contain all of the `VehicleJourneySegment`s to be persisted on
      /// the `DeliveryVehicle`. The `task_id`s are retrieved from
      /// `remaining_vehicle_journey_segments`, and their corresponding `Tasks` are
      /// assigned to the `DeliveryVehicle` if they have not yet been assigned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle> UpdateDeliveryVehicleAsync(global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDeliveryVehicle, null, options, request);
      }
      /// <summary>
      /// Creates and returns a batch of new `Task` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse BatchCreateTasks(global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateTasks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a batch of new `Task` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse BatchCreateTasks(global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchCreateTasks, null, options, request);
      }
      /// <summary>
      /// Creates and returns a batch of new `Task` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse> BatchCreateTasksAsync(global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateTasksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a batch of new `Task` objects.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse> BatchCreateTasksAsync(global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchCreateTasks, null, options, request);
      }
      /// <summary>
      /// Creates and returns a new `Task` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.Task CreateTask(global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTask(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new `Task` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.Task CreateTask(global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTask, null, options, request);
      }
      /// <summary>
      /// Creates and returns a new `Task` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.Task> CreateTaskAsync(global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTaskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new `Task` object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.Task> CreateTaskAsync(global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTask, null, options, request);
      }
      /// <summary>
      /// Gets information about a `Task`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.Task GetTask(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTask(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a `Task`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.Task GetTask(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTask, null, options, request);
      }
      /// <summary>
      /// Gets information about a `Task`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.Task> GetTaskAsync(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTaskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a `Task`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.Task> GetTaskAsync(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTask, null, options, request);
      }
      /// <summary>
      /// Updates `Task` data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.Task UpdateTask(global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTask(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates `Task` data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.Task UpdateTask(global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTask, null, options, request);
      }
      /// <summary>
      /// Updates `Task` data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.Task> UpdateTaskAsync(global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTaskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates `Task` data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.Task> UpdateTaskAsync(global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTask, null, options, request);
      }
      /// <summary>
      /// Gets all `Task`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse ListTasks(global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTasks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets all `Task`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse ListTasks(global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTasks, null, options, request);
      }
      /// <summary>
      /// Gets all `Task`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse> ListTasksAsync(global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTasksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets all `Task`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse> ListTasksAsync(global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTasks, null, options, request);
      }
      /// <summary>
      /// Returns the specified `TaskTrackingInfo` instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo GetTaskTrackingInfo(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTaskTrackingInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified `TaskTrackingInfo` instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo GetTaskTrackingInfo(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTaskTrackingInfo, null, options, request);
      }
      /// <summary>
      /// Returns the specified `TaskTrackingInfo` instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo> GetTaskTrackingInfoAsync(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTaskTrackingInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified `TaskTrackingInfo` instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo> GetTaskTrackingInfoAsync(global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTaskTrackingInfo, null, options, request);
      }
      /// <summary>
      /// Gets all `DeliveryVehicle`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse ListDeliveryVehicles(global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeliveryVehicles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets all `DeliveryVehicle`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse ListDeliveryVehicles(global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDeliveryVehicles, null, options, request);
      }
      /// <summary>
      /// Gets all `DeliveryVehicle`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse> ListDeliveryVehiclesAsync(global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDeliveryVehiclesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets all `DeliveryVehicle`s that meet the specified filtering criteria.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse> ListDeliveryVehiclesAsync(global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDeliveryVehicles, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DeliveryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DeliveryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DeliveryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateDeliveryVehicle, serviceImpl.CreateDeliveryVehicle)
          .AddMethod(__Method_GetDeliveryVehicle, serviceImpl.GetDeliveryVehicle)
          .AddMethod(__Method_UpdateDeliveryVehicle, serviceImpl.UpdateDeliveryVehicle)
          .AddMethod(__Method_BatchCreateTasks, serviceImpl.BatchCreateTasks)
          .AddMethod(__Method_CreateTask, serviceImpl.CreateTask)
          .AddMethod(__Method_GetTask, serviceImpl.GetTask)
          .AddMethod(__Method_UpdateTask, serviceImpl.UpdateTask)
          .AddMethod(__Method_ListTasks, serviceImpl.ListTasks)
          .AddMethod(__Method_GetTaskTrackingInfo, serviceImpl.GetTaskTrackingInfo)
          .AddMethod(__Method_ListDeliveryVehicles, serviceImpl.ListDeliveryVehicles).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DeliveryServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateDeliveryVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.CreateDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle>(serviceImpl.CreateDeliveryVehicle));
      serviceBinder.AddMethod(__Method_GetDeliveryVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.GetDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle>(serviceImpl.GetDeliveryVehicle));
      serviceBinder.AddMethod(__Method_UpdateDeliveryVehicle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.UpdateDeliveryVehicleRequest, global::Google.Maps.FleetEngine.Delivery.V1.DeliveryVehicle>(serviceImpl.UpdateDeliveryVehicle));
      serviceBinder.AddMethod(__Method_BatchCreateTasks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksRequest, global::Google.Maps.FleetEngine.Delivery.V1.BatchCreateTasksResponse>(serviceImpl.BatchCreateTasks));
      serviceBinder.AddMethod(__Method_CreateTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.CreateTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task>(serviceImpl.CreateTask));
      serviceBinder.AddMethod(__Method_GetTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.GetTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task>(serviceImpl.GetTask));
      serviceBinder.AddMethod(__Method_UpdateTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.UpdateTaskRequest, global::Google.Maps.FleetEngine.Delivery.V1.Task>(serviceImpl.UpdateTask));
      serviceBinder.AddMethod(__Method_ListTasks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.ListTasksRequest, global::Google.Maps.FleetEngine.Delivery.V1.ListTasksResponse>(serviceImpl.ListTasks));
      serviceBinder.AddMethod(__Method_GetTaskTrackingInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.GetTaskTrackingInfoRequest, global::Google.Maps.FleetEngine.Delivery.V1.TaskTrackingInfo>(serviceImpl.GetTaskTrackingInfo));
      serviceBinder.AddMethod(__Method_ListDeliveryVehicles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesRequest, global::Google.Maps.FleetEngine.Delivery.V1.ListDeliveryVehiclesResponse>(serviceImpl.ListDeliveryVehicles));
    }

  }
}
#endregion
