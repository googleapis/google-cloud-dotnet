// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/documentai/v1beta3/document_processor_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.DocumentAI.V1Beta3 {
  /// <summary>
  /// Service to call Document AI to process documents according to the
  /// processor's definition. Processors are built using state-of-the-art Google
  /// AI such as natural language, computer vision, and translation to extract
  /// structured information from unstructured or semi-structured documents.
  /// </summary>
  public static partial class DocumentProcessorService
  {
    static readonly string __ServiceName = "google.cloud.documentai.v1beta3.DocumentProcessorService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest> __Marshaller_google_cloud_documentai_v1beta3_ProcessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse> __Marshaller_google_cloud_documentai_v1beta3_ProcessResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest> __Marshaller_google_cloud_documentai_v1beta3_BatchProcessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest> __Marshaller_google_cloud_documentai_v1beta3_FetchProcessorTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse> __Marshaller_google_cloud_documentai_v1beta3_FetchProcessorTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest> __Marshaller_google_cloud_documentai_v1beta3_ListProcessorTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse> __Marshaller_google_cloud_documentai_v1beta3_ListProcessorTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest> __Marshaller_google_cloud_documentai_v1beta3_GetProcessorTypeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType> __Marshaller_google_cloud_documentai_v1beta3_ProcessorType = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest> __Marshaller_google_cloud_documentai_v1beta3_ListProcessorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse> __Marshaller_google_cloud_documentai_v1beta3_ListProcessorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest> __Marshaller_google_cloud_documentai_v1beta3_GetProcessorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.Processor> __Marshaller_google_cloud_documentai_v1beta3_Processor = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.Processor.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest> __Marshaller_google_cloud_documentai_v1beta3_TrainProcessorVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest> __Marshaller_google_cloud_documentai_v1beta3_GetProcessorVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion> __Marshaller_google_cloud_documentai_v1beta3_ProcessorVersion = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest> __Marshaller_google_cloud_documentai_v1beta3_ListProcessorVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse> __Marshaller_google_cloud_documentai_v1beta3_ListProcessorVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest> __Marshaller_google_cloud_documentai_v1beta3_DeleteProcessorVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest> __Marshaller_google_cloud_documentai_v1beta3_DeployProcessorVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest> __Marshaller_google_cloud_documentai_v1beta3_UndeployProcessorVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest> __Marshaller_google_cloud_documentai_v1beta3_CreateProcessorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest> __Marshaller_google_cloud_documentai_v1beta3_DeleteProcessorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest> __Marshaller_google_cloud_documentai_v1beta3_EnableProcessorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest> __Marshaller_google_cloud_documentai_v1beta3_DisableProcessorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest> __Marshaller_google_cloud_documentai_v1beta3_SetDefaultProcessorVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest> __Marshaller_google_cloud_documentai_v1beta3_ReviewDocumentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest> __Marshaller_google_cloud_documentai_v1beta3_EvaluateProcessorVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest> __Marshaller_google_cloud_documentai_v1beta3_GetEvaluationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.Evaluation> __Marshaller_google_cloud_documentai_v1beta3_Evaluation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.Evaluation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest> __Marshaller_google_cloud_documentai_v1beta3_ListEvaluationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse> __Marshaller_google_cloud_documentai_v1beta3_ListEvaluationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest> __Marshaller_google_cloud_documentai_v1beta3_ImportProcessorVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse> __Method_ProcessDocument = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ProcessDocument",
        __Marshaller_google_cloud_documentai_v1beta3_ProcessRequest,
        __Marshaller_google_cloud_documentai_v1beta3_ProcessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest, global::Google.LongRunning.Operation> __Method_BatchProcessDocuments = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchProcessDocuments",
        __Marshaller_google_cloud_documentai_v1beta3_BatchProcessRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest, global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse> __Method_FetchProcessorTypes = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest, global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "FetchProcessorTypes",
        __Marshaller_google_cloud_documentai_v1beta3_FetchProcessorTypesRequest,
        __Marshaller_google_cloud_documentai_v1beta3_FetchProcessorTypesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse> __Method_ListProcessorTypes = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProcessorTypes",
        __Marshaller_google_cloud_documentai_v1beta3_ListProcessorTypesRequest,
        __Marshaller_google_cloud_documentai_v1beta3_ListProcessorTypesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType> __Method_GetProcessorType = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProcessorType",
        __Marshaller_google_cloud_documentai_v1beta3_GetProcessorTypeRequest,
        __Marshaller_google_cloud_documentai_v1beta3_ProcessorType);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse> __Method_ListProcessors = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProcessors",
        __Marshaller_google_cloud_documentai_v1beta3_ListProcessorsRequest,
        __Marshaller_google_cloud_documentai_v1beta3_ListProcessorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest, global::Google.Cloud.DocumentAI.V1Beta3.Processor> __Method_GetProcessor = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest, global::Google.Cloud.DocumentAI.V1Beta3.Processor>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProcessor",
        __Marshaller_google_cloud_documentai_v1beta3_GetProcessorRequest,
        __Marshaller_google_cloud_documentai_v1beta3_Processor);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest, global::Google.LongRunning.Operation> __Method_TrainProcessorVersion = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TrainProcessorVersion",
        __Marshaller_google_cloud_documentai_v1beta3_TrainProcessorVersionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion> __Method_GetProcessorVersion = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProcessorVersion",
        __Marshaller_google_cloud_documentai_v1beta3_GetProcessorVersionRequest,
        __Marshaller_google_cloud_documentai_v1beta3_ProcessorVersion);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse> __Method_ListProcessorVersions = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProcessorVersions",
        __Marshaller_google_cloud_documentai_v1beta3_ListProcessorVersionsRequest,
        __Marshaller_google_cloud_documentai_v1beta3_ListProcessorVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest, global::Google.LongRunning.Operation> __Method_DeleteProcessorVersion = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProcessorVersion",
        __Marshaller_google_cloud_documentai_v1beta3_DeleteProcessorVersionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest, global::Google.LongRunning.Operation> __Method_DeployProcessorVersion = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeployProcessorVersion",
        __Marshaller_google_cloud_documentai_v1beta3_DeployProcessorVersionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest, global::Google.LongRunning.Operation> __Method_UndeployProcessorVersion = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UndeployProcessorVersion",
        __Marshaller_google_cloud_documentai_v1beta3_UndeployProcessorVersionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest, global::Google.Cloud.DocumentAI.V1Beta3.Processor> __Method_CreateProcessor = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest, global::Google.Cloud.DocumentAI.V1Beta3.Processor>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProcessor",
        __Marshaller_google_cloud_documentai_v1beta3_CreateProcessorRequest,
        __Marshaller_google_cloud_documentai_v1beta3_Processor);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest, global::Google.LongRunning.Operation> __Method_DeleteProcessor = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProcessor",
        __Marshaller_google_cloud_documentai_v1beta3_DeleteProcessorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest, global::Google.LongRunning.Operation> __Method_EnableProcessor = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnableProcessor",
        __Marshaller_google_cloud_documentai_v1beta3_EnableProcessorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest, global::Google.LongRunning.Operation> __Method_DisableProcessor = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableProcessor",
        __Marshaller_google_cloud_documentai_v1beta3_DisableProcessorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest, global::Google.LongRunning.Operation> __Method_SetDefaultProcessorVersion = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetDefaultProcessorVersion",
        __Marshaller_google_cloud_documentai_v1beta3_SetDefaultProcessorVersionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest, global::Google.LongRunning.Operation> __Method_ReviewDocument = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReviewDocument",
        __Marshaller_google_cloud_documentai_v1beta3_ReviewDocumentRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest, global::Google.LongRunning.Operation> __Method_EvaluateProcessorVersion = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EvaluateProcessorVersion",
        __Marshaller_google_cloud_documentai_v1beta3_EvaluateProcessorVersionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest, global::Google.Cloud.DocumentAI.V1Beta3.Evaluation> __Method_GetEvaluation = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest, global::Google.Cloud.DocumentAI.V1Beta3.Evaluation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvaluation",
        __Marshaller_google_cloud_documentai_v1beta3_GetEvaluationRequest,
        __Marshaller_google_cloud_documentai_v1beta3_Evaluation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse> __Method_ListEvaluations = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEvaluations",
        __Marshaller_google_cloud_documentai_v1beta3_ListEvaluationsRequest,
        __Marshaller_google_cloud_documentai_v1beta3_ListEvaluationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest, global::Google.LongRunning.Operation> __Method_ImportProcessorVersion = new grpc::Method<global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportProcessorVersion",
        __Marshaller_google_cloud_documentai_v1beta3_ImportProcessorVersionRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.DocumentAI.V1Beta3.DocumentProcessorServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DocumentProcessorService</summary>
    [grpc::BindServiceMethod(typeof(DocumentProcessorService), "BindService")]
    public abstract partial class DocumentProcessorServiceBase
    {
      /// <summary>
      /// Processes a single document.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse> ProcessDocument(global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// LRO endpoint to batch process many documents. The output is written
      /// to Cloud Storage as JSON in the [Document] format.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> BatchProcessDocuments(global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Fetches processor types. Note that we don't use
      /// [ListProcessorTypes][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessorTypes]
      /// here, because it isn't paginated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse> FetchProcessorTypes(global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the processor types that exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse> ListProcessorTypes(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a processor type detail.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType> GetProcessorType(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all processors which belong to this project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse> ListProcessors(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a processor detail.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.Processor> GetProcessor(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Trains a new processor version.
      /// Operation metadata is returned as
      /// [TrainProcessorVersionMetadata][google.cloud.documentai.v1beta3.TrainProcessorVersionMetadata].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> TrainProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a processor version detail.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion> GetProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all versions of a processor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse> ListProcessorVersions(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the processor version, all artifacts under the processor version
      /// will be deleted.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deploys the processor version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeployProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Undeploys the processor version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UndeployProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a processor from the
      /// [ProcessorType][google.cloud.documentai.v1beta3.ProcessorType] provided.
      /// The processor will be at `ENABLED` state by default after its creation.
      /// Note that this method requires the `documentai.processors.create`
      /// permission on the project, which is highly privileged. A user or service
      /// account with this permission can create new processors that can interact
      /// with any gcs bucket in your project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.Processor> CreateProcessor(global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the processor, unloads all deployed model artifacts if it was
      /// enabled and then deletes all artifacts associated with this processor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteProcessor(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Enables a processor
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> EnableProcessor(global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Disables a processor
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DisableProcessor(global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set the default (active) version of a
      /// [Processor][google.cloud.documentai.v1beta3.Processor] that will be used in
      /// [ProcessDocument][google.cloud.documentai.v1beta3.DocumentProcessorService.ProcessDocument]
      /// and
      /// [BatchProcessDocuments][google.cloud.documentai.v1beta3.DocumentProcessorService.BatchProcessDocuments].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> SetDefaultProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Send a document for Human Review. The input document should be processed by
      /// the specified processor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ReviewDocument(global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Evaluates a ProcessorVersion against annotated documents, producing an
      /// Evaluation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> EvaluateProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a specific evaluation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.Evaluation> GetEvaluation(global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a set of evaluations for a given processor version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse> ListEvaluations(global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports a processor version from source processor version.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DocumentProcessorService</summary>
    public partial class DocumentProcessorServiceClient : grpc::ClientBase<DocumentProcessorServiceClient>
    {
      /// <summary>Creates a new client for DocumentProcessorService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DocumentProcessorServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DocumentProcessorService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DocumentProcessorServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DocumentProcessorServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DocumentProcessorServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Processes a single document.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse ProcessDocument(global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProcessDocument(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Processes a single document.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse ProcessDocument(global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ProcessDocument, null, options, request);
      }
      /// <summary>
      /// Processes a single document.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse> ProcessDocumentAsync(global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProcessDocumentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Processes a single document.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse> ProcessDocumentAsync(global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ProcessDocument, null, options, request);
      }
      /// <summary>
      /// LRO endpoint to batch process many documents. The output is written
      /// to Cloud Storage as JSON in the [Document] format.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchProcessDocuments(global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchProcessDocuments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// LRO endpoint to batch process many documents. The output is written
      /// to Cloud Storage as JSON in the [Document] format.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchProcessDocuments(global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchProcessDocuments, null, options, request);
      }
      /// <summary>
      /// LRO endpoint to batch process many documents. The output is written
      /// to Cloud Storage as JSON in the [Document] format.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchProcessDocumentsAsync(global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchProcessDocumentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// LRO endpoint to batch process many documents. The output is written
      /// to Cloud Storage as JSON in the [Document] format.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchProcessDocumentsAsync(global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchProcessDocuments, null, options, request);
      }
      /// <summary>
      /// Fetches processor types. Note that we don't use
      /// [ListProcessorTypes][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessorTypes]
      /// here, because it isn't paginated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse FetchProcessorTypes(global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchProcessorTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches processor types. Note that we don't use
      /// [ListProcessorTypes][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessorTypes]
      /// here, because it isn't paginated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse FetchProcessorTypes(global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_FetchProcessorTypes, null, options, request);
      }
      /// <summary>
      /// Fetches processor types. Note that we don't use
      /// [ListProcessorTypes][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessorTypes]
      /// here, because it isn't paginated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse> FetchProcessorTypesAsync(global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return FetchProcessorTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Fetches processor types. Note that we don't use
      /// [ListProcessorTypes][google.cloud.documentai.v1beta3.DocumentProcessorService.ListProcessorTypes]
      /// here, because it isn't paginated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse> FetchProcessorTypesAsync(global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_FetchProcessorTypes, null, options, request);
      }
      /// <summary>
      /// Lists the processor types that exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse ListProcessorTypes(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProcessorTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the processor types that exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse ListProcessorTypes(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProcessorTypes, null, options, request);
      }
      /// <summary>
      /// Lists the processor types that exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse> ListProcessorTypesAsync(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProcessorTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the processor types that exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse> ListProcessorTypesAsync(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProcessorTypes, null, options, request);
      }
      /// <summary>
      /// Gets a processor type detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType GetProcessorType(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProcessorType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a processor type detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType GetProcessorType(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProcessorType, null, options, request);
      }
      /// <summary>
      /// Gets a processor type detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType> GetProcessorTypeAsync(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProcessorTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a processor type detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType> GetProcessorTypeAsync(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProcessorType, null, options, request);
      }
      /// <summary>
      /// Lists all processors which belong to this project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse ListProcessors(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProcessors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all processors which belong to this project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse ListProcessors(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProcessors, null, options, request);
      }
      /// <summary>
      /// Lists all processors which belong to this project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse> ListProcessorsAsync(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProcessorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all processors which belong to this project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse> ListProcessorsAsync(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProcessors, null, options, request);
      }
      /// <summary>
      /// Gets a processor detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.Processor GetProcessor(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProcessor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a processor detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.Processor GetProcessor(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProcessor, null, options, request);
      }
      /// <summary>
      /// Gets a processor detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.Processor> GetProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProcessorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a processor detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.Processor> GetProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProcessor, null, options, request);
      }
      /// <summary>
      /// Trains a new processor version.
      /// Operation metadata is returned as
      /// [TrainProcessorVersionMetadata][google.cloud.documentai.v1beta3.TrainProcessorVersionMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TrainProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrainProcessorVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Trains a new processor version.
      /// Operation metadata is returned as
      /// [TrainProcessorVersionMetadata][google.cloud.documentai.v1beta3.TrainProcessorVersionMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TrainProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrainProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Trains a new processor version.
      /// Operation metadata is returned as
      /// [TrainProcessorVersionMetadata][google.cloud.documentai.v1beta3.TrainProcessorVersionMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TrainProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrainProcessorVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Trains a new processor version.
      /// Operation metadata is returned as
      /// [TrainProcessorVersionMetadata][google.cloud.documentai.v1beta3.TrainProcessorVersionMetadata].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TrainProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrainProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Gets a processor version detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion GetProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProcessorVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a processor version detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion GetProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Gets a processor version detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion> GetProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProcessorVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a processor version detail.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion> GetProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Lists all versions of a processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse ListProcessorVersions(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProcessorVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all versions of a processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse ListProcessorVersions(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProcessorVersions, null, options, request);
      }
      /// <summary>
      /// Lists all versions of a processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse> ListProcessorVersionsAsync(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProcessorVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all versions of a processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse> ListProcessorVersionsAsync(global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProcessorVersions, null, options, request);
      }
      /// <summary>
      /// Deletes the processor version, all artifacts under the processor version
      /// will be deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProcessorVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the processor version, all artifacts under the processor version
      /// will be deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Deletes the processor version, all artifacts under the processor version
      /// will be deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProcessorVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the processor version, all artifacts under the processor version
      /// will be deleted.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Deploys the processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeployProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployProcessorVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deploys the processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeployProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeployProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Deploys the processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeployProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeployProcessorVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deploys the processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeployProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeployProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Undeploys the processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UndeployProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndeployProcessorVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Undeploys the processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UndeployProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UndeployProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Undeploys the processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UndeployProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UndeployProcessorVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Undeploys the processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UndeployProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UndeployProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Creates a processor from the
      /// [ProcessorType][google.cloud.documentai.v1beta3.ProcessorType] provided.
      /// The processor will be at `ENABLED` state by default after its creation.
      /// Note that this method requires the `documentai.processors.create`
      /// permission on the project, which is highly privileged. A user or service
      /// account with this permission can create new processors that can interact
      /// with any gcs bucket in your project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.Processor CreateProcessor(global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProcessor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a processor from the
      /// [ProcessorType][google.cloud.documentai.v1beta3.ProcessorType] provided.
      /// The processor will be at `ENABLED` state by default after its creation.
      /// Note that this method requires the `documentai.processors.create`
      /// permission on the project, which is highly privileged. A user or service
      /// account with this permission can create new processors that can interact
      /// with any gcs bucket in your project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.Processor CreateProcessor(global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProcessor, null, options, request);
      }
      /// <summary>
      /// Creates a processor from the
      /// [ProcessorType][google.cloud.documentai.v1beta3.ProcessorType] provided.
      /// The processor will be at `ENABLED` state by default after its creation.
      /// Note that this method requires the `documentai.processors.create`
      /// permission on the project, which is highly privileged. A user or service
      /// account with this permission can create new processors that can interact
      /// with any gcs bucket in your project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.Processor> CreateProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProcessorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a processor from the
      /// [ProcessorType][google.cloud.documentai.v1beta3.ProcessorType] provided.
      /// The processor will be at `ENABLED` state by default after its creation.
      /// Note that this method requires the `documentai.processors.create`
      /// permission on the project, which is highly privileged. A user or service
      /// account with this permission can create new processors that can interact
      /// with any gcs bucket in your project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.Processor> CreateProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProcessor, null, options, request);
      }
      /// <summary>
      /// Deletes the processor, unloads all deployed model artifacts if it was
      /// enabled and then deletes all artifacts associated with this processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteProcessor(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProcessor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the processor, unloads all deployed model artifacts if it was
      /// enabled and then deletes all artifacts associated with this processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteProcessor(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProcessor, null, options, request);
      }
      /// <summary>
      /// Deletes the processor, unloads all deployed model artifacts if it was
      /// enabled and then deletes all artifacts associated with this processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProcessorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the processor, unloads all deployed model artifacts if it was
      /// enabled and then deletes all artifacts associated with this processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProcessor, null, options, request);
      }
      /// <summary>
      /// Enables a processor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation EnableProcessor(global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableProcessor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables a processor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation EnableProcessor(global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnableProcessor, null, options, request);
      }
      /// <summary>
      /// Enables a processor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> EnableProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableProcessorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables a processor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> EnableProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnableProcessor, null, options, request);
      }
      /// <summary>
      /// Disables a processor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DisableProcessor(global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableProcessor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Disables a processor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DisableProcessor(global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableProcessor, null, options, request);
      }
      /// <summary>
      /// Disables a processor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DisableProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableProcessorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Disables a processor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DisableProcessorAsync(global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableProcessor, null, options, request);
      }
      /// <summary>
      /// Set the default (active) version of a
      /// [Processor][google.cloud.documentai.v1beta3.Processor] that will be used in
      /// [ProcessDocument][google.cloud.documentai.v1beta3.DocumentProcessorService.ProcessDocument]
      /// and
      /// [BatchProcessDocuments][google.cloud.documentai.v1beta3.DocumentProcessorService.BatchProcessDocuments].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SetDefaultProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetDefaultProcessorVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set the default (active) version of a
      /// [Processor][google.cloud.documentai.v1beta3.Processor] that will be used in
      /// [ProcessDocument][google.cloud.documentai.v1beta3.DocumentProcessorService.ProcessDocument]
      /// and
      /// [BatchProcessDocuments][google.cloud.documentai.v1beta3.DocumentProcessorService.BatchProcessDocuments].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SetDefaultProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetDefaultProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Set the default (active) version of a
      /// [Processor][google.cloud.documentai.v1beta3.Processor] that will be used in
      /// [ProcessDocument][google.cloud.documentai.v1beta3.DocumentProcessorService.ProcessDocument]
      /// and
      /// [BatchProcessDocuments][google.cloud.documentai.v1beta3.DocumentProcessorService.BatchProcessDocuments].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SetDefaultProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetDefaultProcessorVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set the default (active) version of a
      /// [Processor][google.cloud.documentai.v1beta3.Processor] that will be used in
      /// [ProcessDocument][google.cloud.documentai.v1beta3.DocumentProcessorService.ProcessDocument]
      /// and
      /// [BatchProcessDocuments][google.cloud.documentai.v1beta3.DocumentProcessorService.BatchProcessDocuments].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SetDefaultProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetDefaultProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Send a document for Human Review. The input document should be processed by
      /// the specified processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ReviewDocument(global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReviewDocument(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send a document for Human Review. The input document should be processed by
      /// the specified processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ReviewDocument(global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReviewDocument, null, options, request);
      }
      /// <summary>
      /// Send a document for Human Review. The input document should be processed by
      /// the specified processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ReviewDocumentAsync(global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReviewDocumentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send a document for Human Review. The input document should be processed by
      /// the specified processor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ReviewDocumentAsync(global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReviewDocument, null, options, request);
      }
      /// <summary>
      /// Evaluates a ProcessorVersion against annotated documents, producing an
      /// Evaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation EvaluateProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EvaluateProcessorVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Evaluates a ProcessorVersion against annotated documents, producing an
      /// Evaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation EvaluateProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EvaluateProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Evaluates a ProcessorVersion against annotated documents, producing an
      /// Evaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> EvaluateProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EvaluateProcessorVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Evaluates a ProcessorVersion against annotated documents, producing an
      /// Evaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> EvaluateProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EvaluateProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Retrieves a specific evaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.Evaluation GetEvaluation(global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a specific evaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.Evaluation GetEvaluation(global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEvaluation, null, options, request);
      }
      /// <summary>
      /// Retrieves a specific evaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.Evaluation> GetEvaluationAsync(global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvaluationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a specific evaluation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.Evaluation> GetEvaluationAsync(global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEvaluation, null, options, request);
      }
      /// <summary>
      /// Retrieves a set of evaluations for a given processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse ListEvaluations(global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEvaluations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a set of evaluations for a given processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse ListEvaluations(global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEvaluations, null, options, request);
      }
      /// <summary>
      /// Retrieves a set of evaluations for a given processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse> ListEvaluationsAsync(global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEvaluationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a set of evaluations for a given processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse> ListEvaluationsAsync(global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEvaluations, null, options, request);
      }
      /// <summary>
      /// Imports a processor version from source processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportProcessorVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports a processor version from source processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportProcessorVersion(global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportProcessorVersion, null, options, request);
      }
      /// <summary>
      /// Imports a processor version from source processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportProcessorVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports a processor version from source processor version.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportProcessorVersionAsync(global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportProcessorVersion, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DocumentProcessorServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DocumentProcessorServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DocumentProcessorServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ProcessDocument, serviceImpl.ProcessDocument)
          .AddMethod(__Method_BatchProcessDocuments, serviceImpl.BatchProcessDocuments)
          .AddMethod(__Method_FetchProcessorTypes, serviceImpl.FetchProcessorTypes)
          .AddMethod(__Method_ListProcessorTypes, serviceImpl.ListProcessorTypes)
          .AddMethod(__Method_GetProcessorType, serviceImpl.GetProcessorType)
          .AddMethod(__Method_ListProcessors, serviceImpl.ListProcessors)
          .AddMethod(__Method_GetProcessor, serviceImpl.GetProcessor)
          .AddMethod(__Method_TrainProcessorVersion, serviceImpl.TrainProcessorVersion)
          .AddMethod(__Method_GetProcessorVersion, serviceImpl.GetProcessorVersion)
          .AddMethod(__Method_ListProcessorVersions, serviceImpl.ListProcessorVersions)
          .AddMethod(__Method_DeleteProcessorVersion, serviceImpl.DeleteProcessorVersion)
          .AddMethod(__Method_DeployProcessorVersion, serviceImpl.DeployProcessorVersion)
          .AddMethod(__Method_UndeployProcessorVersion, serviceImpl.UndeployProcessorVersion)
          .AddMethod(__Method_CreateProcessor, serviceImpl.CreateProcessor)
          .AddMethod(__Method_DeleteProcessor, serviceImpl.DeleteProcessor)
          .AddMethod(__Method_EnableProcessor, serviceImpl.EnableProcessor)
          .AddMethod(__Method_DisableProcessor, serviceImpl.DisableProcessor)
          .AddMethod(__Method_SetDefaultProcessorVersion, serviceImpl.SetDefaultProcessorVersion)
          .AddMethod(__Method_ReviewDocument, serviceImpl.ReviewDocument)
          .AddMethod(__Method_EvaluateProcessorVersion, serviceImpl.EvaluateProcessorVersion)
          .AddMethod(__Method_GetEvaluation, serviceImpl.GetEvaluation)
          .AddMethod(__Method_ListEvaluations, serviceImpl.ListEvaluations)
          .AddMethod(__Method_ImportProcessorVersion, serviceImpl.ImportProcessorVersion).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DocumentProcessorServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ProcessDocument, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.ProcessRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessResponse>(serviceImpl.ProcessDocument));
      serviceBinder.AddMethod(__Method_BatchProcessDocuments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.BatchProcessRequest, global::Google.LongRunning.Operation>(serviceImpl.BatchProcessDocuments));
      serviceBinder.AddMethod(__Method_FetchProcessorTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesRequest, global::Google.Cloud.DocumentAI.V1Beta3.FetchProcessorTypesResponse>(serviceImpl.FetchProcessorTypes));
      serviceBinder.AddMethod(__Method_ListProcessorTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorTypesResponse>(serviceImpl.ListProcessorTypes));
      serviceBinder.AddMethod(__Method_GetProcessorType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorTypeRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessorType>(serviceImpl.GetProcessorType));
      serviceBinder.AddMethod(__Method_ListProcessors, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorsResponse>(serviceImpl.ListProcessors));
      serviceBinder.AddMethod(__Method_GetProcessor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorRequest, global::Google.Cloud.DocumentAI.V1Beta3.Processor>(serviceImpl.GetProcessor));
      serviceBinder.AddMethod(__Method_TrainProcessorVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.TrainProcessorVersionRequest, global::Google.LongRunning.Operation>(serviceImpl.TrainProcessorVersion));
      serviceBinder.AddMethod(__Method_GetProcessorVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.GetProcessorVersionRequest, global::Google.Cloud.DocumentAI.V1Beta3.ProcessorVersion>(serviceImpl.GetProcessorVersion));
      serviceBinder.AddMethod(__Method_ListProcessorVersions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListProcessorVersionsResponse>(serviceImpl.ListProcessorVersions));
      serviceBinder.AddMethod(__Method_DeleteProcessorVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorVersionRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteProcessorVersion));
      serviceBinder.AddMethod(__Method_DeployProcessorVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.DeployProcessorVersionRequest, global::Google.LongRunning.Operation>(serviceImpl.DeployProcessorVersion));
      serviceBinder.AddMethod(__Method_UndeployProcessorVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.UndeployProcessorVersionRequest, global::Google.LongRunning.Operation>(serviceImpl.UndeployProcessorVersion));
      serviceBinder.AddMethod(__Method_CreateProcessor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.CreateProcessorRequest, global::Google.Cloud.DocumentAI.V1Beta3.Processor>(serviceImpl.CreateProcessor));
      serviceBinder.AddMethod(__Method_DeleteProcessor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.DeleteProcessorRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteProcessor));
      serviceBinder.AddMethod(__Method_EnableProcessor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.EnableProcessorRequest, global::Google.LongRunning.Operation>(serviceImpl.EnableProcessor));
      serviceBinder.AddMethod(__Method_DisableProcessor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.DisableProcessorRequest, global::Google.LongRunning.Operation>(serviceImpl.DisableProcessor));
      serviceBinder.AddMethod(__Method_SetDefaultProcessorVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.SetDefaultProcessorVersionRequest, global::Google.LongRunning.Operation>(serviceImpl.SetDefaultProcessorVersion));
      serviceBinder.AddMethod(__Method_ReviewDocument, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.ReviewDocumentRequest, global::Google.LongRunning.Operation>(serviceImpl.ReviewDocument));
      serviceBinder.AddMethod(__Method_EvaluateProcessorVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.EvaluateProcessorVersionRequest, global::Google.LongRunning.Operation>(serviceImpl.EvaluateProcessorVersion));
      serviceBinder.AddMethod(__Method_GetEvaluation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.GetEvaluationRequest, global::Google.Cloud.DocumentAI.V1Beta3.Evaluation>(serviceImpl.GetEvaluation));
      serviceBinder.AddMethod(__Method_ListEvaluations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsRequest, global::Google.Cloud.DocumentAI.V1Beta3.ListEvaluationsResponse>(serviceImpl.ListEvaluations));
      serviceBinder.AddMethod(__Method_ImportProcessorVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DocumentAI.V1Beta3.ImportProcessorVersionRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportProcessorVersion));
    }

  }
}
#endregion
