// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/bigquery/datatransfer/v1/datatransfer.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.BigQuery.DataTransfer.V1 {
  /// <summary>
  /// This API allows users to manage their data transfers into BigQuery.
  /// </summary>
  public static partial class DataTransferService
  {
    static readonly string __ServiceName = "google.cloud.bigquery.datatransfer.v1.DataTransferService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_GetDataSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource> __Marshaller_google_cloud_bigquery_datatransfer_v1_DataSource = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_ListDataSourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse> __Marshaller_google_cloud_bigquery_datatransfer_v1_ListDataSourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_CreateTransferConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> __Marshaller_google_cloud_bigquery_datatransfer_v1_TransferConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_UpdateTransferConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_DeleteTransferConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_GetTransferConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse> __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_ScheduleTransferRunsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse> __Marshaller_google_cloud_bigquery_datatransfer_v1_ScheduleTransferRunsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_StartManualTransferRunsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse> __Marshaller_google_cloud_bigquery_datatransfer_v1_StartManualTransferRunsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_GetTransferRunRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun> __Marshaller_google_cloud_bigquery_datatransfer_v1_TransferRun = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_DeleteTransferRunRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferRunsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse> __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferRunsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferLogsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse> __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferLogsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_CheckValidCredsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse> __Marshaller_google_cloud_bigquery_datatransfer_v1_CheckValidCredsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_EnrollDataSourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest> __Marshaller_google_cloud_bigquery_datatransfer_v1_UnenrollDataSourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource> __Method_GetDataSource = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataSource",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_GetDataSourceRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_DataSource);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse> __Method_ListDataSources = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDataSources",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ListDataSourcesRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ListDataSourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> __Method_CreateTransferConfig = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTransferConfig",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_CreateTransferConfigRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_TransferConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> __Method_UpdateTransferConfig = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTransferConfig",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_UpdateTransferConfigRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_TransferConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTransferConfig = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTransferConfig",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_DeleteTransferConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> __Method_GetTransferConfig = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTransferConfig",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_GetTransferConfigRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_TransferConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse> __Method_ListTransferConfigs = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTransferConfigs",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferConfigsRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse> __Method_ScheduleTransferRuns = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ScheduleTransferRuns",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ScheduleTransferRunsRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ScheduleTransferRunsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse> __Method_StartManualTransferRuns = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartManualTransferRuns",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_StartManualTransferRunsRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_StartManualTransferRunsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun> __Method_GetTransferRun = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTransferRun",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_GetTransferRunRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_TransferRun);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTransferRun = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTransferRun",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_DeleteTransferRunRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse> __Method_ListTransferRuns = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTransferRuns",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferRunsRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferRunsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse> __Method_ListTransferLogs = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTransferLogs",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferLogsRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_ListTransferLogsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse> __Method_CheckValidCreds = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckValidCreds",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_CheckValidCredsRequest,
        __Marshaller_google_cloud_bigquery_datatransfer_v1_CheckValidCredsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_EnrollDataSources = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnrollDataSources",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_EnrollDataSourcesRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UnenrollDataSources = new grpc::Method<global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnenrollDataSources",
        __Marshaller_google_cloud_bigquery_datatransfer_v1_UnenrollDataSourcesRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.BigQuery.DataTransfer.V1.DatatransferReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataTransferService</summary>
    [grpc::BindServiceMethod(typeof(DataTransferService), "BindService")]
    public abstract partial class DataTransferServiceBase
    {
      /// <summary>
      /// Retrieves a supported data source and returns its settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource> GetDataSource(global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists supported data sources and returns their settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse> ListDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new data transfer configuration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> CreateTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a data transfer configuration.
      /// All fields must be set, even if they are not updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> UpdateTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a data transfer configuration, including any associated transfer
      /// runs and logs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns information about a data transfer config.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> GetTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns information about all transfer configs owned by a project in the
      /// specified location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse> ListTransferConfigs(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates transfer runs for a time range [start_time, end_time].
      /// For each date - or whatever granularity the data source supports - in the
      /// range, one transfer run is created.
      /// Note that runs are created per UTC time in the time range.
      /// DEPRECATED: use StartManualTransferRuns instead.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse> ScheduleTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start manual transfer runs to be executed now with schedule_time equal to
      /// current time. The transfer runs can be created for a time range where the
      /// run_time is between start_time (inclusive) and end_time (exclusive), or for
      /// a specific run_time.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse> StartManualTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns information about the particular transfer run.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun> GetTransferRun(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified transfer run.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferRun(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns information about running and completed transfer runs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse> ListTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns log messages for the transfer run.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse> ListTransferLogs(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns true if valid credentials exist for the given data source and
      /// requesting user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse> CheckValidCreds(global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Enroll data sources in a user project. This allows users to create transfer
      /// configurations for these data sources. They will also appear in the
      /// ListDataSources RPC and as such, will appear in the
      /// [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents
      /// can be found in the public guide for
      /// [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and
      /// [Data Transfer
      /// Service](https://cloud.google.com/bigquery/docs/working-with-transfers).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> EnrollDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unenroll data sources in a user project. This allows users to remove
      /// transfer configurations for these data sources. They will no longer appear
      /// in the ListDataSources RPC and will also no longer appear in the [BigQuery
      /// UI](https://console.cloud.google.com/bigquery). Data transfers
      /// configurations of unenrolled data sources will not be scheduled.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> UnenrollDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataTransferService</summary>
    public partial class DataTransferServiceClient : grpc::ClientBase<DataTransferServiceClient>
    {
      /// <summary>Creates a new client for DataTransferService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataTransferServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataTransferService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataTransferServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataTransferServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataTransferServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Retrieves a supported data source and returns its settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource GetDataSource(global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a supported data source and returns its settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource GetDataSource(global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataSource, null, options, request);
      }
      /// <summary>
      /// Retrieves a supported data source and returns its settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource> GetDataSourceAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a supported data source and returns its settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource> GetDataSourceAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataSource, null, options, request);
      }
      /// <summary>
      /// Lists supported data sources and returns their settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse ListDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDataSources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists supported data sources and returns their settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse ListDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDataSources, null, options, request);
      }
      /// <summary>
      /// Lists supported data sources and returns their settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse> ListDataSourcesAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDataSourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists supported data sources and returns their settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse> ListDataSourcesAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDataSources, null, options, request);
      }
      /// <summary>
      /// Creates a new data transfer configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig CreateTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTransferConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new data transfer configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig CreateTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTransferConfig, null, options, request);
      }
      /// <summary>
      /// Creates a new data transfer configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> CreateTransferConfigAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTransferConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new data transfer configuration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> CreateTransferConfigAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTransferConfig, null, options, request);
      }
      /// <summary>
      /// Updates a data transfer configuration.
      /// All fields must be set, even if they are not updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig UpdateTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTransferConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a data transfer configuration.
      /// All fields must be set, even if they are not updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig UpdateTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTransferConfig, null, options, request);
      }
      /// <summary>
      /// Updates a data transfer configuration.
      /// All fields must be set, even if they are not updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> UpdateTransferConfigAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTransferConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a data transfer configuration.
      /// All fields must be set, even if they are not updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> UpdateTransferConfigAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTransferConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a data transfer configuration, including any associated transfer
      /// runs and logs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTransferConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a data transfer configuration, including any associated transfer
      /// runs and logs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTransferConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a data transfer configuration, including any associated transfer
      /// runs and logs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferConfigAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTransferConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a data transfer configuration, including any associated transfer
      /// runs and logs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferConfigAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTransferConfig, null, options, request);
      }
      /// <summary>
      /// Returns information about a data transfer config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig GetTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransferConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about a data transfer config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig GetTransferConfig(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTransferConfig, null, options, request);
      }
      /// <summary>
      /// Returns information about a data transfer config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> GetTransferConfigAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransferConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about a data transfer config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig> GetTransferConfigAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTransferConfig, null, options, request);
      }
      /// <summary>
      /// Returns information about all transfer configs owned by a project in the
      /// specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse ListTransferConfigs(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about all transfer configs owned by a project in the
      /// specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse ListTransferConfigs(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTransferConfigs, null, options, request);
      }
      /// <summary>
      /// Returns information about all transfer configs owned by a project in the
      /// specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse> ListTransferConfigsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about all transfer configs owned by a project in the
      /// specified location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse> ListTransferConfigsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTransferConfigs, null, options, request);
      }
      /// <summary>
      /// Creates transfer runs for a time range [start_time, end_time].
      /// For each date - or whatever granularity the data source supports - in the
      /// range, one transfer run is created.
      /// Note that runs are created per UTC time in the time range.
      /// DEPRECATED: use StartManualTransferRuns instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse ScheduleTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ScheduleTransferRuns(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates transfer runs for a time range [start_time, end_time].
      /// For each date - or whatever granularity the data source supports - in the
      /// range, one transfer run is created.
      /// Note that runs are created per UTC time in the time range.
      /// DEPRECATED: use StartManualTransferRuns instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse ScheduleTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ScheduleTransferRuns, null, options, request);
      }
      /// <summary>
      /// Creates transfer runs for a time range [start_time, end_time].
      /// For each date - or whatever granularity the data source supports - in the
      /// range, one transfer run is created.
      /// Note that runs are created per UTC time in the time range.
      /// DEPRECATED: use StartManualTransferRuns instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse> ScheduleTransferRunsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ScheduleTransferRunsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates transfer runs for a time range [start_time, end_time].
      /// For each date - or whatever granularity the data source supports - in the
      /// range, one transfer run is created.
      /// Note that runs are created per UTC time in the time range.
      /// DEPRECATED: use StartManualTransferRuns instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse> ScheduleTransferRunsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ScheduleTransferRuns, null, options, request);
      }
      /// <summary>
      /// Start manual transfer runs to be executed now with schedule_time equal to
      /// current time. The transfer runs can be created for a time range where the
      /// run_time is between start_time (inclusive) and end_time (exclusive), or for
      /// a specific run_time.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse StartManualTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartManualTransferRuns(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start manual transfer runs to be executed now with schedule_time equal to
      /// current time. The transfer runs can be created for a time range where the
      /// run_time is between start_time (inclusive) and end_time (exclusive), or for
      /// a specific run_time.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse StartManualTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartManualTransferRuns, null, options, request);
      }
      /// <summary>
      /// Start manual transfer runs to be executed now with schedule_time equal to
      /// current time. The transfer runs can be created for a time range where the
      /// run_time is between start_time (inclusive) and end_time (exclusive), or for
      /// a specific run_time.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse> StartManualTransferRunsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartManualTransferRunsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start manual transfer runs to be executed now with schedule_time equal to
      /// current time. The transfer runs can be created for a time range where the
      /// run_time is between start_time (inclusive) and end_time (exclusive), or for
      /// a specific run_time.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse> StartManualTransferRunsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartManualTransferRuns, null, options, request);
      }
      /// <summary>
      /// Returns information about the particular transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun GetTransferRun(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransferRun(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about the particular transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun GetTransferRun(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTransferRun, null, options, request);
      }
      /// <summary>
      /// Returns information about the particular transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun> GetTransferRunAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransferRunAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about the particular transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun> GetTransferRunAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTransferRun, null, options, request);
      }
      /// <summary>
      /// Deletes the specified transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTransferRun(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTransferRun(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTransferRun(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTransferRun, null, options, request);
      }
      /// <summary>
      /// Deletes the specified transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferRunAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTransferRunAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferRunAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTransferRun, null, options, request);
      }
      /// <summary>
      /// Returns information about running and completed transfer runs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse ListTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferRuns(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about running and completed transfer runs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse ListTransferRuns(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTransferRuns, null, options, request);
      }
      /// <summary>
      /// Returns information about running and completed transfer runs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse> ListTransferRunsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferRunsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about running and completed transfer runs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse> ListTransferRunsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTransferRuns, null, options, request);
      }
      /// <summary>
      /// Returns log messages for the transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse ListTransferLogs(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferLogs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns log messages for the transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse ListTransferLogs(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTransferLogs, null, options, request);
      }
      /// <summary>
      /// Returns log messages for the transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse> ListTransferLogsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferLogsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns log messages for the transfer run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse> ListTransferLogsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTransferLogs, null, options, request);
      }
      /// <summary>
      /// Returns true if valid credentials exist for the given data source and
      /// requesting user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse CheckValidCreds(global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckValidCreds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns true if valid credentials exist for the given data source and
      /// requesting user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse CheckValidCreds(global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckValidCreds, null, options, request);
      }
      /// <summary>
      /// Returns true if valid credentials exist for the given data source and
      /// requesting user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse> CheckValidCredsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckValidCredsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns true if valid credentials exist for the given data source and
      /// requesting user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse> CheckValidCredsAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckValidCreds, null, options, request);
      }
      /// <summary>
      /// Enroll data sources in a user project. This allows users to create transfer
      /// configurations for these data sources. They will also appear in the
      /// ListDataSources RPC and as such, will appear in the
      /// [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents
      /// can be found in the public guide for
      /// [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and
      /// [Data Transfer
      /// Service](https://cloud.google.com/bigquery/docs/working-with-transfers).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty EnrollDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnrollDataSources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enroll data sources in a user project. This allows users to create transfer
      /// configurations for these data sources. They will also appear in the
      /// ListDataSources RPC and as such, will appear in the
      /// [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents
      /// can be found in the public guide for
      /// [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and
      /// [Data Transfer
      /// Service](https://cloud.google.com/bigquery/docs/working-with-transfers).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty EnrollDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnrollDataSources, null, options, request);
      }
      /// <summary>
      /// Enroll data sources in a user project. This allows users to create transfer
      /// configurations for these data sources. They will also appear in the
      /// ListDataSources RPC and as such, will appear in the
      /// [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents
      /// can be found in the public guide for
      /// [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and
      /// [Data Transfer
      /// Service](https://cloud.google.com/bigquery/docs/working-with-transfers).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> EnrollDataSourcesAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnrollDataSourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enroll data sources in a user project. This allows users to create transfer
      /// configurations for these data sources. They will also appear in the
      /// ListDataSources RPC and as such, will appear in the
      /// [BigQuery UI](https://console.cloud.google.com/bigquery), and the documents
      /// can be found in the public guide for
      /// [BigQuery Web UI](https://cloud.google.com/bigquery/bigquery-web-ui) and
      /// [Data Transfer
      /// Service](https://cloud.google.com/bigquery/docs/working-with-transfers).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> EnrollDataSourcesAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnrollDataSources, null, options, request);
      }
      /// <summary>
      /// Unenroll data sources in a user project. This allows users to remove
      /// transfer configurations for these data sources. They will no longer appear
      /// in the ListDataSources RPC and will also no longer appear in the [BigQuery
      /// UI](https://console.cloud.google.com/bigquery). Data transfers
      /// configurations of unenrolled data sources will not be scheduled.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UnenrollDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnenrollDataSources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unenroll data sources in a user project. This allows users to remove
      /// transfer configurations for these data sources. They will no longer appear
      /// in the ListDataSources RPC and will also no longer appear in the [BigQuery
      /// UI](https://console.cloud.google.com/bigquery). Data transfers
      /// configurations of unenrolled data sources will not be scheduled.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty UnenrollDataSources(global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnenrollDataSources, null, options, request);
      }
      /// <summary>
      /// Unenroll data sources in a user project. This allows users to remove
      /// transfer configurations for these data sources. They will no longer appear
      /// in the ListDataSources RPC and will also no longer appear in the [BigQuery
      /// UI](https://console.cloud.google.com/bigquery). Data transfers
      /// configurations of unenrolled data sources will not be scheduled.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UnenrollDataSourcesAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnenrollDataSourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unenroll data sources in a user project. This allows users to remove
      /// transfer configurations for these data sources. They will no longer appear
      /// in the ListDataSources RPC and will also no longer appear in the [BigQuery
      /// UI](https://console.cloud.google.com/bigquery). Data transfers
      /// configurations of unenrolled data sources will not be scheduled.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> UnenrollDataSourcesAsync(global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnenrollDataSources, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DataTransferServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataTransferServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DataTransferServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetDataSource, serviceImpl.GetDataSource)
          .AddMethod(__Method_ListDataSources, serviceImpl.ListDataSources)
          .AddMethod(__Method_CreateTransferConfig, serviceImpl.CreateTransferConfig)
          .AddMethod(__Method_UpdateTransferConfig, serviceImpl.UpdateTransferConfig)
          .AddMethod(__Method_DeleteTransferConfig, serviceImpl.DeleteTransferConfig)
          .AddMethod(__Method_GetTransferConfig, serviceImpl.GetTransferConfig)
          .AddMethod(__Method_ListTransferConfigs, serviceImpl.ListTransferConfigs)
          .AddMethod(__Method_ScheduleTransferRuns, serviceImpl.ScheduleTransferRuns)
          .AddMethod(__Method_StartManualTransferRuns, serviceImpl.StartManualTransferRuns)
          .AddMethod(__Method_GetTransferRun, serviceImpl.GetTransferRun)
          .AddMethod(__Method_DeleteTransferRun, serviceImpl.DeleteTransferRun)
          .AddMethod(__Method_ListTransferRuns, serviceImpl.ListTransferRuns)
          .AddMethod(__Method_ListTransferLogs, serviceImpl.ListTransferLogs)
          .AddMethod(__Method_CheckValidCreds, serviceImpl.CheckValidCreds)
          .AddMethod(__Method_EnrollDataSources, serviceImpl.EnrollDataSources)
          .AddMethod(__Method_UnenrollDataSources, serviceImpl.UnenrollDataSources).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DataTransferServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetDataSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.GetDataSourceRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.DataSource>(serviceImpl.GetDataSource));
      serviceBinder.AddMethod(__Method_ListDataSources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListDataSourcesResponse>(serviceImpl.ListDataSources));
      serviceBinder.AddMethod(__Method_CreateTransferConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.CreateTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig>(serviceImpl.CreateTransferConfig));
      serviceBinder.AddMethod(__Method_UpdateTransferConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.UpdateTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig>(serviceImpl.UpdateTransferConfig));
      serviceBinder.AddMethod(__Method_DeleteTransferConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTransferConfig));
      serviceBinder.AddMethod(__Method_GetTransferConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferConfigRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferConfig>(serviceImpl.GetTransferConfig));
      serviceBinder.AddMethod(__Method_ListTransferConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferConfigsResponse>(serviceImpl.ListTransferConfigs));
      serviceBinder.AddMethod(__Method_ScheduleTransferRuns, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ScheduleTransferRunsResponse>(serviceImpl.ScheduleTransferRuns));
      serviceBinder.AddMethod(__Method_StartManualTransferRuns, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.StartManualTransferRunsResponse>(serviceImpl.StartManualTransferRuns));
      serviceBinder.AddMethod(__Method_GetTransferRun, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.GetTransferRunRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.TransferRun>(serviceImpl.GetTransferRun));
      serviceBinder.AddMethod(__Method_DeleteTransferRun, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.DeleteTransferRunRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTransferRun));
      serviceBinder.AddMethod(__Method_ListTransferRuns, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferRunsResponse>(serviceImpl.ListTransferRuns));
      serviceBinder.AddMethod(__Method_ListTransferLogs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.ListTransferLogsResponse>(serviceImpl.ListTransferLogs));
      serviceBinder.AddMethod(__Method_CheckValidCreds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsRequest, global::Google.Cloud.BigQuery.DataTransfer.V1.CheckValidCredsResponse>(serviceImpl.CheckValidCreds));
      serviceBinder.AddMethod(__Method_EnrollDataSources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.EnrollDataSourcesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.EnrollDataSources));
      serviceBinder.AddMethod(__Method_UnenrollDataSources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.BigQuery.DataTransfer.V1.UnenrollDataSourcesRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.UnenrollDataSources));
    }

  }
}
#endregion
