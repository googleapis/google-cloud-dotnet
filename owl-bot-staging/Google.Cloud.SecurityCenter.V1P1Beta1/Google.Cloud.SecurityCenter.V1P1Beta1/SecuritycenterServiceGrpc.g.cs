// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/securitycenter/v1p1beta1/securitycenter_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.SecurityCenter.V1P1Beta1 {
  /// <summary>
  /// V1p1Beta1 APIs for Security Center service.
  /// </summary>
  public static partial class SecurityCenter
  {
    static readonly string __ServiceName = "google.cloud.securitycenter.v1p1beta1.SecurityCenter";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_CreateSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> __Marshaller_google_cloud_securitycenter_v1p1beta1_Source = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_CreateFindingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> __Marshaller_google_cloud_securitycenter_v1p1beta1_Finding = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_CreateNotificationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> __Marshaller_google_cloud_securitycenter_v1p1beta1_NotificationConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_DeleteNotificationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_GetNotificationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_GetOrganizationSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> __Marshaller_google_cloud_securitycenter_v1p1beta1_OrganizationSettings = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_GetSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_GroupAssetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse> __Marshaller_google_cloud_securitycenter_v1p1beta1_GroupAssetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_GroupFindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse> __Marshaller_google_cloud_securitycenter_v1p1beta1_GroupFindingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_ListAssetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse> __Marshaller_google_cloud_securitycenter_v1p1beta1_ListAssetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_ListFindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse> __Marshaller_google_cloud_securitycenter_v1p1beta1_ListFindingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_ListNotificationConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse> __Marshaller_google_cloud_securitycenter_v1p1beta1_ListNotificationConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_ListSourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse> __Marshaller_google_cloud_securitycenter_v1p1beta1_ListSourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_RunAssetDiscoveryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_SetFindingStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateFindingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateNotificationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateOrganizationSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest> __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateSecurityMarksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks> __Marshaller_google_cloud_securitycenter_v1p1beta1_SecurityMarks = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> __Method_CreateSource = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSource",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_CreateSourceRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_Source);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> __Method_CreateFinding = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFinding",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_CreateFindingRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_Finding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> __Method_CreateNotificationConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNotificationConfig",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_CreateNotificationConfigRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_NotificationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteNotificationConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNotificationConfig",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_DeleteNotificationConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> __Method_GetNotificationConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotificationConfig",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_GetNotificationConfigRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_NotificationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> __Method_GetOrganizationSettings = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationSettings",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_GetOrganizationSettingsRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_OrganizationSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> __Method_GetSource = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSource",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_GetSourceRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_Source);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse> __Method_GroupAssets = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GroupAssets",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_GroupAssetsRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_GroupAssetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse> __Method_GroupFindings = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GroupFindings",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_GroupFindingsRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_GroupFindingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse> __Method_ListAssets = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAssets",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_ListAssetsRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_ListAssetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse> __Method_ListFindings = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFindings",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_ListFindingsRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_ListFindingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse> __Method_ListNotificationConfigs = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotificationConfigs",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_ListNotificationConfigsRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_ListNotificationConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse> __Method_ListSources = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSources",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_ListSourcesRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_ListSourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest, global::Google.LongRunning.Operation> __Method_RunAssetDiscovery = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunAssetDiscovery",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_RunAssetDiscoveryRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> __Method_SetFindingState = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetFindingState",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_SetFindingStateRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_Finding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> __Method_UpdateFinding = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFinding",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateFindingRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_Finding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> __Method_UpdateNotificationConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNotificationConfig",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateNotificationConfigRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_NotificationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> __Method_UpdateOrganizationSettings = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrganizationSettings",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateOrganizationSettingsRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_OrganizationSettings);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> __Method_UpdateSource = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSource",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateSourceRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_Source);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks> __Method_UpdateSecurityMarks = new grpc::Method<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSecurityMarks",
        __Marshaller_google_cloud_securitycenter_v1p1beta1_UpdateSecurityMarksRequest,
        __Marshaller_google_cloud_securitycenter_v1p1beta1_SecurityMarks);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.SecurityCenter.V1P1Beta1.SecuritycenterServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SecurityCenter</summary>
    [grpc::BindServiceMethod(typeof(SecurityCenter), "BindService")]
    public abstract partial class SecurityCenterBase
    {
      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> CreateSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a finding. The corresponding source must exist for finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> CreateFinding(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> CreateNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> GetNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the settings for an organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> GetOrganizationSettings(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> GetSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Filters an organization's assets and  groups them by their specified
      /// properties.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse> GroupAssets(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Filters an organization or source's findings and  groups them by their
      /// specified properties.
      ///
      /// To group across all sources provide a `-` as the source id.
      /// Example: /v1/organizations/{organization_id}/sources/-/findings,
      /// /v1/folders/{folder_id}/sources/-/findings,
      /// /v1/projects/{project_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse> GroupFindings(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists an organization's assets.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse> ListAssets(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources provide a `-` as the source id.
      /// Example: /v1p1beta1/organizations/{organization_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse> ListFindings(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse> ListNotificationConfigs(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse> ListSources(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Runs asset discovery. The discovery is tracked with a long-running
      /// operation.
      ///
      /// This API can only be called with limited frequency for an organization. If
      /// it is called too frequently the caller will receive a TOO_MANY_REQUESTS
      /// error.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RunAssetDiscovery(global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the state of a finding.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> SetFindingState(global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates or updates a finding. The corresponding source must exist for a
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> UpdateFinding(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> UpdateNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an organization's settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> UpdateOrganizationSettings(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> UpdateSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates security marks.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks> UpdateSecurityMarks(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SecurityCenter</summary>
    public partial class SecurityCenterClient : grpc::ClientBase<SecurityCenterClient>
    {
      /// <summary>Creates a new client for SecurityCenter</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SecurityCenterClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SecurityCenter that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SecurityCenterClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SecurityCenterClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SecurityCenterClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Source CreateSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Source CreateSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSource, null, options, request);
      }
      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> CreateSourceAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> CreateSourceAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSource, null, options, request);
      }
      /// <summary>
      /// Creates a finding. The corresponding source must exist for finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding CreateFinding(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFinding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a finding. The corresponding source must exist for finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding CreateFinding(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFinding, null, options, request);
      }
      /// <summary>
      /// Creates a finding. The corresponding source must exist for finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> CreateFindingAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFindingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a finding. The corresponding source must exist for finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> CreateFindingAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFinding, null, options, request);
      }
      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig CreateNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotificationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig CreateNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> CreateNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotificationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> CreateNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotificationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotificationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig GetNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig GetNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> GetNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> GetNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Gets the settings for an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings GetOrganizationSettings(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the settings for an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings GetOrganizationSettings(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationSettings, null, options, request);
      }
      /// <summary>
      /// Gets the settings for an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> GetOrganizationSettingsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the settings for an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> GetOrganizationSettingsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationSettings, null, options, request);
      }
      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Source GetSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Source GetSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSource, null, options, request);
      }
      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> GetSourceAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> GetSourceAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSource, null, options, request);
      }
      /// <summary>
      /// Filters an organization's assets and  groups them by their specified
      /// properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse GroupAssets(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GroupAssets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Filters an organization's assets and  groups them by their specified
      /// properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse GroupAssets(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GroupAssets, null, options, request);
      }
      /// <summary>
      /// Filters an organization's assets and  groups them by their specified
      /// properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse> GroupAssetsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GroupAssetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Filters an organization's assets and  groups them by their specified
      /// properties.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse> GroupAssetsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GroupAssets, null, options, request);
      }
      /// <summary>
      /// Filters an organization or source's findings and  groups them by their
      /// specified properties.
      ///
      /// To group across all sources provide a `-` as the source id.
      /// Example: /v1/organizations/{organization_id}/sources/-/findings,
      /// /v1/folders/{folder_id}/sources/-/findings,
      /// /v1/projects/{project_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse GroupFindings(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GroupFindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Filters an organization or source's findings and  groups them by their
      /// specified properties.
      ///
      /// To group across all sources provide a `-` as the source id.
      /// Example: /v1/organizations/{organization_id}/sources/-/findings,
      /// /v1/folders/{folder_id}/sources/-/findings,
      /// /v1/projects/{project_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse GroupFindings(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GroupFindings, null, options, request);
      }
      /// <summary>
      /// Filters an organization or source's findings and  groups them by their
      /// specified properties.
      ///
      /// To group across all sources provide a `-` as the source id.
      /// Example: /v1/organizations/{organization_id}/sources/-/findings,
      /// /v1/folders/{folder_id}/sources/-/findings,
      /// /v1/projects/{project_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse> GroupFindingsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GroupFindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Filters an organization or source's findings and  groups them by their
      /// specified properties.
      ///
      /// To group across all sources provide a `-` as the source id.
      /// Example: /v1/organizations/{organization_id}/sources/-/findings,
      /// /v1/folders/{folder_id}/sources/-/findings,
      /// /v1/projects/{project_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse> GroupFindingsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GroupFindings, null, options, request);
      }
      /// <summary>
      /// Lists an organization's assets.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse ListAssets(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAssets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists an organization's assets.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse ListAssets(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAssets, null, options, request);
      }
      /// <summary>
      /// Lists an organization's assets.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse> ListAssetsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAssetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists an organization's assets.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse> ListAssetsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAssets, null, options, request);
      }
      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources provide a `-` as the source id.
      /// Example: /v1p1beta1/organizations/{organization_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse ListFindings(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources provide a `-` as the source id.
      /// Example: /v1p1beta1/organizations/{organization_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse ListFindings(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFindings, null, options, request);
      }
      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources provide a `-` as the source id.
      /// Example: /v1p1beta1/organizations/{organization_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse> ListFindingsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources provide a `-` as the source id.
      /// Example: /v1p1beta1/organizations/{organization_id}/sources/-/findings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse> ListFindingsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFindings, null, options, request);
      }
      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse ListNotificationConfigs(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotificationConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse ListNotificationConfigs(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotificationConfigs, null, options, request);
      }
      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse> ListNotificationConfigsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotificationConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse> ListNotificationConfigsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotificationConfigs, null, options, request);
      }
      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse ListSources(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse ListSources(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSources, null, options, request);
      }
      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse> ListSourcesAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse> ListSourcesAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSources, null, options, request);
      }
      /// <summary>
      /// Runs asset discovery. The discovery is tracked with a long-running
      /// operation.
      ///
      /// This API can only be called with limited frequency for an organization. If
      /// it is called too frequently the caller will receive a TOO_MANY_REQUESTS
      /// error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunAssetDiscovery(global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunAssetDiscovery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Runs asset discovery. The discovery is tracked with a long-running
      /// operation.
      ///
      /// This API can only be called with limited frequency for an organization. If
      /// it is called too frequently the caller will receive a TOO_MANY_REQUESTS
      /// error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunAssetDiscovery(global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunAssetDiscovery, null, options, request);
      }
      /// <summary>
      /// Runs asset discovery. The discovery is tracked with a long-running
      /// operation.
      ///
      /// This API can only be called with limited frequency for an organization. If
      /// it is called too frequently the caller will receive a TOO_MANY_REQUESTS
      /// error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunAssetDiscoveryAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunAssetDiscoveryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Runs asset discovery. The discovery is tracked with a long-running
      /// operation.
      ///
      /// This API can only be called with limited frequency for an organization. If
      /// it is called too frequently the caller will receive a TOO_MANY_REQUESTS
      /// error.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunAssetDiscoveryAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunAssetDiscovery, null, options, request);
      }
      /// <summary>
      /// Updates the state of a finding.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding SetFindingState(global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetFindingState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the state of a finding.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding SetFindingState(global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetFindingState, null, options, request);
      }
      /// <summary>
      /// Updates the state of a finding.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> SetFindingStateAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetFindingStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the state of a finding.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> SetFindingStateAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetFindingState, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Creates or updates a finding. The corresponding source must exist for a
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding UpdateFinding(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFinding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or updates a finding. The corresponding source must exist for a
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding UpdateFinding(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFinding, null, options, request);
      }
      /// <summary>
      /// Creates or updates a finding. The corresponding source must exist for a
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> UpdateFindingAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFindingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or updates a finding. The corresponding source must exist for a
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding> UpdateFindingAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFinding, null, options, request);
      }
      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig UpdateNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotificationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig UpdateNotificationConfig(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> UpdateNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotificationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig> UpdateNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Updates an organization's settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings UpdateOrganizationSettings(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an organization's settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings UpdateOrganizationSettings(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrganizationSettings, null, options, request);
      }
      /// <summary>
      /// Updates an organization's settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> UpdateOrganizationSettingsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrganizationSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an organization's settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings> UpdateOrganizationSettingsAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrganizationSettings, null, options, request);
      }
      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Source UpdateSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.Source UpdateSource(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSource, null, options, request);
      }
      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> UpdateSourceAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.Source> UpdateSourceAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSource, null, options, request);
      }
      /// <summary>
      /// Updates security marks.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks UpdateSecurityMarks(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSecurityMarks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates security marks.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks UpdateSecurityMarks(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSecurityMarks, null, options, request);
      }
      /// <summary>
      /// Updates security marks.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks> UpdateSecurityMarksAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSecurityMarksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates security marks.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks> UpdateSecurityMarksAsync(global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSecurityMarks, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SecurityCenterClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SecurityCenterClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SecurityCenterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateSource, serviceImpl.CreateSource)
          .AddMethod(__Method_CreateFinding, serviceImpl.CreateFinding)
          .AddMethod(__Method_CreateNotificationConfig, serviceImpl.CreateNotificationConfig)
          .AddMethod(__Method_DeleteNotificationConfig, serviceImpl.DeleteNotificationConfig)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_GetNotificationConfig, serviceImpl.GetNotificationConfig)
          .AddMethod(__Method_GetOrganizationSettings, serviceImpl.GetOrganizationSettings)
          .AddMethod(__Method_GetSource, serviceImpl.GetSource)
          .AddMethod(__Method_GroupAssets, serviceImpl.GroupAssets)
          .AddMethod(__Method_GroupFindings, serviceImpl.GroupFindings)
          .AddMethod(__Method_ListAssets, serviceImpl.ListAssets)
          .AddMethod(__Method_ListFindings, serviceImpl.ListFindings)
          .AddMethod(__Method_ListNotificationConfigs, serviceImpl.ListNotificationConfigs)
          .AddMethod(__Method_ListSources, serviceImpl.ListSources)
          .AddMethod(__Method_RunAssetDiscovery, serviceImpl.RunAssetDiscovery)
          .AddMethod(__Method_SetFindingState, serviceImpl.SetFindingState)
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions)
          .AddMethod(__Method_UpdateFinding, serviceImpl.UpdateFinding)
          .AddMethod(__Method_UpdateNotificationConfig, serviceImpl.UpdateNotificationConfig)
          .AddMethod(__Method_UpdateOrganizationSettings, serviceImpl.UpdateOrganizationSettings)
          .AddMethod(__Method_UpdateSource, serviceImpl.UpdateSource)
          .AddMethod(__Method_UpdateSecurityMarks, serviceImpl.UpdateSecurityMarks).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SecurityCenterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source>(serviceImpl.CreateSource));
      serviceBinder.AddMethod(__Method_CreateFinding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateFindingRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding>(serviceImpl.CreateFinding));
      serviceBinder.AddMethod(__Method_CreateNotificationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.CreateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig>(serviceImpl.CreateNotificationConfig));
      serviceBinder.AddMethod(__Method_DeleteNotificationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.DeleteNotificationConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteNotificationConfig));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_GetNotificationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig>(serviceImpl.GetNotificationConfig));
      serviceBinder.AddMethod(__Method_GetOrganizationSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetOrganizationSettingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings>(serviceImpl.GetOrganizationSettings));
      serviceBinder.AddMethod(__Method_GetSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.GetSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source>(serviceImpl.GetSource));
      serviceBinder.AddMethod(__Method_GroupAssets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupAssetsResponse>(serviceImpl.GroupAssets));
      serviceBinder.AddMethod(__Method_GroupFindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.GroupFindingsResponse>(serviceImpl.GroupFindings));
      serviceBinder.AddMethod(__Method_ListAssets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListAssetsResponse>(serviceImpl.ListAssets));
      serviceBinder.AddMethod(__Method_ListFindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListFindingsResponse>(serviceImpl.ListFindings));
      serviceBinder.AddMethod(__Method_ListNotificationConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListNotificationConfigsResponse>(serviceImpl.ListNotificationConfigs));
      serviceBinder.AddMethod(__Method_ListSources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.ListSourcesResponse>(serviceImpl.ListSources));
      serviceBinder.AddMethod(__Method_RunAssetDiscovery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.RunAssetDiscoveryRequest, global::Google.LongRunning.Operation>(serviceImpl.RunAssetDiscovery));
      serviceBinder.AddMethod(__Method_SetFindingState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.SetFindingStateRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding>(serviceImpl.SetFindingState));
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
      serviceBinder.AddMethod(__Method_UpdateFinding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateFindingRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Finding>(serviceImpl.UpdateFinding));
      serviceBinder.AddMethod(__Method_UpdateNotificationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.NotificationConfig>(serviceImpl.UpdateNotificationConfig));
      serviceBinder.AddMethod(__Method_UpdateOrganizationSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateOrganizationSettingsRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.OrganizationSettings>(serviceImpl.UpdateOrganizationSettings));
      serviceBinder.AddMethod(__Method_UpdateSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSourceRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.Source>(serviceImpl.UpdateSource));
      serviceBinder.AddMethod(__Method_UpdateSecurityMarks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V1P1Beta1.UpdateSecurityMarksRequest, global::Google.Cloud.SecurityCenter.V1P1Beta1.SecurityMarks>(serviceImpl.UpdateSecurityMarks));
    }

  }
}
#endregion
