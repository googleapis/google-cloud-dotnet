// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/datacatalog/lineage/v1/lineage.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.DataCatalog.Lineage.V1 {
  /// <summary>
  /// Lineage is used to track data flows between assets over time. You can
  /// create [LineageEvents][google.cloud.datacatalog.lineage.v1.LineageEvent]
  /// to record lineage between multiple sources and a single target, for
  /// example, when table data is based on data from multiple tables.
  /// </summary>
  public static partial class Lineage
  {
    static readonly string __ServiceName = "google.cloud.datacatalog.lineage.v1.Lineage";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_ProcessOpenLineageRunEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse> __Marshaller_google_cloud_datacatalog_lineage_v1_ProcessOpenLineageRunEventResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_CreateProcessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.Process> __Marshaller_google_cloud_datacatalog_lineage_v1_Process = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.Process.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_UpdateProcessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_GetProcessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_ListProcessesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse> __Marshaller_google_cloud_datacatalog_lineage_v1_ListProcessesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_DeleteProcessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_CreateRunRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.Run> __Marshaller_google_cloud_datacatalog_lineage_v1_Run = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.Run.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_UpdateRunRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_GetRunRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_ListRunsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse> __Marshaller_google_cloud_datacatalog_lineage_v1_ListRunsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_DeleteRunRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_CreateLineageEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> __Marshaller_google_cloud_datacatalog_lineage_v1_LineageEvent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_GetLineageEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_ListLineageEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse> __Marshaller_google_cloud_datacatalog_lineage_v1_ListLineageEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_DeleteLineageEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_SearchLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse> __Marshaller_google_cloud_datacatalog_lineage_v1_SearchLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest> __Marshaller_google_cloud_datacatalog_lineage_v1_BatchSearchLinkProcessesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse> __Marshaller_google_cloud_datacatalog_lineage_v1_BatchSearchLinkProcessesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse> __Method_ProcessOpenLineageRunEvent = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ProcessOpenLineageRunEvent",
        __Marshaller_google_cloud_datacatalog_lineage_v1_ProcessOpenLineageRunEventRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_ProcessOpenLineageRunEventResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process> __Method_CreateProcess = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProcess",
        __Marshaller_google_cloud_datacatalog_lineage_v1_CreateProcessRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_Process);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process> __Method_UpdateProcess = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProcess",
        __Marshaller_google_cloud_datacatalog_lineage_v1_UpdateProcessRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_Process);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process> __Method_GetProcess = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProcess",
        __Marshaller_google_cloud_datacatalog_lineage_v1_GetProcessRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_Process);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse> __Method_ListProcesses = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProcesses",
        __Marshaller_google_cloud_datacatalog_lineage_v1_ListProcessesRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_ListProcessesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest, global::Google.LongRunning.Operation> __Method_DeleteProcess = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProcess",
        __Marshaller_google_cloud_datacatalog_lineage_v1_DeleteProcessRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run> __Method_CreateRun = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRun",
        __Marshaller_google_cloud_datacatalog_lineage_v1_CreateRunRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_Run);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run> __Method_UpdateRun = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRun",
        __Marshaller_google_cloud_datacatalog_lineage_v1_UpdateRunRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_Run);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run> __Method_GetRun = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRun",
        __Marshaller_google_cloud_datacatalog_lineage_v1_GetRunRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_Run);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse> __Method_ListRuns = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRuns",
        __Marshaller_google_cloud_datacatalog_lineage_v1_ListRunsRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_ListRunsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest, global::Google.LongRunning.Operation> __Method_DeleteRun = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRun",
        __Marshaller_google_cloud_datacatalog_lineage_v1_DeleteRunRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> __Method_CreateLineageEvent = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateLineageEvent",
        __Marshaller_google_cloud_datacatalog_lineage_v1_CreateLineageEventRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_LineageEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> __Method_GetLineageEvent = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLineageEvent",
        __Marshaller_google_cloud_datacatalog_lineage_v1_GetLineageEventRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_LineageEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse> __Method_ListLineageEvents = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLineageEvents",
        __Marshaller_google_cloud_datacatalog_lineage_v1_ListLineageEventsRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_ListLineageEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteLineageEvent = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteLineageEvent",
        __Marshaller_google_cloud_datacatalog_lineage_v1_DeleteLineageEventRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest, global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse> __Method_SearchLinks = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest, global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchLinks",
        __Marshaller_google_cloud_datacatalog_lineage_v1_SearchLinksRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_SearchLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest, global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse> __Method_BatchSearchLinkProcesses = new grpc::Method<global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest, global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchSearchLinkProcesses",
        __Marshaller_google_cloud_datacatalog_lineage_v1_BatchSearchLinkProcessesRequest,
        __Marshaller_google_cloud_datacatalog_lineage_v1_BatchSearchLinkProcessesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.DataCatalog.Lineage.V1.LineageReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Lineage</summary>
    [grpc::BindServiceMethod(typeof(Lineage), "BindService")]
    public abstract partial class LineageBase
    {
      /// <summary>
      /// Creates new lineage events together with their parents: process and run.
      /// Updates the process and run if they already exist.
      /// Mapped from Open Lineage specification:
      /// https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse> ProcessOpenLineageRunEvent(global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new process.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.Process> CreateProcess(global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a process.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.Process> UpdateProcess(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the details of the specified process.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.Process> GetProcess(global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List processes in the given project and location. List order is descending
      /// by insertion time.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse> ListProcesses(global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the process with the specified name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteProcess(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new run.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.Run> CreateRun(global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a run.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.Run> UpdateRun(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the details of the specified run.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.Run> GetRun(global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists runs in the given project and location. List order is descending by
      /// `start_time`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse> ListRuns(global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the run with the specified name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteRun(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new lineage event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> CreateLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a specified lineage event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> GetLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists lineage events in the given project and location. The list order is
      /// not defined.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse> ListLineageEvents(global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the lineage event with the specified name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve a list of links connected to a specific asset.
      /// Links represent the data flow between **source** (upstream)
      /// and **target** (downstream) assets in transformation pipelines.
      /// Links are stored in the same project as the Lineage Events that create
      /// them.
      ///
      /// You can retrieve links in every project where you have the
      /// `datalineage.events.get` permission. The project provided in the URL
      /// is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse> SearchLinks(global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve information about LineageProcesses associated with specific
      /// links. LineageProcesses are transformation pipelines that result in data
      /// flowing from **source** to **target** assets. Links between assets
      /// represent this operation.
      ///
      /// If you have specific link names, you can use this method to
      /// verify which LineageProcesses contribute to creating those links.
      /// See the
      /// [SearchLinks][google.cloud.datacatalog.lineage.v1.Lineage.SearchLinks]
      /// method for more information on how to retrieve link name.
      ///
      /// You can retrieve the LineageProcess information in every project where you
      /// have the `datalineage.events.get` permission. The project provided in the
      /// URL is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse> BatchSearchLinkProcesses(global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Lineage</summary>
    public partial class LineageClient : grpc::ClientBase<LineageClient>
    {
      /// <summary>Creates a new client for Lineage</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LineageClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Lineage that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public LineageClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LineageClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected LineageClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates new lineage events together with their parents: process and run.
      /// Updates the process and run if they already exist.
      /// Mapped from Open Lineage specification:
      /// https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse ProcessOpenLineageRunEvent(global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProcessOpenLineageRunEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates new lineage events together with their parents: process and run.
      /// Updates the process and run if they already exist.
      /// Mapped from Open Lineage specification:
      /// https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse ProcessOpenLineageRunEvent(global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ProcessOpenLineageRunEvent, null, options, request);
      }
      /// <summary>
      /// Creates new lineage events together with their parents: process and run.
      /// Updates the process and run if they already exist.
      /// Mapped from Open Lineage specification:
      /// https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse> ProcessOpenLineageRunEventAsync(global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ProcessOpenLineageRunEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates new lineage events together with their parents: process and run.
      /// Updates the process and run if they already exist.
      /// Mapped from Open Lineage specification:
      /// https://github.com/OpenLineage/OpenLineage/blob/main/spec/OpenLineage.json.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse> ProcessOpenLineageRunEventAsync(global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ProcessOpenLineageRunEvent, null, options, request);
      }
      /// <summary>
      /// Creates a new process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Process CreateProcess(global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProcess(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Process CreateProcess(global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProcess, null, options, request);
      }
      /// <summary>
      /// Creates a new process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Process> CreateProcessAsync(global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProcessAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Process> CreateProcessAsync(global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProcess, null, options, request);
      }
      /// <summary>
      /// Updates a process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Process UpdateProcess(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProcess(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Process UpdateProcess(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProcess, null, options, request);
      }
      /// <summary>
      /// Updates a process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Process> UpdateProcessAsync(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProcessAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Process> UpdateProcessAsync(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProcess, null, options, request);
      }
      /// <summary>
      /// Gets the details of the specified process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Process GetProcess(global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProcess(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of the specified process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Process GetProcess(global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProcess, null, options, request);
      }
      /// <summary>
      /// Gets the details of the specified process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Process> GetProcessAsync(global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProcessAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of the specified process.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Process> GetProcessAsync(global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProcess, null, options, request);
      }
      /// <summary>
      /// List processes in the given project and location. List order is descending
      /// by insertion time.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse ListProcesses(global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProcesses(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List processes in the given project and location. List order is descending
      /// by insertion time.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse ListProcesses(global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProcesses, null, options, request);
      }
      /// <summary>
      /// List processes in the given project and location. List order is descending
      /// by insertion time.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse> ListProcessesAsync(global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProcessesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List processes in the given project and location. List order is descending
      /// by insertion time.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse> ListProcessesAsync(global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProcesses, null, options, request);
      }
      /// <summary>
      /// Deletes the process with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteProcess(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProcess(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the process with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteProcess(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProcess, null, options, request);
      }
      /// <summary>
      /// Deletes the process with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteProcessAsync(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProcessAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the process with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteProcessAsync(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProcess, null, options, request);
      }
      /// <summary>
      /// Creates a new run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Run CreateRun(global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRun(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Run CreateRun(global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRun, null, options, request);
      }
      /// <summary>
      /// Creates a new run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Run> CreateRunAsync(global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRunAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Run> CreateRunAsync(global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRun, null, options, request);
      }
      /// <summary>
      /// Updates a run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Run UpdateRun(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRun(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Run UpdateRun(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRun, null, options, request);
      }
      /// <summary>
      /// Updates a run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Run> UpdateRunAsync(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRunAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Run> UpdateRunAsync(global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRun, null, options, request);
      }
      /// <summary>
      /// Gets the details of the specified run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Run GetRun(global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRun(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of the specified run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.Run GetRun(global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRun, null, options, request);
      }
      /// <summary>
      /// Gets the details of the specified run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Run> GetRunAsync(global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRunAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of the specified run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.Run> GetRunAsync(global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRun, null, options, request);
      }
      /// <summary>
      /// Lists runs in the given project and location. List order is descending by
      /// `start_time`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse ListRuns(global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRuns(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists runs in the given project and location. List order is descending by
      /// `start_time`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse ListRuns(global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRuns, null, options, request);
      }
      /// <summary>
      /// Lists runs in the given project and location. List order is descending by
      /// `start_time`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse> ListRunsAsync(global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRunsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists runs in the given project and location. List order is descending by
      /// `start_time`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse> ListRunsAsync(global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRuns, null, options, request);
      }
      /// <summary>
      /// Deletes the run with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRun(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRun(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the run with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRun(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRun, null, options, request);
      }
      /// <summary>
      /// Deletes the run with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteRunAsync(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRunAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the run with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteRunAsync(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRun, null, options, request);
      }
      /// <summary>
      /// Creates a new lineage event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent CreateLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLineageEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new lineage event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent CreateLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateLineageEvent, null, options, request);
      }
      /// <summary>
      /// Creates a new lineage event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> CreateLineageEventAsync(global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateLineageEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new lineage event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> CreateLineageEventAsync(global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateLineageEvent, null, options, request);
      }
      /// <summary>
      /// Gets details of a specified lineage event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent GetLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLineageEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a specified lineage event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent GetLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLineageEvent, null, options, request);
      }
      /// <summary>
      /// Gets details of a specified lineage event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> GetLineageEventAsync(global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLineageEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a specified lineage event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent> GetLineageEventAsync(global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLineageEvent, null, options, request);
      }
      /// <summary>
      /// Lists lineage events in the given project and location. The list order is
      /// not defined.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse ListLineageEvents(global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLineageEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists lineage events in the given project and location. The list order is
      /// not defined.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse ListLineageEvents(global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLineageEvents, null, options, request);
      }
      /// <summary>
      /// Lists lineage events in the given project and location. The list order is
      /// not defined.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse> ListLineageEventsAsync(global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLineageEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists lineage events in the given project and location. The list order is
      /// not defined.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse> ListLineageEventsAsync(global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLineageEvents, null, options, request);
      }
      /// <summary>
      /// Deletes the lineage event with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLineageEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the lineage event with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteLineageEvent(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteLineageEvent, null, options, request);
      }
      /// <summary>
      /// Deletes the lineage event with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLineageEventAsync(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteLineageEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the lineage event with the specified name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteLineageEventAsync(global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteLineageEvent, null, options, request);
      }
      /// <summary>
      /// Retrieve a list of links connected to a specific asset.
      /// Links represent the data flow between **source** (upstream)
      /// and **target** (downstream) assets in transformation pipelines.
      /// Links are stored in the same project as the Lineage Events that create
      /// them.
      ///
      /// You can retrieve links in every project where you have the
      /// `datalineage.events.get` permission. The project provided in the URL
      /// is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse SearchLinks(global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a list of links connected to a specific asset.
      /// Links represent the data flow between **source** (upstream)
      /// and **target** (downstream) assets in transformation pipelines.
      /// Links are stored in the same project as the Lineage Events that create
      /// them.
      ///
      /// You can retrieve links in every project where you have the
      /// `datalineage.events.get` permission. The project provided in the URL
      /// is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse SearchLinks(global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchLinks, null, options, request);
      }
      /// <summary>
      /// Retrieve a list of links connected to a specific asset.
      /// Links represent the data flow between **source** (upstream)
      /// and **target** (downstream) assets in transformation pipelines.
      /// Links are stored in the same project as the Lineage Events that create
      /// them.
      ///
      /// You can retrieve links in every project where you have the
      /// `datalineage.events.get` permission. The project provided in the URL
      /// is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse> SearchLinksAsync(global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve a list of links connected to a specific asset.
      /// Links represent the data flow between **source** (upstream)
      /// and **target** (downstream) assets in transformation pipelines.
      /// Links are stored in the same project as the Lineage Events that create
      /// them.
      ///
      /// You can retrieve links in every project where you have the
      /// `datalineage.events.get` permission. The project provided in the URL
      /// is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse> SearchLinksAsync(global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchLinks, null, options, request);
      }
      /// <summary>
      /// Retrieve information about LineageProcesses associated with specific
      /// links. LineageProcesses are transformation pipelines that result in data
      /// flowing from **source** to **target** assets. Links between assets
      /// represent this operation.
      ///
      /// If you have specific link names, you can use this method to
      /// verify which LineageProcesses contribute to creating those links.
      /// See the
      /// [SearchLinks][google.cloud.datacatalog.lineage.v1.Lineage.SearchLinks]
      /// method for more information on how to retrieve link name.
      ///
      /// You can retrieve the LineageProcess information in every project where you
      /// have the `datalineage.events.get` permission. The project provided in the
      /// URL is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse BatchSearchLinkProcesses(global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchSearchLinkProcesses(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve information about LineageProcesses associated with specific
      /// links. LineageProcesses are transformation pipelines that result in data
      /// flowing from **source** to **target** assets. Links between assets
      /// represent this operation.
      ///
      /// If you have specific link names, you can use this method to
      /// verify which LineageProcesses contribute to creating those links.
      /// See the
      /// [SearchLinks][google.cloud.datacatalog.lineage.v1.Lineage.SearchLinks]
      /// method for more information on how to retrieve link name.
      ///
      /// You can retrieve the LineageProcess information in every project where you
      /// have the `datalineage.events.get` permission. The project provided in the
      /// URL is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse BatchSearchLinkProcesses(global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchSearchLinkProcesses, null, options, request);
      }
      /// <summary>
      /// Retrieve information about LineageProcesses associated with specific
      /// links. LineageProcesses are transformation pipelines that result in data
      /// flowing from **source** to **target** assets. Links between assets
      /// represent this operation.
      ///
      /// If you have specific link names, you can use this method to
      /// verify which LineageProcesses contribute to creating those links.
      /// See the
      /// [SearchLinks][google.cloud.datacatalog.lineage.v1.Lineage.SearchLinks]
      /// method for more information on how to retrieve link name.
      ///
      /// You can retrieve the LineageProcess information in every project where you
      /// have the `datalineage.events.get` permission. The project provided in the
      /// URL is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse> BatchSearchLinkProcessesAsync(global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchSearchLinkProcessesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve information about LineageProcesses associated with specific
      /// links. LineageProcesses are transformation pipelines that result in data
      /// flowing from **source** to **target** assets. Links between assets
      /// represent this operation.
      ///
      /// If you have specific link names, you can use this method to
      /// verify which LineageProcesses contribute to creating those links.
      /// See the
      /// [SearchLinks][google.cloud.datacatalog.lineage.v1.Lineage.SearchLinks]
      /// method for more information on how to retrieve link name.
      ///
      /// You can retrieve the LineageProcess information in every project where you
      /// have the `datalineage.events.get` permission. The project provided in the
      /// URL is used for Billing and Quota.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse> BatchSearchLinkProcessesAsync(global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchSearchLinkProcesses, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override LineageClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new LineageClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LineageBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ProcessOpenLineageRunEvent, serviceImpl.ProcessOpenLineageRunEvent)
          .AddMethod(__Method_CreateProcess, serviceImpl.CreateProcess)
          .AddMethod(__Method_UpdateProcess, serviceImpl.UpdateProcess)
          .AddMethod(__Method_GetProcess, serviceImpl.GetProcess)
          .AddMethod(__Method_ListProcesses, serviceImpl.ListProcesses)
          .AddMethod(__Method_DeleteProcess, serviceImpl.DeleteProcess)
          .AddMethod(__Method_CreateRun, serviceImpl.CreateRun)
          .AddMethod(__Method_UpdateRun, serviceImpl.UpdateRun)
          .AddMethod(__Method_GetRun, serviceImpl.GetRun)
          .AddMethod(__Method_ListRuns, serviceImpl.ListRuns)
          .AddMethod(__Method_DeleteRun, serviceImpl.DeleteRun)
          .AddMethod(__Method_CreateLineageEvent, serviceImpl.CreateLineageEvent)
          .AddMethod(__Method_GetLineageEvent, serviceImpl.GetLineageEvent)
          .AddMethod(__Method_ListLineageEvents, serviceImpl.ListLineageEvents)
          .AddMethod(__Method_DeleteLineageEvent, serviceImpl.DeleteLineageEvent)
          .AddMethod(__Method_SearchLinks, serviceImpl.SearchLinks)
          .AddMethod(__Method_BatchSearchLinkProcesses, serviceImpl.BatchSearchLinkProcesses).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LineageBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ProcessOpenLineageRunEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ProcessOpenLineageRunEventResponse>(serviceImpl.ProcessOpenLineageRunEvent));
      serviceBinder.AddMethod(__Method_CreateProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.CreateProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process>(serviceImpl.CreateProcess));
      serviceBinder.AddMethod(__Method_UpdateProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.UpdateProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process>(serviceImpl.UpdateProcess));
      serviceBinder.AddMethod(__Method_GetProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.GetProcessRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Process>(serviceImpl.GetProcess));
      serviceBinder.AddMethod(__Method_ListProcesses, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListProcessesResponse>(serviceImpl.ListProcesses));
      serviceBinder.AddMethod(__Method_DeleteProcess, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteProcessRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteProcess));
      serviceBinder.AddMethod(__Method_CreateRun, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.CreateRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run>(serviceImpl.CreateRun));
      serviceBinder.AddMethod(__Method_UpdateRun, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.UpdateRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run>(serviceImpl.UpdateRun));
      serviceBinder.AddMethod(__Method_GetRun, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.GetRunRequest, global::Google.Cloud.DataCatalog.Lineage.V1.Run>(serviceImpl.GetRun));
      serviceBinder.AddMethod(__Method_ListRuns, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListRunsResponse>(serviceImpl.ListRuns));
      serviceBinder.AddMethod(__Method_DeleteRun, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteRunRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteRun));
      serviceBinder.AddMethod(__Method_CreateLineageEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.CreateLineageEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent>(serviceImpl.CreateLineageEvent));
      serviceBinder.AddMethod(__Method_GetLineageEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.GetLineageEventRequest, global::Google.Cloud.DataCatalog.Lineage.V1.LineageEvent>(serviceImpl.GetLineageEvent));
      serviceBinder.AddMethod(__Method_ListLineageEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsRequest, global::Google.Cloud.DataCatalog.Lineage.V1.ListLineageEventsResponse>(serviceImpl.ListLineageEvents));
      serviceBinder.AddMethod(__Method_DeleteLineageEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.DeleteLineageEventRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteLineageEvent));
      serviceBinder.AddMethod(__Method_SearchLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksRequest, global::Google.Cloud.DataCatalog.Lineage.V1.SearchLinksResponse>(serviceImpl.SearchLinks));
      serviceBinder.AddMethod(__Method_BatchSearchLinkProcesses, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesRequest, global::Google.Cloud.DataCatalog.Lineage.V1.BatchSearchLinkProcessesResponse>(serviceImpl.BatchSearchLinkProcesses));
    }

  }
}
#endregion
