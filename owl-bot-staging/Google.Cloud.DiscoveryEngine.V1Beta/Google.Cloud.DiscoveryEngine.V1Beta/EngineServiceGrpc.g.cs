// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/discoveryengine/v1beta/engine_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.DiscoveryEngine.V1Beta {
  /// <summary>
  /// Service for managing [Engine][google.cloud.discoveryengine.v1beta.Engine]
  /// configuration.
  /// </summary>
  public static partial class EngineService
  {
    static readonly string __ServiceName = "google.cloud.discoveryengine.v1beta.EngineService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest> __Marshaller_google_cloud_discoveryengine_v1beta_CreateEngineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest> __Marshaller_google_cloud_discoveryengine_v1beta_DeleteEngineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest> __Marshaller_google_cloud_discoveryengine_v1beta_UpdateEngineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> __Marshaller_google_cloud_discoveryengine_v1beta_Engine = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest> __Marshaller_google_cloud_discoveryengine_v1beta_GetEngineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest> __Marshaller_google_cloud_discoveryengine_v1beta_ListEnginesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse> __Marshaller_google_cloud_discoveryengine_v1beta_ListEnginesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest> __Marshaller_google_cloud_discoveryengine_v1beta_PauseEngineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest> __Marshaller_google_cloud_discoveryengine_v1beta_ResumeEngineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest> __Marshaller_google_cloud_discoveryengine_v1beta_TuneEngineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest, global::Google.LongRunning.Operation> __Method_CreateEngine = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEngine",
        __Marshaller_google_cloud_discoveryengine_v1beta_CreateEngineRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest, global::Google.LongRunning.Operation> __Method_DeleteEngine = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEngine",
        __Marshaller_google_cloud_discoveryengine_v1beta_DeleteEngineRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> __Method_UpdateEngine = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEngine",
        __Marshaller_google_cloud_discoveryengine_v1beta_UpdateEngineRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_Engine);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> __Method_GetEngine = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEngine",
        __Marshaller_google_cloud_discoveryengine_v1beta_GetEngineRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_Engine);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse> __Method_ListEngines = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEngines",
        __Marshaller_google_cloud_discoveryengine_v1beta_ListEnginesRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_ListEnginesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> __Method_PauseEngine = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PauseEngine",
        __Marshaller_google_cloud_discoveryengine_v1beta_PauseEngineRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_Engine);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> __Method_ResumeEngine = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResumeEngine",
        __Marshaller_google_cloud_discoveryengine_v1beta_ResumeEngineRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_Engine);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest, global::Google.LongRunning.Operation> __Method_TuneEngine = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TuneEngine",
        __Marshaller_google_cloud_discoveryengine_v1beta_TuneEngineRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.DiscoveryEngine.V1Beta.EngineServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EngineService</summary>
    [grpc::BindServiceMethod(typeof(EngineService), "BindService")]
    public abstract partial class EngineServiceBase
    {
      /// <summary>
      /// Creates a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an [Engine][google.cloud.discoveryengine.v1beta.Engine]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> UpdateEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> GetEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all the [Engine][google.cloud.discoveryengine.v1beta.Engine]s
      /// associated with the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse> ListEngines(global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Pauses the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> PauseEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resumes the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> ResumeEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Tunes an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> TuneEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EngineService</summary>
    public partial class EngineServiceClient : grpc::ClientBase<EngineServiceClient>
    {
      /// <summary>Creates a new client for EngineService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EngineServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EngineService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EngineServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EngineServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EngineServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEngine, null, options, request);
      }
      /// <summary>
      /// Creates a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEngine, null, options, request);
      }
      /// <summary>
      /// Deletes a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEngine, null, options, request);
      }
      /// <summary>
      /// Deletes a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEngine, null, options, request);
      }
      /// <summary>
      /// Updates an [Engine][google.cloud.discoveryengine.v1beta.Engine]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.Engine UpdateEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an [Engine][google.cloud.discoveryengine.v1beta.Engine]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.Engine UpdateEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEngine, null, options, request);
      }
      /// <summary>
      /// Updates an [Engine][google.cloud.discoveryengine.v1beta.Engine]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> UpdateEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an [Engine][google.cloud.discoveryengine.v1beta.Engine]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> UpdateEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEngine, null, options, request);
      }
      /// <summary>
      /// Gets a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.Engine GetEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.Engine GetEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEngine, null, options, request);
      }
      /// <summary>
      /// Gets a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> GetEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [Engine][google.cloud.discoveryengine.v1beta.Engine].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> GetEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEngine, null, options, request);
      }
      /// <summary>
      /// Lists all the [Engine][google.cloud.discoveryengine.v1beta.Engine]s
      /// associated with the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse ListEngines(global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEngines(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the [Engine][google.cloud.discoveryengine.v1beta.Engine]s
      /// associated with the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse ListEngines(global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEngines, null, options, request);
      }
      /// <summary>
      /// Lists all the [Engine][google.cloud.discoveryengine.v1beta.Engine]s
      /// associated with the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse> ListEnginesAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEnginesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the [Engine][google.cloud.discoveryengine.v1beta.Engine]s
      /// associated with the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse> ListEnginesAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEngines, null, options, request);
      }
      /// <summary>
      /// Pauses the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.Engine PauseEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.Engine PauseEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PauseEngine, null, options, request);
      }
      /// <summary>
      /// Pauses the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> PauseEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> PauseEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PauseEngine, null, options, request);
      }
      /// <summary>
      /// Resumes the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.Engine ResumeEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.Engine ResumeEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResumeEngine, null, options, request);
      }
      /// <summary>
      /// Resumes the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> ResumeEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes the training of an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.Engine> ResumeEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResumeEngine, null, options, request);
      }
      /// <summary>
      /// Tunes an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TuneEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TuneEngine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Tunes an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TuneEngine(global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TuneEngine, null, options, request);
      }
      /// <summary>
      /// Tunes an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TuneEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TuneEngineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Tunes an existing engine. Only applicable if
      /// [SolutionType][google.cloud.discoveryengine.v1beta.SolutionType] is
      /// [SOLUTION_TYPE_RECOMMENDATION][google.cloud.discoveryengine.v1beta.SolutionType.SOLUTION_TYPE_RECOMMENDATION].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TuneEngineAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TuneEngine, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override EngineServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EngineServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EngineServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateEngine, serviceImpl.CreateEngine)
          .AddMethod(__Method_DeleteEngine, serviceImpl.DeleteEngine)
          .AddMethod(__Method_UpdateEngine, serviceImpl.UpdateEngine)
          .AddMethod(__Method_GetEngine, serviceImpl.GetEngine)
          .AddMethod(__Method_ListEngines, serviceImpl.ListEngines)
          .AddMethod(__Method_PauseEngine, serviceImpl.PauseEngine)
          .AddMethod(__Method_ResumeEngine, serviceImpl.ResumeEngine)
          .AddMethod(__Method_TuneEngine, serviceImpl.TuneEngine).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EngineServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.CreateEngineRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateEngine));
      serviceBinder.AddMethod(__Method_DeleteEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteEngineRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteEngine));
      serviceBinder.AddMethod(__Method_UpdateEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine>(serviceImpl.UpdateEngine));
      serviceBinder.AddMethod(__Method_GetEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.GetEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine>(serviceImpl.GetEngine));
      serviceBinder.AddMethod(__Method_ListEngines, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.ListEnginesResponse>(serviceImpl.ListEngines));
      serviceBinder.AddMethod(__Method_PauseEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.PauseEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine>(serviceImpl.PauseEngine));
      serviceBinder.AddMethod(__Method_ResumeEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.ResumeEngineRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.Engine>(serviceImpl.ResumeEngine));
      serviceBinder.AddMethod(__Method_TuneEngine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.TuneEngineRequest, global::Google.LongRunning.Operation>(serviceImpl.TuneEngine));
    }

  }
}
#endregion
