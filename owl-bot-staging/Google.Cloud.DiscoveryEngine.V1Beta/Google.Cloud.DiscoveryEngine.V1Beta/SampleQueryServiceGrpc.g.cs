// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/discoveryengine/v1beta/sample_query_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.DiscoveryEngine.V1Beta {
  /// <summary>
  /// Service for managing
  /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s,
  /// </summary>
  public static partial class SampleQueryService
  {
    static readonly string __ServiceName = "google.cloud.discoveryengine.v1beta.SampleQueryService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest> __Marshaller_google_cloud_discoveryengine_v1beta_GetSampleQueryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> __Marshaller_google_cloud_discoveryengine_v1beta_SampleQuery = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest> __Marshaller_google_cloud_discoveryengine_v1beta_ListSampleQueriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse> __Marshaller_google_cloud_discoveryengine_v1beta_ListSampleQueriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest> __Marshaller_google_cloud_discoveryengine_v1beta_CreateSampleQueryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest> __Marshaller_google_cloud_discoveryengine_v1beta_UpdateSampleQueryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest> __Marshaller_google_cloud_discoveryengine_v1beta_DeleteSampleQueryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest> __Marshaller_google_cloud_discoveryengine_v1beta_ImportSampleQueriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> __Method_GetSampleQuery = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSampleQuery",
        __Marshaller_google_cloud_discoveryengine_v1beta_GetSampleQueryRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_SampleQuery);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse> __Method_ListSampleQueries = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSampleQueries",
        __Marshaller_google_cloud_discoveryengine_v1beta_ListSampleQueriesRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_ListSampleQueriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> __Method_CreateSampleQuery = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSampleQuery",
        __Marshaller_google_cloud_discoveryengine_v1beta_CreateSampleQueryRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_SampleQuery);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> __Method_UpdateSampleQuery = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSampleQuery",
        __Marshaller_google_cloud_discoveryengine_v1beta_UpdateSampleQueryRequest,
        __Marshaller_google_cloud_discoveryengine_v1beta_SampleQuery);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSampleQuery = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSampleQuery",
        __Marshaller_google_cloud_discoveryengine_v1beta_DeleteSampleQueryRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest, global::Google.LongRunning.Operation> __Method_ImportSampleQueries = new grpc::Method<global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportSampleQueries",
        __Marshaller_google_cloud_discoveryengine_v1beta_ImportSampleQueriesRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQueryServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SampleQueryService</summary>
    [grpc::BindServiceMethod(typeof(SampleQueryService), "BindService")]
    public abstract partial class SampleQueryServiceBase
    {
      /// <summary>
      /// Gets a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> GetSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a list of
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse> ListSampleQueries(global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> CreateSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> UpdateSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Bulk import of multiple
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s. Sample
      /// queries that already exist may be deleted.
      ///
      /// Note: It is possible for a subset of the
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s to be
      /// successfully imported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportSampleQueries(global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SampleQueryService</summary>
    public partial class SampleQueryServiceClient : grpc::ClientBase<SampleQueryServiceClient>
    {
      /// <summary>Creates a new client for SampleQueryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SampleQueryServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SampleQueryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SampleQueryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SampleQueryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SampleQueryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Gets a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery GetSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSampleQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery GetSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSampleQuery, null, options, request);
      }
      /// <summary>
      /// Gets a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> GetSampleQueryAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSampleQueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> GetSampleQueryAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSampleQuery, null, options, request);
      }
      /// <summary>
      /// Gets a list of
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse ListSampleQueries(global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSampleQueries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse ListSampleQueries(global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSampleQueries, null, options, request);
      }
      /// <summary>
      /// Gets a list of
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse> ListSampleQueriesAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSampleQueriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse> ListSampleQueriesAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSampleQueries, null, options, request);
      }
      /// <summary>
      /// Creates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery CreateSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSampleQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery CreateSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSampleQuery, null, options, request);
      }
      /// <summary>
      /// Creates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> CreateSampleQueryAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSampleQueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> CreateSampleQueryAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSampleQuery, null, options, request);
      }
      /// <summary>
      /// Updates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery UpdateSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSampleQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery UpdateSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSampleQuery, null, options, request);
      }
      /// <summary>
      /// Updates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> UpdateSampleQueryAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSampleQueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery> UpdateSampleQueryAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSampleQuery, null, options, request);
      }
      /// <summary>
      /// Deletes a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSampleQuery(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSampleQuery(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSampleQuery, null, options, request);
      }
      /// <summary>
      /// Deletes a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSampleQueryAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSampleQueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSampleQueryAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSampleQuery, null, options, request);
      }
      /// <summary>
      /// Bulk import of multiple
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s. Sample
      /// queries that already exist may be deleted.
      ///
      /// Note: It is possible for a subset of the
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s to be
      /// successfully imported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportSampleQueries(global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportSampleQueries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk import of multiple
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s. Sample
      /// queries that already exist may be deleted.
      ///
      /// Note: It is possible for a subset of the
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s to be
      /// successfully imported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportSampleQueries(global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportSampleQueries, null, options, request);
      }
      /// <summary>
      /// Bulk import of multiple
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s. Sample
      /// queries that already exist may be deleted.
      ///
      /// Note: It is possible for a subset of the
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s to be
      /// successfully imported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportSampleQueriesAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportSampleQueriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk import of multiple
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s. Sample
      /// queries that already exist may be deleted.
      ///
      /// Note: It is possible for a subset of the
      /// [SampleQuery][google.cloud.discoveryengine.v1beta.SampleQuery]s to be
      /// successfully imported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportSampleQueriesAsync(global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportSampleQueries, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SampleQueryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SampleQueryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SampleQueryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSampleQuery, serviceImpl.GetSampleQuery)
          .AddMethod(__Method_ListSampleQueries, serviceImpl.ListSampleQueries)
          .AddMethod(__Method_CreateSampleQuery, serviceImpl.CreateSampleQuery)
          .AddMethod(__Method_UpdateSampleQuery, serviceImpl.UpdateSampleQuery)
          .AddMethod(__Method_DeleteSampleQuery, serviceImpl.DeleteSampleQuery)
          .AddMethod(__Method_ImportSampleQueries, serviceImpl.ImportSampleQueries).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SampleQueryServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSampleQuery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.GetSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery>(serviceImpl.GetSampleQuery));
      serviceBinder.AddMethod(__Method_ListSampleQueries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.ListSampleQueriesResponse>(serviceImpl.ListSampleQueries));
      serviceBinder.AddMethod(__Method_CreateSampleQuery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.CreateSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery>(serviceImpl.CreateSampleQuery));
      serviceBinder.AddMethod(__Method_UpdateSampleQuery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.UpdateSampleQueryRequest, global::Google.Cloud.DiscoveryEngine.V1Beta.SampleQuery>(serviceImpl.UpdateSampleQuery));
      serviceBinder.AddMethod(__Method_DeleteSampleQuery, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.DeleteSampleQueryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSampleQuery));
      serviceBinder.AddMethod(__Method_ImportSampleQueries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DiscoveryEngine.V1Beta.ImportSampleQueriesRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportSampleQueries));
    }

  }
}
#endregion
