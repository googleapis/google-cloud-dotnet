// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/places/v1/fuel_options.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Maps.Places.V1 {

  /// <summary>Holder for reflection information generated from google/maps/places/v1/fuel_options.proto</summary>
  public static partial class FuelOptionsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/places/v1/fuel_options.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FuelOptionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvbWFwcy9wbGFjZXMvdjEvZnVlbF9vcHRpb25zLnByb3RvEhVn",
            "b29nbGUubWFwcy5wbGFjZXMudjEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8aF2dvb2dsZS90eXBlL21vbmV5LnByb3RvIv8DCgtGdWVsT3B0",
            "aW9ucxJBCgtmdWVsX3ByaWNlcxgBIAMoCzIsLmdvb2dsZS5tYXBzLnBsYWNl",
            "cy52MS5GdWVsT3B0aW9ucy5GdWVsUHJpY2UarAMKCUZ1ZWxQcmljZRJDCgR0",
            "eXBlGAEgASgOMjUuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLkZ1ZWxPcHRpb25z",
            "LkZ1ZWxQcmljZS5GdWVsVHlwZRIhCgVwcmljZRgCIAEoCzISLmdvb2dsZS50",
            "eXBlLk1vbmV5Ei8KC3VwZGF0ZV90aW1lGAMgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcCKFAgoIRnVlbFR5cGUSGQoVRlVFTF9UWVBFX1VOU1BF",
            "Q0lGSUVEEAASCgoGRElFU0VMEAESFAoQUkVHVUxBUl9VTkxFQURFRBACEgwK",
            "CE1JREdSQURFEAMSCwoHUFJFTUlVTRAEEggKBFNQOTEQBRIMCghTUDkxX0Ux",
            "MBAGEggKBFNQOTIQBxIICgRTUDk1EAgSDAoIU1A5NV9FMTAQCRIICgRTUDk4",
            "EAoSCAoEU1A5ORALEgkKBVNQMTAwEAwSBwoDTFBHEA0SBwoDRTgwEA4SBwoD",
            "RTg1EA8SCwoHTUVUSEFORRAQEg4KCkJJT19ESUVTRUwQERIQCgxUUlVDS19E",
            "SUVTRUwQEkKhAQoZY29tLmdvb2dsZS5tYXBzLnBsYWNlcy52MUIQRnVlbE9w",
            "dGlvbnNQcm90b1ABWjdjbG91ZC5nb29nbGUuY29tL2dvL21hcHMvcGxhY2Vz",
            "L2FwaXYxL3BsYWNlc3BiO3BsYWNlc3BiogIGR01QU1YxqgIVR29vZ2xlLk1h",
            "cHMuUGxhY2VzLlYxygIVR29vZ2xlXE1hcHNcUGxhY2VzXFYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.MoneyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.FuelOptions), global::Google.Maps.Places.V1.FuelOptions.Parser, new[]{ "FuelPrices" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice), global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Parser, new[]{ "Type", "Price", "UpdateTime" }, null, new[]{ typeof(global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType) }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The most recent information about fuel options in a gas station. This
  /// information is updated regularly.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class FuelOptions : pb::IMessage<FuelOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FuelOptions> _parser = new pb::MessageParser<FuelOptions>(() => new FuelOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FuelOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Maps.Places.V1.FuelOptionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuelOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuelOptions(FuelOptions other) : this() {
      fuelPrices_ = other.fuelPrices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FuelOptions Clone() {
      return new FuelOptions(this);
    }

    /// <summary>Field number for the "fuel_prices" field.</summary>
    public const int FuelPricesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice> _repeated_fuelPrices_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice> fuelPrices_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice>();
    /// <summary>
    /// The last known fuel price for each type of fuel this station has. There is
    /// one entry per fuel type this station has. Order is not important.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice> FuelPrices {
      get { return fuelPrices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FuelOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FuelOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fuelPrices_.Equals(other.fuelPrices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fuelPrices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fuelPrices_.WriteTo(output, _repeated_fuelPrices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fuelPrices_.WriteTo(ref output, _repeated_fuelPrices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += fuelPrices_.CalculateSize(_repeated_fuelPrices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FuelOptions other) {
      if (other == null) {
        return;
      }
      fuelPrices_.Add(other.fuelPrices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fuelPrices_.AddEntriesFrom(input, _repeated_fuelPrices_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fuelPrices_.AddEntriesFrom(ref input, _repeated_fuelPrices_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FuelOptions message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Fuel price information for a given type.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class FuelPrice : pb::IMessage<FuelPrice>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FuelPrice> _parser = new pb::MessageParser<FuelPrice>(() => new FuelPrice());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<FuelPrice> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.FuelOptions.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FuelPrice() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FuelPrice(FuelPrice other) : this() {
          type_ = other.type_;
          price_ = other.price_ != null ? other.price_.Clone() : null;
          updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public FuelPrice Clone() {
          return new FuelPrice(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType type_ = global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType.Unspecified;
        /// <summary>
        /// The type of fuel.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 2;
        private global::Google.Type.Money price_;
        /// <summary>
        /// The price of the fuel.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.Money Price {
          get { return price_; }
          set {
            price_ = value;
          }
        }

        /// <summary>Field number for the "update_time" field.</summary>
        public const int UpdateTimeFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
        /// <summary>
        /// The time the fuel price was last updated.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
          get { return updateTime_; }
          set {
            updateTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as FuelPrice);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(FuelPrice other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (!object.Equals(Price, other.Price)) return false;
          if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType.Unspecified) hash ^= Type.GetHashCode();
          if (price_ != null) hash ^= Price.GetHashCode();
          if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (price_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Price);
          }
          if (updateTime_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(UpdateTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (price_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Price);
          }
          if (updateTime_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(UpdateTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (price_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
          }
          if (updateTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(FuelPrice other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType.Unspecified) {
            Type = other.Type;
          }
          if (other.price_ != null) {
            if (price_ == null) {
              Price = new global::Google.Type.Money();
            }
            Price.MergeFrom(other.Price);
          }
          if (other.updateTime_ != null) {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            UpdateTime.MergeFrom(other.UpdateTime);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType) input.ReadEnum();
                break;
              }
              case 18: {
                if (price_ == null) {
                  Price = new global::Google.Type.Money();
                }
                input.ReadMessage(Price);
                break;
              }
              case 26: {
                if (updateTime_ == null) {
                  UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UpdateTime);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Google.Maps.Places.V1.FuelOptions.Types.FuelPrice.Types.FuelType) input.ReadEnum();
                break;
              }
              case 18: {
                if (price_ == null) {
                  Price = new global::Google.Type.Money();
                }
                input.ReadMessage(Price);
                break;
              }
              case 26: {
                if (updateTime_ == null) {
                  UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UpdateTime);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the FuelPrice message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Types of fuel.
          /// </summary>
          public enum FuelType {
            /// <summary>
            /// Unspecified fuel type.
            /// </summary>
            [pbr::OriginalName("FUEL_TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Diesel fuel.
            /// </summary>
            [pbr::OriginalName("DIESEL")] Diesel = 1,
            /// <summary>
            /// Regular unleaded.
            /// </summary>
            [pbr::OriginalName("REGULAR_UNLEADED")] RegularUnleaded = 2,
            /// <summary>
            /// Midgrade.
            /// </summary>
            [pbr::OriginalName("MIDGRADE")] Midgrade = 3,
            /// <summary>
            /// Premium.
            /// </summary>
            [pbr::OriginalName("PREMIUM")] Premium = 4,
            /// <summary>
            /// SP 91.
            /// </summary>
            [pbr::OriginalName("SP91")] Sp91 = 5,
            /// <summary>
            /// SP 91 E10.
            /// </summary>
            [pbr::OriginalName("SP91_E10")] Sp91E10 = 6,
            /// <summary>
            /// SP 92.
            /// </summary>
            [pbr::OriginalName("SP92")] Sp92 = 7,
            /// <summary>
            /// SP 95.
            /// </summary>
            [pbr::OriginalName("SP95")] Sp95 = 8,
            /// <summary>
            /// SP95 E10.
            /// </summary>
            [pbr::OriginalName("SP95_E10")] Sp95E10 = 9,
            /// <summary>
            /// SP 98.
            /// </summary>
            [pbr::OriginalName("SP98")] Sp98 = 10,
            /// <summary>
            /// SP 99.
            /// </summary>
            [pbr::OriginalName("SP99")] Sp99 = 11,
            /// <summary>
            /// SP 100.
            /// </summary>
            [pbr::OriginalName("SP100")] Sp100 = 12,
            /// <summary>
            /// LPG.
            /// </summary>
            [pbr::OriginalName("LPG")] Lpg = 13,
            /// <summary>
            /// E 80.
            /// </summary>
            [pbr::OriginalName("E80")] E80 = 14,
            /// <summary>
            /// E 85.
            /// </summary>
            [pbr::OriginalName("E85")] E85 = 15,
            /// <summary>
            /// Methane.
            /// </summary>
            [pbr::OriginalName("METHANE")] Methane = 16,
            /// <summary>
            /// Bio-diesel.
            /// </summary>
            [pbr::OriginalName("BIO_DIESEL")] BioDiesel = 17,
            /// <summary>
            /// Truck diesel.
            /// </summary>
            [pbr::OriginalName("TRUCK_DIESEL")] TruckDiesel = 18,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
