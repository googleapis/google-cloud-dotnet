// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/retail/v2/catalog_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Retail.V2 {
  /// <summary>
  /// Service for managing catalog configuration.
  /// </summary>
  public static partial class CatalogService
  {
    static readonly string __ServiceName = "google.cloud.retail.v2.CatalogService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ListCatalogsRequest> __Marshaller_google_cloud_retail_v2_ListCatalogsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ListCatalogsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ListCatalogsResponse> __Marshaller_google_cloud_retail_v2_ListCatalogsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ListCatalogsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.UpdateCatalogRequest> __Marshaller_google_cloud_retail_v2_UpdateCatalogRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.UpdateCatalogRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.Catalog> __Marshaller_google_cloud_retail_v2_Catalog = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.Catalog.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.SetDefaultBranchRequest> __Marshaller_google_cloud_retail_v2_SetDefaultBranchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.SetDefaultBranchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.GetDefaultBranchRequest> __Marshaller_google_cloud_retail_v2_GetDefaultBranchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.GetDefaultBranchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.GetDefaultBranchResponse> __Marshaller_google_cloud_retail_v2_GetDefaultBranchResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.GetDefaultBranchResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.GetCompletionConfigRequest> __Marshaller_google_cloud_retail_v2_GetCompletionConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.GetCompletionConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.CompletionConfig> __Marshaller_google_cloud_retail_v2_CompletionConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.CompletionConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest> __Marshaller_google_cloud_retail_v2_UpdateCompletionConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.GetAttributesConfigRequest> __Marshaller_google_cloud_retail_v2_GetAttributesConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.GetAttributesConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.AttributesConfig> __Marshaller_google_cloud_retail_v2_AttributesConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.AttributesConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest> __Marshaller_google_cloud_retail_v2_UpdateAttributesConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest> __Marshaller_google_cloud_retail_v2_AddCatalogAttributeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest> __Marshaller_google_cloud_retail_v2_RemoveCatalogAttributeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest> __Marshaller_google_cloud_retail_v2_ReplaceCatalogAttributeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.ListCatalogsRequest, global::Google.Cloud.Retail.V2.ListCatalogsResponse> __Method_ListCatalogs = new grpc::Method<global::Google.Cloud.Retail.V2.ListCatalogsRequest, global::Google.Cloud.Retail.V2.ListCatalogsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCatalogs",
        __Marshaller_google_cloud_retail_v2_ListCatalogsRequest,
        __Marshaller_google_cloud_retail_v2_ListCatalogsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.UpdateCatalogRequest, global::Google.Cloud.Retail.V2.Catalog> __Method_UpdateCatalog = new grpc::Method<global::Google.Cloud.Retail.V2.UpdateCatalogRequest, global::Google.Cloud.Retail.V2.Catalog>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCatalog",
        __Marshaller_google_cloud_retail_v2_UpdateCatalogRequest,
        __Marshaller_google_cloud_retail_v2_Catalog);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.SetDefaultBranchRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetDefaultBranch = new grpc::Method<global::Google.Cloud.Retail.V2.SetDefaultBranchRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetDefaultBranch",
        __Marshaller_google_cloud_retail_v2_SetDefaultBranchRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.GetDefaultBranchRequest, global::Google.Cloud.Retail.V2.GetDefaultBranchResponse> __Method_GetDefaultBranch = new grpc::Method<global::Google.Cloud.Retail.V2.GetDefaultBranchRequest, global::Google.Cloud.Retail.V2.GetDefaultBranchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultBranch",
        __Marshaller_google_cloud_retail_v2_GetDefaultBranchRequest,
        __Marshaller_google_cloud_retail_v2_GetDefaultBranchResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.GetCompletionConfigRequest, global::Google.Cloud.Retail.V2.CompletionConfig> __Method_GetCompletionConfig = new grpc::Method<global::Google.Cloud.Retail.V2.GetCompletionConfigRequest, global::Google.Cloud.Retail.V2.CompletionConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCompletionConfig",
        __Marshaller_google_cloud_retail_v2_GetCompletionConfigRequest,
        __Marshaller_google_cloud_retail_v2_CompletionConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest, global::Google.Cloud.Retail.V2.CompletionConfig> __Method_UpdateCompletionConfig = new grpc::Method<global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest, global::Google.Cloud.Retail.V2.CompletionConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCompletionConfig",
        __Marshaller_google_cloud_retail_v2_UpdateCompletionConfigRequest,
        __Marshaller_google_cloud_retail_v2_CompletionConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.GetAttributesConfigRequest, global::Google.Cloud.Retail.V2.AttributesConfig> __Method_GetAttributesConfig = new grpc::Method<global::Google.Cloud.Retail.V2.GetAttributesConfigRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttributesConfig",
        __Marshaller_google_cloud_retail_v2_GetAttributesConfigRequest,
        __Marshaller_google_cloud_retail_v2_AttributesConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest, global::Google.Cloud.Retail.V2.AttributesConfig> __Method_UpdateAttributesConfig = new grpc::Method<global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAttributesConfig",
        __Marshaller_google_cloud_retail_v2_UpdateAttributesConfigRequest,
        __Marshaller_google_cloud_retail_v2_AttributesConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig> __Method_AddCatalogAttribute = new grpc::Method<global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCatalogAttribute",
        __Marshaller_google_cloud_retail_v2_AddCatalogAttributeRequest,
        __Marshaller_google_cloud_retail_v2_AttributesConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig> __Method_RemoveCatalogAttribute = new grpc::Method<global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveCatalogAttribute",
        __Marshaller_google_cloud_retail_v2_RemoveCatalogAttributeRequest,
        __Marshaller_google_cloud_retail_v2_AttributesConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig> __Method_ReplaceCatalogAttribute = new grpc::Method<global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReplaceCatalogAttribute",
        __Marshaller_google_cloud_retail_v2_ReplaceCatalogAttributeRequest,
        __Marshaller_google_cloud_retail_v2_AttributesConfig);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Retail.V2.CatalogServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CatalogService</summary>
    [grpc::BindServiceMethod(typeof(CatalogService), "BindService")]
    public abstract partial class CatalogServiceBase
    {
      /// <summary>
      /// Lists all the [Catalog][google.cloud.retail.v2.Catalog]s associated with
      /// the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.ListCatalogsResponse> ListCatalogs(global::Google.Cloud.Retail.V2.ListCatalogsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the [Catalog][google.cloud.retail.v2.Catalog]s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.Catalog> UpdateCatalog(global::Google.Cloud.Retail.V2.UpdateCatalogRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set a specified branch id as default branch. API methods such as
      /// [SearchService.Search][google.cloud.retail.v2.SearchService.Search],
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct],
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts]
      /// will treat requests using "default_branch" to the actual branch id set as
      /// default.
      ///
      /// For example, if `projects/*/locations/*/catalogs/*/branches/1` is set as
      /// default, setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/default_branch` is equivalent
      /// to setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/1`.
      ///
      /// Using multiple branches can be useful when developers would like
      /// to have a staging branch to test and verify for future usage. When it
      /// becomes ready, developers switch on the staging branch using this API while
      /// keeping using `projects/*/locations/*/catalogs/*/branches/default_branch`
      /// as [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// route the traffic to this staging branch.
      ///
      /// CAUTION: If you have live predict/search traffic, switching the default
      /// branch could potentially cause outages if the ID space of the new branch is
      /// very different from the old one.
      ///
      /// More specifically:
      ///
      /// * PredictionService will only return product IDs from branch {newBranch}.
      /// * SearchService will only return product IDs from branch {newBranch}
      ///   (if branch is not explicitly set).
      /// * UserEventService will only join events with products from branch
      ///   {newBranch}.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SetDefaultBranch(global::Google.Cloud.Retail.V2.SetDefaultBranchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get which branch is currently default branch set by
      /// [CatalogService.SetDefaultBranch][google.cloud.retail.v2.CatalogService.SetDefaultBranch]
      /// method under a specified parent catalog.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.GetDefaultBranchResponse> GetDefaultBranch(global::Google.Cloud.Retail.V2.GetDefaultBranchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a [CompletionConfig][google.cloud.retail.v2.CompletionConfig].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.CompletionConfig> GetCompletionConfig(global::Google.Cloud.Retail.V2.GetCompletionConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the [CompletionConfig][google.cloud.retail.v2.CompletionConfig]s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.CompletionConfig> UpdateCompletionConfig(global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.AttributesConfig> GetAttributesConfig(global::Google.Cloud.Retail.V2.GetAttributesConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// The catalog attributes in the request will be updated in the catalog, or
      /// inserted if they do not exist. Existing catalog attributes not included in
      /// the request will remain unchanged. Attributes that are assigned to
      /// products, but do not exist at the catalog level, are always included in the
      /// response. The product attribute is assigned default values for missing
      /// catalog attribute fields, e.g., searchable and dynamic facetable options.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.AttributesConfig> UpdateAttributesConfig(global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Adds the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to add
      /// already exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.AttributesConfig> AddCatalogAttribute(global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Removes the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] from the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// remove does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.AttributesConfig> RemoveCatalogAttribute(global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Replaces the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] in the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig] by updating the
      /// catalog attribute with the same
      /// [CatalogAttribute.key][google.cloud.retail.v2.CatalogAttribute.key].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// replace does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.AttributesConfig> ReplaceCatalogAttribute(global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CatalogService</summary>
    public partial class CatalogServiceClient : grpc::ClientBase<CatalogServiceClient>
    {
      /// <summary>Creates a new client for CatalogService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CatalogServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CatalogService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CatalogServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CatalogServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CatalogServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists all the [Catalog][google.cloud.retail.v2.Catalog]s associated with
      /// the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ListCatalogsResponse ListCatalogs(global::Google.Cloud.Retail.V2.ListCatalogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCatalogs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the [Catalog][google.cloud.retail.v2.Catalog]s associated with
      /// the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ListCatalogsResponse ListCatalogs(global::Google.Cloud.Retail.V2.ListCatalogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCatalogs, null, options, request);
      }
      /// <summary>
      /// Lists all the [Catalog][google.cloud.retail.v2.Catalog]s associated with
      /// the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ListCatalogsResponse> ListCatalogsAsync(global::Google.Cloud.Retail.V2.ListCatalogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCatalogsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all the [Catalog][google.cloud.retail.v2.Catalog]s associated with
      /// the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ListCatalogsResponse> ListCatalogsAsync(global::Google.Cloud.Retail.V2.ListCatalogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCatalogs, null, options, request);
      }
      /// <summary>
      /// Updates the [Catalog][google.cloud.retail.v2.Catalog]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.Catalog UpdateCatalog(global::Google.Cloud.Retail.V2.UpdateCatalogRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCatalog(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [Catalog][google.cloud.retail.v2.Catalog]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.Catalog UpdateCatalog(global::Google.Cloud.Retail.V2.UpdateCatalogRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCatalog, null, options, request);
      }
      /// <summary>
      /// Updates the [Catalog][google.cloud.retail.v2.Catalog]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.Catalog> UpdateCatalogAsync(global::Google.Cloud.Retail.V2.UpdateCatalogRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCatalogAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [Catalog][google.cloud.retail.v2.Catalog]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.Catalog> UpdateCatalogAsync(global::Google.Cloud.Retail.V2.UpdateCatalogRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCatalog, null, options, request);
      }
      /// <summary>
      /// Set a specified branch id as default branch. API methods such as
      /// [SearchService.Search][google.cloud.retail.v2.SearchService.Search],
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct],
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts]
      /// will treat requests using "default_branch" to the actual branch id set as
      /// default.
      ///
      /// For example, if `projects/*/locations/*/catalogs/*/branches/1` is set as
      /// default, setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/default_branch` is equivalent
      /// to setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/1`.
      ///
      /// Using multiple branches can be useful when developers would like
      /// to have a staging branch to test and verify for future usage. When it
      /// becomes ready, developers switch on the staging branch using this API while
      /// keeping using `projects/*/locations/*/catalogs/*/branches/default_branch`
      /// as [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// route the traffic to this staging branch.
      ///
      /// CAUTION: If you have live predict/search traffic, switching the default
      /// branch could potentially cause outages if the ID space of the new branch is
      /// very different from the old one.
      ///
      /// More specifically:
      ///
      /// * PredictionService will only return product IDs from branch {newBranch}.
      /// * SearchService will only return product IDs from branch {newBranch}
      ///   (if branch is not explicitly set).
      /// * UserEventService will only join events with products from branch
      ///   {newBranch}.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetDefaultBranch(global::Google.Cloud.Retail.V2.SetDefaultBranchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetDefaultBranch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set a specified branch id as default branch. API methods such as
      /// [SearchService.Search][google.cloud.retail.v2.SearchService.Search],
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct],
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts]
      /// will treat requests using "default_branch" to the actual branch id set as
      /// default.
      ///
      /// For example, if `projects/*/locations/*/catalogs/*/branches/1` is set as
      /// default, setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/default_branch` is equivalent
      /// to setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/1`.
      ///
      /// Using multiple branches can be useful when developers would like
      /// to have a staging branch to test and verify for future usage. When it
      /// becomes ready, developers switch on the staging branch using this API while
      /// keeping using `projects/*/locations/*/catalogs/*/branches/default_branch`
      /// as [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// route the traffic to this staging branch.
      ///
      /// CAUTION: If you have live predict/search traffic, switching the default
      /// branch could potentially cause outages if the ID space of the new branch is
      /// very different from the old one.
      ///
      /// More specifically:
      ///
      /// * PredictionService will only return product IDs from branch {newBranch}.
      /// * SearchService will only return product IDs from branch {newBranch}
      ///   (if branch is not explicitly set).
      /// * UserEventService will only join events with products from branch
      ///   {newBranch}.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty SetDefaultBranch(global::Google.Cloud.Retail.V2.SetDefaultBranchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetDefaultBranch, null, options, request);
      }
      /// <summary>
      /// Set a specified branch id as default branch. API methods such as
      /// [SearchService.Search][google.cloud.retail.v2.SearchService.Search],
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct],
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts]
      /// will treat requests using "default_branch" to the actual branch id set as
      /// default.
      ///
      /// For example, if `projects/*/locations/*/catalogs/*/branches/1` is set as
      /// default, setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/default_branch` is equivalent
      /// to setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/1`.
      ///
      /// Using multiple branches can be useful when developers would like
      /// to have a staging branch to test and verify for future usage. When it
      /// becomes ready, developers switch on the staging branch using this API while
      /// keeping using `projects/*/locations/*/catalogs/*/branches/default_branch`
      /// as [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// route the traffic to this staging branch.
      ///
      /// CAUTION: If you have live predict/search traffic, switching the default
      /// branch could potentially cause outages if the ID space of the new branch is
      /// very different from the old one.
      ///
      /// More specifically:
      ///
      /// * PredictionService will only return product IDs from branch {newBranch}.
      /// * SearchService will only return product IDs from branch {newBranch}
      ///   (if branch is not explicitly set).
      /// * UserEventService will only join events with products from branch
      ///   {newBranch}.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetDefaultBranchAsync(global::Google.Cloud.Retail.V2.SetDefaultBranchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetDefaultBranchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set a specified branch id as default branch. API methods such as
      /// [SearchService.Search][google.cloud.retail.v2.SearchService.Search],
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct],
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts]
      /// will treat requests using "default_branch" to the actual branch id set as
      /// default.
      ///
      /// For example, if `projects/*/locations/*/catalogs/*/branches/1` is set as
      /// default, setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/default_branch` is equivalent
      /// to setting
      /// [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// `projects/*/locations/*/catalogs/*/branches/1`.
      ///
      /// Using multiple branches can be useful when developers would like
      /// to have a staging branch to test and verify for future usage. When it
      /// becomes ready, developers switch on the staging branch using this API while
      /// keeping using `projects/*/locations/*/catalogs/*/branches/default_branch`
      /// as [SearchRequest.branch][google.cloud.retail.v2.SearchRequest.branch] to
      /// route the traffic to this staging branch.
      ///
      /// CAUTION: If you have live predict/search traffic, switching the default
      /// branch could potentially cause outages if the ID space of the new branch is
      /// very different from the old one.
      ///
      /// More specifically:
      ///
      /// * PredictionService will only return product IDs from branch {newBranch}.
      /// * SearchService will only return product IDs from branch {newBranch}
      ///   (if branch is not explicitly set).
      /// * UserEventService will only join events with products from branch
      ///   {newBranch}.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SetDefaultBranchAsync(global::Google.Cloud.Retail.V2.SetDefaultBranchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetDefaultBranch, null, options, request);
      }
      /// <summary>
      /// Get which branch is currently default branch set by
      /// [CatalogService.SetDefaultBranch][google.cloud.retail.v2.CatalogService.SetDefaultBranch]
      /// method under a specified parent catalog.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.GetDefaultBranchResponse GetDefaultBranch(global::Google.Cloud.Retail.V2.GetDefaultBranchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultBranch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get which branch is currently default branch set by
      /// [CatalogService.SetDefaultBranch][google.cloud.retail.v2.CatalogService.SetDefaultBranch]
      /// method under a specified parent catalog.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.GetDefaultBranchResponse GetDefaultBranch(global::Google.Cloud.Retail.V2.GetDefaultBranchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultBranch, null, options, request);
      }
      /// <summary>
      /// Get which branch is currently default branch set by
      /// [CatalogService.SetDefaultBranch][google.cloud.retail.v2.CatalogService.SetDefaultBranch]
      /// method under a specified parent catalog.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.GetDefaultBranchResponse> GetDefaultBranchAsync(global::Google.Cloud.Retail.V2.GetDefaultBranchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultBranchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get which branch is currently default branch set by
      /// [CatalogService.SetDefaultBranch][google.cloud.retail.v2.CatalogService.SetDefaultBranch]
      /// method under a specified parent catalog.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.GetDefaultBranchResponse> GetDefaultBranchAsync(global::Google.Cloud.Retail.V2.GetDefaultBranchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultBranch, null, options, request);
      }
      /// <summary>
      /// Gets a [CompletionConfig][google.cloud.retail.v2.CompletionConfig].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.CompletionConfig GetCompletionConfig(global::Google.Cloud.Retail.V2.GetCompletionConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCompletionConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [CompletionConfig][google.cloud.retail.v2.CompletionConfig].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.CompletionConfig GetCompletionConfig(global::Google.Cloud.Retail.V2.GetCompletionConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCompletionConfig, null, options, request);
      }
      /// <summary>
      /// Gets a [CompletionConfig][google.cloud.retail.v2.CompletionConfig].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.CompletionConfig> GetCompletionConfigAsync(global::Google.Cloud.Retail.V2.GetCompletionConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCompletionConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [CompletionConfig][google.cloud.retail.v2.CompletionConfig].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.CompletionConfig> GetCompletionConfigAsync(global::Google.Cloud.Retail.V2.GetCompletionConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCompletionConfig, null, options, request);
      }
      /// <summary>
      /// Updates the [CompletionConfig][google.cloud.retail.v2.CompletionConfig]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.CompletionConfig UpdateCompletionConfig(global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCompletionConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [CompletionConfig][google.cloud.retail.v2.CompletionConfig]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.CompletionConfig UpdateCompletionConfig(global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCompletionConfig, null, options, request);
      }
      /// <summary>
      /// Updates the [CompletionConfig][google.cloud.retail.v2.CompletionConfig]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.CompletionConfig> UpdateCompletionConfigAsync(global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCompletionConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [CompletionConfig][google.cloud.retail.v2.CompletionConfig]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.CompletionConfig> UpdateCompletionConfigAsync(global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCompletionConfig, null, options, request);
      }
      /// <summary>
      /// Gets an [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig GetAttributesConfig(global::Google.Cloud.Retail.V2.GetAttributesConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributesConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig GetAttributesConfig(global::Google.Cloud.Retail.V2.GetAttributesConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttributesConfig, null, options, request);
      }
      /// <summary>
      /// Gets an [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> GetAttributesConfigAsync(global::Google.Cloud.Retail.V2.GetAttributesConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttributesConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> GetAttributesConfigAsync(global::Google.Cloud.Retail.V2.GetAttributesConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttributesConfig, null, options, request);
      }
      /// <summary>
      /// Updates the [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// The catalog attributes in the request will be updated in the catalog, or
      /// inserted if they do not exist. Existing catalog attributes not included in
      /// the request will remain unchanged. Attributes that are assigned to
      /// products, but do not exist at the catalog level, are always included in the
      /// response. The product attribute is assigned default values for missing
      /// catalog attribute fields, e.g., searchable and dynamic facetable options.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig UpdateAttributesConfig(global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAttributesConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// The catalog attributes in the request will be updated in the catalog, or
      /// inserted if they do not exist. Existing catalog attributes not included in
      /// the request will remain unchanged. Attributes that are assigned to
      /// products, but do not exist at the catalog level, are always included in the
      /// response. The product attribute is assigned default values for missing
      /// catalog attribute fields, e.g., searchable and dynamic facetable options.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig UpdateAttributesConfig(global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAttributesConfig, null, options, request);
      }
      /// <summary>
      /// Updates the [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// The catalog attributes in the request will be updated in the catalog, or
      /// inserted if they do not exist. Existing catalog attributes not included in
      /// the request will remain unchanged. Attributes that are assigned to
      /// products, but do not exist at the catalog level, are always included in the
      /// response. The product attribute is assigned default values for missing
      /// catalog attribute fields, e.g., searchable and dynamic facetable options.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> UpdateAttributesConfigAsync(global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAttributesConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// The catalog attributes in the request will be updated in the catalog, or
      /// inserted if they do not exist. Existing catalog attributes not included in
      /// the request will remain unchanged. Attributes that are assigned to
      /// products, but do not exist at the catalog level, are always included in the
      /// response. The product attribute is assigned default values for missing
      /// catalog attribute fields, e.g., searchable and dynamic facetable options.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> UpdateAttributesConfigAsync(global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAttributesConfig, null, options, request);
      }
      /// <summary>
      /// Adds the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to add
      /// already exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig AddCatalogAttribute(global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCatalogAttribute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Adds the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to add
      /// already exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig AddCatalogAttribute(global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCatalogAttribute, null, options, request);
      }
      /// <summary>
      /// Adds the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to add
      /// already exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> AddCatalogAttributeAsync(global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCatalogAttributeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Adds the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to add
      /// already exists, an ALREADY_EXISTS error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> AddCatalogAttributeAsync(global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCatalogAttribute, null, options, request);
      }
      /// <summary>
      /// Removes the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] from the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// remove does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig RemoveCatalogAttribute(global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCatalogAttribute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Removes the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] from the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// remove does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig RemoveCatalogAttribute(global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveCatalogAttribute, null, options, request);
      }
      /// <summary>
      /// Removes the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] from the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// remove does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> RemoveCatalogAttributeAsync(global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCatalogAttributeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Removes the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] from the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// remove does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> RemoveCatalogAttributeAsync(global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveCatalogAttribute, null, options, request);
      }
      /// <summary>
      /// Replaces the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] in the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig] by updating the
      /// catalog attribute with the same
      /// [CatalogAttribute.key][google.cloud.retail.v2.CatalogAttribute.key].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// replace does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig ReplaceCatalogAttribute(global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReplaceCatalogAttribute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Replaces the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] in the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig] by updating the
      /// catalog attribute with the same
      /// [CatalogAttribute.key][google.cloud.retail.v2.CatalogAttribute.key].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// replace does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.AttributesConfig ReplaceCatalogAttribute(global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReplaceCatalogAttribute, null, options, request);
      }
      /// <summary>
      /// Replaces the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] in the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig] by updating the
      /// catalog attribute with the same
      /// [CatalogAttribute.key][google.cloud.retail.v2.CatalogAttribute.key].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// replace does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> ReplaceCatalogAttributeAsync(global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReplaceCatalogAttributeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Replaces the specified
      /// [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] in the
      /// [AttributesConfig][google.cloud.retail.v2.AttributesConfig] by updating the
      /// catalog attribute with the same
      /// [CatalogAttribute.key][google.cloud.retail.v2.CatalogAttribute.key].
      ///
      /// If the [CatalogAttribute][google.cloud.retail.v2.CatalogAttribute] to
      /// replace does not exist, a NOT_FOUND error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.AttributesConfig> ReplaceCatalogAttributeAsync(global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReplaceCatalogAttribute, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CatalogServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CatalogServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CatalogServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListCatalogs, serviceImpl.ListCatalogs)
          .AddMethod(__Method_UpdateCatalog, serviceImpl.UpdateCatalog)
          .AddMethod(__Method_SetDefaultBranch, serviceImpl.SetDefaultBranch)
          .AddMethod(__Method_GetDefaultBranch, serviceImpl.GetDefaultBranch)
          .AddMethod(__Method_GetCompletionConfig, serviceImpl.GetCompletionConfig)
          .AddMethod(__Method_UpdateCompletionConfig, serviceImpl.UpdateCompletionConfig)
          .AddMethod(__Method_GetAttributesConfig, serviceImpl.GetAttributesConfig)
          .AddMethod(__Method_UpdateAttributesConfig, serviceImpl.UpdateAttributesConfig)
          .AddMethod(__Method_AddCatalogAttribute, serviceImpl.AddCatalogAttribute)
          .AddMethod(__Method_RemoveCatalogAttribute, serviceImpl.RemoveCatalogAttribute)
          .AddMethod(__Method_ReplaceCatalogAttribute, serviceImpl.ReplaceCatalogAttribute).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CatalogServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListCatalogs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.ListCatalogsRequest, global::Google.Cloud.Retail.V2.ListCatalogsResponse>(serviceImpl.ListCatalogs));
      serviceBinder.AddMethod(__Method_UpdateCatalog, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.UpdateCatalogRequest, global::Google.Cloud.Retail.V2.Catalog>(serviceImpl.UpdateCatalog));
      serviceBinder.AddMethod(__Method_SetDefaultBranch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.SetDefaultBranchRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SetDefaultBranch));
      serviceBinder.AddMethod(__Method_GetDefaultBranch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.GetDefaultBranchRequest, global::Google.Cloud.Retail.V2.GetDefaultBranchResponse>(serviceImpl.GetDefaultBranch));
      serviceBinder.AddMethod(__Method_GetCompletionConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.GetCompletionConfigRequest, global::Google.Cloud.Retail.V2.CompletionConfig>(serviceImpl.GetCompletionConfig));
      serviceBinder.AddMethod(__Method_UpdateCompletionConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.UpdateCompletionConfigRequest, global::Google.Cloud.Retail.V2.CompletionConfig>(serviceImpl.UpdateCompletionConfig));
      serviceBinder.AddMethod(__Method_GetAttributesConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.GetAttributesConfigRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(serviceImpl.GetAttributesConfig));
      serviceBinder.AddMethod(__Method_UpdateAttributesConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.UpdateAttributesConfigRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(serviceImpl.UpdateAttributesConfig));
      serviceBinder.AddMethod(__Method_AddCatalogAttribute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.AddCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(serviceImpl.AddCatalogAttribute));
      serviceBinder.AddMethod(__Method_RemoveCatalogAttribute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.RemoveCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(serviceImpl.RemoveCatalogAttribute));
      serviceBinder.AddMethod(__Method_ReplaceCatalogAttribute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.ReplaceCatalogAttributeRequest, global::Google.Cloud.Retail.V2.AttributesConfig>(serviceImpl.ReplaceCatalogAttribute));
    }

  }
}
#endregion
