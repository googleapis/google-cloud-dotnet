// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/retail/v2/serving_config_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Retail.V2 {
  /// <summary>
  /// Service for modifying ServingConfig.
  /// </summary>
  public static partial class ServingConfigService
  {
    static readonly string __ServiceName = "google.cloud.retail.v2.ServingConfigService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.CreateServingConfigRequest> __Marshaller_google_cloud_retail_v2_CreateServingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.CreateServingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ServingConfig> __Marshaller_google_cloud_retail_v2_ServingConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ServingConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.DeleteServingConfigRequest> __Marshaller_google_cloud_retail_v2_DeleteServingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.DeleteServingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.UpdateServingConfigRequest> __Marshaller_google_cloud_retail_v2_UpdateServingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.UpdateServingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.GetServingConfigRequest> __Marshaller_google_cloud_retail_v2_GetServingConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.GetServingConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ListServingConfigsRequest> __Marshaller_google_cloud_retail_v2_ListServingConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ListServingConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ListServingConfigsResponse> __Marshaller_google_cloud_retail_v2_ListServingConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ListServingConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.AddControlRequest> __Marshaller_google_cloud_retail_v2_AddControlRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.AddControlRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.RemoveControlRequest> __Marshaller_google_cloud_retail_v2_RemoveControlRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.RemoveControlRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.CreateServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig> __Method_CreateServingConfig = new grpc::Method<global::Google.Cloud.Retail.V2.CreateServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateServingConfig",
        __Marshaller_google_cloud_retail_v2_CreateServingConfigRequest,
        __Marshaller_google_cloud_retail_v2_ServingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.DeleteServingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteServingConfig = new grpc::Method<global::Google.Cloud.Retail.V2.DeleteServingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteServingConfig",
        __Marshaller_google_cloud_retail_v2_DeleteServingConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.UpdateServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig> __Method_UpdateServingConfig = new grpc::Method<global::Google.Cloud.Retail.V2.UpdateServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateServingConfig",
        __Marshaller_google_cloud_retail_v2_UpdateServingConfigRequest,
        __Marshaller_google_cloud_retail_v2_ServingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.GetServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig> __Method_GetServingConfig = new grpc::Method<global::Google.Cloud.Retail.V2.GetServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetServingConfig",
        __Marshaller_google_cloud_retail_v2_GetServingConfigRequest,
        __Marshaller_google_cloud_retail_v2_ServingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.ListServingConfigsRequest, global::Google.Cloud.Retail.V2.ListServingConfigsResponse> __Method_ListServingConfigs = new grpc::Method<global::Google.Cloud.Retail.V2.ListServingConfigsRequest, global::Google.Cloud.Retail.V2.ListServingConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListServingConfigs",
        __Marshaller_google_cloud_retail_v2_ListServingConfigsRequest,
        __Marshaller_google_cloud_retail_v2_ListServingConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.AddControlRequest, global::Google.Cloud.Retail.V2.ServingConfig> __Method_AddControl = new grpc::Method<global::Google.Cloud.Retail.V2.AddControlRequest, global::Google.Cloud.Retail.V2.ServingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddControl",
        __Marshaller_google_cloud_retail_v2_AddControlRequest,
        __Marshaller_google_cloud_retail_v2_ServingConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.RemoveControlRequest, global::Google.Cloud.Retail.V2.ServingConfig> __Method_RemoveControl = new grpc::Method<global::Google.Cloud.Retail.V2.RemoveControlRequest, global::Google.Cloud.Retail.V2.ServingConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveControl",
        __Marshaller_google_cloud_retail_v2_RemoveControlRequest,
        __Marshaller_google_cloud_retail_v2_ServingConfig);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Retail.V2.ServingConfigServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ServingConfigService</summary>
    [grpc::BindServiceMethod(typeof(ServingConfigService), "BindService")]
    public abstract partial class ServingConfigServiceBase
    {
      /// <summary>
      /// Creates a ServingConfig.
      ///
      /// A maximum of 100 [ServingConfig][google.cloud.retail.v2.ServingConfig]s are
      /// allowed in a [Catalog][google.cloud.retail.v2.Catalog], otherwise a
      /// FAILED_PRECONDITION error is returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.ServingConfig> CreateServingConfig(global::Google.Cloud.Retail.V2.CreateServingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteServingConfig(global::Google.Cloud.Retail.V2.DeleteServingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a ServingConfig.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.ServingConfig> UpdateServingConfig(global::Google.Cloud.Retail.V2.UpdateServingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.ServingConfig> GetServingConfig(global::Google.Cloud.Retail.V2.GetServingConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all ServingConfigs linked to this catalog.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.ListServingConfigsResponse> ListServingConfigs(global::Google.Cloud.Retail.V2.ListServingConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Enables a Control on the specified ServingConfig.
      /// The control is added in the last position of the list of controls
      /// it belongs to (e.g. if it's a facet spec control it will be applied
      /// in the last position of servingConfig.facetSpecIds)
      /// Returns a ALREADY_EXISTS error if the control has already been applied.
      /// Returns a FAILED_PRECONDITION error if the addition could exceed maximum
      /// number of control allowed for that type of control.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.ServingConfig> AddControl(global::Google.Cloud.Retail.V2.AddControlRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Disables a Control on the specified ServingConfig.
      /// The control is removed from the ServingConfig.
      /// Returns a NOT_FOUND error if the Control is not enabled for the
      /// ServingConfig.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.ServingConfig> RemoveControl(global::Google.Cloud.Retail.V2.RemoveControlRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ServingConfigService</summary>
    public partial class ServingConfigServiceClient : grpc::ClientBase<ServingConfigServiceClient>
    {
      /// <summary>Creates a new client for ServingConfigService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServingConfigServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ServingConfigService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServingConfigServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServingConfigServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServingConfigServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a ServingConfig.
      ///
      /// A maximum of 100 [ServingConfig][google.cloud.retail.v2.ServingConfig]s are
      /// allowed in a [Catalog][google.cloud.retail.v2.Catalog], otherwise a
      /// FAILED_PRECONDITION error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig CreateServingConfig(global::Google.Cloud.Retail.V2.CreateServingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ServingConfig.
      ///
      /// A maximum of 100 [ServingConfig][google.cloud.retail.v2.ServingConfig]s are
      /// allowed in a [Catalog][google.cloud.retail.v2.Catalog], otherwise a
      /// FAILED_PRECONDITION error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig CreateServingConfig(global::Google.Cloud.Retail.V2.CreateServingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateServingConfig, null, options, request);
      }
      /// <summary>
      /// Creates a ServingConfig.
      ///
      /// A maximum of 100 [ServingConfig][google.cloud.retail.v2.ServingConfig]s are
      /// allowed in a [Catalog][google.cloud.retail.v2.Catalog], otherwise a
      /// FAILED_PRECONDITION error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> CreateServingConfigAsync(global::Google.Cloud.Retail.V2.CreateServingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ServingConfig.
      ///
      /// A maximum of 100 [ServingConfig][google.cloud.retail.v2.ServingConfig]s are
      /// allowed in a [Catalog][google.cloud.retail.v2.Catalog], otherwise a
      /// FAILED_PRECONDITION error is returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> CreateServingConfigAsync(global::Google.Cloud.Retail.V2.CreateServingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateServingConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteServingConfig(global::Google.Cloud.Retail.V2.DeleteServingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteServingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteServingConfig(global::Google.Cloud.Retail.V2.DeleteServingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteServingConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteServingConfigAsync(global::Google.Cloud.Retail.V2.DeleteServingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteServingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteServingConfigAsync(global::Google.Cloud.Retail.V2.DeleteServingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteServingConfig, null, options, request);
      }
      /// <summary>
      /// Updates a ServingConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig UpdateServingConfig(global::Google.Cloud.Retail.V2.UpdateServingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateServingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ServingConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig UpdateServingConfig(global::Google.Cloud.Retail.V2.UpdateServingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateServingConfig, null, options, request);
      }
      /// <summary>
      /// Updates a ServingConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> UpdateServingConfigAsync(global::Google.Cloud.Retail.V2.UpdateServingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateServingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ServingConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> UpdateServingConfigAsync(global::Google.Cloud.Retail.V2.UpdateServingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateServingConfig, null, options, request);
      }
      /// <summary>
      /// Gets a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig GetServingConfig(global::Google.Cloud.Retail.V2.GetServingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServingConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig GetServingConfig(global::Google.Cloud.Retail.V2.GetServingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetServingConfig, null, options, request);
      }
      /// <summary>
      /// Gets a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> GetServingConfigAsync(global::Google.Cloud.Retail.V2.GetServingConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServingConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ServingConfig.
      ///
      /// Returns a NotFound error if the ServingConfig does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> GetServingConfigAsync(global::Google.Cloud.Retail.V2.GetServingConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetServingConfig, null, options, request);
      }
      /// <summary>
      /// Lists all ServingConfigs linked to this catalog.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ListServingConfigsResponse ListServingConfigs(global::Google.Cloud.Retail.V2.ListServingConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServingConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all ServingConfigs linked to this catalog.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ListServingConfigsResponse ListServingConfigs(global::Google.Cloud.Retail.V2.ListServingConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServingConfigs, null, options, request);
      }
      /// <summary>
      /// Lists all ServingConfigs linked to this catalog.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ListServingConfigsResponse> ListServingConfigsAsync(global::Google.Cloud.Retail.V2.ListServingConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServingConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all ServingConfigs linked to this catalog.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ListServingConfigsResponse> ListServingConfigsAsync(global::Google.Cloud.Retail.V2.ListServingConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServingConfigs, null, options, request);
      }
      /// <summary>
      /// Enables a Control on the specified ServingConfig.
      /// The control is added in the last position of the list of controls
      /// it belongs to (e.g. if it's a facet spec control it will be applied
      /// in the last position of servingConfig.facetSpecIds)
      /// Returns a ALREADY_EXISTS error if the control has already been applied.
      /// Returns a FAILED_PRECONDITION error if the addition could exceed maximum
      /// number of control allowed for that type of control.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig AddControl(global::Google.Cloud.Retail.V2.AddControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddControl(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables a Control on the specified ServingConfig.
      /// The control is added in the last position of the list of controls
      /// it belongs to (e.g. if it's a facet spec control it will be applied
      /// in the last position of servingConfig.facetSpecIds)
      /// Returns a ALREADY_EXISTS error if the control has already been applied.
      /// Returns a FAILED_PRECONDITION error if the addition could exceed maximum
      /// number of control allowed for that type of control.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig AddControl(global::Google.Cloud.Retail.V2.AddControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddControl, null, options, request);
      }
      /// <summary>
      /// Enables a Control on the specified ServingConfig.
      /// The control is added in the last position of the list of controls
      /// it belongs to (e.g. if it's a facet spec control it will be applied
      /// in the last position of servingConfig.facetSpecIds)
      /// Returns a ALREADY_EXISTS error if the control has already been applied.
      /// Returns a FAILED_PRECONDITION error if the addition could exceed maximum
      /// number of control allowed for that type of control.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> AddControlAsync(global::Google.Cloud.Retail.V2.AddControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddControlAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables a Control on the specified ServingConfig.
      /// The control is added in the last position of the list of controls
      /// it belongs to (e.g. if it's a facet spec control it will be applied
      /// in the last position of servingConfig.facetSpecIds)
      /// Returns a ALREADY_EXISTS error if the control has already been applied.
      /// Returns a FAILED_PRECONDITION error if the addition could exceed maximum
      /// number of control allowed for that type of control.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> AddControlAsync(global::Google.Cloud.Retail.V2.AddControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddControl, null, options, request);
      }
      /// <summary>
      /// Disables a Control on the specified ServingConfig.
      /// The control is removed from the ServingConfig.
      /// Returns a NOT_FOUND error if the Control is not enabled for the
      /// ServingConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig RemoveControl(global::Google.Cloud.Retail.V2.RemoveControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveControl(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Disables a Control on the specified ServingConfig.
      /// The control is removed from the ServingConfig.
      /// Returns a NOT_FOUND error if the Control is not enabled for the
      /// ServingConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ServingConfig RemoveControl(global::Google.Cloud.Retail.V2.RemoveControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveControl, null, options, request);
      }
      /// <summary>
      /// Disables a Control on the specified ServingConfig.
      /// The control is removed from the ServingConfig.
      /// Returns a NOT_FOUND error if the Control is not enabled for the
      /// ServingConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> RemoveControlAsync(global::Google.Cloud.Retail.V2.RemoveControlRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveControlAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Disables a Control on the specified ServingConfig.
      /// The control is removed from the ServingConfig.
      /// Returns a NOT_FOUND error if the Control is not enabled for the
      /// ServingConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ServingConfig> RemoveControlAsync(global::Google.Cloud.Retail.V2.RemoveControlRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveControl, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ServingConfigServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ServingConfigServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ServingConfigServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateServingConfig, serviceImpl.CreateServingConfig)
          .AddMethod(__Method_DeleteServingConfig, serviceImpl.DeleteServingConfig)
          .AddMethod(__Method_UpdateServingConfig, serviceImpl.UpdateServingConfig)
          .AddMethod(__Method_GetServingConfig, serviceImpl.GetServingConfig)
          .AddMethod(__Method_ListServingConfigs, serviceImpl.ListServingConfigs)
          .AddMethod(__Method_AddControl, serviceImpl.AddControl)
          .AddMethod(__Method_RemoveControl, serviceImpl.RemoveControl).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ServingConfigServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateServingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.CreateServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig>(serviceImpl.CreateServingConfig));
      serviceBinder.AddMethod(__Method_DeleteServingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.DeleteServingConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteServingConfig));
      serviceBinder.AddMethod(__Method_UpdateServingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.UpdateServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig>(serviceImpl.UpdateServingConfig));
      serviceBinder.AddMethod(__Method_GetServingConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.GetServingConfigRequest, global::Google.Cloud.Retail.V2.ServingConfig>(serviceImpl.GetServingConfig));
      serviceBinder.AddMethod(__Method_ListServingConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.ListServingConfigsRequest, global::Google.Cloud.Retail.V2.ListServingConfigsResponse>(serviceImpl.ListServingConfigs));
      serviceBinder.AddMethod(__Method_AddControl, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.AddControlRequest, global::Google.Cloud.Retail.V2.ServingConfig>(serviceImpl.AddControl));
      serviceBinder.AddMethod(__Method_RemoveControl, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.RemoveControlRequest, global::Google.Cloud.Retail.V2.ServingConfig>(serviceImpl.RemoveControl));
    }

  }
}
#endregion
