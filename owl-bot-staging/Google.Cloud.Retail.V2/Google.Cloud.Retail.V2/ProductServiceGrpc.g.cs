// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/retail/v2/product_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Retail.V2 {
  /// <summary>
  /// Service for ingesting [Product][google.cloud.retail.v2.Product] information
  /// of the customer's website.
  /// </summary>
  public static partial class ProductService
  {
    static readonly string __ServiceName = "google.cloud.retail.v2.ProductService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.CreateProductRequest> __Marshaller_google_cloud_retail_v2_CreateProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.CreateProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.Product> __Marshaller_google_cloud_retail_v2_Product = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.Product.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.GetProductRequest> __Marshaller_google_cloud_retail_v2_GetProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.GetProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ListProductsRequest> __Marshaller_google_cloud_retail_v2_ListProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ListProductsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ListProductsResponse> __Marshaller_google_cloud_retail_v2_ListProductsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ListProductsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.UpdateProductRequest> __Marshaller_google_cloud_retail_v2_UpdateProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.UpdateProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.DeleteProductRequest> __Marshaller_google_cloud_retail_v2_DeleteProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.DeleteProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.PurgeProductsRequest> __Marshaller_google_cloud_retail_v2_PurgeProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.PurgeProductsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.ImportProductsRequest> __Marshaller_google_cloud_retail_v2_ImportProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.ImportProductsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.SetInventoryRequest> __Marshaller_google_cloud_retail_v2_SetInventoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.SetInventoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest> __Marshaller_google_cloud_retail_v2_AddFulfillmentPlacesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest> __Marshaller_google_cloud_retail_v2_RemoveFulfillmentPlacesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest> __Marshaller_google_cloud_retail_v2_AddLocalInventoriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest> __Marshaller_google_cloud_retail_v2_RemoveLocalInventoriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.CreateProductRequest, global::Google.Cloud.Retail.V2.Product> __Method_CreateProduct = new grpc::Method<global::Google.Cloud.Retail.V2.CreateProductRequest, global::Google.Cloud.Retail.V2.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProduct",
        __Marshaller_google_cloud_retail_v2_CreateProductRequest,
        __Marshaller_google_cloud_retail_v2_Product);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.GetProductRequest, global::Google.Cloud.Retail.V2.Product> __Method_GetProduct = new grpc::Method<global::Google.Cloud.Retail.V2.GetProductRequest, global::Google.Cloud.Retail.V2.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_google_cloud_retail_v2_GetProductRequest,
        __Marshaller_google_cloud_retail_v2_Product);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.ListProductsRequest, global::Google.Cloud.Retail.V2.ListProductsResponse> __Method_ListProducts = new grpc::Method<global::Google.Cloud.Retail.V2.ListProductsRequest, global::Google.Cloud.Retail.V2.ListProductsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProducts",
        __Marshaller_google_cloud_retail_v2_ListProductsRequest,
        __Marshaller_google_cloud_retail_v2_ListProductsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.UpdateProductRequest, global::Google.Cloud.Retail.V2.Product> __Method_UpdateProduct = new grpc::Method<global::Google.Cloud.Retail.V2.UpdateProductRequest, global::Google.Cloud.Retail.V2.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProduct",
        __Marshaller_google_cloud_retail_v2_UpdateProductRequest,
        __Marshaller_google_cloud_retail_v2_Product);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteProduct = new grpc::Method<global::Google.Cloud.Retail.V2.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProduct",
        __Marshaller_google_cloud_retail_v2_DeleteProductRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.PurgeProductsRequest, global::Google.LongRunning.Operation> __Method_PurgeProducts = new grpc::Method<global::Google.Cloud.Retail.V2.PurgeProductsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PurgeProducts",
        __Marshaller_google_cloud_retail_v2_PurgeProductsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.ImportProductsRequest, global::Google.LongRunning.Operation> __Method_ImportProducts = new grpc::Method<global::Google.Cloud.Retail.V2.ImportProductsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportProducts",
        __Marshaller_google_cloud_retail_v2_ImportProductsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.SetInventoryRequest, global::Google.LongRunning.Operation> __Method_SetInventory = new grpc::Method<global::Google.Cloud.Retail.V2.SetInventoryRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetInventory",
        __Marshaller_google_cloud_retail_v2_SetInventoryRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest, global::Google.LongRunning.Operation> __Method_AddFulfillmentPlaces = new grpc::Method<global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddFulfillmentPlaces",
        __Marshaller_google_cloud_retail_v2_AddFulfillmentPlacesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest, global::Google.LongRunning.Operation> __Method_RemoveFulfillmentPlaces = new grpc::Method<global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveFulfillmentPlaces",
        __Marshaller_google_cloud_retail_v2_RemoveFulfillmentPlacesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest, global::Google.LongRunning.Operation> __Method_AddLocalInventories = new grpc::Method<global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddLocalInventories",
        __Marshaller_google_cloud_retail_v2_AddLocalInventoriesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest, global::Google.LongRunning.Operation> __Method_RemoveLocalInventories = new grpc::Method<global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveLocalInventories",
        __Marshaller_google_cloud_retail_v2_RemoveLocalInventoriesRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Retail.V2.ProductServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ProductService</summary>
    [grpc::BindServiceMethod(typeof(ProductService), "BindService")]
    public abstract partial class ProductServiceBase
    {
      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.Product> CreateProduct(global::Google.Cloud.Retail.V2.CreateProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.Product> GetProduct(global::Google.Cloud.Retail.V2.GetProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2.Product]s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.ListProductsResponse> ListProducts(global::Google.Cloud.Retail.V2.ListProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Retail.V2.Product> UpdateProduct(global::Google.Cloud.Retail.V2.UpdateProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProduct(global::Google.Cloud.Retail.V2.DeleteProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Permanently deletes all selected [Product][google.cloud.retail.v2.Product]s
      /// under a branch.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed offline. Depending on the number of
      /// [Product][google.cloud.retail.v2.Product]s, this operation could take hours
      /// to complete. Before the operation completes, some
      /// [Product][google.cloud.retail.v2.Product]s may still be returned by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Depending on the number of [Product][google.cloud.retail.v2.Product]s, this
      /// operation could take hours to complete. To get a sample of
      /// [Product][google.cloud.retail.v2.Product]s that would be deleted, set
      /// [PurgeProductsRequest.force][google.cloud.retail.v2.PurgeProductsRequest.force]
      /// to false.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> PurgeProducts(global::Google.Cloud.Retail.V2.PurgeProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2.Product]s.
      ///
      /// Request processing may be synchronous.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportProducts(global::Google.Cloud.Retail.V2.ImportProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2.Product] while respecting the last update
      /// timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update is enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct],
      /// the specified inventory field value(s) overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update times for the specified inventory fields are overwritten by the
      /// times of the
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// or
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product is used.
      ///
      /// If no inventory fields are set in
      /// [SetInventoryRequest.set_mask][google.cloud.retail.v2.SetInventoryRequest.set_mask],
      /// then any existing inventory information is preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [ProductService.SetInventory][google.cloud.retail.v2.ProductService.SetInventory],
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces],
      /// and
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces].
      ///
      /// The returned [Operation][google.longrunning.Operation]s is obsolete after
      /// one day, and the [GetOperation][google.longrunning.Operations.GetOperation]
      /// API returns `NOT_FOUND` afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates are not marked as [done][google.longrunning.Operation.done] until
      /// they are obsolete.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> SetInventory(global::Google.Cloud.Retail.V2.SetInventoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// We recommend that you use the
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// method instead of the
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces]
      /// method.
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> AddFulfillmentPlaces(global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// We recommend that you use the
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// method instead of the
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces]
      /// method.
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RemoveFulfillmentPlaces(global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places, while
      /// respecting the last update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// inventory information. If the request is valid, the update will be enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be modified using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> AddLocalInventories(global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places at a removal
      /// timestamp.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, removals are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be removed using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RemoveLocalInventories(global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ProductService</summary>
    public partial class ProductServiceClient : grpc::ClientBase<ProductServiceClient>
    {
      /// <summary>Creates a new client for ProductService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ProductServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ProductService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ProductServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ProductServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ProductServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.Product CreateProduct(global::Google.Cloud.Retail.V2.CreateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.Product CreateProduct(global::Google.Cloud.Retail.V2.CreateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProduct, null, options, request);
      }
      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.Product> CreateProductAsync(global::Google.Cloud.Retail.V2.CreateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.Product> CreateProductAsync(global::Google.Cloud.Retail.V2.CreateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProduct, null, options, request);
      }
      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.Product GetProduct(global::Google.Cloud.Retail.V2.GetProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.Product GetProduct(global::Google.Cloud.Retail.V2.GetProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProduct, null, options, request);
      }
      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.Product> GetProductAsync(global::Google.Cloud.Retail.V2.GetProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.Product> GetProductAsync(global::Google.Cloud.Retail.V2.GetProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProduct, null, options, request);
      }
      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2.Product]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ListProductsResponse ListProducts(global::Google.Cloud.Retail.V2.ListProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2.Product]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.ListProductsResponse ListProducts(global::Google.Cloud.Retail.V2.ListProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProducts, null, options, request);
      }
      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2.Product]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ListProductsResponse> ListProductsAsync(global::Google.Cloud.Retail.V2.ListProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a list of [Product][google.cloud.retail.v2.Product]s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.ListProductsResponse> ListProductsAsync(global::Google.Cloud.Retail.V2.ListProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProducts, null, options, request);
      }
      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.Product UpdateProduct(global::Google.Cloud.Retail.V2.UpdateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Retail.V2.Product UpdateProduct(global::Google.Cloud.Retail.V2.UpdateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.Product> UpdateProductAsync(global::Google.Cloud.Retail.V2.UpdateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Retail.V2.Product> UpdateProductAsync(global::Google.Cloud.Retail.V2.UpdateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteProduct(global::Google.Cloud.Retail.V2.DeleteProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteProduct(global::Google.Cloud.Retail.V2.DeleteProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductAsync(global::Google.Cloud.Retail.V2.DeleteProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [Product][google.cloud.retail.v2.Product].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductAsync(global::Google.Cloud.Retail.V2.DeleteProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      /// <summary>
      /// Permanently deletes all selected [Product][google.cloud.retail.v2.Product]s
      /// under a branch.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed offline. Depending on the number of
      /// [Product][google.cloud.retail.v2.Product]s, this operation could take hours
      /// to complete. Before the operation completes, some
      /// [Product][google.cloud.retail.v2.Product]s may still be returned by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Depending on the number of [Product][google.cloud.retail.v2.Product]s, this
      /// operation could take hours to complete. To get a sample of
      /// [Product][google.cloud.retail.v2.Product]s that would be deleted, set
      /// [PurgeProductsRequest.force][google.cloud.retail.v2.PurgeProductsRequest.force]
      /// to false.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation PurgeProducts(global::Google.Cloud.Retail.V2.PurgeProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PurgeProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes all selected [Product][google.cloud.retail.v2.Product]s
      /// under a branch.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed offline. Depending on the number of
      /// [Product][google.cloud.retail.v2.Product]s, this operation could take hours
      /// to complete. Before the operation completes, some
      /// [Product][google.cloud.retail.v2.Product]s may still be returned by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Depending on the number of [Product][google.cloud.retail.v2.Product]s, this
      /// operation could take hours to complete. To get a sample of
      /// [Product][google.cloud.retail.v2.Product]s that would be deleted, set
      /// [PurgeProductsRequest.force][google.cloud.retail.v2.PurgeProductsRequest.force]
      /// to false.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation PurgeProducts(global::Google.Cloud.Retail.V2.PurgeProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PurgeProducts, null, options, request);
      }
      /// <summary>
      /// Permanently deletes all selected [Product][google.cloud.retail.v2.Product]s
      /// under a branch.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed offline. Depending on the number of
      /// [Product][google.cloud.retail.v2.Product]s, this operation could take hours
      /// to complete. Before the operation completes, some
      /// [Product][google.cloud.retail.v2.Product]s may still be returned by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Depending on the number of [Product][google.cloud.retail.v2.Product]s, this
      /// operation could take hours to complete. To get a sample of
      /// [Product][google.cloud.retail.v2.Product]s that would be deleted, set
      /// [PurgeProductsRequest.force][google.cloud.retail.v2.PurgeProductsRequest.force]
      /// to false.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> PurgeProductsAsync(global::Google.Cloud.Retail.V2.PurgeProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PurgeProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes all selected [Product][google.cloud.retail.v2.Product]s
      /// under a branch.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed offline. Depending on the number of
      /// [Product][google.cloud.retail.v2.Product]s, this operation could take hours
      /// to complete. Before the operation completes, some
      /// [Product][google.cloud.retail.v2.Product]s may still be returned by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Depending on the number of [Product][google.cloud.retail.v2.Product]s, this
      /// operation could take hours to complete. To get a sample of
      /// [Product][google.cloud.retail.v2.Product]s that would be deleted, set
      /// [PurgeProductsRequest.force][google.cloud.retail.v2.PurgeProductsRequest.force]
      /// to false.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> PurgeProductsAsync(global::Google.Cloud.Retail.V2.PurgeProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PurgeProducts, null, options, request);
      }
      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2.Product]s.
      ///
      /// Request processing may be synchronous.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportProducts(global::Google.Cloud.Retail.V2.ImportProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2.Product]s.
      ///
      /// Request processing may be synchronous.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportProducts(global::Google.Cloud.Retail.V2.ImportProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportProducts, null, options, request);
      }
      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2.Product]s.
      ///
      /// Request processing may be synchronous.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportProductsAsync(global::Google.Cloud.Retail.V2.ImportProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk import of multiple [Product][google.cloud.retail.v2.Product]s.
      ///
      /// Request processing may be synchronous.
      /// Non-existing items are created.
      ///
      /// Note that it is possible for a subset of the
      /// [Product][google.cloud.retail.v2.Product]s to be successfully updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportProductsAsync(global::Google.Cloud.Retail.V2.ImportProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportProducts, null, options, request);
      }
      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2.Product] while respecting the last update
      /// timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update is enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct],
      /// the specified inventory field value(s) overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update times for the specified inventory fields are overwritten by the
      /// times of the
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// or
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product is used.
      ///
      /// If no inventory fields are set in
      /// [SetInventoryRequest.set_mask][google.cloud.retail.v2.SetInventoryRequest.set_mask],
      /// then any existing inventory information is preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [ProductService.SetInventory][google.cloud.retail.v2.ProductService.SetInventory],
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces],
      /// and
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces].
      ///
      /// The returned [Operation][google.longrunning.Operation]s is obsolete after
      /// one day, and the [GetOperation][google.longrunning.Operations.GetOperation]
      /// API returns `NOT_FOUND` afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates are not marked as [done][google.longrunning.Operation.done] until
      /// they are obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SetInventory(global::Google.Cloud.Retail.V2.SetInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2.Product] while respecting the last update
      /// timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update is enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct],
      /// the specified inventory field value(s) overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update times for the specified inventory fields are overwritten by the
      /// times of the
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// or
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product is used.
      ///
      /// If no inventory fields are set in
      /// [SetInventoryRequest.set_mask][google.cloud.retail.v2.SetInventoryRequest.set_mask],
      /// then any existing inventory information is preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [ProductService.SetInventory][google.cloud.retail.v2.ProductService.SetInventory],
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces],
      /// and
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces].
      ///
      /// The returned [Operation][google.longrunning.Operation]s is obsolete after
      /// one day, and the [GetOperation][google.longrunning.Operations.GetOperation]
      /// API returns `NOT_FOUND` afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates are not marked as [done][google.longrunning.Operation.done] until
      /// they are obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation SetInventory(global::Google.Cloud.Retail.V2.SetInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetInventory, null, options, request);
      }
      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2.Product] while respecting the last update
      /// timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update is enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct],
      /// the specified inventory field value(s) overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update times for the specified inventory fields are overwritten by the
      /// times of the
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// or
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product is used.
      ///
      /// If no inventory fields are set in
      /// [SetInventoryRequest.set_mask][google.cloud.retail.v2.SetInventoryRequest.set_mask],
      /// then any existing inventory information is preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [ProductService.SetInventory][google.cloud.retail.v2.ProductService.SetInventory],
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces],
      /// and
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces].
      ///
      /// The returned [Operation][google.longrunning.Operation]s is obsolete after
      /// one day, and the [GetOperation][google.longrunning.Operations.GetOperation]
      /// API returns `NOT_FOUND` afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates are not marked as [done][google.longrunning.Operation.done] until
      /// they are obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SetInventoryAsync(global::Google.Cloud.Retail.V2.SetInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates inventory information for a
      /// [Product][google.cloud.retail.v2.Product] while respecting the last update
      /// timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update is enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// When inventory is updated with
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct],
      /// the specified inventory field value(s) overwrite any existing value(s)
      /// while ignoring the last update time for this field. Furthermore, the last
      /// update times for the specified inventory fields are overwritten by the
      /// times of the
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// or
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// request.
      ///
      /// If no inventory fields are set in
      /// [CreateProductRequest.product][google.cloud.retail.v2.CreateProductRequest.product],
      /// then any pre-existing inventory information for this product is used.
      ///
      /// If no inventory fields are set in
      /// [SetInventoryRequest.set_mask][google.cloud.retail.v2.SetInventoryRequest.set_mask],
      /// then any existing inventory information is preserved.
      ///
      /// Pre-existing inventory information can only be updated with
      /// [ProductService.SetInventory][google.cloud.retail.v2.ProductService.SetInventory],
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces],
      /// and
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces].
      ///
      /// The returned [Operation][google.longrunning.Operation]s is obsolete after
      /// one day, and the [GetOperation][google.longrunning.Operations.GetOperation]
      /// API returns `NOT_FOUND` afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates are not marked as [done][google.longrunning.Operation.done] until
      /// they are obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> SetInventoryAsync(global::Google.Cloud.Retail.V2.SetInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetInventory, null, options, request);
      }
      /// <summary>
      /// We recommend that you use the
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// method instead of the
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces]
      /// method.
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AddFulfillmentPlaces(global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFulfillmentPlaces(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// We recommend that you use the
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// method instead of the
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces]
      /// method.
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AddFulfillmentPlaces(global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddFulfillmentPlaces, null, options, request);
      }
      /// <summary>
      /// We recommend that you use the
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// method instead of the
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces]
      /// method.
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AddFulfillmentPlacesAsync(global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddFulfillmentPlacesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// We recommend that you use the
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// method instead of the
      /// [ProductService.AddFulfillmentPlaces][google.cloud.retail.v2.ProductService.AddFulfillmentPlaces]
      /// method.
      /// [ProductService.AddLocalInventories][google.cloud.retail.v2.ProductService.AddLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally adds place IDs to
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the added place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AddFulfillmentPlacesAsync(global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddFulfillmentPlaces, null, options, request);
      }
      /// <summary>
      /// We recommend that you use the
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// method instead of the
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces]
      /// method.
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RemoveFulfillmentPlaces(global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveFulfillmentPlaces(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// We recommend that you use the
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// method instead of the
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces]
      /// method.
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RemoveFulfillmentPlaces(global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveFulfillmentPlaces, null, options, request);
      }
      /// <summary>
      /// We recommend that you use the
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// method instead of the
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces]
      /// method.
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RemoveFulfillmentPlacesAsync(global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveFulfillmentPlacesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// We recommend that you use the
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// method instead of the
      /// [ProductService.RemoveFulfillmentPlaces][google.cloud.retail.v2.ProductService.RemoveFulfillmentPlaces]
      /// method.
      /// [ProductService.RemoveLocalInventories][google.cloud.retail.v2.ProductService.RemoveLocalInventories]
      /// achieves the same results but provides more fine-grained control over
      /// ingesting local inventory data.
      ///
      /// Incrementally removes place IDs from a
      /// [Product.fulfillment_info.place_ids][google.cloud.retail.v2.FulfillmentInfo.place_ids].
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// fulfillment information. If the request is valid, the update will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, the removed place IDs are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RemoveFulfillmentPlacesAsync(global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveFulfillmentPlaces, null, options, request);
      }
      /// <summary>
      /// Updates local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places, while
      /// respecting the last update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// inventory information. If the request is valid, the update will be enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be modified using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AddLocalInventories(global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddLocalInventories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places, while
      /// respecting the last update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// inventory information. If the request is valid, the update will be enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be modified using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AddLocalInventories(global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddLocalInventories, null, options, request);
      }
      /// <summary>
      /// Updates local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places, while
      /// respecting the last update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// inventory information. If the request is valid, the update will be enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be modified using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AddLocalInventoriesAsync(global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddLocalInventoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places, while
      /// respecting the last update timestamps of each inventory field.
      ///
      /// This process is asynchronous and does not require the
      /// [Product][google.cloud.retail.v2.Product] to exist before updating
      /// inventory information. If the request is valid, the update will be enqueued
      /// and processed downstream. As a consequence, when a response is returned,
      /// updates are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be modified using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AddLocalInventoriesAsync(global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddLocalInventories, null, options, request);
      }
      /// <summary>
      /// Remove local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places at a removal
      /// timestamp.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, removals are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be removed using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RemoveLocalInventories(global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveLocalInventories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places at a removal
      /// timestamp.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, removals are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be removed using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RemoveLocalInventories(global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveLocalInventories, null, options, request);
      }
      /// <summary>
      /// Remove local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places at a removal
      /// timestamp.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, removals are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be removed using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RemoveLocalInventoriesAsync(global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveLocalInventoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove local inventory information for a
      /// [Product][google.cloud.retail.v2.Product] at a list of places at a removal
      /// timestamp.
      ///
      /// This process is asynchronous. If the request is valid, the removal will be
      /// enqueued and processed downstream. As a consequence, when a response is
      /// returned, removals are not immediately manifested in the
      /// [Product][google.cloud.retail.v2.Product] queried by
      /// [ProductService.GetProduct][google.cloud.retail.v2.ProductService.GetProduct]
      /// or
      /// [ProductService.ListProducts][google.cloud.retail.v2.ProductService.ListProducts].
      ///
      /// Local inventory information can only be removed using this method.
      /// [ProductService.CreateProduct][google.cloud.retail.v2.ProductService.CreateProduct]
      /// and
      /// [ProductService.UpdateProduct][google.cloud.retail.v2.ProductService.UpdateProduct]
      /// has no effect on local inventories.
      ///
      /// The returned [Operation][google.longrunning.Operation]s will be obsolete
      /// after 1 day, and [GetOperation][google.longrunning.Operations.GetOperation]
      /// API will return NOT_FOUND afterwards.
      ///
      /// If conflicting updates are issued, the
      /// [Operation][google.longrunning.Operation]s associated with the stale
      /// updates will not be marked as [done][google.longrunning.Operation.done]
      /// until being obsolete.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RemoveLocalInventoriesAsync(global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveLocalInventories, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ProductServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProductServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ProductServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateProduct, serviceImpl.CreateProduct)
          .AddMethod(__Method_GetProduct, serviceImpl.GetProduct)
          .AddMethod(__Method_ListProducts, serviceImpl.ListProducts)
          .AddMethod(__Method_UpdateProduct, serviceImpl.UpdateProduct)
          .AddMethod(__Method_DeleteProduct, serviceImpl.DeleteProduct)
          .AddMethod(__Method_PurgeProducts, serviceImpl.PurgeProducts)
          .AddMethod(__Method_ImportProducts, serviceImpl.ImportProducts)
          .AddMethod(__Method_SetInventory, serviceImpl.SetInventory)
          .AddMethod(__Method_AddFulfillmentPlaces, serviceImpl.AddFulfillmentPlaces)
          .AddMethod(__Method_RemoveFulfillmentPlaces, serviceImpl.RemoveFulfillmentPlaces)
          .AddMethod(__Method_AddLocalInventories, serviceImpl.AddLocalInventories)
          .AddMethod(__Method_RemoveLocalInventories, serviceImpl.RemoveLocalInventories).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProductServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.CreateProductRequest, global::Google.Cloud.Retail.V2.Product>(serviceImpl.CreateProduct));
      serviceBinder.AddMethod(__Method_GetProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.GetProductRequest, global::Google.Cloud.Retail.V2.Product>(serviceImpl.GetProduct));
      serviceBinder.AddMethod(__Method_ListProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.ListProductsRequest, global::Google.Cloud.Retail.V2.ListProductsResponse>(serviceImpl.ListProducts));
      serviceBinder.AddMethod(__Method_UpdateProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.UpdateProductRequest, global::Google.Cloud.Retail.V2.Product>(serviceImpl.UpdateProduct));
      serviceBinder.AddMethod(__Method_DeleteProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteProduct));
      serviceBinder.AddMethod(__Method_PurgeProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.PurgeProductsRequest, global::Google.LongRunning.Operation>(serviceImpl.PurgeProducts));
      serviceBinder.AddMethod(__Method_ImportProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.ImportProductsRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportProducts));
      serviceBinder.AddMethod(__Method_SetInventory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.SetInventoryRequest, global::Google.LongRunning.Operation>(serviceImpl.SetInventory));
      serviceBinder.AddMethod(__Method_AddFulfillmentPlaces, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.AddFulfillmentPlacesRequest, global::Google.LongRunning.Operation>(serviceImpl.AddFulfillmentPlaces));
      serviceBinder.AddMethod(__Method_RemoveFulfillmentPlaces, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.RemoveFulfillmentPlacesRequest, global::Google.LongRunning.Operation>(serviceImpl.RemoveFulfillmentPlaces));
      serviceBinder.AddMethod(__Method_AddLocalInventories, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.AddLocalInventoriesRequest, global::Google.LongRunning.Operation>(serviceImpl.AddLocalInventories));
      serviceBinder.AddMethod(__Method_RemoveLocalInventories, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Retail.V2.RemoveLocalInventoriesRequest, global::Google.LongRunning.Operation>(serviceImpl.RemoveLocalInventories));
    }

  }
}
#endregion
