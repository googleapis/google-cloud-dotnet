// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/dialogflow/v2/intent.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Dialogflow.V2 {
  /// <summary>
  /// Service for managing [Intents][google.cloud.dialogflow.v2.Intent].
  /// </summary>
  public static partial class Intents
  {
    static readonly string __ServiceName = "google.cloud.dialogflow.v2.Intents";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.ListIntentsRequest> __Marshaller_google_cloud_dialogflow_v2_ListIntentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.ListIntentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.ListIntentsResponse> __Marshaller_google_cloud_dialogflow_v2_ListIntentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.ListIntentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.GetIntentRequest> __Marshaller_google_cloud_dialogflow_v2_GetIntentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.GetIntentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.Intent> __Marshaller_google_cloud_dialogflow_v2_Intent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.Intent.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.CreateIntentRequest> __Marshaller_google_cloud_dialogflow_v2_CreateIntentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.CreateIntentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest> __Marshaller_google_cloud_dialogflow_v2_UpdateIntentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest> __Marshaller_google_cloud_dialogflow_v2_DeleteIntentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest> __Marshaller_google_cloud_dialogflow_v2_BatchUpdateIntentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest> __Marshaller_google_cloud_dialogflow_v2_BatchDeleteIntentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2.ListIntentsRequest, global::Google.Cloud.Dialogflow.V2.ListIntentsResponse> __Method_ListIntents = new grpc::Method<global::Google.Cloud.Dialogflow.V2.ListIntentsRequest, global::Google.Cloud.Dialogflow.V2.ListIntentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListIntents",
        __Marshaller_google_cloud_dialogflow_v2_ListIntentsRequest,
        __Marshaller_google_cloud_dialogflow_v2_ListIntentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2.GetIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent> __Method_GetIntent = new grpc::Method<global::Google.Cloud.Dialogflow.V2.GetIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIntent",
        __Marshaller_google_cloud_dialogflow_v2_GetIntentRequest,
        __Marshaller_google_cloud_dialogflow_v2_Intent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2.CreateIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent> __Method_CreateIntent = new grpc::Method<global::Google.Cloud.Dialogflow.V2.CreateIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateIntent",
        __Marshaller_google_cloud_dialogflow_v2_CreateIntentRequest,
        __Marshaller_google_cloud_dialogflow_v2_Intent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent> __Method_UpdateIntent = new grpc::Method<global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateIntent",
        __Marshaller_google_cloud_dialogflow_v2_UpdateIntentRequest,
        __Marshaller_google_cloud_dialogflow_v2_Intent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteIntent = new grpc::Method<global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteIntent",
        __Marshaller_google_cloud_dialogflow_v2_DeleteIntentRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest, global::Google.LongRunning.Operation> __Method_BatchUpdateIntents = new grpc::Method<global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchUpdateIntents",
        __Marshaller_google_cloud_dialogflow_v2_BatchUpdateIntentsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest, global::Google.LongRunning.Operation> __Method_BatchDeleteIntents = new grpc::Method<global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchDeleteIntents",
        __Marshaller_google_cloud_dialogflow_v2_BatchDeleteIntentsRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Dialogflow.V2.IntentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Intents</summary>
    [grpc::BindServiceMethod(typeof(Intents), "BindService")]
    public abstract partial class IntentsBase
    {
      /// <summary>
      /// Returns the list of all intents in the specified agent.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.V2.ListIntentsResponse> ListIntents(global::Google.Cloud.Dialogflow.V2.ListIntentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the specified intent.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.V2.Intent> GetIntent(global::Google.Cloud.Dialogflow.V2.GetIntentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an intent in the specified agent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.V2.Intent> CreateIntent(global::Google.Cloud.Dialogflow.V2.CreateIntentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the specified intent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.V2.Intent> UpdateIntent(global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified intent and its direct or indirect followup intents.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteIntent(global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates/Creates multiple intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [BatchUpdateIntentsResponse][google.cloud.dialogflow.v2.BatchUpdateIntentsResponse]
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> BatchUpdateIntents(global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> BatchDeleteIntents(global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Intents</summary>
    public partial class IntentsClient : grpc::ClientBase<IntentsClient>
    {
      /// <summary>Creates a new client for Intents</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IntentsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Intents that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IntentsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IntentsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IntentsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the list of all intents in the specified agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2.ListIntentsResponse ListIntents(global::Google.Cloud.Dialogflow.V2.ListIntentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListIntents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of all intents in the specified agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2.ListIntentsResponse ListIntents(global::Google.Cloud.Dialogflow.V2.ListIntentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListIntents, null, options, request);
      }
      /// <summary>
      /// Returns the list of all intents in the specified agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2.ListIntentsResponse> ListIntentsAsync(global::Google.Cloud.Dialogflow.V2.ListIntentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListIntentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of all intents in the specified agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2.ListIntentsResponse> ListIntentsAsync(global::Google.Cloud.Dialogflow.V2.ListIntentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListIntents, null, options, request);
      }
      /// <summary>
      /// Retrieves the specified intent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2.Intent GetIntent(global::Google.Cloud.Dialogflow.V2.GetIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIntent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the specified intent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2.Intent GetIntent(global::Google.Cloud.Dialogflow.V2.GetIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIntent, null, options, request);
      }
      /// <summary>
      /// Retrieves the specified intent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2.Intent> GetIntentAsync(global::Google.Cloud.Dialogflow.V2.GetIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIntentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the specified intent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2.Intent> GetIntentAsync(global::Google.Cloud.Dialogflow.V2.GetIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIntent, null, options, request);
      }
      /// <summary>
      /// Creates an intent in the specified agent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2.Intent CreateIntent(global::Google.Cloud.Dialogflow.V2.CreateIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateIntent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an intent in the specified agent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2.Intent CreateIntent(global::Google.Cloud.Dialogflow.V2.CreateIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateIntent, null, options, request);
      }
      /// <summary>
      /// Creates an intent in the specified agent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2.Intent> CreateIntentAsync(global::Google.Cloud.Dialogflow.V2.CreateIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateIntentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an intent in the specified agent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2.Intent> CreateIntentAsync(global::Google.Cloud.Dialogflow.V2.CreateIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateIntent, null, options, request);
      }
      /// <summary>
      /// Updates the specified intent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2.Intent UpdateIntent(global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateIntent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified intent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2.Intent UpdateIntent(global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateIntent, null, options, request);
      }
      /// <summary>
      /// Updates the specified intent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2.Intent> UpdateIntentAsync(global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateIntentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified intent.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2.Intent> UpdateIntentAsync(global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateIntent, null, options, request);
      }
      /// <summary>
      /// Deletes the specified intent and its direct or indirect followup intents.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteIntent(global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteIntent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified intent and its direct or indirect followup intents.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteIntent(global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteIntent, null, options, request);
      }
      /// <summary>
      /// Deletes the specified intent and its direct or indirect followup intents.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteIntentAsync(global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteIntentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified intent and its direct or indirect followup intents.
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteIntentAsync(global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteIntent, null, options, request);
      }
      /// <summary>
      /// Updates/Creates multiple intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [BatchUpdateIntentsResponse][google.cloud.dialogflow.v2.BatchUpdateIntentsResponse]
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchUpdateIntents(global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateIntents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates/Creates multiple intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [BatchUpdateIntentsResponse][google.cloud.dialogflow.v2.BatchUpdateIntentsResponse]
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchUpdateIntents(global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchUpdateIntents, null, options, request);
      }
      /// <summary>
      /// Updates/Creates multiple intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [BatchUpdateIntentsResponse][google.cloud.dialogflow.v2.BatchUpdateIntentsResponse]
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchUpdateIntentsAsync(global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchUpdateIntentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates/Creates multiple intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [BatchUpdateIntentsResponse][google.cloud.dialogflow.v2.BatchUpdateIntentsResponse]
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchUpdateIntentsAsync(global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchUpdateIntents, null, options, request);
      }
      /// <summary>
      /// Deletes intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchDeleteIntents(global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeleteIntents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BatchDeleteIntents(global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchDeleteIntents, null, options, request);
      }
      /// <summary>
      /// Deletes intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchDeleteIntentsAsync(global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchDeleteIntentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes intents in the specified agent.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train an agent prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BatchDeleteIntentsAsync(global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchDeleteIntents, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override IntentsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IntentsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(IntentsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListIntents, serviceImpl.ListIntents)
          .AddMethod(__Method_GetIntent, serviceImpl.GetIntent)
          .AddMethod(__Method_CreateIntent, serviceImpl.CreateIntent)
          .AddMethod(__Method_UpdateIntent, serviceImpl.UpdateIntent)
          .AddMethod(__Method_DeleteIntent, serviceImpl.DeleteIntent)
          .AddMethod(__Method_BatchUpdateIntents, serviceImpl.BatchUpdateIntents)
          .AddMethod(__Method_BatchDeleteIntents, serviceImpl.BatchDeleteIntents).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IntentsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListIntents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2.ListIntentsRequest, global::Google.Cloud.Dialogflow.V2.ListIntentsResponse>(serviceImpl.ListIntents));
      serviceBinder.AddMethod(__Method_GetIntent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2.GetIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent>(serviceImpl.GetIntent));
      serviceBinder.AddMethod(__Method_CreateIntent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2.CreateIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent>(serviceImpl.CreateIntent));
      serviceBinder.AddMethod(__Method_UpdateIntent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2.UpdateIntentRequest, global::Google.Cloud.Dialogflow.V2.Intent>(serviceImpl.UpdateIntent));
      serviceBinder.AddMethod(__Method_DeleteIntent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2.DeleteIntentRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteIntent));
      serviceBinder.AddMethod(__Method_BatchUpdateIntents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2.BatchUpdateIntentsRequest, global::Google.LongRunning.Operation>(serviceImpl.BatchUpdateIntents));
      serviceBinder.AddMethod(__Method_BatchDeleteIntents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2.BatchDeleteIntentsRequest, global::Google.LongRunning.Operation>(serviceImpl.BatchDeleteIntents));
    }

  }
}
#endregion
