// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/edgenetwork/v1/service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.EdgeNetwork.V1 {
  /// <summary>
  /// EdgeNetwork API provides managed, highly available cloud dynamic network
  /// configuration service to the GEC customer to enable edge application and
  /// network function solutions. This allows the customers to easily define and
  /// configure the network setup and property to meet the workload requirement.
  /// </summary>
  public static partial class EdgeNetwork
  {
    static readonly string __ServiceName = "google.cloud.edgenetwork.v1.EdgeNetwork";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest> __Marshaller_google_cloud_edgenetwork_v1_InitializeZoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse> __Marshaller_google_cloud_edgenetwork_v1_InitializeZoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest> __Marshaller_google_cloud_edgenetwork_v1_ListZonesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse> __Marshaller_google_cloud_edgenetwork_v1_ListZonesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest> __Marshaller_google_cloud_edgenetwork_v1_GetZoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.Zone> __Marshaller_google_cloud_edgenetwork_v1_Zone = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.Zone.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest> __Marshaller_google_cloud_edgenetwork_v1_ListNetworksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse> __Marshaller_google_cloud_edgenetwork_v1_ListNetworksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest> __Marshaller_google_cloud_edgenetwork_v1_GetNetworkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.Network> __Marshaller_google_cloud_edgenetwork_v1_Network = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.Network.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest> __Marshaller_google_cloud_edgenetwork_v1_DiagnoseNetworkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse> __Marshaller_google_cloud_edgenetwork_v1_DiagnoseNetworkResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest> __Marshaller_google_cloud_edgenetwork_v1_CreateNetworkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest> __Marshaller_google_cloud_edgenetwork_v1_DeleteNetworkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest> __Marshaller_google_cloud_edgenetwork_v1_ListSubnetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse> __Marshaller_google_cloud_edgenetwork_v1_ListSubnetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest> __Marshaller_google_cloud_edgenetwork_v1_GetSubnetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.Subnet> __Marshaller_google_cloud_edgenetwork_v1_Subnet = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.Subnet.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest> __Marshaller_google_cloud_edgenetwork_v1_CreateSubnetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest> __Marshaller_google_cloud_edgenetwork_v1_UpdateSubnetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest> __Marshaller_google_cloud_edgenetwork_v1_DeleteSubnetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest> __Marshaller_google_cloud_edgenetwork_v1_ListInterconnectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse> __Marshaller_google_cloud_edgenetwork_v1_ListInterconnectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest> __Marshaller_google_cloud_edgenetwork_v1_GetInterconnectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.Interconnect> __Marshaller_google_cloud_edgenetwork_v1_Interconnect = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.Interconnect.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest> __Marshaller_google_cloud_edgenetwork_v1_DiagnoseInterconnectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse> __Marshaller_google_cloud_edgenetwork_v1_DiagnoseInterconnectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest> __Marshaller_google_cloud_edgenetwork_v1_ListInterconnectAttachmentsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse> __Marshaller_google_cloud_edgenetwork_v1_ListInterconnectAttachmentsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest> __Marshaller_google_cloud_edgenetwork_v1_GetInterconnectAttachmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment> __Marshaller_google_cloud_edgenetwork_v1_InterconnectAttachment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest> __Marshaller_google_cloud_edgenetwork_v1_CreateInterconnectAttachmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest> __Marshaller_google_cloud_edgenetwork_v1_DeleteInterconnectAttachmentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest> __Marshaller_google_cloud_edgenetwork_v1_ListRoutersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse> __Marshaller_google_cloud_edgenetwork_v1_ListRoutersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest> __Marshaller_google_cloud_edgenetwork_v1_GetRouterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.Router> __Marshaller_google_cloud_edgenetwork_v1_Router = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.Router.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest> __Marshaller_google_cloud_edgenetwork_v1_DiagnoseRouterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse> __Marshaller_google_cloud_edgenetwork_v1_DiagnoseRouterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest> __Marshaller_google_cloud_edgenetwork_v1_CreateRouterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest> __Marshaller_google_cloud_edgenetwork_v1_UpdateRouterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest> __Marshaller_google_cloud_edgenetwork_v1_DeleteRouterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest, global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse> __Method_InitializeZone = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest, global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InitializeZone",
        __Marshaller_google_cloud_edgenetwork_v1_InitializeZoneRequest,
        __Marshaller_google_cloud_edgenetwork_v1_InitializeZoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest, global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse> __Method_ListZones = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest, global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListZones",
        __Marshaller_google_cloud_edgenetwork_v1_ListZonesRequest,
        __Marshaller_google_cloud_edgenetwork_v1_ListZonesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest, global::Google.Cloud.EdgeNetwork.V1.Zone> __Method_GetZone = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest, global::Google.Cloud.EdgeNetwork.V1.Zone>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetZone",
        __Marshaller_google_cloud_edgenetwork_v1_GetZoneRequest,
        __Marshaller_google_cloud_edgenetwork_v1_Zone);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest, global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse> __Method_ListNetworks = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest, global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNetworks",
        __Marshaller_google_cloud_edgenetwork_v1_ListNetworksRequest,
        __Marshaller_google_cloud_edgenetwork_v1_ListNetworksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest, global::Google.Cloud.EdgeNetwork.V1.Network> __Method_GetNetwork = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest, global::Google.Cloud.EdgeNetwork.V1.Network>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNetwork",
        __Marshaller_google_cloud_edgenetwork_v1_GetNetworkRequest,
        __Marshaller_google_cloud_edgenetwork_v1_Network);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse> __Method_DiagnoseNetwork = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DiagnoseNetwork",
        __Marshaller_google_cloud_edgenetwork_v1_DiagnoseNetworkRequest,
        __Marshaller_google_cloud_edgenetwork_v1_DiagnoseNetworkResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest, global::Google.LongRunning.Operation> __Method_CreateNetwork = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNetwork",
        __Marshaller_google_cloud_edgenetwork_v1_CreateNetworkRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest, global::Google.LongRunning.Operation> __Method_DeleteNetwork = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNetwork",
        __Marshaller_google_cloud_edgenetwork_v1_DeleteNetworkRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest, global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse> __Method_ListSubnets = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest, global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSubnets",
        __Marshaller_google_cloud_edgenetwork_v1_ListSubnetsRequest,
        __Marshaller_google_cloud_edgenetwork_v1_ListSubnetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest, global::Google.Cloud.EdgeNetwork.V1.Subnet> __Method_GetSubnet = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest, global::Google.Cloud.EdgeNetwork.V1.Subnet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSubnet",
        __Marshaller_google_cloud_edgenetwork_v1_GetSubnetRequest,
        __Marshaller_google_cloud_edgenetwork_v1_Subnet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest, global::Google.LongRunning.Operation> __Method_CreateSubnet = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSubnet",
        __Marshaller_google_cloud_edgenetwork_v1_CreateSubnetRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest, global::Google.LongRunning.Operation> __Method_UpdateSubnet = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSubnet",
        __Marshaller_google_cloud_edgenetwork_v1_UpdateSubnetRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest, global::Google.LongRunning.Operation> __Method_DeleteSubnet = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSubnet",
        __Marshaller_google_cloud_edgenetwork_v1_DeleteSubnetRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse> __Method_ListInterconnects = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInterconnects",
        __Marshaller_google_cloud_edgenetwork_v1_ListInterconnectsRequest,
        __Marshaller_google_cloud_edgenetwork_v1_ListInterconnectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest, global::Google.Cloud.EdgeNetwork.V1.Interconnect> __Method_GetInterconnect = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest, global::Google.Cloud.EdgeNetwork.V1.Interconnect>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInterconnect",
        __Marshaller_google_cloud_edgenetwork_v1_GetInterconnectRequest,
        __Marshaller_google_cloud_edgenetwork_v1_Interconnect);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse> __Method_DiagnoseInterconnect = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DiagnoseInterconnect",
        __Marshaller_google_cloud_edgenetwork_v1_DiagnoseInterconnectRequest,
        __Marshaller_google_cloud_edgenetwork_v1_DiagnoseInterconnectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse> __Method_ListInterconnectAttachments = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInterconnectAttachments",
        __Marshaller_google_cloud_edgenetwork_v1_ListInterconnectAttachmentsRequest,
        __Marshaller_google_cloud_edgenetwork_v1_ListInterconnectAttachmentsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest, global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment> __Method_GetInterconnectAttachment = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest, global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInterconnectAttachment",
        __Marshaller_google_cloud_edgenetwork_v1_GetInterconnectAttachmentRequest,
        __Marshaller_google_cloud_edgenetwork_v1_InterconnectAttachment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest, global::Google.LongRunning.Operation> __Method_CreateInterconnectAttachment = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateInterconnectAttachment",
        __Marshaller_google_cloud_edgenetwork_v1_CreateInterconnectAttachmentRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest, global::Google.LongRunning.Operation> __Method_DeleteInterconnectAttachment = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInterconnectAttachment",
        __Marshaller_google_cloud_edgenetwork_v1_DeleteInterconnectAttachmentRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest, global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse> __Method_ListRouters = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest, global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRouters",
        __Marshaller_google_cloud_edgenetwork_v1_ListRoutersRequest,
        __Marshaller_google_cloud_edgenetwork_v1_ListRoutersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest, global::Google.Cloud.EdgeNetwork.V1.Router> __Method_GetRouter = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest, global::Google.Cloud.EdgeNetwork.V1.Router>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRouter",
        __Marshaller_google_cloud_edgenetwork_v1_GetRouterRequest,
        __Marshaller_google_cloud_edgenetwork_v1_Router);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse> __Method_DiagnoseRouter = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DiagnoseRouter",
        __Marshaller_google_cloud_edgenetwork_v1_DiagnoseRouterRequest,
        __Marshaller_google_cloud_edgenetwork_v1_DiagnoseRouterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest, global::Google.LongRunning.Operation> __Method_CreateRouter = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateRouter",
        __Marshaller_google_cloud_edgenetwork_v1_CreateRouterRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest, global::Google.LongRunning.Operation> __Method_UpdateRouter = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRouter",
        __Marshaller_google_cloud_edgenetwork_v1_UpdateRouterRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest, global::Google.LongRunning.Operation> __Method_DeleteRouter = new grpc::Method<global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRouter",
        __Marshaller_google_cloud_edgenetwork_v1_DeleteRouterRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.EdgeNetwork.V1.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EdgeNetwork</summary>
    [grpc::BindServiceMethod(typeof(EdgeNetwork), "BindService")]
    public abstract partial class EdgeNetworkBase
    {
      /// <summary>
      /// InitializeZone will initialize resources for a zone in a project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse> InitializeZone(global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: not implemented.
      /// Lists Zones in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse> ListZones(global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: not implemented.
      /// Gets details of a single Zone.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.Zone> GetZone(global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Networks in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse> ListNetworks(global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Network.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.Network> GetNetwork(global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the diagnostics of a single network resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse> DiagnoseNetwork(global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Network in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateNetwork(global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Network.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteNetwork(global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Subnets in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse> ListSubnets(global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Subnet.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.Subnet> GetSubnet(global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Subnet in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateSubnet(global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single Subnet.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateSubnet(global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Subnet.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteSubnet(global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Interconnects in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse> ListInterconnects(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Interconnect.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.Interconnect> GetInterconnect(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the diagnostics of a single interconnect resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse> DiagnoseInterconnect(global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists InterconnectAttachments in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse> ListInterconnectAttachments(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment> GetInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new InterconnectAttachment in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Routers in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse> ListRouters(global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single Router.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.Router> GetRouter(global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the diagnostics of a single router resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse> DiagnoseRouter(global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new Router in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateRouter(global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single Router.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateRouter(global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single Router.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteRouter(global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EdgeNetwork</summary>
    public partial class EdgeNetworkClient : grpc::ClientBase<EdgeNetworkClient>
    {
      /// <summary>Creates a new client for EdgeNetwork</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EdgeNetworkClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EdgeNetwork that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EdgeNetworkClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EdgeNetworkClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EdgeNetworkClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// InitializeZone will initialize resources for a zone in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse InitializeZone(global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeZone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// InitializeZone will initialize resources for a zone in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse InitializeZone(global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InitializeZone, null, options, request);
      }
      /// <summary>
      /// InitializeZone will initialize resources for a zone in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse> InitializeZoneAsync(global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeZoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// InitializeZone will initialize resources for a zone in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse> InitializeZoneAsync(global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InitializeZone, null, options, request);
      }
      /// <summary>
      /// Deprecated: not implemented.
      /// Lists Zones in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse ListZones(global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListZones(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: not implemented.
      /// Lists Zones in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse ListZones(global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListZones, null, options, request);
      }
      /// <summary>
      /// Deprecated: not implemented.
      /// Lists Zones in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse> ListZonesAsync(global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListZonesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: not implemented.
      /// Lists Zones in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse> ListZonesAsync(global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListZones, null, options, request);
      }
      /// <summary>
      /// Deprecated: not implemented.
      /// Gets details of a single Zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Zone GetZone(global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetZone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: not implemented.
      /// Gets details of a single Zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Zone GetZone(global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetZone, null, options, request);
      }
      /// <summary>
      /// Deprecated: not implemented.
      /// Gets details of a single Zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Zone> GetZoneAsync(global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetZoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: not implemented.
      /// Gets details of a single Zone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Zone> GetZoneAsync(global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetZone, null, options, request);
      }
      /// <summary>
      /// Lists Networks in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse ListNetworks(global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNetworks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Networks in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse ListNetworks(global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNetworks, null, options, request);
      }
      /// <summary>
      /// Lists Networks in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse> ListNetworksAsync(global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNetworksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Networks in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse> ListNetworksAsync(global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNetworks, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Network GetNetwork(global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNetwork(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Network GetNetwork(global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNetwork, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Network> GetNetworkAsync(global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNetworkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Network> GetNetworkAsync(global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNetwork, null, options, request);
      }
      /// <summary>
      /// Get the diagnostics of a single network resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse DiagnoseNetwork(global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DiagnoseNetwork(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the diagnostics of a single network resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse DiagnoseNetwork(global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DiagnoseNetwork, null, options, request);
      }
      /// <summary>
      /// Get the diagnostics of a single network resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse> DiagnoseNetworkAsync(global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DiagnoseNetworkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the diagnostics of a single network resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse> DiagnoseNetworkAsync(global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DiagnoseNetwork, null, options, request);
      }
      /// <summary>
      /// Creates a new Network in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateNetwork(global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNetwork(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Network in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateNetwork(global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNetwork, null, options, request);
      }
      /// <summary>
      /// Creates a new Network in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateNetworkAsync(global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNetworkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Network in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateNetworkAsync(global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNetwork, null, options, request);
      }
      /// <summary>
      /// Deletes a single Network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNetwork(global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNetwork(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNetwork(global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNetwork, null, options, request);
      }
      /// <summary>
      /// Deletes a single Network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNetworkAsync(global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNetworkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNetworkAsync(global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNetwork, null, options, request);
      }
      /// <summary>
      /// Lists Subnets in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse ListSubnets(global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubnets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Subnets in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse ListSubnets(global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSubnets, null, options, request);
      }
      /// <summary>
      /// Lists Subnets in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse> ListSubnetsAsync(global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubnetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Subnets in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse> ListSubnetsAsync(global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSubnets, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Subnet GetSubnet(global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubnet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Subnet GetSubnet(global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSubnet, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Subnet> GetSubnetAsync(global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubnetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Subnet> GetSubnetAsync(global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSubnet, null, options, request);
      }
      /// <summary>
      /// Creates a new Subnet in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateSubnet(global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSubnet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Subnet in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateSubnet(global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSubnet, null, options, request);
      }
      /// <summary>
      /// Creates a new Subnet in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateSubnetAsync(global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSubnetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Subnet in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateSubnetAsync(global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSubnet, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateSubnet(global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSubnet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateSubnet(global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSubnet, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateSubnetAsync(global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSubnetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateSubnetAsync(global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSubnet, null, options, request);
      }
      /// <summary>
      /// Deletes a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteSubnet(global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubnet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteSubnet(global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSubnet, null, options, request);
      }
      /// <summary>
      /// Deletes a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteSubnetAsync(global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubnetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Subnet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteSubnetAsync(global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSubnet, null, options, request);
      }
      /// <summary>
      /// Lists Interconnects in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse ListInterconnects(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInterconnects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Interconnects in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse ListInterconnects(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInterconnects, null, options, request);
      }
      /// <summary>
      /// Lists Interconnects in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse> ListInterconnectsAsync(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInterconnectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Interconnects in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse> ListInterconnectsAsync(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInterconnects, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Interconnect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Interconnect GetInterconnect(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInterconnect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Interconnect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Interconnect GetInterconnect(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInterconnect, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Interconnect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Interconnect> GetInterconnectAsync(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInterconnectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Interconnect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Interconnect> GetInterconnectAsync(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInterconnect, null, options, request);
      }
      /// <summary>
      /// Get the diagnostics of a single interconnect resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse DiagnoseInterconnect(global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DiagnoseInterconnect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the diagnostics of a single interconnect resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse DiagnoseInterconnect(global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DiagnoseInterconnect, null, options, request);
      }
      /// <summary>
      /// Get the diagnostics of a single interconnect resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse> DiagnoseInterconnectAsync(global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DiagnoseInterconnectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the diagnostics of a single interconnect resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse> DiagnoseInterconnectAsync(global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DiagnoseInterconnect, null, options, request);
      }
      /// <summary>
      /// Lists InterconnectAttachments in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse ListInterconnectAttachments(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInterconnectAttachments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists InterconnectAttachments in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse ListInterconnectAttachments(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInterconnectAttachments, null, options, request);
      }
      /// <summary>
      /// Lists InterconnectAttachments in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse> ListInterconnectAttachmentsAsync(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInterconnectAttachmentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists InterconnectAttachments in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse> ListInterconnectAttachmentsAsync(global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInterconnectAttachments, null, options, request);
      }
      /// <summary>
      /// Gets details of a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment GetInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInterconnectAttachment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment GetInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInterconnectAttachment, null, options, request);
      }
      /// <summary>
      /// Gets details of a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment> GetInterconnectAttachmentAsync(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInterconnectAttachmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment> GetInterconnectAttachmentAsync(global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInterconnectAttachment, null, options, request);
      }
      /// <summary>
      /// Creates a new InterconnectAttachment in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInterconnectAttachment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new InterconnectAttachment in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateInterconnectAttachment, null, options, request);
      }
      /// <summary>
      /// Creates a new InterconnectAttachment in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInterconnectAttachmentAsync(global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateInterconnectAttachmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new InterconnectAttachment in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateInterconnectAttachmentAsync(global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateInterconnectAttachment, null, options, request);
      }
      /// <summary>
      /// Deletes a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInterconnectAttachment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteInterconnectAttachment(global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInterconnectAttachment, null, options, request);
      }
      /// <summary>
      /// Deletes a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteInterconnectAttachmentAsync(global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInterconnectAttachmentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single InterconnectAttachment.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteInterconnectAttachmentAsync(global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInterconnectAttachment, null, options, request);
      }
      /// <summary>
      /// Lists Routers in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse ListRouters(global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRouters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Routers in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse ListRouters(global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRouters, null, options, request);
      }
      /// <summary>
      /// Lists Routers in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse> ListRoutersAsync(global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRoutersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Routers in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse> ListRoutersAsync(global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRouters, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Router GetRouter(global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRouter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.Router GetRouter(global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRouter, null, options, request);
      }
      /// <summary>
      /// Gets details of a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Router> GetRouterAsync(global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRouterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.Router> GetRouterAsync(global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRouter, null, options, request);
      }
      /// <summary>
      /// Get the diagnostics of a single router resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse DiagnoseRouter(global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DiagnoseRouter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the diagnostics of a single router resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse DiagnoseRouter(global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DiagnoseRouter, null, options, request);
      }
      /// <summary>
      /// Get the diagnostics of a single router resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse> DiagnoseRouterAsync(global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DiagnoseRouterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the diagnostics of a single router resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse> DiagnoseRouterAsync(global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DiagnoseRouter, null, options, request);
      }
      /// <summary>
      /// Creates a new Router in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateRouter(global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRouter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Router in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateRouter(global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateRouter, null, options, request);
      }
      /// <summary>
      /// Creates a new Router in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateRouterAsync(global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateRouterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new Router in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateRouterAsync(global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateRouter, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateRouter(global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRouter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateRouter(global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRouter, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateRouterAsync(global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRouterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateRouterAsync(global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRouter, null, options, request);
      }
      /// <summary>
      /// Deletes a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRouter(global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRouter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRouter(global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRouter, null, options, request);
      }
      /// <summary>
      /// Deletes a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteRouterAsync(global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRouterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single Router.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteRouterAsync(global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRouter, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override EdgeNetworkClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EdgeNetworkClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EdgeNetworkBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_InitializeZone, serviceImpl.InitializeZone)
          .AddMethod(__Method_ListZones, serviceImpl.ListZones)
          .AddMethod(__Method_GetZone, serviceImpl.GetZone)
          .AddMethod(__Method_ListNetworks, serviceImpl.ListNetworks)
          .AddMethod(__Method_GetNetwork, serviceImpl.GetNetwork)
          .AddMethod(__Method_DiagnoseNetwork, serviceImpl.DiagnoseNetwork)
          .AddMethod(__Method_CreateNetwork, serviceImpl.CreateNetwork)
          .AddMethod(__Method_DeleteNetwork, serviceImpl.DeleteNetwork)
          .AddMethod(__Method_ListSubnets, serviceImpl.ListSubnets)
          .AddMethod(__Method_GetSubnet, serviceImpl.GetSubnet)
          .AddMethod(__Method_CreateSubnet, serviceImpl.CreateSubnet)
          .AddMethod(__Method_UpdateSubnet, serviceImpl.UpdateSubnet)
          .AddMethod(__Method_DeleteSubnet, serviceImpl.DeleteSubnet)
          .AddMethod(__Method_ListInterconnects, serviceImpl.ListInterconnects)
          .AddMethod(__Method_GetInterconnect, serviceImpl.GetInterconnect)
          .AddMethod(__Method_DiagnoseInterconnect, serviceImpl.DiagnoseInterconnect)
          .AddMethod(__Method_ListInterconnectAttachments, serviceImpl.ListInterconnectAttachments)
          .AddMethod(__Method_GetInterconnectAttachment, serviceImpl.GetInterconnectAttachment)
          .AddMethod(__Method_CreateInterconnectAttachment, serviceImpl.CreateInterconnectAttachment)
          .AddMethod(__Method_DeleteInterconnectAttachment, serviceImpl.DeleteInterconnectAttachment)
          .AddMethod(__Method_ListRouters, serviceImpl.ListRouters)
          .AddMethod(__Method_GetRouter, serviceImpl.GetRouter)
          .AddMethod(__Method_DiagnoseRouter, serviceImpl.DiagnoseRouter)
          .AddMethod(__Method_CreateRouter, serviceImpl.CreateRouter)
          .AddMethod(__Method_UpdateRouter, serviceImpl.UpdateRouter)
          .AddMethod(__Method_DeleteRouter, serviceImpl.DeleteRouter).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EdgeNetworkBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_InitializeZone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.InitializeZoneRequest, global::Google.Cloud.EdgeNetwork.V1.InitializeZoneResponse>(serviceImpl.InitializeZone));
      serviceBinder.AddMethod(__Method_ListZones, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.ListZonesRequest, global::Google.Cloud.EdgeNetwork.V1.ListZonesResponse>(serviceImpl.ListZones));
      serviceBinder.AddMethod(__Method_GetZone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.GetZoneRequest, global::Google.Cloud.EdgeNetwork.V1.Zone>(serviceImpl.GetZone));
      serviceBinder.AddMethod(__Method_ListNetworks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.ListNetworksRequest, global::Google.Cloud.EdgeNetwork.V1.ListNetworksResponse>(serviceImpl.ListNetworks));
      serviceBinder.AddMethod(__Method_GetNetwork, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.GetNetworkRequest, global::Google.Cloud.EdgeNetwork.V1.Network>(serviceImpl.GetNetwork));
      serviceBinder.AddMethod(__Method_DiagnoseNetwork, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseNetworkResponse>(serviceImpl.DiagnoseNetwork));
      serviceBinder.AddMethod(__Method_CreateNetwork, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.CreateNetworkRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateNetwork));
      serviceBinder.AddMethod(__Method_DeleteNetwork, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.DeleteNetworkRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteNetwork));
      serviceBinder.AddMethod(__Method_ListSubnets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.ListSubnetsRequest, global::Google.Cloud.EdgeNetwork.V1.ListSubnetsResponse>(serviceImpl.ListSubnets));
      serviceBinder.AddMethod(__Method_GetSubnet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.GetSubnetRequest, global::Google.Cloud.EdgeNetwork.V1.Subnet>(serviceImpl.GetSubnet));
      serviceBinder.AddMethod(__Method_CreateSubnet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.CreateSubnetRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateSubnet));
      serviceBinder.AddMethod(__Method_UpdateSubnet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.UpdateSubnetRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateSubnet));
      serviceBinder.AddMethod(__Method_DeleteSubnet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.DeleteSubnetRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteSubnet));
      serviceBinder.AddMethod(__Method_ListInterconnects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsRequest, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectsResponse>(serviceImpl.ListInterconnects));
      serviceBinder.AddMethod(__Method_GetInterconnect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.GetInterconnectRequest, global::Google.Cloud.EdgeNetwork.V1.Interconnect>(serviceImpl.GetInterconnect));
      serviceBinder.AddMethod(__Method_DiagnoseInterconnect, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseInterconnectResponse>(serviceImpl.DiagnoseInterconnect));
      serviceBinder.AddMethod(__Method_ListInterconnectAttachments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsRequest, global::Google.Cloud.EdgeNetwork.V1.ListInterconnectAttachmentsResponse>(serviceImpl.ListInterconnectAttachments));
      serviceBinder.AddMethod(__Method_GetInterconnectAttachment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.GetInterconnectAttachmentRequest, global::Google.Cloud.EdgeNetwork.V1.InterconnectAttachment>(serviceImpl.GetInterconnectAttachment));
      serviceBinder.AddMethod(__Method_CreateInterconnectAttachment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.CreateInterconnectAttachmentRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateInterconnectAttachment));
      serviceBinder.AddMethod(__Method_DeleteInterconnectAttachment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.DeleteInterconnectAttachmentRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteInterconnectAttachment));
      serviceBinder.AddMethod(__Method_ListRouters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.ListRoutersRequest, global::Google.Cloud.EdgeNetwork.V1.ListRoutersResponse>(serviceImpl.ListRouters));
      serviceBinder.AddMethod(__Method_GetRouter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.GetRouterRequest, global::Google.Cloud.EdgeNetwork.V1.Router>(serviceImpl.GetRouter));
      serviceBinder.AddMethod(__Method_DiagnoseRouter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterRequest, global::Google.Cloud.EdgeNetwork.V1.DiagnoseRouterResponse>(serviceImpl.DiagnoseRouter));
      serviceBinder.AddMethod(__Method_CreateRouter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.CreateRouterRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateRouter));
      serviceBinder.AddMethod(__Method_UpdateRouter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.UpdateRouterRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateRouter));
      serviceBinder.AddMethod(__Method_DeleteRouter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.EdgeNetwork.V1.DeleteRouterRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteRouter));
    }

  }
}
#endregion
