// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/eventarc/v1/channel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Eventarc.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/eventarc/v1/channel.proto</summary>
  public static partial class ChannelReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/eventarc/v1/channel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChannelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZnb29nbGUvY2xvdWQvZXZlbnRhcmMvdjEvY2hhbm5lbC5wcm90bxIYZ29v",
            "Z2xlLmNsb3VkLmV2ZW50YXJjLnYxGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2",
            "aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvIssECgdDaGFubmVsEhEKBG5hbWUY",
            "ASABKAlCA+BBAhIQCgN1aWQYAiABKAlCA+BBAxI0CgtjcmVhdGVfdGltZRgF",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRh",
            "dGVfdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BB",
            "AxIQCghwcm92aWRlchgHIAEoCRIbCgxwdWJzdWJfdG9waWMYCCABKAlCA+BB",
            "A0gAEjsKBXN0YXRlGAkgASgOMicuZ29vZ2xlLmNsb3VkLmV2ZW50YXJjLnYx",
            "LkNoYW5uZWwuU3RhdGVCA+BBAxIdChBhY3RpdmF0aW9uX3Rva2VuGAogASgJ",
            "QgPgQQMSPwoPY3J5cHRvX2tleV9uYW1lGAsgASgJQib6QSMKIWNsb3Vka21z",
            "Lmdvb2dsZWFwaXMuY29tL0NyeXB0b0tleRIaCg1zYXRpc2ZpZXNfcHpzGAwg",
            "ASgIQgPgQQMiRQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABILCgdQ",
            "RU5ESU5HEAESCgoGQUNUSVZFEAISDAoISU5BQ1RJVkUQAzpz6kFwCh9ldmVu",
            "dGFyYy5nb29nbGVhcGlzLmNvbS9DaGFubmVsEjpwcm9qZWN0cy97cHJvamVj",
            "dH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vY2hhbm5lbHMve2NoYW5uZWx9Kghj",
            "aGFubmVsczIHY2hhbm5lbEILCgl0cmFuc3BvcnRCvAEKHGNvbS5nb29nbGUu",
            "Y2xvdWQuZXZlbnRhcmMudjFCDENoYW5uZWxQcm90b1ABWjhjbG91ZC5nb29n",
            "bGUuY29tL2dvL2V2ZW50YXJjL2FwaXYxL2V2ZW50YXJjcGI7ZXZlbnRhcmNw",
            "YqoCGEdvb2dsZS5DbG91ZC5FdmVudGFyYy5WMcoCGEdvb2dsZVxDbG91ZFxF",
            "dmVudGFyY1xWMeoCG0dvb2dsZTo6Q2xvdWQ6OkV2ZW50YXJjOjpWMWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Eventarc.V1.Channel), global::Google.Cloud.Eventarc.V1.Channel.Parser, new[]{ "Name", "Uid", "CreateTime", "UpdateTime", "Provider", "PubsubTopic", "State", "ActivationToken", "CryptoKeyName", "SatisfiesPzs" }, new[]{ "Transport" }, new[]{ typeof(global::Google.Cloud.Eventarc.V1.Channel.Types.State) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A representation of the Channel resource.
  /// A Channel is a resource on which event providers publish their events.
  /// The published events are delivered through the transport associated with the
  /// channel. Note that a channel is associated with exactly one event provider.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Channel : pb::IMessage<Channel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Channel> _parser = new pb::MessageParser<Channel>(() => new Channel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Channel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Eventarc.V1.ChannelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Channel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Channel(Channel other) : this() {
      name_ = other.name_;
      uid_ = other.uid_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      provider_ = other.provider_;
      state_ = other.state_;
      activationToken_ = other.activationToken_;
      cryptoKeyName_ = other.cryptoKeyName_;
      satisfiesPzs_ = other.satisfiesPzs_;
      switch (other.TransportCase) {
        case TransportOneofCase.PubsubTopic:
          PubsubTopic = other.PubsubTopic;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Channel Clone() {
      return new Channel(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The resource name of the channel. Must be unique within the
    /// location on the project and must be in
    /// `projects/{project}/locations/{location}/channels/{channel_id}` format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private string uid_ = "";
    /// <summary>
    /// Output only. Server assigned unique identifier for the channel. The value
    /// is a UUID4 string and guaranteed to remain unchanged until the resource is
    /// deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The last-modified time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 7;
    private string provider_ = "";
    /// <summary>
    /// The name of the event provider (e.g. Eventarc SaaS partner) associated
    /// with the channel. This provider will be granted permissions to publish
    /// events to the channel. Format:
    /// `projects/{project}/locations/{location}/providers/{provider_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pubsub_topic" field.</summary>
    public const int PubsubTopicFieldNumber = 8;
    /// <summary>
    /// Output only. The name of the Pub/Sub topic created and managed by
    /// Eventarc system as a transport for the event delivery. Format:
    /// `projects/{project}/topics/{topic_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PubsubTopic {
      get { return HasPubsubTopic ? (string) transport_ : ""; }
      set {
        transport_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        transportCase_ = TransportOneofCase.PubsubTopic;
      }
    }
    /// <summary>Gets whether the "pubsub_topic" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPubsubTopic {
      get { return transportCase_ == TransportOneofCase.PubsubTopic; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "pubsub_topic" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPubsubTopic() {
      if (HasPubsubTopic) {
        ClearTransport();
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 9;
    private global::Google.Cloud.Eventarc.V1.Channel.Types.State state_ = global::Google.Cloud.Eventarc.V1.Channel.Types.State.Unspecified;
    /// <summary>
    /// Output only. The state of a Channel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Eventarc.V1.Channel.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "activation_token" field.</summary>
    public const int ActivationTokenFieldNumber = 10;
    private string activationToken_ = "";
    /// <summary>
    /// Output only. The activation token for the channel. The token must be used
    /// by the provider to register the channel for publishing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivationToken {
      get { return activationToken_; }
      set {
        activationToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "crypto_key_name" field.</summary>
    public const int CryptoKeyNameFieldNumber = 11;
    private string cryptoKeyName_ = "";
    /// <summary>
    /// Resource name of a KMS crypto key (managed by the user) used to
    /// encrypt/decrypt their event data.
    ///
    /// It must match the pattern
    /// `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CryptoKeyName {
      get { return cryptoKeyName_; }
      set {
        cryptoKeyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "satisfies_pzs" field.</summary>
    public const int SatisfiesPzsFieldNumber = 12;
    private bool satisfiesPzs_;
    /// <summary>
    /// Output only. Whether or not this Channel satisfies the requirements of
    /// physical zone separation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SatisfiesPzs {
      get { return satisfiesPzs_; }
      set {
        satisfiesPzs_ = value;
      }
    }

    private object transport_;
    /// <summary>Enum of possible cases for the "transport" oneof.</summary>
    public enum TransportOneofCase {
      None = 0,
      PubsubTopic = 8,
    }
    private TransportOneofCase transportCase_ = TransportOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TransportOneofCase TransportCase {
      get { return transportCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTransport() {
      transportCase_ = TransportOneofCase.None;
      transport_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Channel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Channel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Uid != other.Uid) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (Provider != other.Provider) return false;
      if (PubsubTopic != other.PubsubTopic) return false;
      if (State != other.State) return false;
      if (ActivationToken != other.ActivationToken) return false;
      if (CryptoKeyName != other.CryptoKeyName) return false;
      if (SatisfiesPzs != other.SatisfiesPzs) return false;
      if (TransportCase != other.TransportCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (HasPubsubTopic) hash ^= PubsubTopic.GetHashCode();
      if (State != global::Google.Cloud.Eventarc.V1.Channel.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (ActivationToken.Length != 0) hash ^= ActivationToken.GetHashCode();
      if (CryptoKeyName.Length != 0) hash ^= CryptoKeyName.GetHashCode();
      if (SatisfiesPzs != false) hash ^= SatisfiesPzs.GetHashCode();
      hash ^= (int) transportCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Provider);
      }
      if (HasPubsubTopic) {
        output.WriteRawTag(66);
        output.WriteString(PubsubTopic);
      }
      if (State != global::Google.Cloud.Eventarc.V1.Channel.Types.State.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) State);
      }
      if (ActivationToken.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ActivationToken);
      }
      if (CryptoKeyName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CryptoKeyName);
      }
      if (SatisfiesPzs != false) {
        output.WriteRawTag(96);
        output.WriteBool(SatisfiesPzs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Provider);
      }
      if (HasPubsubTopic) {
        output.WriteRawTag(66);
        output.WriteString(PubsubTopic);
      }
      if (State != global::Google.Cloud.Eventarc.V1.Channel.Types.State.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) State);
      }
      if (ActivationToken.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ActivationToken);
      }
      if (CryptoKeyName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CryptoKeyName);
      }
      if (SatisfiesPzs != false) {
        output.WriteRawTag(96);
        output.WriteBool(SatisfiesPzs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (HasPubsubTopic) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PubsubTopic);
      }
      if (State != global::Google.Cloud.Eventarc.V1.Channel.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (ActivationToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivationToken);
      }
      if (CryptoKeyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CryptoKeyName);
      }
      if (SatisfiesPzs != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Channel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.State != global::Google.Cloud.Eventarc.V1.Channel.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.ActivationToken.Length != 0) {
        ActivationToken = other.ActivationToken;
      }
      if (other.CryptoKeyName.Length != 0) {
        CryptoKeyName = other.CryptoKeyName;
      }
      if (other.SatisfiesPzs != false) {
        SatisfiesPzs = other.SatisfiesPzs;
      }
      switch (other.TransportCase) {
        case TransportOneofCase.PubsubTopic:
          PubsubTopic = other.PubsubTopic;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 42: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            Provider = input.ReadString();
            break;
          }
          case 66: {
            PubsubTopic = input.ReadString();
            break;
          }
          case 72: {
            State = (global::Google.Cloud.Eventarc.V1.Channel.Types.State) input.ReadEnum();
            break;
          }
          case 82: {
            ActivationToken = input.ReadString();
            break;
          }
          case 90: {
            CryptoKeyName = input.ReadString();
            break;
          }
          case 96: {
            SatisfiesPzs = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 42: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            Provider = input.ReadString();
            break;
          }
          case 66: {
            PubsubTopic = input.ReadString();
            break;
          }
          case 72: {
            State = (global::Google.Cloud.Eventarc.V1.Channel.Types.State) input.ReadEnum();
            break;
          }
          case 82: {
            ActivationToken = input.ReadString();
            break;
          }
          case 90: {
            CryptoKeyName = input.ReadString();
            break;
          }
          case 96: {
            SatisfiesPzs = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Channel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// State lists all the possible states of a Channel
      /// </summary>
      public enum State {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The PENDING state indicates that a Channel has been created successfully
        /// and there is a new activation token available for the subscriber to use
        /// to convey the Channel to the provider in order to create a Connection.
        /// </summary>
        [pbr::OriginalName("PENDING")] Pending = 1,
        /// <summary>
        /// The ACTIVE state indicates that a Channel has been successfully
        /// connected with the event provider.
        /// An ACTIVE Channel is ready to receive and route events from the
        /// event provider.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 2,
        /// <summary>
        /// The INACTIVE state indicates that the Channel cannot receive events
        /// permanently. There are two possible cases this state can happen:
        ///
        /// 1. The SaaS provider disconnected from this Channel.
        /// 2. The Channel activation token has expired but the SaaS provider
        ///    wasn't connected.
        ///
        /// To re-establish a Connection with a provider, the subscriber
        /// should create a new Channel and give it to the provider.
        /// </summary>
        [pbr::OriginalName("INACTIVE")] Inactive = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
