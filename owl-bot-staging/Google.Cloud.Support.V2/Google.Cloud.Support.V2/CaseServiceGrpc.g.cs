// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/support/v2/case_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Support.V2 {
  /// <summary>
  /// A service to manage Google Cloud support cases.
  /// </summary>
  public static partial class CaseService
  {
    static readonly string __ServiceName = "google.cloud.support.v2.CaseService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.GetCaseRequest> __Marshaller_google_cloud_support_v2_GetCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.GetCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.Case> __Marshaller_google_cloud_support_v2_Case = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.Case.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.ListCasesRequest> __Marshaller_google_cloud_support_v2_ListCasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.ListCasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.ListCasesResponse> __Marshaller_google_cloud_support_v2_ListCasesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.ListCasesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.SearchCasesRequest> __Marshaller_google_cloud_support_v2_SearchCasesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.SearchCasesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.SearchCasesResponse> __Marshaller_google_cloud_support_v2_SearchCasesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.SearchCasesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.CreateCaseRequest> __Marshaller_google_cloud_support_v2_CreateCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.CreateCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.UpdateCaseRequest> __Marshaller_google_cloud_support_v2_UpdateCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.UpdateCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.EscalateCaseRequest> __Marshaller_google_cloud_support_v2_EscalateCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.EscalateCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.CloseCaseRequest> __Marshaller_google_cloud_support_v2_CloseCaseRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.CloseCaseRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest> __Marshaller_google_cloud_support_v2_SearchCaseClassificationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse> __Marshaller_google_cloud_support_v2_SearchCaseClassificationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Support.V2.GetCaseRequest, global::Google.Cloud.Support.V2.Case> __Method_GetCase = new grpc::Method<global::Google.Cloud.Support.V2.GetCaseRequest, global::Google.Cloud.Support.V2.Case>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCase",
        __Marshaller_google_cloud_support_v2_GetCaseRequest,
        __Marshaller_google_cloud_support_v2_Case);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Support.V2.ListCasesRequest, global::Google.Cloud.Support.V2.ListCasesResponse> __Method_ListCases = new grpc::Method<global::Google.Cloud.Support.V2.ListCasesRequest, global::Google.Cloud.Support.V2.ListCasesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCases",
        __Marshaller_google_cloud_support_v2_ListCasesRequest,
        __Marshaller_google_cloud_support_v2_ListCasesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Support.V2.SearchCasesRequest, global::Google.Cloud.Support.V2.SearchCasesResponse> __Method_SearchCases = new grpc::Method<global::Google.Cloud.Support.V2.SearchCasesRequest, global::Google.Cloud.Support.V2.SearchCasesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchCases",
        __Marshaller_google_cloud_support_v2_SearchCasesRequest,
        __Marshaller_google_cloud_support_v2_SearchCasesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Support.V2.CreateCaseRequest, global::Google.Cloud.Support.V2.Case> __Method_CreateCase = new grpc::Method<global::Google.Cloud.Support.V2.CreateCaseRequest, global::Google.Cloud.Support.V2.Case>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCase",
        __Marshaller_google_cloud_support_v2_CreateCaseRequest,
        __Marshaller_google_cloud_support_v2_Case);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Support.V2.UpdateCaseRequest, global::Google.Cloud.Support.V2.Case> __Method_UpdateCase = new grpc::Method<global::Google.Cloud.Support.V2.UpdateCaseRequest, global::Google.Cloud.Support.V2.Case>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCase",
        __Marshaller_google_cloud_support_v2_UpdateCaseRequest,
        __Marshaller_google_cloud_support_v2_Case);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Support.V2.EscalateCaseRequest, global::Google.Cloud.Support.V2.Case> __Method_EscalateCase = new grpc::Method<global::Google.Cloud.Support.V2.EscalateCaseRequest, global::Google.Cloud.Support.V2.Case>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EscalateCase",
        __Marshaller_google_cloud_support_v2_EscalateCaseRequest,
        __Marshaller_google_cloud_support_v2_Case);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Support.V2.CloseCaseRequest, global::Google.Cloud.Support.V2.Case> __Method_CloseCase = new grpc::Method<global::Google.Cloud.Support.V2.CloseCaseRequest, global::Google.Cloud.Support.V2.Case>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CloseCase",
        __Marshaller_google_cloud_support_v2_CloseCaseRequest,
        __Marshaller_google_cloud_support_v2_Case);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest, global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse> __Method_SearchCaseClassifications = new grpc::Method<global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest, global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchCaseClassifications",
        __Marshaller_google_cloud_support_v2_SearchCaseClassificationsRequest,
        __Marshaller_google_cloud_support_v2_SearchCaseClassificationsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Support.V2.CaseServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CaseService</summary>
    [grpc::BindServiceMethod(typeof(CaseService), "BindService")]
    public abstract partial class CaseServiceBase
    {
      /// <summary>
      /// Retrieve the specified case.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Support.V2.Case> GetCase(global::Google.Cloud.Support.V2.GetCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve all cases under the specified parent.
      ///
      /// Note: Listing cases under an Organization returns only the cases directly
      /// parented by that organization. To retrieve all cases under an organization,
      /// including cases parented by projects under that organization, use
      /// `cases.search`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Support.V2.ListCasesResponse> ListCases(global::Google.Cloud.Support.V2.ListCasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search cases using the specified query.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Support.V2.SearchCasesResponse> SearchCases(global::Google.Cloud.Support.V2.SearchCasesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a new case and associate it with the given Google Cloud Resource.
      /// The case object must have the following fields set: `display_name`,
      /// `description`, `classification`, and `priority`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Support.V2.Case> CreateCase(global::Google.Cloud.Support.V2.CreateCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update the specified case. Only a subset of fields can be updated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Support.V2.Case> UpdateCase(global::Google.Cloud.Support.V2.UpdateCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Escalate a case. Escalating a case will initiate the Google Cloud Support
      /// escalation management process.
      ///
      /// This operation is only available to certain Customer Care tiers. Go to
      /// https://cloud.google.com/support and look for 'Technical support
      /// escalations' in the feature list to find out which tiers are able to
      /// perform escalations.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Support.V2.Case> EscalateCase(global::Google.Cloud.Support.V2.EscalateCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Close the specified case.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Support.V2.Case> CloseCase(global::Google.Cloud.Support.V2.CloseCaseRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve valid classifications to be used when creating a support case.
      /// The classications are hierarchical, with each classification containing
      /// all levels of the hierarchy, separated by " > ". For example "Technical
      /// Issue > Compute > Compute Engine".
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse> SearchCaseClassifications(global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CaseService</summary>
    public partial class CaseServiceClient : grpc::ClientBase<CaseServiceClient>
    {
      /// <summary>Creates a new client for CaseService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CaseServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CaseService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CaseServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CaseServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CaseServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Retrieve the specified case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case GetCase(global::Google.Cloud.Support.V2.GetCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve the specified case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case GetCase(global::Google.Cloud.Support.V2.GetCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCase, null, options, request);
      }
      /// <summary>
      /// Retrieve the specified case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> GetCaseAsync(global::Google.Cloud.Support.V2.GetCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve the specified case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> GetCaseAsync(global::Google.Cloud.Support.V2.GetCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCase, null, options, request);
      }
      /// <summary>
      /// Retrieve all cases under the specified parent.
      ///
      /// Note: Listing cases under an Organization returns only the cases directly
      /// parented by that organization. To retrieve all cases under an organization,
      /// including cases parented by projects under that organization, use
      /// `cases.search`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.ListCasesResponse ListCases(global::Google.Cloud.Support.V2.ListCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve all cases under the specified parent.
      ///
      /// Note: Listing cases under an Organization returns only the cases directly
      /// parented by that organization. To retrieve all cases under an organization,
      /// including cases parented by projects under that organization, use
      /// `cases.search`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.ListCasesResponse ListCases(global::Google.Cloud.Support.V2.ListCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCases, null, options, request);
      }
      /// <summary>
      /// Retrieve all cases under the specified parent.
      ///
      /// Note: Listing cases under an Organization returns only the cases directly
      /// parented by that organization. To retrieve all cases under an organization,
      /// including cases parented by projects under that organization, use
      /// `cases.search`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.ListCasesResponse> ListCasesAsync(global::Google.Cloud.Support.V2.ListCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve all cases under the specified parent.
      ///
      /// Note: Listing cases under an Organization returns only the cases directly
      /// parented by that organization. To retrieve all cases under an organization,
      /// including cases parented by projects under that organization, use
      /// `cases.search`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.ListCasesResponse> ListCasesAsync(global::Google.Cloud.Support.V2.ListCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCases, null, options, request);
      }
      /// <summary>
      /// Search cases using the specified query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.SearchCasesResponse SearchCases(global::Google.Cloud.Support.V2.SearchCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchCases(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search cases using the specified query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.SearchCasesResponse SearchCases(global::Google.Cloud.Support.V2.SearchCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchCases, null, options, request);
      }
      /// <summary>
      /// Search cases using the specified query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.SearchCasesResponse> SearchCasesAsync(global::Google.Cloud.Support.V2.SearchCasesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchCasesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search cases using the specified query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.SearchCasesResponse> SearchCasesAsync(global::Google.Cloud.Support.V2.SearchCasesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchCases, null, options, request);
      }
      /// <summary>
      /// Create a new case and associate it with the given Google Cloud Resource.
      /// The case object must have the following fields set: `display_name`,
      /// `description`, `classification`, and `priority`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case CreateCase(global::Google.Cloud.Support.V2.CreateCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new case and associate it with the given Google Cloud Resource.
      /// The case object must have the following fields set: `display_name`,
      /// `description`, `classification`, and `priority`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case CreateCase(global::Google.Cloud.Support.V2.CreateCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateCase, null, options, request);
      }
      /// <summary>
      /// Create a new case and associate it with the given Google Cloud Resource.
      /// The case object must have the following fields set: `display_name`,
      /// `description`, `classification`, and `priority`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> CreateCaseAsync(global::Google.Cloud.Support.V2.CreateCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new case and associate it with the given Google Cloud Resource.
      /// The case object must have the following fields set: `display_name`,
      /// `description`, `classification`, and `priority`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> CreateCaseAsync(global::Google.Cloud.Support.V2.CreateCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateCase, null, options, request);
      }
      /// <summary>
      /// Update the specified case. Only a subset of fields can be updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case UpdateCase(global::Google.Cloud.Support.V2.UpdateCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update the specified case. Only a subset of fields can be updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case UpdateCase(global::Google.Cloud.Support.V2.UpdateCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCase, null, options, request);
      }
      /// <summary>
      /// Update the specified case. Only a subset of fields can be updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> UpdateCaseAsync(global::Google.Cloud.Support.V2.UpdateCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update the specified case. Only a subset of fields can be updated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> UpdateCaseAsync(global::Google.Cloud.Support.V2.UpdateCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCase, null, options, request);
      }
      /// <summary>
      /// Escalate a case. Escalating a case will initiate the Google Cloud Support
      /// escalation management process.
      ///
      /// This operation is only available to certain Customer Care tiers. Go to
      /// https://cloud.google.com/support and look for 'Technical support
      /// escalations' in the feature list to find out which tiers are able to
      /// perform escalations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case EscalateCase(global::Google.Cloud.Support.V2.EscalateCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EscalateCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Escalate a case. Escalating a case will initiate the Google Cloud Support
      /// escalation management process.
      ///
      /// This operation is only available to certain Customer Care tiers. Go to
      /// https://cloud.google.com/support and look for 'Technical support
      /// escalations' in the feature list to find out which tiers are able to
      /// perform escalations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case EscalateCase(global::Google.Cloud.Support.V2.EscalateCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EscalateCase, null, options, request);
      }
      /// <summary>
      /// Escalate a case. Escalating a case will initiate the Google Cloud Support
      /// escalation management process.
      ///
      /// This operation is only available to certain Customer Care tiers. Go to
      /// https://cloud.google.com/support and look for 'Technical support
      /// escalations' in the feature list to find out which tiers are able to
      /// perform escalations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> EscalateCaseAsync(global::Google.Cloud.Support.V2.EscalateCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EscalateCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Escalate a case. Escalating a case will initiate the Google Cloud Support
      /// escalation management process.
      ///
      /// This operation is only available to certain Customer Care tiers. Go to
      /// https://cloud.google.com/support and look for 'Technical support
      /// escalations' in the feature list to find out which tiers are able to
      /// perform escalations.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> EscalateCaseAsync(global::Google.Cloud.Support.V2.EscalateCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EscalateCase, null, options, request);
      }
      /// <summary>
      /// Close the specified case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case CloseCase(global::Google.Cloud.Support.V2.CloseCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseCase(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Close the specified case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.Case CloseCase(global::Google.Cloud.Support.V2.CloseCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CloseCase, null, options, request);
      }
      /// <summary>
      /// Close the specified case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> CloseCaseAsync(global::Google.Cloud.Support.V2.CloseCaseRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseCaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Close the specified case.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.Case> CloseCaseAsync(global::Google.Cloud.Support.V2.CloseCaseRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CloseCase, null, options, request);
      }
      /// <summary>
      /// Retrieve valid classifications to be used when creating a support case.
      /// The classications are hierarchical, with each classification containing
      /// all levels of the hierarchy, separated by " > ". For example "Technical
      /// Issue > Compute > Compute Engine".
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse SearchCaseClassifications(global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchCaseClassifications(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve valid classifications to be used when creating a support case.
      /// The classications are hierarchical, with each classification containing
      /// all levels of the hierarchy, separated by " > ". For example "Technical
      /// Issue > Compute > Compute Engine".
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse SearchCaseClassifications(global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchCaseClassifications, null, options, request);
      }
      /// <summary>
      /// Retrieve valid classifications to be used when creating a support case.
      /// The classications are hierarchical, with each classification containing
      /// all levels of the hierarchy, separated by " > ". For example "Technical
      /// Issue > Compute > Compute Engine".
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse> SearchCaseClassificationsAsync(global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchCaseClassificationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve valid classifications to be used when creating a support case.
      /// The classications are hierarchical, with each classification containing
      /// all levels of the hierarchy, separated by " > ". For example "Technical
      /// Issue > Compute > Compute Engine".
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse> SearchCaseClassificationsAsync(global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchCaseClassifications, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CaseServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CaseServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CaseServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetCase, serviceImpl.GetCase)
          .AddMethod(__Method_ListCases, serviceImpl.ListCases)
          .AddMethod(__Method_SearchCases, serviceImpl.SearchCases)
          .AddMethod(__Method_CreateCase, serviceImpl.CreateCase)
          .AddMethod(__Method_UpdateCase, serviceImpl.UpdateCase)
          .AddMethod(__Method_EscalateCase, serviceImpl.EscalateCase)
          .AddMethod(__Method_CloseCase, serviceImpl.CloseCase)
          .AddMethod(__Method_SearchCaseClassifications, serviceImpl.SearchCaseClassifications).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CaseServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Support.V2.GetCaseRequest, global::Google.Cloud.Support.V2.Case>(serviceImpl.GetCase));
      serviceBinder.AddMethod(__Method_ListCases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Support.V2.ListCasesRequest, global::Google.Cloud.Support.V2.ListCasesResponse>(serviceImpl.ListCases));
      serviceBinder.AddMethod(__Method_SearchCases, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Support.V2.SearchCasesRequest, global::Google.Cloud.Support.V2.SearchCasesResponse>(serviceImpl.SearchCases));
      serviceBinder.AddMethod(__Method_CreateCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Support.V2.CreateCaseRequest, global::Google.Cloud.Support.V2.Case>(serviceImpl.CreateCase));
      serviceBinder.AddMethod(__Method_UpdateCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Support.V2.UpdateCaseRequest, global::Google.Cloud.Support.V2.Case>(serviceImpl.UpdateCase));
      serviceBinder.AddMethod(__Method_EscalateCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Support.V2.EscalateCaseRequest, global::Google.Cloud.Support.V2.Case>(serviceImpl.EscalateCase));
      serviceBinder.AddMethod(__Method_CloseCase, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Support.V2.CloseCaseRequest, global::Google.Cloud.Support.V2.Case>(serviceImpl.CloseCase));
      serviceBinder.AddMethod(__Method_SearchCaseClassifications, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Support.V2.SearchCaseClassificationsRequest, global::Google.Cloud.Support.V2.SearchCaseClassificationsResponse>(serviceImpl.SearchCaseClassifications));
    }

  }
}
#endregion
