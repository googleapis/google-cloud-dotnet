// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/shopping/merchant/accounts/v1beta/accounts.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Shopping.Merchant.Accounts.V1Beta {
  /// <summary>
  /// Service to support Accounts API.
  /// </summary>
  public static partial class AccountsService
  {
    static readonly string __ServiceName = "google.shopping.merchant.accounts.v1beta.AccountsService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest> __Marshaller_google_shopping_merchant_accounts_v1beta_GetAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> __Marshaller_google_shopping_merchant_accounts_v1beta_Account = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.Account.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest> __Marshaller_google_shopping_merchant_accounts_v1beta_CreateAndConfigureAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest> __Marshaller_google_shopping_merchant_accounts_v1beta_DeleteAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest> __Marshaller_google_shopping_merchant_accounts_v1beta_UpdateAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest> __Marshaller_google_shopping_merchant_accounts_v1beta_ListAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse> __Marshaller_google_shopping_merchant_accounts_v1beta_ListAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest> __Marshaller_google_shopping_merchant_accounts_v1beta_ListSubAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse> __Marshaller_google_shopping_merchant_accounts_v1beta_ListSubAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account> __Method_GetAccount = new grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccount",
        __Marshaller_google_shopping_merchant_accounts_v1beta_GetAccountRequest,
        __Marshaller_google_shopping_merchant_accounts_v1beta_Account);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account> __Method_CreateAndConfigureAccount = new grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAndConfigureAccount",
        __Marshaller_google_shopping_merchant_accounts_v1beta_CreateAndConfigureAccountRequest,
        __Marshaller_google_shopping_merchant_accounts_v1beta_Account);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAccount = new grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAccount",
        __Marshaller_google_shopping_merchant_accounts_v1beta_DeleteAccountRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account> __Method_UpdateAccount = new grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAccount",
        __Marshaller_google_shopping_merchant_accounts_v1beta_UpdateAccountRequest,
        __Marshaller_google_shopping_merchant_accounts_v1beta_Account);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse> __Method_ListAccounts = new grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccounts",
        __Marshaller_google_shopping_merchant_accounts_v1beta_ListAccountsRequest,
        __Marshaller_google_shopping_merchant_accounts_v1beta_ListAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse> __Method_ListSubAccounts = new grpc::Method<global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSubAccounts",
        __Marshaller_google_shopping_merchant_accounts_v1beta_ListSubAccountsRequest,
        __Marshaller_google_shopping_merchant_accounts_v1beta_ListSubAccountsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Shopping.Merchant.Accounts.V1Beta.AccountsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AccountsService</summary>
    [grpc::BindServiceMethod(typeof(AccountsService), "BindService")]
    public abstract partial class AccountsServiceBase
    {
      /// <summary>
      /// Retrieves an account from your Merchant Center account.
      /// After inserting, updating, or deleting an account, it may take several
      /// minutes before changes take effect.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> GetAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a standalone Merchant Center account with additional configuration.
      /// Adds the user that makes the request as an admin for the new account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> CreateAndConfigureAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified account regardless of its type: standalone, MCA or
      /// sub-account. Deleting an MCA leads to the deletion of all of its
      /// sub-accounts. Executing this method requires admin access.
      /// The deletion succeeds only if the account does not provide services
      /// to any other account and has no processed offers. You can use the `force`
      /// parameter to override this.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an account regardless of its type: standalone, MCA or sub-account.
      /// Executing this method requires admin access.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> UpdateAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists accounts accessible to the calling user and matching the
      /// constraints of the request such as page size or filters.
      /// This is not just listing the sub-accounts of an MCA, but all accounts the
      /// calling user has access to including other MCAs, linked accounts,
      /// standalone accounts and so on. If no filter is provided, then it returns
      /// accounts the user is directly added to.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse> ListAccounts(global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List all sub-accounts for a given multi client account. This is a
      /// convenience wrapper for the more powerful `ListAccounts` method. This
      /// method will produce the same results as calling `ListsAccounts` with the
      /// following filter:
      /// `relationship(providerId={parent} AND service(type="ACCOUNT_AGGREGATION"))`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse> ListSubAccounts(global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AccountsService</summary>
    public partial class AccountsServiceClient : grpc::ClientBase<AccountsServiceClient>
    {
      /// <summary>Creates a new client for AccountsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AccountsServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AccountsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AccountsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AccountsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AccountsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Retrieves an account from your Merchant Center account.
      /// After inserting, updating, or deleting an account, it may take several
      /// minutes before changes take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.Account GetAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves an account from your Merchant Center account.
      /// After inserting, updating, or deleting an account, it may take several
      /// minutes before changes take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.Account GetAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// Retrieves an account from your Merchant Center account.
      /// After inserting, updating, or deleting an account, it may take several
      /// minutes before changes take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> GetAccountAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves an account from your Merchant Center account.
      /// After inserting, updating, or deleting an account, it may take several
      /// minutes before changes take effect.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> GetAccountAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccount, null, options, request);
      }
      /// <summary>
      /// Creates a standalone Merchant Center account with additional configuration.
      /// Adds the user that makes the request as an admin for the new account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.Account CreateAndConfigureAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAndConfigureAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a standalone Merchant Center account with additional configuration.
      /// Adds the user that makes the request as an admin for the new account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.Account CreateAndConfigureAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAndConfigureAccount, null, options, request);
      }
      /// <summary>
      /// Creates a standalone Merchant Center account with additional configuration.
      /// Adds the user that makes the request as an admin for the new account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> CreateAndConfigureAccountAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAndConfigureAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a standalone Merchant Center account with additional configuration.
      /// Adds the user that makes the request as an admin for the new account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> CreateAndConfigureAccountAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAndConfigureAccount, null, options, request);
      }
      /// <summary>
      /// Deletes the specified account regardless of its type: standalone, MCA or
      /// sub-account. Deleting an MCA leads to the deletion of all of its
      /// sub-accounts. Executing this method requires admin access.
      /// The deletion succeeds only if the account does not provide services
      /// to any other account and has no processed offers. You can use the `force`
      /// parameter to override this.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified account regardless of its type: standalone, MCA or
      /// sub-account. Deleting an MCA leads to the deletion of all of its
      /// sub-accounts. Executing this method requires admin access.
      /// The deletion succeeds only if the account does not provide services
      /// to any other account and has no processed offers. You can use the `force`
      /// parameter to override this.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAccount, null, options, request);
      }
      /// <summary>
      /// Deletes the specified account regardless of its type: standalone, MCA or
      /// sub-account. Deleting an MCA leads to the deletion of all of its
      /// sub-accounts. Executing this method requires admin access.
      /// The deletion succeeds only if the account does not provide services
      /// to any other account and has no processed offers. You can use the `force`
      /// parameter to override this.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccountAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified account regardless of its type: standalone, MCA or
      /// sub-account. Deleting an MCA leads to the deletion of all of its
      /// sub-accounts. Executing this method requires admin access.
      /// The deletion succeeds only if the account does not provide services
      /// to any other account and has no processed offers. You can use the `force`
      /// parameter to override this.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAccountAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAccount, null, options, request);
      }
      /// <summary>
      /// Updates an account regardless of its type: standalone, MCA or sub-account.
      /// Executing this method requires admin access.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.Account UpdateAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an account regardless of its type: standalone, MCA or sub-account.
      /// Executing this method requires admin access.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.Account UpdateAccount(global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAccount, null, options, request);
      }
      /// <summary>
      /// Updates an account regardless of its type: standalone, MCA or sub-account.
      /// Executing this method requires admin access.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> UpdateAccountAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an account regardless of its type: standalone, MCA or sub-account.
      /// Executing this method requires admin access.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.Account> UpdateAccountAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAccount, null, options, request);
      }
      /// <summary>
      /// Lists accounts accessible to the calling user and matching the
      /// constraints of the request such as page size or filters.
      /// This is not just listing the sub-accounts of an MCA, but all accounts the
      /// calling user has access to including other MCAs, linked accounts,
      /// standalone accounts and so on. If no filter is provided, then it returns
      /// accounts the user is directly added to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse ListAccounts(global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists accounts accessible to the calling user and matching the
      /// constraints of the request such as page size or filters.
      /// This is not just listing the sub-accounts of an MCA, but all accounts the
      /// calling user has access to including other MCAs, linked accounts,
      /// standalone accounts and so on. If no filter is provided, then it returns
      /// accounts the user is directly added to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse ListAccounts(global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccounts, null, options, request);
      }
      /// <summary>
      /// Lists accounts accessible to the calling user and matching the
      /// constraints of the request such as page size or filters.
      /// This is not just listing the sub-accounts of an MCA, but all accounts the
      /// calling user has access to including other MCAs, linked accounts,
      /// standalone accounts and so on. If no filter is provided, then it returns
      /// accounts the user is directly added to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse> ListAccountsAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists accounts accessible to the calling user and matching the
      /// constraints of the request such as page size or filters.
      /// This is not just listing the sub-accounts of an MCA, but all accounts the
      /// calling user has access to including other MCAs, linked accounts,
      /// standalone accounts and so on. If no filter is provided, then it returns
      /// accounts the user is directly added to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse> ListAccountsAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccounts, null, options, request);
      }
      /// <summary>
      /// List all sub-accounts for a given multi client account. This is a
      /// convenience wrapper for the more powerful `ListAccounts` method. This
      /// method will produce the same results as calling `ListsAccounts` with the
      /// following filter:
      /// `relationship(providerId={parent} AND service(type="ACCOUNT_AGGREGATION"))`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse ListSubAccounts(global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all sub-accounts for a given multi client account. This is a
      /// convenience wrapper for the more powerful `ListAccounts` method. This
      /// method will produce the same results as calling `ListsAccounts` with the
      /// following filter:
      /// `relationship(providerId={parent} AND service(type="ACCOUNT_AGGREGATION"))`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse ListSubAccounts(global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSubAccounts, null, options, request);
      }
      /// <summary>
      /// List all sub-accounts for a given multi client account. This is a
      /// convenience wrapper for the more powerful `ListAccounts` method. This
      /// method will produce the same results as calling `ListsAccounts` with the
      /// following filter:
      /// `relationship(providerId={parent} AND service(type="ACCOUNT_AGGREGATION"))`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse> ListSubAccountsAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all sub-accounts for a given multi client account. This is a
      /// convenience wrapper for the more powerful `ListAccounts` method. This
      /// method will produce the same results as calling `ListsAccounts` with the
      /// following filter:
      /// `relationship(providerId={parent} AND service(type="ACCOUNT_AGGREGATION"))`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse> ListSubAccountsAsync(global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSubAccounts, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AccountsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AccountsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AccountsServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAccount, serviceImpl.GetAccount)
          .AddMethod(__Method_CreateAndConfigureAccount, serviceImpl.CreateAndConfigureAccount)
          .AddMethod(__Method_DeleteAccount, serviceImpl.DeleteAccount)
          .AddMethod(__Method_UpdateAccount, serviceImpl.UpdateAccount)
          .AddMethod(__Method_ListAccounts, serviceImpl.ListAccounts)
          .AddMethod(__Method_ListSubAccounts, serviceImpl.ListSubAccounts).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AccountsServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Accounts.V1Beta.GetAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account>(serviceImpl.GetAccount));
      serviceBinder.AddMethod(__Method_CreateAndConfigureAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Accounts.V1Beta.CreateAndConfigureAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account>(serviceImpl.CreateAndConfigureAccount));
      serviceBinder.AddMethod(__Method_DeleteAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Accounts.V1Beta.DeleteAccountRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAccount));
      serviceBinder.AddMethod(__Method_UpdateAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Accounts.V1Beta.UpdateAccountRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.Account>(serviceImpl.UpdateAccount));
      serviceBinder.AddMethod(__Method_ListAccounts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.ListAccountsResponse>(serviceImpl.ListAccounts));
      serviceBinder.AddMethod(__Method_ListSubAccounts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsRequest, global::Google.Shopping.Merchant.Accounts.V1Beta.ListSubAccountsResponse>(serviceImpl.ListSubAccounts));
    }

  }
}
#endregion
