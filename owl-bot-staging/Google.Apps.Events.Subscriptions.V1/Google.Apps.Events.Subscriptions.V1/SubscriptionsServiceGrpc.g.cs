// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/apps/events/subscriptions/v1/subscriptions_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Apps.Events.Subscriptions.V1 {
  /// <summary>
  /// A service that manages subscriptions to Google Workspace events.
  /// </summary>
  public static partial class SubscriptionsService
  {
    static readonly string __ServiceName = "google.apps.events.subscriptions.v1.SubscriptionsService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest> __Marshaller_google_apps_events_subscriptions_v1_CreateSubscriptionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest> __Marshaller_google_apps_events_subscriptions_v1_DeleteSubscriptionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest> __Marshaller_google_apps_events_subscriptions_v1_GetSubscriptionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Apps.Events.Subscriptions.V1.Subscription> __Marshaller_google_apps_events_subscriptions_v1_Subscription = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Apps.Events.Subscriptions.V1.Subscription.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest> __Marshaller_google_apps_events_subscriptions_v1_ListSubscriptionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse> __Marshaller_google_apps_events_subscriptions_v1_ListSubscriptionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest> __Marshaller_google_apps_events_subscriptions_v1_UpdateSubscriptionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest> __Marshaller_google_apps_events_subscriptions_v1_ReactivateSubscriptionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest, global::Google.LongRunning.Operation> __Method_CreateSubscription = new grpc::Method<global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSubscription",
        __Marshaller_google_apps_events_subscriptions_v1_CreateSubscriptionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest, global::Google.LongRunning.Operation> __Method_DeleteSubscription = new grpc::Method<global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSubscription",
        __Marshaller_google_apps_events_subscriptions_v1_DeleteSubscriptionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest, global::Google.Apps.Events.Subscriptions.V1.Subscription> __Method_GetSubscription = new grpc::Method<global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest, global::Google.Apps.Events.Subscriptions.V1.Subscription>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSubscription",
        __Marshaller_google_apps_events_subscriptions_v1_GetSubscriptionRequest,
        __Marshaller_google_apps_events_subscriptions_v1_Subscription);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest, global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse> __Method_ListSubscriptions = new grpc::Method<global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest, global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSubscriptions",
        __Marshaller_google_apps_events_subscriptions_v1_ListSubscriptionsRequest,
        __Marshaller_google_apps_events_subscriptions_v1_ListSubscriptionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest, global::Google.LongRunning.Operation> __Method_UpdateSubscription = new grpc::Method<global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSubscription",
        __Marshaller_google_apps_events_subscriptions_v1_UpdateSubscriptionRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest, global::Google.LongRunning.Operation> __Method_ReactivateSubscription = new grpc::Method<global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateSubscription",
        __Marshaller_google_apps_events_subscriptions_v1_ReactivateSubscriptionRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Apps.Events.Subscriptions.V1.SubscriptionsServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SubscriptionsService</summary>
    [grpc::BindServiceMethod(typeof(SubscriptionsService), "BindService")]
    public abstract partial class SubscriptionsServiceBase
    {
      /// <summary>
      /// Creates a Google Workspace subscription. To learn how to use this
      /// method, see [Create a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/create-subscription).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateSubscription(global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a Google Workspace subscription.
      /// To learn how to use this method, see [Delete a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/delete-subscription).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteSubscription(global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details about a Google Workspace subscription. To learn how to use
      /// this method, see [Get details about a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/get-subscription).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Apps.Events.Subscriptions.V1.Subscription> GetSubscription(global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists Google Workspace subscriptions. To learn how to use this method, see
      /// [List Google Workspace
      /// subscriptions](https://developers.google.com/workspace/events/guides/list-subscriptions).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse> ListSubscriptions(global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates or renews a Google Workspace subscription. To learn how to use this
      /// method, see [Update or renew a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/update-subscription).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateSubscription(global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Reactivates a suspended Google Workspace subscription.
      ///
      /// This method resets your subscription's `State` field to `ACTIVE`. Before
      /// you use this method, you must fix the error that suspended the
      /// subscription. To learn how to use this method, see [Reactivate a Google
      /// Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/reactivate-subscription).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ReactivateSubscription(global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SubscriptionsService</summary>
    public partial class SubscriptionsServiceClient : grpc::ClientBase<SubscriptionsServiceClient>
    {
      /// <summary>Creates a new client for SubscriptionsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SubscriptionsServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SubscriptionsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SubscriptionsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SubscriptionsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SubscriptionsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a Google Workspace subscription. To learn how to use this
      /// method, see [Create a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/create-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateSubscription(global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Google Workspace subscription. To learn how to use this
      /// method, see [Create a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/create-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateSubscription(global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSubscription, null, options, request);
      }
      /// <summary>
      /// Creates a Google Workspace subscription. To learn how to use this
      /// method, see [Create a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/create-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Google Workspace subscription. To learn how to use this
      /// method, see [Create a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/create-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSubscription, null, options, request);
      }
      /// <summary>
      /// Deletes a Google Workspace subscription.
      /// To learn how to use this method, see [Delete a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/delete-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteSubscription(global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Google Workspace subscription.
      /// To learn how to use this method, see [Delete a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/delete-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteSubscription(global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSubscription, null, options, request);
      }
      /// <summary>
      /// Deletes a Google Workspace subscription.
      /// To learn how to use this method, see [Delete a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/delete-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a Google Workspace subscription.
      /// To learn how to use this method, see [Delete a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/delete-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSubscription, null, options, request);
      }
      /// <summary>
      /// Gets details about a Google Workspace subscription. To learn how to use
      /// this method, see [Get details about a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/get-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Apps.Events.Subscriptions.V1.Subscription GetSubscription(global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details about a Google Workspace subscription. To learn how to use
      /// this method, see [Get details about a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/get-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Apps.Events.Subscriptions.V1.Subscription GetSubscription(global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSubscription, null, options, request);
      }
      /// <summary>
      /// Gets details about a Google Workspace subscription. To learn how to use
      /// this method, see [Get details about a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/get-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Apps.Events.Subscriptions.V1.Subscription> GetSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details about a Google Workspace subscription. To learn how to use
      /// this method, see [Get details about a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/get-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Apps.Events.Subscriptions.V1.Subscription> GetSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSubscription, null, options, request);
      }
      /// <summary>
      /// Lists Google Workspace subscriptions. To learn how to use this method, see
      /// [List Google Workspace
      /// subscriptions](https://developers.google.com/workspace/events/guides/list-subscriptions).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse ListSubscriptions(global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubscriptions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Google Workspace subscriptions. To learn how to use this method, see
      /// [List Google Workspace
      /// subscriptions](https://developers.google.com/workspace/events/guides/list-subscriptions).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse ListSubscriptions(global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSubscriptions, null, options, request);
      }
      /// <summary>
      /// Lists Google Workspace subscriptions. To learn how to use this method, see
      /// [List Google Workspace
      /// subscriptions](https://developers.google.com/workspace/events/guides/list-subscriptions).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse> ListSubscriptionsAsync(global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubscriptionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists Google Workspace subscriptions. To learn how to use this method, see
      /// [List Google Workspace
      /// subscriptions](https://developers.google.com/workspace/events/guides/list-subscriptions).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse> ListSubscriptionsAsync(global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSubscriptions, null, options, request);
      }
      /// <summary>
      /// Updates or renews a Google Workspace subscription. To learn how to use this
      /// method, see [Update or renew a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/update-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateSubscription(global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates or renews a Google Workspace subscription. To learn how to use this
      /// method, see [Update or renew a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/update-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateSubscription(global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSubscription, null, options, request);
      }
      /// <summary>
      /// Updates or renews a Google Workspace subscription. To learn how to use this
      /// method, see [Update or renew a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/update-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates or renews a Google Workspace subscription. To learn how to use this
      /// method, see [Update or renew a Google Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/update-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSubscription, null, options, request);
      }
      /// <summary>
      /// Reactivates a suspended Google Workspace subscription.
      ///
      /// This method resets your subscription's `State` field to `ACTIVE`. Before
      /// you use this method, you must fix the error that suspended the
      /// subscription. To learn how to use this method, see [Reactivate a Google
      /// Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/reactivate-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ReactivateSubscription(global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateSubscription(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivates a suspended Google Workspace subscription.
      ///
      /// This method resets your subscription's `State` field to `ACTIVE`. Before
      /// you use this method, you must fix the error that suspended the
      /// subscription. To learn how to use this method, see [Reactivate a Google
      /// Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/reactivate-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ReactivateSubscription(global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateSubscription, null, options, request);
      }
      /// <summary>
      /// Reactivates a suspended Google Workspace subscription.
      ///
      /// This method resets your subscription's `State` field to `ACTIVE`. Before
      /// you use this method, you must fix the error that suspended the
      /// subscription. To learn how to use this method, see [Reactivate a Google
      /// Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/reactivate-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ReactivateSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateSubscriptionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivates a suspended Google Workspace subscription.
      ///
      /// This method resets your subscription's `State` field to `ACTIVE`. Before
      /// you use this method, you must fix the error that suspended the
      /// subscription. To learn how to use this method, see [Reactivate a Google
      /// Workspace
      /// subscription](https://developers.google.com/workspace/events/guides/reactivate-subscription).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ReactivateSubscriptionAsync(global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateSubscription, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SubscriptionsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SubscriptionsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SubscriptionsServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateSubscription, serviceImpl.CreateSubscription)
          .AddMethod(__Method_DeleteSubscription, serviceImpl.DeleteSubscription)
          .AddMethod(__Method_GetSubscription, serviceImpl.GetSubscription)
          .AddMethod(__Method_ListSubscriptions, serviceImpl.ListSubscriptions)
          .AddMethod(__Method_UpdateSubscription, serviceImpl.UpdateSubscription)
          .AddMethod(__Method_ReactivateSubscription, serviceImpl.ReactivateSubscription).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SubscriptionsServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateSubscription, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Apps.Events.Subscriptions.V1.CreateSubscriptionRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateSubscription));
      serviceBinder.AddMethod(__Method_DeleteSubscription, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Apps.Events.Subscriptions.V1.DeleteSubscriptionRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteSubscription));
      serviceBinder.AddMethod(__Method_GetSubscription, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Apps.Events.Subscriptions.V1.GetSubscriptionRequest, global::Google.Apps.Events.Subscriptions.V1.Subscription>(serviceImpl.GetSubscription));
      serviceBinder.AddMethod(__Method_ListSubscriptions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsRequest, global::Google.Apps.Events.Subscriptions.V1.ListSubscriptionsResponse>(serviceImpl.ListSubscriptions));
      serviceBinder.AddMethod(__Method_UpdateSubscription, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Apps.Events.Subscriptions.V1.UpdateSubscriptionRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateSubscription));
      serviceBinder.AddMethod(__Method_ReactivateSubscription, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Apps.Events.Subscriptions.V1.ReactivateSubscriptionRequest, global::Google.LongRunning.Operation>(serviceImpl.ReactivateSubscription));
    }

  }
}
#endregion
