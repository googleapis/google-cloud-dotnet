// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/vision/v1/product_search_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Vision.V1 {
  /// <summary>
  /// Manages Products and ProductSets of reference images for use in product
  /// search. It uses the following resource model:
  ///
  /// - The API has a collection of [ProductSet][google.cloud.vision.v1.ProductSet]
  /// resources, named `projects/*/locations/*/productSets/*`, which acts as a way
  /// to put different products into groups to limit identification.
  ///
  /// In parallel,
  ///
  /// - The API has a collection of [Product][google.cloud.vision.v1.Product]
  /// resources, named
  ///   `projects/*/locations/*/products/*`
  ///
  /// - Each [Product][google.cloud.vision.v1.Product] has a collection of
  /// [ReferenceImage][google.cloud.vision.v1.ReferenceImage] resources, named
  ///   `projects/*/locations/*/products/*/referenceImages/*`
  /// </summary>
  public static partial class ProductSearch
  {
    static readonly string __ServiceName = "google.cloud.vision.v1.ProductSearch";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.CreateProductSetRequest> __Marshaller_google_cloud_vision_v1_CreateProductSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.CreateProductSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ProductSet> __Marshaller_google_cloud_vision_v1_ProductSet = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ProductSet.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ListProductSetsRequest> __Marshaller_google_cloud_vision_v1_ListProductSetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ListProductSetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ListProductSetsResponse> __Marshaller_google_cloud_vision_v1_ListProductSetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ListProductSetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.GetProductSetRequest> __Marshaller_google_cloud_vision_v1_GetProductSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.GetProductSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.UpdateProductSetRequest> __Marshaller_google_cloud_vision_v1_UpdateProductSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.UpdateProductSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.DeleteProductSetRequest> __Marshaller_google_cloud_vision_v1_DeleteProductSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.DeleteProductSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.CreateProductRequest> __Marshaller_google_cloud_vision_v1_CreateProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.CreateProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.Product> __Marshaller_google_cloud_vision_v1_Product = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.Product.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ListProductsRequest> __Marshaller_google_cloud_vision_v1_ListProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ListProductsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ListProductsResponse> __Marshaller_google_cloud_vision_v1_ListProductsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ListProductsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.GetProductRequest> __Marshaller_google_cloud_vision_v1_GetProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.GetProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.UpdateProductRequest> __Marshaller_google_cloud_vision_v1_UpdateProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.UpdateProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.DeleteProductRequest> __Marshaller_google_cloud_vision_v1_DeleteProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.DeleteProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.CreateReferenceImageRequest> __Marshaller_google_cloud_vision_v1_CreateReferenceImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.CreateReferenceImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ReferenceImage> __Marshaller_google_cloud_vision_v1_ReferenceImage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ReferenceImage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest> __Marshaller_google_cloud_vision_v1_DeleteReferenceImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ListReferenceImagesRequest> __Marshaller_google_cloud_vision_v1_ListReferenceImagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ListReferenceImagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ListReferenceImagesResponse> __Marshaller_google_cloud_vision_v1_ListReferenceImagesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ListReferenceImagesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.GetReferenceImageRequest> __Marshaller_google_cloud_vision_v1_GetReferenceImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.GetReferenceImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.AddProductToProductSetRequest> __Marshaller_google_cloud_vision_v1_AddProductToProductSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.AddProductToProductSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest> __Marshaller_google_cloud_vision_v1_RemoveProductFromProductSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest> __Marshaller_google_cloud_vision_v1_ListProductsInProductSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse> __Marshaller_google_cloud_vision_v1_ListProductsInProductSetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.ImportProductSetsRequest> __Marshaller_google_cloud_vision_v1_ImportProductSetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.ImportProductSetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Vision.V1.PurgeProductsRequest> __Marshaller_google_cloud_vision_v1_PurgeProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Vision.V1.PurgeProductsRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.CreateProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet> __Method_CreateProductSet = new grpc::Method<global::Google.Cloud.Vision.V1.CreateProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProductSet",
        __Marshaller_google_cloud_vision_v1_CreateProductSetRequest,
        __Marshaller_google_cloud_vision_v1_ProductSet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.ListProductSetsRequest, global::Google.Cloud.Vision.V1.ListProductSetsResponse> __Method_ListProductSets = new grpc::Method<global::Google.Cloud.Vision.V1.ListProductSetsRequest, global::Google.Cloud.Vision.V1.ListProductSetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProductSets",
        __Marshaller_google_cloud_vision_v1_ListProductSetsRequest,
        __Marshaller_google_cloud_vision_v1_ListProductSetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.GetProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet> __Method_GetProductSet = new grpc::Method<global::Google.Cloud.Vision.V1.GetProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProductSet",
        __Marshaller_google_cloud_vision_v1_GetProductSetRequest,
        __Marshaller_google_cloud_vision_v1_ProductSet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.UpdateProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet> __Method_UpdateProductSet = new grpc::Method<global::Google.Cloud.Vision.V1.UpdateProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProductSet",
        __Marshaller_google_cloud_vision_v1_UpdateProductSetRequest,
        __Marshaller_google_cloud_vision_v1_ProductSet);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.DeleteProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteProductSet = new grpc::Method<global::Google.Cloud.Vision.V1.DeleteProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProductSet",
        __Marshaller_google_cloud_vision_v1_DeleteProductSetRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.CreateProductRequest, global::Google.Cloud.Vision.V1.Product> __Method_CreateProduct = new grpc::Method<global::Google.Cloud.Vision.V1.CreateProductRequest, global::Google.Cloud.Vision.V1.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProduct",
        __Marshaller_google_cloud_vision_v1_CreateProductRequest,
        __Marshaller_google_cloud_vision_v1_Product);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.ListProductsRequest, global::Google.Cloud.Vision.V1.ListProductsResponse> __Method_ListProducts = new grpc::Method<global::Google.Cloud.Vision.V1.ListProductsRequest, global::Google.Cloud.Vision.V1.ListProductsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProducts",
        __Marshaller_google_cloud_vision_v1_ListProductsRequest,
        __Marshaller_google_cloud_vision_v1_ListProductsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.GetProductRequest, global::Google.Cloud.Vision.V1.Product> __Method_GetProduct = new grpc::Method<global::Google.Cloud.Vision.V1.GetProductRequest, global::Google.Cloud.Vision.V1.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_google_cloud_vision_v1_GetProductRequest,
        __Marshaller_google_cloud_vision_v1_Product);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.UpdateProductRequest, global::Google.Cloud.Vision.V1.Product> __Method_UpdateProduct = new grpc::Method<global::Google.Cloud.Vision.V1.UpdateProductRequest, global::Google.Cloud.Vision.V1.Product>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProduct",
        __Marshaller_google_cloud_vision_v1_UpdateProductRequest,
        __Marshaller_google_cloud_vision_v1_Product);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteProduct = new grpc::Method<global::Google.Cloud.Vision.V1.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProduct",
        __Marshaller_google_cloud_vision_v1_DeleteProductRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.CreateReferenceImageRequest, global::Google.Cloud.Vision.V1.ReferenceImage> __Method_CreateReferenceImage = new grpc::Method<global::Google.Cloud.Vision.V1.CreateReferenceImageRequest, global::Google.Cloud.Vision.V1.ReferenceImage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateReferenceImage",
        __Marshaller_google_cloud_vision_v1_CreateReferenceImageRequest,
        __Marshaller_google_cloud_vision_v1_ReferenceImage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteReferenceImage = new grpc::Method<global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteReferenceImage",
        __Marshaller_google_cloud_vision_v1_DeleteReferenceImageRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.ListReferenceImagesRequest, global::Google.Cloud.Vision.V1.ListReferenceImagesResponse> __Method_ListReferenceImages = new grpc::Method<global::Google.Cloud.Vision.V1.ListReferenceImagesRequest, global::Google.Cloud.Vision.V1.ListReferenceImagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListReferenceImages",
        __Marshaller_google_cloud_vision_v1_ListReferenceImagesRequest,
        __Marshaller_google_cloud_vision_v1_ListReferenceImagesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.GetReferenceImageRequest, global::Google.Cloud.Vision.V1.ReferenceImage> __Method_GetReferenceImage = new grpc::Method<global::Google.Cloud.Vision.V1.GetReferenceImageRequest, global::Google.Cloud.Vision.V1.ReferenceImage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetReferenceImage",
        __Marshaller_google_cloud_vision_v1_GetReferenceImageRequest,
        __Marshaller_google_cloud_vision_v1_ReferenceImage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.AddProductToProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddProductToProductSet = new grpc::Method<global::Google.Cloud.Vision.V1.AddProductToProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProductToProductSet",
        __Marshaller_google_cloud_vision_v1_AddProductToProductSetRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_RemoveProductFromProductSet = new grpc::Method<global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveProductFromProductSet",
        __Marshaller_google_cloud_vision_v1_RemoveProductFromProductSetRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest, global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse> __Method_ListProductsInProductSet = new grpc::Method<global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest, global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProductsInProductSet",
        __Marshaller_google_cloud_vision_v1_ListProductsInProductSetRequest,
        __Marshaller_google_cloud_vision_v1_ListProductsInProductSetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.ImportProductSetsRequest, global::Google.LongRunning.Operation> __Method_ImportProductSets = new grpc::Method<global::Google.Cloud.Vision.V1.ImportProductSetsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportProductSets",
        __Marshaller_google_cloud_vision_v1_ImportProductSetsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Vision.V1.PurgeProductsRequest, global::Google.LongRunning.Operation> __Method_PurgeProducts = new grpc::Method<global::Google.Cloud.Vision.V1.PurgeProductsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PurgeProducts",
        __Marshaller_google_cloud_vision_v1_PurgeProductsRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Vision.V1.ProductSearchServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ProductSearch</summary>
    [grpc::BindServiceMethod(typeof(ProductSearch), "BindService")]
    public abstract partial class ProductSearchBase
    {
      /// <summary>
      /// Creates and returns a new ProductSet resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing, or is longer than
      ///   4096 characters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ProductSet> CreateProductSet(global::Google.Cloud.Vision.V1.CreateProductSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ProductSets in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ListProductSetsResponse> ListProductSets(global::Google.Cloud.Vision.V1.ListProductSetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information associated with a ProductSet.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ProductSet> GetProductSet(global::Google.Cloud.Vision.V1.GetProductSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Makes changes to a ProductSet resource.
      /// Only display_name can be updated currently.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but
      ///   missing from the request or longer than 4096 characters.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ProductSet> UpdateProductSet(global::Google.Cloud.Vision.V1.UpdateProductSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Permanently deletes a ProductSet. Products and ReferenceImages in the
      /// ProductSet are not deleted.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductSet(global::Google.Cloud.Vision.V1.DeleteProductSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates and returns a new product resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if description is longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is missing or invalid.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.Product> CreateProduct(global::Google.Cloud.Vision.V1.CreateProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists products in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ListProductsResponse> ListProducts(global::Google.Cloud.Vision.V1.ListProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information associated with a Product.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.Product> GetProduct(global::Google.Cloud.Vision.V1.GetProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Makes changes to a Product resource.
      /// Only the `display_name`, `description`, and `labels` fields can be updated
      /// right now.
      ///
      /// If labels are updated, the change will not be reflected in queries until
      /// the next index time.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but is
      ///   missing from the request or longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if description is present in update_mask but is
      ///   longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is present in update_mask.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.Product> UpdateProduct(global::Google.Cloud.Vision.V1.UpdateProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Permanently deletes a product and its reference images.
      ///
      /// Metadata of the product and all its images will be deleted right away, but
      /// search queries against ProductSets containing the product may still work
      /// until all related caches are refreshed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProduct(global::Google.Cloud.Vision.V1.DeleteProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates and returns a new ReferenceImage resource.
      ///
      /// The `bounding_poly` field is optional. If `bounding_poly` is not specified,
      /// the system will try to detect regions of interest in the image that are
      /// compatible with the product_category on the parent product. If it is
      /// specified, detection is ALWAYS skipped. The system converts polygons into
      /// non-rotated rectangles.
      ///
      /// Note that the pipeline will resize the image if the image resolution is too
      /// large to process (above 50MP).
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if the product does not exist.
      /// * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing
      ///   compatible with the parent product's product_category is detected.
      /// * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ReferenceImage> CreateReferenceImage(global::Google.Cloud.Vision.V1.CreateReferenceImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Permanently deletes a reference image.
      ///
      /// The image metadata will be deleted right away, but search queries
      /// against ProductSets containing the image may still work until all related
      /// caches are refreshed.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteReferenceImage(global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists reference images.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the parent product does not exist.
      /// * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ListReferenceImagesResponse> ListReferenceImages(global::Google.Cloud.Vision.V1.ListReferenceImagesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information associated with a ReferenceImage.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the specified image does not exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ReferenceImage> GetReferenceImage(global::Google.Cloud.Vision.V1.GetReferenceImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Adds a Product to the specified ProductSet. If the Product is already
      /// present, no change is made.
      ///
      /// One Product can be added to at most 100 ProductSets.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product or the ProductSet doesn't exist.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> AddProductToProductSet(global::Google.Cloud.Vision.V1.AddProductToProductSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Removes a Product from the specified ProductSet.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> RemoveProductFromProductSet(global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the Products in a ProductSet, in an unspecified order. If the
      /// ProductSet does not exist, the products field of the response will be
      /// empty.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse> ListProductsInProductSet(global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Asynchronous API that imports a list of reference images to specified
      /// product sets based on a list of image information.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// `Operation.response` contains `ImportProductSetsResponse`. (results)
      ///
      /// The input source of this method is a csv file on Google Cloud Storage.
      /// For the format of the csv file please see
      /// [ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1.ImportProductSetsGcsSource.csv_file_uri].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportProductSets(global::Google.Cloud.Vision.V1.ImportProductSetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Asynchronous API to delete all Products in a ProductSet or all Products
      /// that are in no ProductSet.
      ///
      /// If a Product is a member of the specified ProductSet in addition to other
      /// ProductSets, the Product will still be deleted.
      ///
      /// It is recommended to not delete the specified ProductSet until after this
      /// operation has completed. It is also recommended to not add any of the
      /// Products involved in the batch delete to a new ProductSet while this
      /// operation is running because those Products may still end up deleted.
      ///
      /// It's not possible to undo the PurgeProducts operation. Therefore, it is
      /// recommended to keep the csv files used in ImportProductSets (if that was
      /// how you originally built the Product Set) before starting PurgeProducts, in
      /// case you need to re-import the data after deletion.
      ///
      /// If the plan is to purge all of the Products from a ProductSet and then
      /// re-use the empty ProductSet to re-import new Products into the empty
      /// ProductSet, you must wait until the PurgeProducts operation has finished
      /// for that ProductSet.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> PurgeProducts(global::Google.Cloud.Vision.V1.PurgeProductsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ProductSearch</summary>
    public partial class ProductSearchClient : grpc::ClientBase<ProductSearchClient>
    {
      /// <summary>Creates a new client for ProductSearch</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ProductSearchClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ProductSearch that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ProductSearchClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ProductSearchClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ProductSearchClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates and returns a new ProductSet resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing, or is longer than
      ///   4096 characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ProductSet CreateProductSet(global::Google.Cloud.Vision.V1.CreateProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProductSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new ProductSet resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing, or is longer than
      ///   4096 characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ProductSet CreateProductSet(global::Google.Cloud.Vision.V1.CreateProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProductSet, null, options, request);
      }
      /// <summary>
      /// Creates and returns a new ProductSet resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing, or is longer than
      ///   4096 characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ProductSet> CreateProductSetAsync(global::Google.Cloud.Vision.V1.CreateProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProductSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new ProductSet resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing, or is longer than
      ///   4096 characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ProductSet> CreateProductSetAsync(global::Google.Cloud.Vision.V1.CreateProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProductSet, null, options, request);
      }
      /// <summary>
      /// Lists ProductSets in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ListProductSetsResponse ListProductSets(global::Google.Cloud.Vision.V1.ListProductSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProductSets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ProductSets in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ListProductSetsResponse ListProductSets(global::Google.Cloud.Vision.V1.ListProductSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProductSets, null, options, request);
      }
      /// <summary>
      /// Lists ProductSets in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ListProductSetsResponse> ListProductSetsAsync(global::Google.Cloud.Vision.V1.ListProductSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProductSetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ProductSets in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ListProductSetsResponse> ListProductSetsAsync(global::Google.Cloud.Vision.V1.ListProductSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProductSets, null, options, request);
      }
      /// <summary>
      /// Gets information associated with a ProductSet.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ProductSet GetProductSet(global::Google.Cloud.Vision.V1.GetProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information associated with a ProductSet.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ProductSet GetProductSet(global::Google.Cloud.Vision.V1.GetProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProductSet, null, options, request);
      }
      /// <summary>
      /// Gets information associated with a ProductSet.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ProductSet> GetProductSetAsync(global::Google.Cloud.Vision.V1.GetProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information associated with a ProductSet.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ProductSet> GetProductSetAsync(global::Google.Cloud.Vision.V1.GetProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProductSet, null, options, request);
      }
      /// <summary>
      /// Makes changes to a ProductSet resource.
      /// Only display_name can be updated currently.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but
      ///   missing from the request or longer than 4096 characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ProductSet UpdateProductSet(global::Google.Cloud.Vision.V1.UpdateProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProductSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Makes changes to a ProductSet resource.
      /// Only display_name can be updated currently.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but
      ///   missing from the request or longer than 4096 characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ProductSet UpdateProductSet(global::Google.Cloud.Vision.V1.UpdateProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProductSet, null, options, request);
      }
      /// <summary>
      /// Makes changes to a ProductSet resource.
      /// Only display_name can be updated currently.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but
      ///   missing from the request or longer than 4096 characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ProductSet> UpdateProductSetAsync(global::Google.Cloud.Vision.V1.UpdateProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProductSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Makes changes to a ProductSet resource.
      /// Only display_name can be updated currently.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the ProductSet does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but
      ///   missing from the request or longer than 4096 characters.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ProductSet> UpdateProductSetAsync(global::Google.Cloud.Vision.V1.UpdateProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProductSet, null, options, request);
      }
      /// <summary>
      /// Permanently deletes a ProductSet. Products and ReferenceImages in the
      /// ProductSet are not deleted.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteProductSet(global::Google.Cloud.Vision.V1.DeleteProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes a ProductSet. Products and ReferenceImages in the
      /// ProductSet are not deleted.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteProductSet(global::Google.Cloud.Vision.V1.DeleteProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProductSet, null, options, request);
      }
      /// <summary>
      /// Permanently deletes a ProductSet. Products and ReferenceImages in the
      /// ProductSet are not deleted.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductSetAsync(global::Google.Cloud.Vision.V1.DeleteProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes a ProductSet. Products and ReferenceImages in the
      /// ProductSet are not deleted.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductSetAsync(global::Google.Cloud.Vision.V1.DeleteProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProductSet, null, options, request);
      }
      /// <summary>
      /// Creates and returns a new product resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if description is longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.Product CreateProduct(global::Google.Cloud.Vision.V1.CreateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new product resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if description is longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.Product CreateProduct(global::Google.Cloud.Vision.V1.CreateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProduct, null, options, request);
      }
      /// <summary>
      /// Creates and returns a new product resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if description is longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.Product> CreateProductAsync(global::Google.Cloud.Vision.V1.CreateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new product resource.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if display_name is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if description is longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is missing or invalid.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.Product> CreateProductAsync(global::Google.Cloud.Vision.V1.CreateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProduct, null, options, request);
      }
      /// <summary>
      /// Lists products in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ListProductsResponse ListProducts(global::Google.Cloud.Vision.V1.ListProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists products in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ListProductsResponse ListProducts(global::Google.Cloud.Vision.V1.ListProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProducts, null, options, request);
      }
      /// <summary>
      /// Lists products in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ListProductsResponse> ListProductsAsync(global::Google.Cloud.Vision.V1.ListProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists products in an unspecified order.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ListProductsResponse> ListProductsAsync(global::Google.Cloud.Vision.V1.ListProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProducts, null, options, request);
      }
      /// <summary>
      /// Gets information associated with a Product.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.Product GetProduct(global::Google.Cloud.Vision.V1.GetProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information associated with a Product.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.Product GetProduct(global::Google.Cloud.Vision.V1.GetProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProduct, null, options, request);
      }
      /// <summary>
      /// Gets information associated with a Product.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.Product> GetProductAsync(global::Google.Cloud.Vision.V1.GetProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information associated with a Product.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.Product> GetProductAsync(global::Google.Cloud.Vision.V1.GetProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProduct, null, options, request);
      }
      /// <summary>
      /// Makes changes to a Product resource.
      /// Only the `display_name`, `description`, and `labels` fields can be updated
      /// right now.
      ///
      /// If labels are updated, the change will not be reflected in queries until
      /// the next index time.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but is
      ///   missing from the request or longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if description is present in update_mask but is
      ///   longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is present in update_mask.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.Product UpdateProduct(global::Google.Cloud.Vision.V1.UpdateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Makes changes to a Product resource.
      /// Only the `display_name`, `description`, and `labels` fields can be updated
      /// right now.
      ///
      /// If labels are updated, the change will not be reflected in queries until
      /// the next index time.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but is
      ///   missing from the request or longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if description is present in update_mask but is
      ///   longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is present in update_mask.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.Product UpdateProduct(global::Google.Cloud.Vision.V1.UpdateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      /// <summary>
      /// Makes changes to a Product resource.
      /// Only the `display_name`, `description`, and `labels` fields can be updated
      /// right now.
      ///
      /// If labels are updated, the change will not be reflected in queries until
      /// the next index time.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but is
      ///   missing from the request or longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if description is present in update_mask but is
      ///   longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is present in update_mask.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.Product> UpdateProductAsync(global::Google.Cloud.Vision.V1.UpdateProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Makes changes to a Product resource.
      /// Only the `display_name`, `description`, and `labels` fields can be updated
      /// right now.
      ///
      /// If labels are updated, the change will not be reflected in queries until
      /// the next index time.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product does not exist.
      /// * Returns INVALID_ARGUMENT if display_name is present in update_mask but is
      ///   missing from the request or longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if description is present in update_mask but is
      ///   longer than 4096 characters.
      /// * Returns INVALID_ARGUMENT if product_category is present in update_mask.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.Product> UpdateProductAsync(global::Google.Cloud.Vision.V1.UpdateProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProduct, null, options, request);
      }
      /// <summary>
      /// Permanently deletes a product and its reference images.
      ///
      /// Metadata of the product and all its images will be deleted right away, but
      /// search queries against ProductSets containing the product may still work
      /// until all related caches are refreshed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteProduct(global::Google.Cloud.Vision.V1.DeleteProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes a product and its reference images.
      ///
      /// Metadata of the product and all its images will be deleted right away, but
      /// search queries against ProductSets containing the product may still work
      /// until all related caches are refreshed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteProduct(global::Google.Cloud.Vision.V1.DeleteProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      /// <summary>
      /// Permanently deletes a product and its reference images.
      ///
      /// Metadata of the product and all its images will be deleted right away, but
      /// search queries against ProductSets containing the product may still work
      /// until all related caches are refreshed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductAsync(global::Google.Cloud.Vision.V1.DeleteProductRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes a product and its reference images.
      ///
      /// Metadata of the product and all its images will be deleted right away, but
      /// search queries against ProductSets containing the product may still work
      /// until all related caches are refreshed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteProductAsync(global::Google.Cloud.Vision.V1.DeleteProductRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProduct, null, options, request);
      }
      /// <summary>
      /// Creates and returns a new ReferenceImage resource.
      ///
      /// The `bounding_poly` field is optional. If `bounding_poly` is not specified,
      /// the system will try to detect regions of interest in the image that are
      /// compatible with the product_category on the parent product. If it is
      /// specified, detection is ALWAYS skipped. The system converts polygons into
      /// non-rotated rectangles.
      ///
      /// Note that the pipeline will resize the image if the image resolution is too
      /// large to process (above 50MP).
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if the product does not exist.
      /// * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing
      ///   compatible with the parent product's product_category is detected.
      /// * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ReferenceImage CreateReferenceImage(global::Google.Cloud.Vision.V1.CreateReferenceImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateReferenceImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new ReferenceImage resource.
      ///
      /// The `bounding_poly` field is optional. If `bounding_poly` is not specified,
      /// the system will try to detect regions of interest in the image that are
      /// compatible with the product_category on the parent product. If it is
      /// specified, detection is ALWAYS skipped. The system converts polygons into
      /// non-rotated rectangles.
      ///
      /// Note that the pipeline will resize the image if the image resolution is too
      /// large to process (above 50MP).
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if the product does not exist.
      /// * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing
      ///   compatible with the parent product's product_category is detected.
      /// * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ReferenceImage CreateReferenceImage(global::Google.Cloud.Vision.V1.CreateReferenceImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateReferenceImage, null, options, request);
      }
      /// <summary>
      /// Creates and returns a new ReferenceImage resource.
      ///
      /// The `bounding_poly` field is optional. If `bounding_poly` is not specified,
      /// the system will try to detect regions of interest in the image that are
      /// compatible with the product_category on the parent product. If it is
      /// specified, detection is ALWAYS skipped. The system converts polygons into
      /// non-rotated rectangles.
      ///
      /// Note that the pipeline will resize the image if the image resolution is too
      /// large to process (above 50MP).
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if the product does not exist.
      /// * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing
      ///   compatible with the parent product's product_category is detected.
      /// * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ReferenceImage> CreateReferenceImageAsync(global::Google.Cloud.Vision.V1.CreateReferenceImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateReferenceImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates and returns a new ReferenceImage resource.
      ///
      /// The `bounding_poly` field is optional. If `bounding_poly` is not specified,
      /// the system will try to detect regions of interest in the image that are
      /// compatible with the product_category on the parent product. If it is
      /// specified, detection is ALWAYS skipped. The system converts polygons into
      /// non-rotated rectangles.
      ///
      /// Note that the pipeline will resize the image if the image resolution is too
      /// large to process (above 50MP).
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096
      ///   characters.
      /// * Returns INVALID_ARGUMENT if the product does not exist.
      /// * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing
      ///   compatible with the parent product's product_category is detected.
      /// * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ReferenceImage> CreateReferenceImageAsync(global::Google.Cloud.Vision.V1.CreateReferenceImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateReferenceImage, null, options, request);
      }
      /// <summary>
      /// Permanently deletes a reference image.
      ///
      /// The image metadata will be deleted right away, but search queries
      /// against ProductSets containing the image may still work until all related
      /// caches are refreshed.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteReferenceImage(global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteReferenceImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes a reference image.
      ///
      /// The image metadata will be deleted right away, but search queries
      /// against ProductSets containing the image may still work until all related
      /// caches are refreshed.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteReferenceImage(global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteReferenceImage, null, options, request);
      }
      /// <summary>
      /// Permanently deletes a reference image.
      ///
      /// The image metadata will be deleted right away, but search queries
      /// against ProductSets containing the image may still work until all related
      /// caches are refreshed.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteReferenceImageAsync(global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteReferenceImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes a reference image.
      ///
      /// The image metadata will be deleted right away, but search queries
      /// against ProductSets containing the image may still work until all related
      /// caches are refreshed.
      ///
      /// The actual image files are not deleted from Google Cloud Storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteReferenceImageAsync(global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteReferenceImage, null, options, request);
      }
      /// <summary>
      /// Lists reference images.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the parent product does not exist.
      /// * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ListReferenceImagesResponse ListReferenceImages(global::Google.Cloud.Vision.V1.ListReferenceImagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReferenceImages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists reference images.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the parent product does not exist.
      /// * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ListReferenceImagesResponse ListReferenceImages(global::Google.Cloud.Vision.V1.ListReferenceImagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListReferenceImages, null, options, request);
      }
      /// <summary>
      /// Lists reference images.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the parent product does not exist.
      /// * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ListReferenceImagesResponse> ListReferenceImagesAsync(global::Google.Cloud.Vision.V1.ListReferenceImagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListReferenceImagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists reference images.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the parent product does not exist.
      /// * Returns INVALID_ARGUMENT if the page_size is greater than 100, or less
      ///   than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ListReferenceImagesResponse> ListReferenceImagesAsync(global::Google.Cloud.Vision.V1.ListReferenceImagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListReferenceImages, null, options, request);
      }
      /// <summary>
      /// Gets information associated with a ReferenceImage.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the specified image does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ReferenceImage GetReferenceImage(global::Google.Cloud.Vision.V1.GetReferenceImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReferenceImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information associated with a ReferenceImage.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the specified image does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ReferenceImage GetReferenceImage(global::Google.Cloud.Vision.V1.GetReferenceImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetReferenceImage, null, options, request);
      }
      /// <summary>
      /// Gets information associated with a ReferenceImage.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the specified image does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ReferenceImage> GetReferenceImageAsync(global::Google.Cloud.Vision.V1.GetReferenceImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetReferenceImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information associated with a ReferenceImage.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the specified image does not exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ReferenceImage> GetReferenceImageAsync(global::Google.Cloud.Vision.V1.GetReferenceImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetReferenceImage, null, options, request);
      }
      /// <summary>
      /// Adds a Product to the specified ProductSet. If the Product is already
      /// present, no change is made.
      ///
      /// One Product can be added to at most 100 ProductSets.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product or the ProductSet doesn't exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddProductToProductSet(global::Google.Cloud.Vision.V1.AddProductToProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProductToProductSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Adds a Product to the specified ProductSet. If the Product is already
      /// present, no change is made.
      ///
      /// One Product can be added to at most 100 ProductSets.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product or the ProductSet doesn't exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty AddProductToProductSet(global::Google.Cloud.Vision.V1.AddProductToProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddProductToProductSet, null, options, request);
      }
      /// <summary>
      /// Adds a Product to the specified ProductSet. If the Product is already
      /// present, no change is made.
      ///
      /// One Product can be added to at most 100 ProductSets.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product or the ProductSet doesn't exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddProductToProductSetAsync(global::Google.Cloud.Vision.V1.AddProductToProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProductToProductSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Adds a Product to the specified ProductSet. If the Product is already
      /// present, no change is made.
      ///
      /// One Product can be added to at most 100 ProductSets.
      ///
      /// Possible errors:
      ///
      /// * Returns NOT_FOUND if the Product or the ProductSet doesn't exist.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> AddProductToProductSetAsync(global::Google.Cloud.Vision.V1.AddProductToProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddProductToProductSet, null, options, request);
      }
      /// <summary>
      /// Removes a Product from the specified ProductSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveProductFromProductSet(global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProductFromProductSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Removes a Product from the specified ProductSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty RemoveProductFromProductSet(global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveProductFromProductSet, null, options, request);
      }
      /// <summary>
      /// Removes a Product from the specified ProductSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveProductFromProductSetAsync(global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProductFromProductSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Removes a Product from the specified ProductSet.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> RemoveProductFromProductSetAsync(global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveProductFromProductSet, null, options, request);
      }
      /// <summary>
      /// Lists the Products in a ProductSet, in an unspecified order. If the
      /// ProductSet does not exist, the products field of the response will be
      /// empty.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse ListProductsInProductSet(global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProductsInProductSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Products in a ProductSet, in an unspecified order. If the
      /// ProductSet does not exist, the products field of the response will be
      /// empty.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse ListProductsInProductSet(global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProductsInProductSet, null, options, request);
      }
      /// <summary>
      /// Lists the Products in a ProductSet, in an unspecified order. If the
      /// ProductSet does not exist, the products field of the response will be
      /// empty.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse> ListProductsInProductSetAsync(global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProductsInProductSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Products in a ProductSet, in an unspecified order. If the
      /// ProductSet does not exist, the products field of the response will be
      /// empty.
      ///
      /// Possible errors:
      ///
      /// * Returns INVALID_ARGUMENT if page_size is greater than 100 or less than 1.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse> ListProductsInProductSetAsync(global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProductsInProductSet, null, options, request);
      }
      /// <summary>
      /// Asynchronous API that imports a list of reference images to specified
      /// product sets based on a list of image information.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// `Operation.response` contains `ImportProductSetsResponse`. (results)
      ///
      /// The input source of this method is a csv file on Google Cloud Storage.
      /// For the format of the csv file please see
      /// [ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1.ImportProductSetsGcsSource.csv_file_uri].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportProductSets(global::Google.Cloud.Vision.V1.ImportProductSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportProductSets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Asynchronous API that imports a list of reference images to specified
      /// product sets based on a list of image information.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// `Operation.response` contains `ImportProductSetsResponse`. (results)
      ///
      /// The input source of this method is a csv file on Google Cloud Storage.
      /// For the format of the csv file please see
      /// [ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1.ImportProductSetsGcsSource.csv_file_uri].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportProductSets(global::Google.Cloud.Vision.V1.ImportProductSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportProductSets, null, options, request);
      }
      /// <summary>
      /// Asynchronous API that imports a list of reference images to specified
      /// product sets based on a list of image information.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// `Operation.response` contains `ImportProductSetsResponse`. (results)
      ///
      /// The input source of this method is a csv file on Google Cloud Storage.
      /// For the format of the csv file please see
      /// [ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1.ImportProductSetsGcsSource.csv_file_uri].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportProductSetsAsync(global::Google.Cloud.Vision.V1.ImportProductSetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportProductSetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Asynchronous API that imports a list of reference images to specified
      /// product sets based on a list of image information.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// `Operation.response` contains `ImportProductSetsResponse`. (results)
      ///
      /// The input source of this method is a csv file on Google Cloud Storage.
      /// For the format of the csv file please see
      /// [ImportProductSetsGcsSource.csv_file_uri][google.cloud.vision.v1.ImportProductSetsGcsSource.csv_file_uri].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportProductSetsAsync(global::Google.Cloud.Vision.V1.ImportProductSetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportProductSets, null, options, request);
      }
      /// <summary>
      /// Asynchronous API to delete all Products in a ProductSet or all Products
      /// that are in no ProductSet.
      ///
      /// If a Product is a member of the specified ProductSet in addition to other
      /// ProductSets, the Product will still be deleted.
      ///
      /// It is recommended to not delete the specified ProductSet until after this
      /// operation has completed. It is also recommended to not add any of the
      /// Products involved in the batch delete to a new ProductSet while this
      /// operation is running because those Products may still end up deleted.
      ///
      /// It's not possible to undo the PurgeProducts operation. Therefore, it is
      /// recommended to keep the csv files used in ImportProductSets (if that was
      /// how you originally built the Product Set) before starting PurgeProducts, in
      /// case you need to re-import the data after deletion.
      ///
      /// If the plan is to purge all of the Products from a ProductSet and then
      /// re-use the empty ProductSet to re-import new Products into the empty
      /// ProductSet, you must wait until the PurgeProducts operation has finished
      /// for that ProductSet.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation PurgeProducts(global::Google.Cloud.Vision.V1.PurgeProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PurgeProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Asynchronous API to delete all Products in a ProductSet or all Products
      /// that are in no ProductSet.
      ///
      /// If a Product is a member of the specified ProductSet in addition to other
      /// ProductSets, the Product will still be deleted.
      ///
      /// It is recommended to not delete the specified ProductSet until after this
      /// operation has completed. It is also recommended to not add any of the
      /// Products involved in the batch delete to a new ProductSet while this
      /// operation is running because those Products may still end up deleted.
      ///
      /// It's not possible to undo the PurgeProducts operation. Therefore, it is
      /// recommended to keep the csv files used in ImportProductSets (if that was
      /// how you originally built the Product Set) before starting PurgeProducts, in
      /// case you need to re-import the data after deletion.
      ///
      /// If the plan is to purge all of the Products from a ProductSet and then
      /// re-use the empty ProductSet to re-import new Products into the empty
      /// ProductSet, you must wait until the PurgeProducts operation has finished
      /// for that ProductSet.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation PurgeProducts(global::Google.Cloud.Vision.V1.PurgeProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PurgeProducts, null, options, request);
      }
      /// <summary>
      /// Asynchronous API to delete all Products in a ProductSet or all Products
      /// that are in no ProductSet.
      ///
      /// If a Product is a member of the specified ProductSet in addition to other
      /// ProductSets, the Product will still be deleted.
      ///
      /// It is recommended to not delete the specified ProductSet until after this
      /// operation has completed. It is also recommended to not add any of the
      /// Products involved in the batch delete to a new ProductSet while this
      /// operation is running because those Products may still end up deleted.
      ///
      /// It's not possible to undo the PurgeProducts operation. Therefore, it is
      /// recommended to keep the csv files used in ImportProductSets (if that was
      /// how you originally built the Product Set) before starting PurgeProducts, in
      /// case you need to re-import the data after deletion.
      ///
      /// If the plan is to purge all of the Products from a ProductSet and then
      /// re-use the empty ProductSet to re-import new Products into the empty
      /// ProductSet, you must wait until the PurgeProducts operation has finished
      /// for that ProductSet.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> PurgeProductsAsync(global::Google.Cloud.Vision.V1.PurgeProductsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PurgeProductsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Asynchronous API to delete all Products in a ProductSet or all Products
      /// that are in no ProductSet.
      ///
      /// If a Product is a member of the specified ProductSet in addition to other
      /// ProductSets, the Product will still be deleted.
      ///
      /// It is recommended to not delete the specified ProductSet until after this
      /// operation has completed. It is also recommended to not add any of the
      /// Products involved in the batch delete to a new ProductSet while this
      /// operation is running because those Products may still end up deleted.
      ///
      /// It's not possible to undo the PurgeProducts operation. Therefore, it is
      /// recommended to keep the csv files used in ImportProductSets (if that was
      /// how you originally built the Product Set) before starting PurgeProducts, in
      /// case you need to re-import the data after deletion.
      ///
      /// If the plan is to purge all of the Products from a ProductSet and then
      /// re-use the empty ProductSet to re-import new Products into the empty
      /// ProductSet, you must wait until the PurgeProducts operation has finished
      /// for that ProductSet.
      ///
      /// The [google.longrunning.Operation][google.longrunning.Operation] API can be
      /// used to keep track of the progress and results of the request.
      /// `Operation.metadata` contains `BatchOperationMetadata`. (progress)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> PurgeProductsAsync(global::Google.Cloud.Vision.V1.PurgeProductsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PurgeProducts, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ProductSearchClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProductSearchClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ProductSearchBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateProductSet, serviceImpl.CreateProductSet)
          .AddMethod(__Method_ListProductSets, serviceImpl.ListProductSets)
          .AddMethod(__Method_GetProductSet, serviceImpl.GetProductSet)
          .AddMethod(__Method_UpdateProductSet, serviceImpl.UpdateProductSet)
          .AddMethod(__Method_DeleteProductSet, serviceImpl.DeleteProductSet)
          .AddMethod(__Method_CreateProduct, serviceImpl.CreateProduct)
          .AddMethod(__Method_ListProducts, serviceImpl.ListProducts)
          .AddMethod(__Method_GetProduct, serviceImpl.GetProduct)
          .AddMethod(__Method_UpdateProduct, serviceImpl.UpdateProduct)
          .AddMethod(__Method_DeleteProduct, serviceImpl.DeleteProduct)
          .AddMethod(__Method_CreateReferenceImage, serviceImpl.CreateReferenceImage)
          .AddMethod(__Method_DeleteReferenceImage, serviceImpl.DeleteReferenceImage)
          .AddMethod(__Method_ListReferenceImages, serviceImpl.ListReferenceImages)
          .AddMethod(__Method_GetReferenceImage, serviceImpl.GetReferenceImage)
          .AddMethod(__Method_AddProductToProductSet, serviceImpl.AddProductToProductSet)
          .AddMethod(__Method_RemoveProductFromProductSet, serviceImpl.RemoveProductFromProductSet)
          .AddMethod(__Method_ListProductsInProductSet, serviceImpl.ListProductsInProductSet)
          .AddMethod(__Method_ImportProductSets, serviceImpl.ImportProductSets)
          .AddMethod(__Method_PurgeProducts, serviceImpl.PurgeProducts).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProductSearchBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateProductSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.CreateProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet>(serviceImpl.CreateProductSet));
      serviceBinder.AddMethod(__Method_ListProductSets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.ListProductSetsRequest, global::Google.Cloud.Vision.V1.ListProductSetsResponse>(serviceImpl.ListProductSets));
      serviceBinder.AddMethod(__Method_GetProductSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.GetProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet>(serviceImpl.GetProductSet));
      serviceBinder.AddMethod(__Method_UpdateProductSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.UpdateProductSetRequest, global::Google.Cloud.Vision.V1.ProductSet>(serviceImpl.UpdateProductSet));
      serviceBinder.AddMethod(__Method_DeleteProductSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.DeleteProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteProductSet));
      serviceBinder.AddMethod(__Method_CreateProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.CreateProductRequest, global::Google.Cloud.Vision.V1.Product>(serviceImpl.CreateProduct));
      serviceBinder.AddMethod(__Method_ListProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.ListProductsRequest, global::Google.Cloud.Vision.V1.ListProductsResponse>(serviceImpl.ListProducts));
      serviceBinder.AddMethod(__Method_GetProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.GetProductRequest, global::Google.Cloud.Vision.V1.Product>(serviceImpl.GetProduct));
      serviceBinder.AddMethod(__Method_UpdateProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.UpdateProductRequest, global::Google.Cloud.Vision.V1.Product>(serviceImpl.UpdateProduct));
      serviceBinder.AddMethod(__Method_DeleteProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.DeleteProductRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteProduct));
      serviceBinder.AddMethod(__Method_CreateReferenceImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.CreateReferenceImageRequest, global::Google.Cloud.Vision.V1.ReferenceImage>(serviceImpl.CreateReferenceImage));
      serviceBinder.AddMethod(__Method_DeleteReferenceImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.DeleteReferenceImageRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteReferenceImage));
      serviceBinder.AddMethod(__Method_ListReferenceImages, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.ListReferenceImagesRequest, global::Google.Cloud.Vision.V1.ListReferenceImagesResponse>(serviceImpl.ListReferenceImages));
      serviceBinder.AddMethod(__Method_GetReferenceImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.GetReferenceImageRequest, global::Google.Cloud.Vision.V1.ReferenceImage>(serviceImpl.GetReferenceImage));
      serviceBinder.AddMethod(__Method_AddProductToProductSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.AddProductToProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.AddProductToProductSet));
      serviceBinder.AddMethod(__Method_RemoveProductFromProductSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.RemoveProductFromProductSetRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.RemoveProductFromProductSet));
      serviceBinder.AddMethod(__Method_ListProductsInProductSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.ListProductsInProductSetRequest, global::Google.Cloud.Vision.V1.ListProductsInProductSetResponse>(serviceImpl.ListProductsInProductSet));
      serviceBinder.AddMethod(__Method_ImportProductSets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.ImportProductSetsRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportProductSets));
      serviceBinder.AddMethod(__Method_PurgeProducts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Vision.V1.PurgeProductsRequest, global::Google.LongRunning.Operation>(serviceImpl.PurgeProducts));
    }

  }
}
#endregion
