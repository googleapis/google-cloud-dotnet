// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/marketingplatform/admin/v1alpha/marketingplatform_admin.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Ads.MarketingPlatform.Admin.V1Alpha {
  /// <summary>
  /// Service Interface for the Google Marketing Platform Admin API.
  /// </summary>
  public static partial class MarketingplatformAdminService
  {
    static readonly string __ServiceName = "google.marketingplatform.admin.v1alpha.MarketingplatformAdminService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest> __Marshaller_google_marketingplatform_admin_v1alpha_GetOrganizationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization> __Marshaller_google_marketingplatform_admin_v1alpha_Organization = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest> __Marshaller_google_marketingplatform_admin_v1alpha_ListAnalyticsAccountLinksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse> __Marshaller_google_marketingplatform_admin_v1alpha_ListAnalyticsAccountLinksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest> __Marshaller_google_marketingplatform_admin_v1alpha_CreateAnalyticsAccountLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink> __Marshaller_google_marketingplatform_admin_v1alpha_AnalyticsAccountLink = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest> __Marshaller_google_marketingplatform_admin_v1alpha_DeleteAnalyticsAccountLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest> __Marshaller_google_marketingplatform_admin_v1alpha_SetPropertyServiceLevelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse> __Marshaller_google_marketingplatform_admin_v1alpha_SetPropertyServiceLevelResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization> __Method_GetOrganization = new grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganization",
        __Marshaller_google_marketingplatform_admin_v1alpha_GetOrganizationRequest,
        __Marshaller_google_marketingplatform_admin_v1alpha_Organization);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse> __Method_ListAnalyticsAccountLinks = new grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAnalyticsAccountLinks",
        __Marshaller_google_marketingplatform_admin_v1alpha_ListAnalyticsAccountLinksRequest,
        __Marshaller_google_marketingplatform_admin_v1alpha_ListAnalyticsAccountLinksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink> __Method_CreateAnalyticsAccountLink = new grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAnalyticsAccountLink",
        __Marshaller_google_marketingplatform_admin_v1alpha_CreateAnalyticsAccountLinkRequest,
        __Marshaller_google_marketingplatform_admin_v1alpha_AnalyticsAccountLink);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAnalyticsAccountLink = new grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAnalyticsAccountLink",
        __Marshaller_google_marketingplatform_admin_v1alpha_DeleteAnalyticsAccountLinkRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse> __Method_SetPropertyServiceLevel = new grpc::Method<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetPropertyServiceLevel",
        __Marshaller_google_marketingplatform_admin_v1alpha_SetPropertyServiceLevelRequest,
        __Marshaller_google_marketingplatform_admin_v1alpha_SetPropertyServiceLevelResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Ads.MarketingPlatform.Admin.V1Alpha.MarketingplatformAdminReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MarketingplatformAdminService</summary>
    [grpc::BindServiceMethod(typeof(MarketingplatformAdminService), "BindService")]
    public abstract partial class MarketingplatformAdminServiceBase
    {
      /// <summary>
      /// Lookup for a single organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization> GetOrganization(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the Google Analytics accounts link to the specified Google Marketing
      /// Platform organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse> ListAnalyticsAccountLinks(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates the link between the Analytics account and the Google Marketing
      /// Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account to create
      /// the link. If the account is already linked to an organization, user needs
      /// to unlink the account from the current organization, then try link again.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink> CreateAnalyticsAccountLink(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the AnalyticsAccountLink, which detaches the Analytics account from
      /// the Google Marketing Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account in order
      /// to delete the link.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnalyticsAccountLink(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the service level for an Analytics property.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse> SetPropertyServiceLevel(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MarketingplatformAdminService</summary>
    public partial class MarketingplatformAdminServiceClient : grpc::ClientBase<MarketingplatformAdminServiceClient>
    {
      /// <summary>Creates a new client for MarketingplatformAdminService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MarketingplatformAdminServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MarketingplatformAdminService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public MarketingplatformAdminServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MarketingplatformAdminServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected MarketingplatformAdminServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lookup for a single organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization GetOrganization(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganization(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization GetOrganization(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganization, null, options, request);
      }
      /// <summary>
      /// Lookup for a single organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization> GetOrganizationAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lookup for a single organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization> GetOrganizationAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganization, null, options, request);
      }
      /// <summary>
      /// Lists the Google Analytics accounts link to the specified Google Marketing
      /// Platform organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse ListAnalyticsAccountLinks(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAnalyticsAccountLinks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Google Analytics accounts link to the specified Google Marketing
      /// Platform organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse ListAnalyticsAccountLinks(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAnalyticsAccountLinks, null, options, request);
      }
      /// <summary>
      /// Lists the Google Analytics accounts link to the specified Google Marketing
      /// Platform organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse> ListAnalyticsAccountLinksAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAnalyticsAccountLinksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the Google Analytics accounts link to the specified Google Marketing
      /// Platform organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse> ListAnalyticsAccountLinksAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAnalyticsAccountLinks, null, options, request);
      }
      /// <summary>
      /// Creates the link between the Analytics account and the Google Marketing
      /// Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account to create
      /// the link. If the account is already linked to an organization, user needs
      /// to unlink the account from the current organization, then try link again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink CreateAnalyticsAccountLink(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAnalyticsAccountLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates the link between the Analytics account and the Google Marketing
      /// Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account to create
      /// the link. If the account is already linked to an organization, user needs
      /// to unlink the account from the current organization, then try link again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink CreateAnalyticsAccountLink(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAnalyticsAccountLink, null, options, request);
      }
      /// <summary>
      /// Creates the link between the Analytics account and the Google Marketing
      /// Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account to create
      /// the link. If the account is already linked to an organization, user needs
      /// to unlink the account from the current organization, then try link again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink> CreateAnalyticsAccountLinkAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAnalyticsAccountLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates the link between the Analytics account and the Google Marketing
      /// Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account to create
      /// the link. If the account is already linked to an organization, user needs
      /// to unlink the account from the current organization, then try link again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink> CreateAnalyticsAccountLinkAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAnalyticsAccountLink, null, options, request);
      }
      /// <summary>
      /// Deletes the AnalyticsAccountLink, which detaches the Analytics account from
      /// the Google Marketing Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account in order
      /// to delete the link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAnalyticsAccountLink(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAnalyticsAccountLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the AnalyticsAccountLink, which detaches the Analytics account from
      /// the Google Marketing Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account in order
      /// to delete the link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAnalyticsAccountLink(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAnalyticsAccountLink, null, options, request);
      }
      /// <summary>
      /// Deletes the AnalyticsAccountLink, which detaches the Analytics account from
      /// the Google Marketing Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account in order
      /// to delete the link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnalyticsAccountLinkAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAnalyticsAccountLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the AnalyticsAccountLink, which detaches the Analytics account from
      /// the Google Marketing Platform organization.
      ///
      /// User needs to be an org user, and admin on the Analytics account in order
      /// to delete the link.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAnalyticsAccountLinkAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAnalyticsAccountLink, null, options, request);
      }
      /// <summary>
      /// Updates the service level for an Analytics property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse SetPropertyServiceLevel(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPropertyServiceLevel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the service level for an Analytics property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse SetPropertyServiceLevel(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetPropertyServiceLevel, null, options, request);
      }
      /// <summary>
      /// Updates the service level for an Analytics property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse> SetPropertyServiceLevelAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPropertyServiceLevelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the service level for an Analytics property.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse> SetPropertyServiceLevelAsync(global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetPropertyServiceLevel, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override MarketingplatformAdminServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MarketingplatformAdminServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MarketingplatformAdminServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetOrganization, serviceImpl.GetOrganization)
          .AddMethod(__Method_ListAnalyticsAccountLinks, serviceImpl.ListAnalyticsAccountLinks)
          .AddMethod(__Method_CreateAnalyticsAccountLink, serviceImpl.CreateAnalyticsAccountLink)
          .AddMethod(__Method_DeleteAnalyticsAccountLink, serviceImpl.DeleteAnalyticsAccountLink)
          .AddMethod(__Method_SetPropertyServiceLevel, serviceImpl.SetPropertyServiceLevel).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MarketingplatformAdminServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetOrganization, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.GetOrganizationRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.Organization>(serviceImpl.GetOrganization));
      serviceBinder.AddMethod(__Method_ListAnalyticsAccountLinks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.ListAnalyticsAccountLinksResponse>(serviceImpl.ListAnalyticsAccountLinks));
      serviceBinder.AddMethod(__Method_CreateAnalyticsAccountLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.CreateAnalyticsAccountLinkRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.AnalyticsAccountLink>(serviceImpl.CreateAnalyticsAccountLink));
      serviceBinder.AddMethod(__Method_DeleteAnalyticsAccountLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.DeleteAnalyticsAccountLinkRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAnalyticsAccountLink));
      serviceBinder.AddMethod(__Method_SetPropertyServiceLevel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelRequest, global::Google.Ads.MarketingPlatform.Admin.V1Alpha.SetPropertyServiceLevelResponse>(serviceImpl.SetPropertyServiceLevel));
    }

  }
}
#endregion
