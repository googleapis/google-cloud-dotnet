// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/appengine/v1/certificate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.AppEngine.V1 {

  /// <summary>Holder for reflection information generated from google/appengine/v1/certificate.proto</summary>
  public static partial class CertificateReflection {

    #region Descriptor
    /// <summary>File descriptor for google/appengine/v1/certificate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CertificateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVnb29nbGUvYXBwZW5naW5lL3YxL2NlcnRpZmljYXRlLnByb3RvEhNnb29n",
            "bGUuYXBwZW5naW5lLnYxGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvItsCChVBdXRob3JpemVkQ2VydGlmaWNhdGUSDAoEbmFtZRgBIAEoCRIK",
            "CgJpZBgCIAEoCRIUCgxkaXNwbGF5X25hbWUYAyABKAkSFAoMZG9tYWluX25h",
            "bWVzGAQgAygJEi8KC2V4cGlyZV90aW1lGAUgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBJFChRjZXJ0aWZpY2F0ZV9yYXdfZGF0YRgGIAEoCzIn",
            "Lmdvb2dsZS5hcHBlbmdpbmUudjEuQ2VydGlmaWNhdGVSYXdEYXRhEkQKE21h",
            "bmFnZWRfY2VydGlmaWNhdGUYByABKAsyJy5nb29nbGUuYXBwZW5naW5lLnYx",
            "Lk1hbmFnZWRDZXJ0aWZpY2F0ZRIfChd2aXNpYmxlX2RvbWFpbl9tYXBwaW5n",
            "cxgIIAMoCRIdChVkb21haW5fbWFwcGluZ3NfY291bnQYCSABKAUiRQoSQ2Vy",
            "dGlmaWNhdGVSYXdEYXRhEhoKEnB1YmxpY19jZXJ0aWZpY2F0ZRgBIAEoCRIT",
            "Cgtwcml2YXRlX2tleRgCIAEoCSKCAQoSTWFuYWdlZENlcnRpZmljYXRlEjUK",
            "EWxhc3RfcmVuZXdhbF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBI1CgZzdGF0dXMYAiABKA4yJS5nb29nbGUuYXBwZW5naW5lLnYx",
            "Lk1hbmFnZW1lbnRTdGF0dXMqxgEKEE1hbmFnZW1lbnRTdGF0dXMSIQodTUFO",
            "QUdFTUVOVF9TVEFUVVNfVU5TUEVDSUZJRUQQABIGCgJPSxABEgsKB1BFTkRJ",
            "TkcQAhIfChtGQUlMRURfUkVUUllJTkdfTk9UX1ZJU0lCTEUQBBIUChBGQUlM",
            "RURfUEVSTUFORU5UEAYSIQodRkFJTEVEX1JFVFJZSU5HX0NBQV9GT1JCSURE",
            "RU4QBxIgChxGQUlMRURfUkVUUllJTkdfQ0FBX0NIRUNLSU5HEAhCwQEKF2Nv",
            "bS5nb29nbGUuYXBwZW5naW5lLnYxQhBDZXJ0aWZpY2F0ZVByb3RvUAFaO2Ns",
            "b3VkLmdvb2dsZS5jb20vZ28vYXBwZW5naW5lL2FwaXYxL2FwcGVuZ2luZXBi",
            "O2FwcGVuZ2luZXBiqgIZR29vZ2xlLkNsb3VkLkFwcEVuZ2luZS5WMcoCGUdv",
            "b2dsZVxDbG91ZFxBcHBFbmdpbmVcVjHqAhxHb29nbGU6OkNsb3VkOjpBcHBF",
            "bmdpbmU6OlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.AppEngine.V1.ManagementStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AppEngine.V1.AuthorizedCertificate), global::Google.Cloud.AppEngine.V1.AuthorizedCertificate.Parser, new[]{ "Name", "Id", "DisplayName", "DomainNames", "ExpireTime", "CertificateRawData", "ManagedCertificate", "VisibleDomainMappings", "DomainMappingsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AppEngine.V1.CertificateRawData), global::Google.Cloud.AppEngine.V1.CertificateRawData.Parser, new[]{ "PublicCertificate", "PrivateKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AppEngine.V1.ManagedCertificate), global::Google.Cloud.AppEngine.V1.ManagedCertificate.Parser, new[]{ "LastRenewalTime", "Status" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// State of certificate management. Refers to the most recent certificate
  /// acquisition or renewal attempt.
  /// </summary>
  public enum ManagementStatus {
    [pbr::OriginalName("MANAGEMENT_STATUS_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Certificate was successfully obtained and inserted into the serving
    /// system.
    /// </summary>
    [pbr::OriginalName("OK")] Ok = 1,
    /// <summary>
    /// Certificate is under active attempts to acquire or renew.
    /// </summary>
    [pbr::OriginalName("PENDING")] Pending = 2,
    /// <summary>
    /// Most recent renewal failed due to an invalid DNS setup and will be
    /// retried. Renewal attempts will continue to fail until the certificate
    /// domain's DNS configuration is fixed. The last successfully provisioned
    /// certificate may still be serving.
    /// </summary>
    [pbr::OriginalName("FAILED_RETRYING_NOT_VISIBLE")] FailedRetryingNotVisible = 4,
    /// <summary>
    /// All renewal attempts have been exhausted, likely due to an invalid DNS
    /// setup.
    /// </summary>
    [pbr::OriginalName("FAILED_PERMANENT")] FailedPermanent = 6,
    /// <summary>
    /// Most recent renewal failed due to an explicit CAA record that does not
    /// include one of the in-use CAs (Google CA and Let's Encrypt). Renewals will
    /// continue to fail until the CAA is reconfigured. The last successfully
    /// provisioned certificate may still be serving.
    /// </summary>
    [pbr::OriginalName("FAILED_RETRYING_CAA_FORBIDDEN")] FailedRetryingCaaForbidden = 7,
    /// <summary>
    /// Most recent renewal failed due to a CAA retrieval failure. This means that
    /// the domain's DNS provider does not properly handle CAA records, failing
    /// requests for CAA records when no CAA records are defined. Renewals will
    /// continue to fail until the DNS provider is changed or a CAA record is
    /// added for the given domain. The last successfully provisioned certificate
    /// may still be serving.
    /// </summary>
    [pbr::OriginalName("FAILED_RETRYING_CAA_CHECKING")] FailedRetryingCaaChecking = 8,
  }

  #endregion

  #region Messages
  /// <summary>
  /// An SSL certificate that a user has been authorized to administer. A user
  /// is authorized to administer any certificate that applies to one of their
  /// authorized domains.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AuthorizedCertificate : pb::IMessage<AuthorizedCertificate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthorizedCertificate> _parser = new pb::MessageParser<AuthorizedCertificate>(() => new AuthorizedCertificate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthorizedCertificate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AppEngine.V1.CertificateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizedCertificate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizedCertificate(AuthorizedCertificate other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      displayName_ = other.displayName_;
      domainNames_ = other.domainNames_.Clone();
      expireTime_ = other.expireTime_ != null ? other.expireTime_.Clone() : null;
      certificateRawData_ = other.certificateRawData_ != null ? other.certificateRawData_.Clone() : null;
      managedCertificate_ = other.managedCertificate_ != null ? other.managedCertificate_.Clone() : null;
      visibleDomainMappings_ = other.visibleDomainMappings_.Clone();
      domainMappingsCount_ = other.domainMappingsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthorizedCertificate Clone() {
      return new AuthorizedCertificate(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Full path to the `AuthorizedCertificate` resource in the API. Example:
    /// `apps/myapp/authorizedCertificates/12345`.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// Relative name of the certificate. This is a unique value autogenerated
    /// on `AuthorizedCertificate` resource creation. Example: `12345`.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 3;
    private string displayName_ = "";
    /// <summary>
    /// The user-specified display name of the certificate. This is not
    /// guaranteed to be unique. Example: `My Certificate`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "domain_names" field.</summary>
    public const int DomainNamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_domainNames_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> domainNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Topmost applicable domains of this certificate. This certificate
    /// applies to these domains and their subdomains. Example: `example.com`.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> DomainNames {
      get { return domainNames_; }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireTime_;
    /// <summary>
    /// The time when this certificate expires. To update the renewal time on this
    /// certificate, upload an SSL certificate with a different expiration time
    /// using [`AuthorizedCertificates.UpdateAuthorizedCertificate`]().
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "certificate_raw_data" field.</summary>
    public const int CertificateRawDataFieldNumber = 6;
    private global::Google.Cloud.AppEngine.V1.CertificateRawData certificateRawData_;
    /// <summary>
    /// The SSL certificate serving the `AuthorizedCertificate` resource. This
    /// must be obtained independently from a certificate authority.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AppEngine.V1.CertificateRawData CertificateRawData {
      get { return certificateRawData_; }
      set {
        certificateRawData_ = value;
      }
    }

    /// <summary>Field number for the "managed_certificate" field.</summary>
    public const int ManagedCertificateFieldNumber = 7;
    private global::Google.Cloud.AppEngine.V1.ManagedCertificate managedCertificate_;
    /// <summary>
    /// Only applicable if this certificate is managed by App Engine. Managed
    /// certificates are tied to the lifecycle of a `DomainMapping` and cannot be
    /// updated or deleted via the `AuthorizedCertificates` API. If this
    /// certificate is manually administered by the user, this field will be empty.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AppEngine.V1.ManagedCertificate ManagedCertificate {
      get { return managedCertificate_; }
      set {
        managedCertificate_ = value;
      }
    }

    /// <summary>Field number for the "visible_domain_mappings" field.</summary>
    public const int VisibleDomainMappingsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_visibleDomainMappings_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> visibleDomainMappings_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The full paths to user visible Domain Mapping resources that have this
    /// certificate mapped. Example: `apps/myapp/domainMappings/example.com`.
    ///
    /// This may not represent the full list of mapped domain mappings if the user
    /// does not have `VIEWER` permissions on all of the applications that have
    /// this certificate mapped. See `domain_mappings_count` for a complete count.
    ///
    /// Only returned by `GET` or `LIST` requests when specifically requested by
    /// the `view=FULL_CERTIFICATE` option.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> VisibleDomainMappings {
      get { return visibleDomainMappings_; }
    }

    /// <summary>Field number for the "domain_mappings_count" field.</summary>
    public const int DomainMappingsCountFieldNumber = 9;
    private int domainMappingsCount_;
    /// <summary>
    /// Aggregate count of the domain mappings with this certificate mapped. This
    /// count includes domain mappings on applications for which the user does not
    /// have `VIEWER` permissions.
    ///
    /// Only returned by `GET` or `LIST` requests when specifically requested by
    /// the `view=FULL_CERTIFICATE` option.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DomainMappingsCount {
      get { return domainMappingsCount_; }
      set {
        domainMappingsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthorizedCertificate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthorizedCertificate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (DisplayName != other.DisplayName) return false;
      if(!domainNames_.Equals(other.domainNames_)) return false;
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      if (!object.Equals(CertificateRawData, other.CertificateRawData)) return false;
      if (!object.Equals(ManagedCertificate, other.ManagedCertificate)) return false;
      if(!visibleDomainMappings_.Equals(other.visibleDomainMappings_)) return false;
      if (DomainMappingsCount != other.DomainMappingsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= domainNames_.GetHashCode();
      if (expireTime_ != null) hash ^= ExpireTime.GetHashCode();
      if (certificateRawData_ != null) hash ^= CertificateRawData.GetHashCode();
      if (managedCertificate_ != null) hash ^= ManagedCertificate.GetHashCode();
      hash ^= visibleDomainMappings_.GetHashCode();
      if (DomainMappingsCount != 0) hash ^= DomainMappingsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      domainNames_.WriteTo(output, _repeated_domainNames_codec);
      if (expireTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExpireTime);
      }
      if (certificateRawData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CertificateRawData);
      }
      if (managedCertificate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ManagedCertificate);
      }
      visibleDomainMappings_.WriteTo(output, _repeated_visibleDomainMappings_codec);
      if (DomainMappingsCount != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(DomainMappingsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      domainNames_.WriteTo(ref output, _repeated_domainNames_codec);
      if (expireTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExpireTime);
      }
      if (certificateRawData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(CertificateRawData);
      }
      if (managedCertificate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ManagedCertificate);
      }
      visibleDomainMappings_.WriteTo(ref output, _repeated_visibleDomainMappings_codec);
      if (DomainMappingsCount != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(DomainMappingsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += domainNames_.CalculateSize(_repeated_domainNames_codec);
      if (expireTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (certificateRawData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CertificateRawData);
      }
      if (managedCertificate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ManagedCertificate);
      }
      size += visibleDomainMappings_.CalculateSize(_repeated_visibleDomainMappings_codec);
      if (DomainMappingsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DomainMappingsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthorizedCertificate other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      domainNames_.Add(other.domainNames_);
      if (other.expireTime_ != null) {
        if (expireTime_ == null) {
          ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireTime.MergeFrom(other.ExpireTime);
      }
      if (other.certificateRawData_ != null) {
        if (certificateRawData_ == null) {
          CertificateRawData = new global::Google.Cloud.AppEngine.V1.CertificateRawData();
        }
        CertificateRawData.MergeFrom(other.CertificateRawData);
      }
      if (other.managedCertificate_ != null) {
        if (managedCertificate_ == null) {
          ManagedCertificate = new global::Google.Cloud.AppEngine.V1.ManagedCertificate();
        }
        ManagedCertificate.MergeFrom(other.ManagedCertificate);
      }
      visibleDomainMappings_.Add(other.visibleDomainMappings_);
      if (other.DomainMappingsCount != 0) {
        DomainMappingsCount = other.DomainMappingsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            domainNames_.AddEntriesFrom(input, _repeated_domainNames_codec);
            break;
          }
          case 42: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 50: {
            if (certificateRawData_ == null) {
              CertificateRawData = new global::Google.Cloud.AppEngine.V1.CertificateRawData();
            }
            input.ReadMessage(CertificateRawData);
            break;
          }
          case 58: {
            if (managedCertificate_ == null) {
              ManagedCertificate = new global::Google.Cloud.AppEngine.V1.ManagedCertificate();
            }
            input.ReadMessage(ManagedCertificate);
            break;
          }
          case 66: {
            visibleDomainMappings_.AddEntriesFrom(input, _repeated_visibleDomainMappings_codec);
            break;
          }
          case 72: {
            DomainMappingsCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            domainNames_.AddEntriesFrom(ref input, _repeated_domainNames_codec);
            break;
          }
          case 42: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 50: {
            if (certificateRawData_ == null) {
              CertificateRawData = new global::Google.Cloud.AppEngine.V1.CertificateRawData();
            }
            input.ReadMessage(CertificateRawData);
            break;
          }
          case 58: {
            if (managedCertificate_ == null) {
              ManagedCertificate = new global::Google.Cloud.AppEngine.V1.ManagedCertificate();
            }
            input.ReadMessage(ManagedCertificate);
            break;
          }
          case 66: {
            visibleDomainMappings_.AddEntriesFrom(ref input, _repeated_visibleDomainMappings_codec);
            break;
          }
          case 72: {
            DomainMappingsCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An SSL certificate obtained from a certificate authority.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CertificateRawData : pb::IMessage<CertificateRawData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CertificateRawData> _parser = new pb::MessageParser<CertificateRawData>(() => new CertificateRawData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CertificateRawData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AppEngine.V1.CertificateReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CertificateRawData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CertificateRawData(CertificateRawData other) : this() {
      publicCertificate_ = other.publicCertificate_;
      privateKey_ = other.privateKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CertificateRawData Clone() {
      return new CertificateRawData(this);
    }

    /// <summary>Field number for the "public_certificate" field.</summary>
    public const int PublicCertificateFieldNumber = 1;
    private string publicCertificate_ = "";
    /// <summary>
    /// PEM encoded x.509 public key certificate. This field is set once on
    /// certificate creation. Must include the header and footer. Example:
    /// &lt;pre>
    /// -----BEGIN CERTIFICATE-----
    /// &lt;certificate_value>
    /// -----END CERTIFICATE-----
    /// &lt;/pre>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PublicCertificate {
      get { return publicCertificate_; }
      set {
        publicCertificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "private_key" field.</summary>
    public const int PrivateKeyFieldNumber = 2;
    private string privateKey_ = "";
    /// <summary>
    /// Unencrypted PEM encoded RSA private key. This field is set once on
    /// certificate creation and then encrypted. The key size must be 2048
    /// bits or fewer. Must include the header and footer. Example:
    /// &lt;pre>
    /// -----BEGIN RSA PRIVATE KEY-----
    /// &lt;unencrypted_key_value>
    /// -----END RSA PRIVATE KEY-----
    /// &lt;/pre>
    /// @InputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CertificateRawData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CertificateRawData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PublicCertificate != other.PublicCertificate) return false;
      if (PrivateKey != other.PrivateKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PublicCertificate.Length != 0) hash ^= PublicCertificate.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PublicCertificate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PublicCertificate);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PrivateKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PublicCertificate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PublicCertificate);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PrivateKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PublicCertificate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicCertificate);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CertificateRawData other) {
      if (other == null) {
        return;
      }
      if (other.PublicCertificate.Length != 0) {
        PublicCertificate = other.PublicCertificate;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PublicCertificate = input.ReadString();
            break;
          }
          case 18: {
            PrivateKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PublicCertificate = input.ReadString();
            break;
          }
          case 18: {
            PrivateKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A certificate managed by App Engine.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ManagedCertificate : pb::IMessage<ManagedCertificate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ManagedCertificate> _parser = new pb::MessageParser<ManagedCertificate>(() => new ManagedCertificate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ManagedCertificate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AppEngine.V1.CertificateReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagedCertificate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagedCertificate(ManagedCertificate other) : this() {
      lastRenewalTime_ = other.lastRenewalTime_ != null ? other.lastRenewalTime_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ManagedCertificate Clone() {
      return new ManagedCertificate(this);
    }

    /// <summary>Field number for the "last_renewal_time" field.</summary>
    public const int LastRenewalTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastRenewalTime_;
    /// <summary>
    /// Time at which the certificate was last renewed. The renewal process is
    /// fully managed. Certificate renewal will automatically occur before the
    /// certificate expires. Renewal errors can be tracked via `ManagementStatus`.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastRenewalTime {
      get { return lastRenewalTime_; }
      set {
        lastRenewalTime_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Google.Cloud.AppEngine.V1.ManagementStatus status_ = global::Google.Cloud.AppEngine.V1.ManagementStatus.Unspecified;
    /// <summary>
    /// Status of certificate management. Refers to the most recent certificate
    /// acquisition or renewal attempt.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AppEngine.V1.ManagementStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ManagedCertificate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ManagedCertificate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LastRenewalTime, other.LastRenewalTime)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (lastRenewalTime_ != null) hash ^= LastRenewalTime.GetHashCode();
      if (Status != global::Google.Cloud.AppEngine.V1.ManagementStatus.Unspecified) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lastRenewalTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastRenewalTime);
      }
      if (Status != global::Google.Cloud.AppEngine.V1.ManagementStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lastRenewalTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LastRenewalTime);
      }
      if (Status != global::Google.Cloud.AppEngine.V1.ManagementStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (lastRenewalTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastRenewalTime);
      }
      if (Status != global::Google.Cloud.AppEngine.V1.ManagementStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ManagedCertificate other) {
      if (other == null) {
        return;
      }
      if (other.lastRenewalTime_ != null) {
        if (lastRenewalTime_ == null) {
          LastRenewalTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastRenewalTime.MergeFrom(other.LastRenewalTime);
      }
      if (other.Status != global::Google.Cloud.AppEngine.V1.ManagementStatus.Unspecified) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lastRenewalTime_ == null) {
              LastRenewalTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRenewalTime);
            break;
          }
          case 16: {
            Status = (global::Google.Cloud.AppEngine.V1.ManagementStatus) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lastRenewalTime_ == null) {
              LastRenewalTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastRenewalTime);
            break;
          }
          case 16: {
            Status = (global::Google.Cloud.AppEngine.V1.ManagementStatus) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
