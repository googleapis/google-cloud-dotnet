// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/appengine/v1/instance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.AppEngine.V1 {

  /// <summary>Holder for reflection information generated from google/appengine/v1/instance.proto</summary>
  public static partial class InstanceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/appengine/v1/instance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InstanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJnb29nbGUvYXBwZW5naW5lL3YxL2luc3RhbmNlLnByb3RvEhNnb29nbGUu",
            "YXBwZW5naW5lLnYxGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3Rv",
            "Ghlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvIs4GCghJbnN0YW5jZRIRCgRuYW1lGAEgASgJQgPg",
            "QQMSDwoCaWQYAiABKAlCA+BBAxIfChJhcHBfZW5naW5lX3JlbGVhc2UYAyAB",
            "KAlCA+BBAxJFCgxhdmFpbGFiaWxpdHkYBCABKA4yKi5nb29nbGUuYXBwZW5n",
            "aW5lLnYxLkluc3RhbmNlLkF2YWlsYWJpbGl0eUID4EEDEhQKB3ZtX25hbWUY",
            "BSABKAlCA+BBAxIZCgx2bV96b25lX25hbWUYBiABKAlCA+BBAxISCgV2bV9p",
            "ZBgHIAEoCUID4EEDEjMKCnN0YXJ0X3RpbWUYCCABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wQgPgQQMSFQoIcmVxdWVzdHMYCSABKAVCA+BBAxIT",
            "CgZlcnJvcnMYCiABKAVCA+BBAxIQCgNxcHMYCyABKAJCA+BBAxIcCg9hdmVy",
            "YWdlX2xhdGVuY3kYDCABKAVCA+BBAxIZCgxtZW1vcnlfdXNhZ2UYDSABKANC",
            "A+BBAxIWCgl2bV9zdGF0dXMYDiABKAlCA+BBAxIdChB2bV9kZWJ1Z19lbmFi",
            "bGVkGA8gASgIQgPgQQMSEgoFdm1faXAYECABKAlCA+BBAxJOCgt2bV9saXZl",
            "bmVzcxgRIAEoDjI0Lmdvb2dsZS5hcHBlbmdpbmUudjEuSW5zdGFuY2UuTGl2",
            "ZW5lc3MuTGl2ZW5lc3NTdGF0ZUID4EEDGn8KCExpdmVuZXNzInMKDUxpdmVu",
            "ZXNzU3RhdGUSHgoaTElWRU5FU1NfU1RBVEVfVU5TUEVDSUZJRUQQABILCgdV",
            "TktOT1dOEAESCwoHSEVBTFRIWRACEg0KCVVOSEVBTFRIWRADEgwKCERSQUlO",
            "SU5HEAQSCwoHVElNRU9VVBAFIjoKDEF2YWlsYWJpbGl0eRIPCgtVTlNQRUNJ",
            "RklFRBAAEgwKCFJFU0lERU5UEAESCwoHRFlOQU1JQxACOm3qQWoKIWFwcGVu",
            "Z2luZS5nb29nbGVhcGlzLmNvbS9JbnN0YW5jZRJFYXBwcy97YXBwfS9zZXJ2",
            "aWNlcy97c2VydmljZX0vdmVyc2lvbnMve3ZlcnNpb259L2luc3RhbmNlcy97",
            "aW5zdGFuY2V9Qr4BChdjb20uZ29vZ2xlLmFwcGVuZ2luZS52MUINSW5zdGFu",
            "Y2VQcm90b1ABWjtjbG91ZC5nb29nbGUuY29tL2dvL2FwcGVuZ2luZS9hcGl2",
            "MS9hcHBlbmdpbmVwYjthcHBlbmdpbmVwYqoCGUdvb2dsZS5DbG91ZC5BcHBF",
            "bmdpbmUuVjHKAhlHb29nbGVcQ2xvdWRcQXBwRW5naW5lXFYx6gIcR29vZ2xl",
            "OjpDbG91ZDo6QXBwRW5naW5lOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AppEngine.V1.Instance), global::Google.Cloud.AppEngine.V1.Instance.Parser, new[]{ "Name", "Id", "AppEngineRelease", "Availability", "VmName", "VmZoneName", "VmId", "StartTime", "Requests", "Errors", "Qps", "AverageLatency", "MemoryUsage", "VmStatus", "VmDebugEnabled", "VmIp", "VmLiveness" }, null, new[]{ typeof(global::Google.Cloud.AppEngine.V1.Instance.Types.Availability) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness), global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Parser, null, null, new[]{ typeof(global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState) }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An Instance resource is the computing unit that App Engine uses to
  /// automatically scale an application.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Instance : pb::IMessage<Instance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Instance> _parser = new pb::MessageParser<Instance>(() => new Instance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Instance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AppEngine.V1.InstanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance(Instance other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      appEngineRelease_ = other.appEngineRelease_;
      availability_ = other.availability_;
      vmName_ = other.vmName_;
      vmZoneName_ = other.vmZoneName_;
      vmId_ = other.vmId_;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      requests_ = other.requests_;
      errors_ = other.errors_;
      qps_ = other.qps_;
      averageLatency_ = other.averageLatency_;
      memoryUsage_ = other.memoryUsage_;
      vmStatus_ = other.vmStatus_;
      vmDebugEnabled_ = other.vmDebugEnabled_;
      vmIp_ = other.vmIp_;
      vmLiveness_ = other.vmLiveness_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance Clone() {
      return new Instance(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Full path to the Instance resource in the API.
    /// Example: `apps/myapp/services/default/versions/v1/instances/instance-1`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// Output only. Relative name of the instance within the version.
    /// Example: `instance-1`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app_engine_release" field.</summary>
    public const int AppEngineReleaseFieldNumber = 3;
    private string appEngineRelease_ = "";
    /// <summary>
    /// Output only. App Engine release this instance is running on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AppEngineRelease {
      get { return appEngineRelease_; }
      set {
        appEngineRelease_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "availability" field.</summary>
    public const int AvailabilityFieldNumber = 4;
    private global::Google.Cloud.AppEngine.V1.Instance.Types.Availability availability_ = global::Google.Cloud.AppEngine.V1.Instance.Types.Availability.Unspecified;
    /// <summary>
    /// Output only. Availability of the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AppEngine.V1.Instance.Types.Availability Availability {
      get { return availability_; }
      set {
        availability_ = value;
      }
    }

    /// <summary>Field number for the "vm_name" field.</summary>
    public const int VmNameFieldNumber = 5;
    private string vmName_ = "";
    /// <summary>
    /// Output only. Name of the virtual machine where this instance lives. Only applicable
    /// for instances in App Engine flexible environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VmName {
      get { return vmName_; }
      set {
        vmName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vm_zone_name" field.</summary>
    public const int VmZoneNameFieldNumber = 6;
    private string vmZoneName_ = "";
    /// <summary>
    /// Output only. Zone where the virtual machine is located. Only applicable for instances
    /// in App Engine flexible environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VmZoneName {
      get { return vmZoneName_; }
      set {
        vmZoneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vm_id" field.</summary>
    public const int VmIdFieldNumber = 7;
    private string vmId_ = "";
    /// <summary>
    /// Output only. Virtual machine ID of this instance. Only applicable for instances in
    /// App Engine flexible environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VmId {
      get { return vmId_; }
      set {
        vmId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Output only. Time that this instance was started.
    ///
    /// @OutputOnly
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "requests" field.</summary>
    public const int RequestsFieldNumber = 9;
    private int requests_;
    /// <summary>
    /// Output only. Number of requests since this instance was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Requests {
      get { return requests_; }
      set {
        requests_ = value;
      }
    }

    /// <summary>Field number for the "errors" field.</summary>
    public const int ErrorsFieldNumber = 10;
    private int errors_;
    /// <summary>
    /// Output only. Number of errors since this instance was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Errors {
      get { return errors_; }
      set {
        errors_ = value;
      }
    }

    /// <summary>Field number for the "qps" field.</summary>
    public const int QpsFieldNumber = 11;
    private float qps_;
    /// <summary>
    /// Output only. Average queries per second (QPS) over the last minute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Qps {
      get { return qps_; }
      set {
        qps_ = value;
      }
    }

    /// <summary>Field number for the "average_latency" field.</summary>
    public const int AverageLatencyFieldNumber = 12;
    private int averageLatency_;
    /// <summary>
    /// Output only. Average latency (ms) over the last minute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AverageLatency {
      get { return averageLatency_; }
      set {
        averageLatency_ = value;
      }
    }

    /// <summary>Field number for the "memory_usage" field.</summary>
    public const int MemoryUsageFieldNumber = 13;
    private long memoryUsage_;
    /// <summary>
    /// Output only. Total memory in use (bytes).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MemoryUsage {
      get { return memoryUsage_; }
      set {
        memoryUsage_ = value;
      }
    }

    /// <summary>Field number for the "vm_status" field.</summary>
    public const int VmStatusFieldNumber = 14;
    private string vmStatus_ = "";
    /// <summary>
    /// Output only. Status of the virtual machine where this instance lives. Only applicable
    /// for instances in App Engine flexible environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VmStatus {
      get { return vmStatus_; }
      set {
        vmStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vm_debug_enabled" field.</summary>
    public const int VmDebugEnabledFieldNumber = 15;
    private bool vmDebugEnabled_;
    /// <summary>
    /// Output only. Whether this instance is in debug mode. Only applicable for instances in
    /// App Engine flexible environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool VmDebugEnabled {
      get { return vmDebugEnabled_; }
      set {
        vmDebugEnabled_ = value;
      }
    }

    /// <summary>Field number for the "vm_ip" field.</summary>
    public const int VmIpFieldNumber = 16;
    private string vmIp_ = "";
    /// <summary>
    /// Output only. The IP address of this instance. Only applicable for instances in App
    /// Engine flexible environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VmIp {
      get { return vmIp_; }
      set {
        vmIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vm_liveness" field.</summary>
    public const int VmLivenessFieldNumber = 17;
    private global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState vmLiveness_ = global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState.Unspecified;
    /// <summary>
    /// Output only. The liveness health check of this instance. Only applicable for instances
    /// in App Engine flexible environment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState VmLiveness {
      get { return vmLiveness_; }
      set {
        vmLiveness_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Instance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Instance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (AppEngineRelease != other.AppEngineRelease) return false;
      if (Availability != other.Availability) return false;
      if (VmName != other.VmName) return false;
      if (VmZoneName != other.VmZoneName) return false;
      if (VmId != other.VmId) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (Requests != other.Requests) return false;
      if (Errors != other.Errors) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Qps, other.Qps)) return false;
      if (AverageLatency != other.AverageLatency) return false;
      if (MemoryUsage != other.MemoryUsage) return false;
      if (VmStatus != other.VmStatus) return false;
      if (VmDebugEnabled != other.VmDebugEnabled) return false;
      if (VmIp != other.VmIp) return false;
      if (VmLiveness != other.VmLiveness) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (AppEngineRelease.Length != 0) hash ^= AppEngineRelease.GetHashCode();
      if (Availability != global::Google.Cloud.AppEngine.V1.Instance.Types.Availability.Unspecified) hash ^= Availability.GetHashCode();
      if (VmName.Length != 0) hash ^= VmName.GetHashCode();
      if (VmZoneName.Length != 0) hash ^= VmZoneName.GetHashCode();
      if (VmId.Length != 0) hash ^= VmId.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (Requests != 0) hash ^= Requests.GetHashCode();
      if (Errors != 0) hash ^= Errors.GetHashCode();
      if (Qps != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Qps);
      if (AverageLatency != 0) hash ^= AverageLatency.GetHashCode();
      if (MemoryUsage != 0L) hash ^= MemoryUsage.GetHashCode();
      if (VmStatus.Length != 0) hash ^= VmStatus.GetHashCode();
      if (VmDebugEnabled != false) hash ^= VmDebugEnabled.GetHashCode();
      if (VmIp.Length != 0) hash ^= VmIp.GetHashCode();
      if (VmLiveness != global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState.Unspecified) hash ^= VmLiveness.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (AppEngineRelease.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppEngineRelease);
      }
      if (Availability != global::Google.Cloud.AppEngine.V1.Instance.Types.Availability.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Availability);
      }
      if (VmName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VmName);
      }
      if (VmZoneName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VmZoneName);
      }
      if (VmId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(VmId);
      }
      if (startTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StartTime);
      }
      if (Requests != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Requests);
      }
      if (Errors != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Errors);
      }
      if (Qps != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Qps);
      }
      if (AverageLatency != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(AverageLatency);
      }
      if (MemoryUsage != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MemoryUsage);
      }
      if (VmStatus.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(VmStatus);
      }
      if (VmDebugEnabled != false) {
        output.WriteRawTag(120);
        output.WriteBool(VmDebugEnabled);
      }
      if (VmIp.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(VmIp);
      }
      if (VmLiveness != global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState.Unspecified) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) VmLiveness);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (AppEngineRelease.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AppEngineRelease);
      }
      if (Availability != global::Google.Cloud.AppEngine.V1.Instance.Types.Availability.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Availability);
      }
      if (VmName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VmName);
      }
      if (VmZoneName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VmZoneName);
      }
      if (VmId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(VmId);
      }
      if (startTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StartTime);
      }
      if (Requests != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Requests);
      }
      if (Errors != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Errors);
      }
      if (Qps != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Qps);
      }
      if (AverageLatency != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(AverageLatency);
      }
      if (MemoryUsage != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MemoryUsage);
      }
      if (VmStatus.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(VmStatus);
      }
      if (VmDebugEnabled != false) {
        output.WriteRawTag(120);
        output.WriteBool(VmDebugEnabled);
      }
      if (VmIp.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(VmIp);
      }
      if (VmLiveness != global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState.Unspecified) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) VmLiveness);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (AppEngineRelease.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppEngineRelease);
      }
      if (Availability != global::Google.Cloud.AppEngine.V1.Instance.Types.Availability.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Availability);
      }
      if (VmName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VmName);
      }
      if (VmZoneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VmZoneName);
      }
      if (VmId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VmId);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (Requests != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Requests);
      }
      if (Errors != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errors);
      }
      if (Qps != 0F) {
        size += 1 + 4;
      }
      if (AverageLatency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AverageLatency);
      }
      if (MemoryUsage != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MemoryUsage);
      }
      if (VmStatus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VmStatus);
      }
      if (VmDebugEnabled != false) {
        size += 1 + 1;
      }
      if (VmIp.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VmIp);
      }
      if (VmLiveness != global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) VmLiveness);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Instance other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.AppEngineRelease.Length != 0) {
        AppEngineRelease = other.AppEngineRelease;
      }
      if (other.Availability != global::Google.Cloud.AppEngine.V1.Instance.Types.Availability.Unspecified) {
        Availability = other.Availability;
      }
      if (other.VmName.Length != 0) {
        VmName = other.VmName;
      }
      if (other.VmZoneName.Length != 0) {
        VmZoneName = other.VmZoneName;
      }
      if (other.VmId.Length != 0) {
        VmId = other.VmId;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.Requests != 0) {
        Requests = other.Requests;
      }
      if (other.Errors != 0) {
        Errors = other.Errors;
      }
      if (other.Qps != 0F) {
        Qps = other.Qps;
      }
      if (other.AverageLatency != 0) {
        AverageLatency = other.AverageLatency;
      }
      if (other.MemoryUsage != 0L) {
        MemoryUsage = other.MemoryUsage;
      }
      if (other.VmStatus.Length != 0) {
        VmStatus = other.VmStatus;
      }
      if (other.VmDebugEnabled != false) {
        VmDebugEnabled = other.VmDebugEnabled;
      }
      if (other.VmIp.Length != 0) {
        VmIp = other.VmIp;
      }
      if (other.VmLiveness != global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState.Unspecified) {
        VmLiveness = other.VmLiveness;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            AppEngineRelease = input.ReadString();
            break;
          }
          case 32: {
            Availability = (global::Google.Cloud.AppEngine.V1.Instance.Types.Availability) input.ReadEnum();
            break;
          }
          case 42: {
            VmName = input.ReadString();
            break;
          }
          case 50: {
            VmZoneName = input.ReadString();
            break;
          }
          case 58: {
            VmId = input.ReadString();
            break;
          }
          case 66: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 72: {
            Requests = input.ReadInt32();
            break;
          }
          case 80: {
            Errors = input.ReadInt32();
            break;
          }
          case 93: {
            Qps = input.ReadFloat();
            break;
          }
          case 96: {
            AverageLatency = input.ReadInt32();
            break;
          }
          case 104: {
            MemoryUsage = input.ReadInt64();
            break;
          }
          case 114: {
            VmStatus = input.ReadString();
            break;
          }
          case 120: {
            VmDebugEnabled = input.ReadBool();
            break;
          }
          case 130: {
            VmIp = input.ReadString();
            break;
          }
          case 136: {
            VmLiveness = (global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            AppEngineRelease = input.ReadString();
            break;
          }
          case 32: {
            Availability = (global::Google.Cloud.AppEngine.V1.Instance.Types.Availability) input.ReadEnum();
            break;
          }
          case 42: {
            VmName = input.ReadString();
            break;
          }
          case 50: {
            VmZoneName = input.ReadString();
            break;
          }
          case 58: {
            VmId = input.ReadString();
            break;
          }
          case 66: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 72: {
            Requests = input.ReadInt32();
            break;
          }
          case 80: {
            Errors = input.ReadInt32();
            break;
          }
          case 93: {
            Qps = input.ReadFloat();
            break;
          }
          case 96: {
            AverageLatency = input.ReadInt32();
            break;
          }
          case 104: {
            MemoryUsage = input.ReadInt64();
            break;
          }
          case 114: {
            VmStatus = input.ReadString();
            break;
          }
          case 120: {
            VmDebugEnabled = input.ReadBool();
            break;
          }
          case 130: {
            VmIp = input.ReadString();
            break;
          }
          case 136: {
            VmLiveness = (global::Google.Cloud.AppEngine.V1.Instance.Types.Liveness.Types.LivenessState) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Instance message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Availability of the instance.
      /// </summary>
      public enum Availability {
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("RESIDENT")] Resident = 1,
        [pbr::OriginalName("DYNAMIC")] Dynamic = 2,
      }

      /// <summary>
      /// Wrapper for LivenessState enum.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Liveness : pb::IMessage<Liveness>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Liveness> _parser = new pb::MessageParser<Liveness>(() => new Liveness());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Liveness> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.AppEngine.V1.Instance.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Liveness() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Liveness(Liveness other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Liveness Clone() {
          return new Liveness(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Liveness);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Liveness other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Liveness other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Liveness message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Liveness health check status for Flex instances.
          /// </summary>
          public enum LivenessState {
            /// <summary>
            /// There is no liveness health check for the instance. Only applicable for
            /// instances in App Engine standard environment.
            /// </summary>
            [pbr::OriginalName("LIVENESS_STATE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The health checking system is aware of the instance but its health is
            /// not known at the moment.
            /// </summary>
            [pbr::OriginalName("UNKNOWN")] Unknown = 1,
            /// <summary>
            /// The instance is reachable i.e. a connection to the application health
            /// checking endpoint can be established, and conforms to the requirements
            /// defined by the health check.
            /// </summary>
            [pbr::OriginalName("HEALTHY")] Healthy = 2,
            /// <summary>
            /// The instance is reachable, but does not conform to the requirements
            /// defined by the health check.
            /// </summary>
            [pbr::OriginalName("UNHEALTHY")] Unhealthy = 3,
            /// <summary>
            /// The instance is being drained. The existing connections to the instance
            /// have time to complete, but the new ones are being refused.
            /// </summary>
            [pbr::OriginalName("DRAINING")] Draining = 4,
            /// <summary>
            /// The instance is unreachable i.e. a connection to the application health
            /// checking endpoint cannot be established, or the server does not respond
            /// within the specified timeout.
            /// </summary>
            [pbr::OriginalName("TIMEOUT")] Timeout = 5,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
