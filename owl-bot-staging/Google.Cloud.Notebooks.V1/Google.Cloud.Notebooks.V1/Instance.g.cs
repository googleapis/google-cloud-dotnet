// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/notebooks/v1/instance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Notebooks.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/notebooks/v1/instance.proto</summary>
  public static partial class InstanceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/notebooks/v1/instance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InstanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihnb29nbGUvY2xvdWQvbm90ZWJvb2tzL3YxL2luc3RhbmNlLnByb3RvEhln",
            "b29nbGUuY2xvdWQubm90ZWJvb2tzLnYxGh9nb29nbGUvYXBpL2ZpZWxkX2Jl",
            "aGF2aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGitnb29n",
            "bGUvY2xvdWQvbm90ZWJvb2tzL3YxL2Vudmlyb25tZW50LnByb3RvGh9nb29n",
            "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIvkBChNSZXNlcnZhdGlvbkFm",
            "ZmluaXR5EloKGGNvbnN1bWVfcmVzZXJ2YXRpb25fdHlwZRgBIAEoDjIzLmdv",
            "b2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUmVzZXJ2YXRpb25BZmZpbml0eS5U",
            "eXBlQgPgQQESEAoDa2V5GAIgASgJQgPgQQESEwoGdmFsdWVzGAMgAygJQgPg",
            "QQEiXwoEVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASEgoOTk9fUkVTRVJW",
            "QVRJT04QARITCg9BTllfUkVTRVJWQVRJT04QAhIYChRTUEVDSUZJQ19SRVNF",
            "UlZBVElPThADIq0cCghJbnN0YW5jZRIRCgRuYW1lGAEgASgJQgPgQQMSNgoI",
            "dm1faW1hZ2UYAiABKAsyIi5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlZt",
            "SW1hZ2VIABJECg9jb250YWluZXJfaW1hZ2UYAyABKAsyKS5nb29nbGUuY2xv",
            "dWQubm90ZWJvb2tzLnYxLkNvbnRhaW5lckltYWdlSAASGwoTcG9zdF9zdGFy",
            "dHVwX3NjcmlwdBgEIAEoCRIWCglwcm94eV91cmkYBSABKAlCA+BBAxIcCg9p",
            "bnN0YW5jZV9vd25lcnMYBiADKAlCA+BBBBIXCg9zZXJ2aWNlX2FjY291bnQY",
            "ByABKAkSIwoWc2VydmljZV9hY2NvdW50X3Njb3BlcxgfIAMoCUID4EEBEhkK",
            "DG1hY2hpbmVfdHlwZRgIIAEoCUID4EECElEKEmFjY2VsZXJhdG9yX2NvbmZp",
            "ZxgJIAEoCzI1Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuSW5zdGFuY2Uu",
            "QWNjZWxlcmF0b3JDb25maWcSPQoFc3RhdGUYCiABKA4yKS5nb29nbGUuY2xv",
            "dWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLlN0YXRlQgPgQQMSGgoSaW5zdGFs",
            "bF9ncHVfZHJpdmVyGAsgASgIEh4KFmN1c3RvbV9ncHVfZHJpdmVyX3BhdGgY",
            "DCABKAkSSQoOYm9vdF9kaXNrX3R5cGUYDSABKA4yLC5nb29nbGUuY2xvdWQu",
            "bm90ZWJvb2tzLnYxLkluc3RhbmNlLkRpc2tUeXBlQgPgQQQSHgoRYm9vdF9k",
            "aXNrX3NpemVfZ2IYDiABKANCA+BBBBJJCg5kYXRhX2Rpc2tfdHlwZRgZIAEo",
            "DjIsLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuSW5zdGFuY2UuRGlza1R5",
            "cGVCA+BBBBIeChFkYXRhX2Rpc2tfc2l6ZV9nYhgaIAEoA0ID4EEEEiAKE25v",
            "X3JlbW92ZV9kYXRhX2Rpc2sYGyABKAhCA+BBBBJQCg9kaXNrX2VuY3J5cHRp",
            "b24YDyABKA4yMi5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNl",
            "LkRpc2tFbmNyeXB0aW9uQgPgQQQSFAoHa21zX2tleRgQIAEoCUID4EEEEjwK",
            "BWRpc2tzGBwgAygLMiguZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0",
            "YW5jZS5EaXNrQgPgQQMSYQoYc2hpZWxkZWRfaW5zdGFuY2VfY29uZmlnGB4g",
            "ASgLMjouZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0YW5jZS5TaGll",
            "bGRlZEluc3RhbmNlQ29uZmlnQgPgQQESFAoMbm9fcHVibGljX2lwGBEgASgI",
            "EhcKD25vX3Byb3h5X2FjY2VzcxgSIAEoCBIPCgduZXR3b3JrGBMgASgJEg4K",
            "BnN1Ym5ldBgUIAEoCRI/CgZsYWJlbHMYFSADKAsyLy5nb29nbGUuY2xvdWQu",
            "bm90ZWJvb2tzLnYxLkluc3RhbmNlLkxhYmVsc0VudHJ5EkMKCG1ldGFkYXRh",
            "GBYgAygLMjEuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0YW5jZS5N",
            "ZXRhZGF0YUVudHJ5EhEKBHRhZ3MYICADKAlCA+BBARJQCg91cGdyYWRlX2hp",
            "c3RvcnkYHSADKAsyNy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3Rh",
            "bmNlLlVwZ3JhZGVIaXN0b3J5RW50cnkSQgoIbmljX3R5cGUYISABKA4yKy5n",
            "b29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNlLk5pY1R5cGVCA+BB",
            "ARJRChRyZXNlcnZhdGlvbl9hZmZpbml0eRgiIAEoCzIuLmdvb2dsZS5jbG91",
            "ZC5ub3RlYm9va3MudjEuUmVzZXJ2YXRpb25BZmZpbml0eUID4EEBEhQKB2Ny",
            "ZWF0b3IYJCABKAlCA+BBAxIbCg5jYW5faXBfZm9yd2FyZBgnIAEoCEID4EEB",
            "EjQKC2NyZWF0ZV90aW1lGBcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGBggASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcEID4EEDGmoKEUFjY2VsZXJhdG9yQ29uZmlnEkEKBHR5",
            "cGUYASABKA4yMy5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLkluc3RhbmNl",
            "LkFjY2VsZXJhdG9yVHlwZRISCgpjb3JlX2NvdW50GAIgASgDGrYCCgREaXNr",
            "EhMKC2F1dG9fZGVsZXRlGAEgASgIEgwKBGJvb3QYAiABKAgSEwoLZGV2aWNl",
            "X25hbWUYAyABKAkSFAoMZGlza19zaXplX2diGAQgASgDElIKEWd1ZXN0X29z",
            "X2ZlYXR1cmVzGAUgAygLMjcuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5J",
            "bnN0YW5jZS5EaXNrLkd1ZXN0T3NGZWF0dXJlEg0KBWluZGV4GAYgASgDEhEK",
            "CWludGVyZmFjZRgHIAEoCRIMCgRraW5kGAggASgJEhAKCGxpY2Vuc2VzGAkg",
            "AygJEgwKBG1vZGUYCiABKAkSDgoGc291cmNlGAsgASgJEgwKBHR5cGUYDCAB",
            "KAkaHgoOR3Vlc3RPc0ZlYXR1cmUSDAoEdHlwZRgBIAEoCRpuChZTaGllbGRl",
            "ZEluc3RhbmNlQ29uZmlnEhoKEmVuYWJsZV9zZWN1cmVfYm9vdBgBIAEoCBIT",
            "CgtlbmFibGVfdnRwbRgCIAEoCBIjChtlbmFibGVfaW50ZWdyaXR5X21vbml0",
            "b3JpbmcYAyABKAga/AMKE1VwZ3JhZGVIaXN0b3J5RW50cnkSEAoIc25hcHNo",
            "b3QYASABKAkSEAoIdm1faW1hZ2UYAiABKAkSFwoPY29udGFpbmVyX2ltYWdl",
            "GAMgASgJEhEKCWZyYW1ld29yaxgEIAEoCRIPCgd2ZXJzaW9uGAUgASgJEkwK",
            "BXN0YXRlGAYgASgOMj0uZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5JbnN0",
            "YW5jZS5VcGdyYWRlSGlzdG9yeUVudHJ5LlN0YXRlEi8KC2NyZWF0ZV90aW1l",
            "GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIYCgx0YXJnZXRf",
            "aW1hZ2UYCCABKAlCAhgBEk4KBmFjdGlvbhgJIAEoDjI+Lmdvb2dsZS5jbG91",
            "ZC5ub3RlYm9va3MudjEuSW5zdGFuY2UuVXBncmFkZUhpc3RvcnlFbnRyeS5B",
            "Y3Rpb24SFgoOdGFyZ2V0X3ZlcnNpb24YCiABKAkiRgoFU3RhdGUSFQoRU1RB",
            "VEVfVU5TUEVDSUZJRUQQABILCgdTVEFSVEVEEAESDQoJU1VDQ0VFREVEEAIS",
            "CgoGRkFJTEVEEAMiOwoGQWN0aW9uEhYKEkFDVElPTl9VTlNQRUNJRklFRBAA",
            "EgsKB1VQR1JBREUQARIMCghST0xMQkFDSxACGi0KC0xhYmVsc0VudHJ5EgsK",
            "A2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaLwoNTWV0YWRhdGFFbnRy",
            "eRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIp0CCg9BY2NlbGVy",
            "YXRvclR5cGUSIAocQUNDRUxFUkFUT1JfVFlQRV9VTlNQRUNJRklFRBAAEhQK",
            "EE5WSURJQV9URVNMQV9LODAQARIVChFOVklESUFfVEVTTEFfUDEwMBACEhUK",
            "EU5WSURJQV9URVNMQV9WMTAwEAMSEwoPTlZJRElBX1RFU0xBX1A0EAQSEwoP",
            "TlZJRElBX1RFU0xBX1Q0EAUSFQoRTlZJRElBX1RFU0xBX0ExMDAQCxIXChNO",
            "VklESUFfVEVTTEFfVDRfVldTEAgSGQoVTlZJRElBX1RFU0xBX1AxMDBfVldT",
            "EAkSFwoTTlZJRElBX1RFU0xBX1A0X1ZXUxAKEgoKBlRQVV9WMhAGEgoKBlRQ",
            "VV9WMxAHIsMBCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgwKCFNU",
            "QVJUSU5HEAESEAoMUFJPVklTSU9OSU5HEAISCgoGQUNUSVZFEAMSDAoIU1RP",
            "UFBJTkcQBBILCgdTVE9QUEVEEAUSCwoHREVMRVRFRBAGEg0KCVVQR1JBRElO",
            "RxAHEhAKDElOSVRJQUxJWklORxAIEg8KC1JFR0lTVEVSSU5HEAkSDgoKU1VT",
            "UEVORElORxAKEg0KCVNVU1BFTkRFRBALImMKCERpc2tUeXBlEhkKFURJU0tf",
            "VFlQRV9VTlNQRUNJRklFRBAAEg8KC1BEX1NUQU5EQVJEEAESCgoGUERfU1NE",
            "EAISDwoLUERfQkFMQU5DRUQQAxIOCgpQRF9FWFRSRU1FEAQiRQoORGlza0Vu",
            "Y3J5cHRpb24SHwobRElTS19FTkNSWVBUSU9OX1VOU1BFQ0lGSUVEEAASCAoE",
            "R01FSxABEggKBENNRUsQAiI+CgdOaWNUeXBlEhgKFFVOU1BFQ0lGSUVEX05J",
            "Q19UWVBFEAASDgoKVklSVElPX05FVBABEgkKBUdWTklDEAI6T+pBTAohbm90",
            "ZWJvb2tzLmdvb2dsZWFwaXMuY29tL0luc3RhbmNlEidwcm9qZWN0cy97cHJv",
            "amVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX1CDQoLZW52aXJvbm1lbnRCxAEK",
            "HWNvbS5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxQg1JbnN0YW5jZVByb3Rv",
            "UAFaO2Nsb3VkLmdvb2dsZS5jb20vZ28vbm90ZWJvb2tzL2FwaXYxL25vdGVi",
            "b29rc3BiO25vdGVib29rc3BiqgIZR29vZ2xlLkNsb3VkLk5vdGVib29rcy5W",
            "McoCGUdvb2dsZVxDbG91ZFxOb3RlYm9va3NcVjHqAhxHb29nbGU6OkNsb3Vk",
            "OjpOb3RlYm9va3M6OlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Notebooks.V1.EnvironmentReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.ReservationAffinity), global::Google.Cloud.Notebooks.V1.ReservationAffinity.Parser, new[]{ "ConsumeReservationType", "Key", "Values" }, null, new[]{ typeof(global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.Instance), global::Google.Cloud.Notebooks.V1.Instance.Parser, new[]{ "Name", "VmImage", "ContainerImage", "PostStartupScript", "ProxyUri", "InstanceOwners", "ServiceAccount", "ServiceAccountScopes", "MachineType", "AcceleratorConfig", "State", "InstallGpuDriver", "CustomGpuDriverPath", "BootDiskType", "BootDiskSizeGb", "DataDiskType", "DataDiskSizeGb", "NoRemoveDataDisk", "DiskEncryption", "KmsKey", "Disks", "ShieldedInstanceConfig", "NoPublicIp", "NoProxyAccess", "Network", "Subnet", "Labels", "Metadata", "Tags", "UpgradeHistory", "NicType", "ReservationAffinity", "Creator", "CanIpForward", "CreateTime", "UpdateTime" }, new[]{ "Environment" }, new[]{ typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType), typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.State), typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType), typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption), typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.NicType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorConfig), global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorConfig.Parser, new[]{ "Type", "CoreCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.Disk), global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Parser, new[]{ "AutoDelete", "Boot", "DeviceName", "DiskSizeGb", "GuestOsFeatures", "Index", "Interface", "Kind", "Licenses", "Mode", "Source", "Type" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Types.GuestOsFeature), global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Types.GuestOsFeature.Parser, new[]{ "Type" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.ShieldedInstanceConfig), global::Google.Cloud.Notebooks.V1.Instance.Types.ShieldedInstanceConfig.Parser, new[]{ "EnableSecureBoot", "EnableVtpm", "EnableIntegrityMonitoring" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry), global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Parser, new[]{ "Snapshot", "VmImage", "ContainerImage", "Framework", "Version", "State", "CreateTime", "TargetImage", "Action", "TargetVersion" }, null, new[]{ typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State), typeof(global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action) }, null, null),
            null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Reservation Affinity for consuming Zonal reservation.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ReservationAffinity : pb::IMessage<ReservationAffinity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReservationAffinity> _parser = new pb::MessageParser<ReservationAffinity>(() => new ReservationAffinity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReservationAffinity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.InstanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservationAffinity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservationAffinity(ReservationAffinity other) : this() {
      consumeReservationType_ = other.consumeReservationType_;
      key_ = other.key_;
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReservationAffinity Clone() {
      return new ReservationAffinity(this);
    }

    /// <summary>Field number for the "consume_reservation_type" field.</summary>
    public const int ConsumeReservationTypeFieldNumber = 1;
    private global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type consumeReservationType_ = global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type.Unspecified;
    /// <summary>
    /// Optional. Type of reservation to consume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type ConsumeReservationType {
      get { return consumeReservationType_; }
      set {
        consumeReservationType_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    /// <summary>
    /// Optional. Corresponds to the label key of reservation resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_values_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> values_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Corresponds to the label values of reservation resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReservationAffinity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReservationAffinity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsumeReservationType != other.ConsumeReservationType) return false;
      if (Key != other.Key) return false;
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsumeReservationType != global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type.Unspecified) hash ^= ConsumeReservationType.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConsumeReservationType != global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ConsumeReservationType);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConsumeReservationType != global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ConsumeReservationType);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ConsumeReservationType != global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConsumeReservationType);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReservationAffinity other) {
      if (other == null) {
        return;
      }
      if (other.ConsumeReservationType != global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type.Unspecified) {
        ConsumeReservationType = other.ConsumeReservationType;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConsumeReservationType = (global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConsumeReservationType = (global::Google.Cloud.Notebooks.V1.ReservationAffinity.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReservationAffinity message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Indicates whether to consume capacity from an reservation or not.
      /// </summary>
      public enum Type {
        /// <summary>
        /// Default type.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Do not consume from any allocated capacity.
        /// </summary>
        [pbr::OriginalName("NO_RESERVATION")] NoReservation = 1,
        /// <summary>
        /// Consume any reservation available.
        /// </summary>
        [pbr::OriginalName("ANY_RESERVATION")] AnyReservation = 2,
        /// <summary>
        /// Must consume from a specific reservation. Must specify key value fields
        /// for specifying the reservations.
        /// </summary>
        [pbr::OriginalName("SPECIFIC_RESERVATION")] SpecificReservation = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// The definition of a notebook instance.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Instance : pb::IMessage<Instance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Instance> _parser = new pb::MessageParser<Instance>(() => new Instance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Instance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.InstanceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance(Instance other) : this() {
      name_ = other.name_;
      postStartupScript_ = other.postStartupScript_;
      proxyUri_ = other.proxyUri_;
      instanceOwners_ = other.instanceOwners_.Clone();
      serviceAccount_ = other.serviceAccount_;
      serviceAccountScopes_ = other.serviceAccountScopes_.Clone();
      machineType_ = other.machineType_;
      acceleratorConfig_ = other.acceleratorConfig_ != null ? other.acceleratorConfig_.Clone() : null;
      state_ = other.state_;
      installGpuDriver_ = other.installGpuDriver_;
      customGpuDriverPath_ = other.customGpuDriverPath_;
      bootDiskType_ = other.bootDiskType_;
      bootDiskSizeGb_ = other.bootDiskSizeGb_;
      dataDiskType_ = other.dataDiskType_;
      dataDiskSizeGb_ = other.dataDiskSizeGb_;
      noRemoveDataDisk_ = other.noRemoveDataDisk_;
      diskEncryption_ = other.diskEncryption_;
      kmsKey_ = other.kmsKey_;
      disks_ = other.disks_.Clone();
      shieldedInstanceConfig_ = other.shieldedInstanceConfig_ != null ? other.shieldedInstanceConfig_.Clone() : null;
      noPublicIp_ = other.noPublicIp_;
      noProxyAccess_ = other.noProxyAccess_;
      network_ = other.network_;
      subnet_ = other.subnet_;
      labels_ = other.labels_.Clone();
      metadata_ = other.metadata_.Clone();
      tags_ = other.tags_.Clone();
      upgradeHistory_ = other.upgradeHistory_.Clone();
      nicType_ = other.nicType_;
      reservationAffinity_ = other.reservationAffinity_ != null ? other.reservationAffinity_.Clone() : null;
      creator_ = other.creator_;
      canIpForward_ = other.canIpForward_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      switch (other.EnvironmentCase) {
        case EnvironmentOneofCase.VmImage:
          VmImage = other.VmImage.Clone();
          break;
        case EnvironmentOneofCase.ContainerImage:
          ContainerImage = other.ContainerImage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Instance Clone() {
      return new Instance(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The name of this notebook instance. Format:
    /// `projects/{project_id}/locations/{location}/instances/{instance_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vm_image" field.</summary>
    public const int VmImageFieldNumber = 2;
    /// <summary>
    /// Use a Compute Engine VM image to start the notebook instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.VmImage VmImage {
      get { return environmentCase_ == EnvironmentOneofCase.VmImage ? (global::Google.Cloud.Notebooks.V1.VmImage) environment_ : null; }
      set {
        environment_ = value;
        environmentCase_ = value == null ? EnvironmentOneofCase.None : EnvironmentOneofCase.VmImage;
      }
    }

    /// <summary>Field number for the "container_image" field.</summary>
    public const int ContainerImageFieldNumber = 3;
    /// <summary>
    /// Use a container image to start the notebook instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.ContainerImage ContainerImage {
      get { return environmentCase_ == EnvironmentOneofCase.ContainerImage ? (global::Google.Cloud.Notebooks.V1.ContainerImage) environment_ : null; }
      set {
        environment_ = value;
        environmentCase_ = value == null ? EnvironmentOneofCase.None : EnvironmentOneofCase.ContainerImage;
      }
    }

    /// <summary>Field number for the "post_startup_script" field.</summary>
    public const int PostStartupScriptFieldNumber = 4;
    private string postStartupScript_ = "";
    /// <summary>
    /// Path to a Bash script that automatically runs after a notebook instance
    /// fully boots up. The path must be a URL or
    /// Cloud Storage path (`gs://path-to-file/file-name`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PostStartupScript {
      get { return postStartupScript_; }
      set {
        postStartupScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proxy_uri" field.</summary>
    public const int ProxyUriFieldNumber = 5;
    private string proxyUri_ = "";
    /// <summary>
    /// Output only. The proxy endpoint that is used to access the Jupyter notebook.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProxyUri {
      get { return proxyUri_; }
      set {
        proxyUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_owners" field.</summary>
    public const int InstanceOwnersFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_instanceOwners_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> instanceOwners_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Input only. The owner of this instance after creation. Format: `alias@example.com`
    ///
    /// Currently supports one owner only. If not specified, all of the service
    /// account users of your VM instance's service account can use
    /// the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> InstanceOwners {
      get { return instanceOwners_; }
    }

    /// <summary>Field number for the "service_account" field.</summary>
    public const int ServiceAccountFieldNumber = 7;
    private string serviceAccount_ = "";
    /// <summary>
    /// The service account on this instance, giving access to other Google
    /// Cloud services.
    /// You can use any service account within the same project, but you
    /// must have the service account user permission to use the instance.
    ///
    /// If not specified, the [Compute Engine default service
    /// account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account)
    /// is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceAccount {
      get { return serviceAccount_; }
      set {
        serviceAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_account_scopes" field.</summary>
    public const int ServiceAccountScopesFieldNumber = 31;
    private static readonly pb::FieldCodec<string> _repeated_serviceAccountScopes_codec
        = pb::FieldCodec.ForString(250);
    private readonly pbc::RepeatedField<string> serviceAccountScopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. The URIs of service account scopes to be included in
    /// Compute Engine instances.
    ///
    /// If not specified, the following
    /// [scopes](https://cloud.google.com/compute/docs/access/service-accounts#accesscopesiam)
    /// are defined:
    ///  - https://www.googleapis.com/auth/cloud-platform
    ///  - https://www.googleapis.com/auth/userinfo.email
    /// If not using default scopes, you need at least:
    ///    https://www.googleapis.com/auth/compute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ServiceAccountScopes {
      get { return serviceAccountScopes_; }
    }

    /// <summary>Field number for the "machine_type" field.</summary>
    public const int MachineTypeFieldNumber = 8;
    private string machineType_ = "";
    /// <summary>
    /// Required. The [Compute Engine machine
    /// type](https://cloud.google.com/compute/docs/machine-types) of this
    /// instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineType {
      get { return machineType_; }
      set {
        machineType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accelerator_config" field.</summary>
    public const int AcceleratorConfigFieldNumber = 9;
    private global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorConfig acceleratorConfig_;
    /// <summary>
    /// The hardware accelerator used on this instance. If you use
    /// accelerators, make sure that your configuration has
    /// [enough vCPUs and memory to support the `machine_type` you have
    /// selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorConfig AcceleratorConfig {
      get { return acceleratorConfig_; }
      set {
        acceleratorConfig_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 10;
    private global::Google.Cloud.Notebooks.V1.Instance.Types.State state_ = global::Google.Cloud.Notebooks.V1.Instance.Types.State.Unspecified;
    /// <summary>
    /// Output only. The state of this instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Instance.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "install_gpu_driver" field.</summary>
    public const int InstallGpuDriverFieldNumber = 11;
    private bool installGpuDriver_;
    /// <summary>
    /// Whether the end user authorizes Google Cloud to install GPU driver
    /// on this instance.
    /// If this field is empty or set to false, the GPU driver won't be installed.
    /// Only applicable to instances with GPUs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InstallGpuDriver {
      get { return installGpuDriver_; }
      set {
        installGpuDriver_ = value;
      }
    }

    /// <summary>Field number for the "custom_gpu_driver_path" field.</summary>
    public const int CustomGpuDriverPathFieldNumber = 12;
    private string customGpuDriverPath_ = "";
    /// <summary>
    /// Specify a custom Cloud Storage path where the GPU driver is stored.
    /// If not specified, we'll automatically choose from official GPU drivers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomGpuDriverPath {
      get { return customGpuDriverPath_; }
      set {
        customGpuDriverPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boot_disk_type" field.</summary>
    public const int BootDiskTypeFieldNumber = 13;
    private global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType bootDiskType_ = global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified;
    /// <summary>
    /// Input only. The type of the boot disk attached to this instance, defaults to
    /// standard persistent disk (`PD_STANDARD`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType BootDiskType {
      get { return bootDiskType_; }
      set {
        bootDiskType_ = value;
      }
    }

    /// <summary>Field number for the "boot_disk_size_gb" field.</summary>
    public const int BootDiskSizeGbFieldNumber = 14;
    private long bootDiskSizeGb_;
    /// <summary>
    /// Input only. The size of the boot disk in GB attached to this instance, up to a maximum
    /// of 64000 GB (64 TB). The minimum recommended value is 100 GB. If not
    /// specified, this defaults to 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BootDiskSizeGb {
      get { return bootDiskSizeGb_; }
      set {
        bootDiskSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "data_disk_type" field.</summary>
    public const int DataDiskTypeFieldNumber = 25;
    private global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType dataDiskType_ = global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified;
    /// <summary>
    /// Input only. The type of the data disk attached to this instance, defaults to
    /// standard persistent disk (`PD_STANDARD`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType DataDiskType {
      get { return dataDiskType_; }
      set {
        dataDiskType_ = value;
      }
    }

    /// <summary>Field number for the "data_disk_size_gb" field.</summary>
    public const int DataDiskSizeGbFieldNumber = 26;
    private long dataDiskSizeGb_;
    /// <summary>
    /// Input only. The size of the data disk in GB attached to this instance, up to a maximum
    /// of 64000 GB (64 TB). You can choose the size of the data disk based on how
    /// big your notebooks and data are. If not specified, this defaults to 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DataDiskSizeGb {
      get { return dataDiskSizeGb_; }
      set {
        dataDiskSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "no_remove_data_disk" field.</summary>
    public const int NoRemoveDataDiskFieldNumber = 27;
    private bool noRemoveDataDisk_;
    /// <summary>
    /// Input only. If true, the data disk will not be auto deleted when deleting the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NoRemoveDataDisk {
      get { return noRemoveDataDisk_; }
      set {
        noRemoveDataDisk_ = value;
      }
    }

    /// <summary>Field number for the "disk_encryption" field.</summary>
    public const int DiskEncryptionFieldNumber = 15;
    private global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption diskEncryption_ = global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption.Unspecified;
    /// <summary>
    /// Input only. Disk encryption method used on the boot and data disks, defaults to GMEK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption DiskEncryption {
      get { return diskEncryption_; }
      set {
        diskEncryption_ = value;
      }
    }

    /// <summary>Field number for the "kms_key" field.</summary>
    public const int KmsKeyFieldNumber = 16;
    private string kmsKey_ = "";
    /// <summary>
    /// Input only. The KMS key used to encrypt the disks, only applicable if disk_encryption
    /// is CMEK.
    /// Format:
    /// `projects/{project_id}/locations/{location}/keyRings/{key_ring_id}/cryptoKeys/{key_id}`
    ///
    /// Learn more about [using your own encryption keys](/kms/docs/quickstart).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KmsKey {
      get { return kmsKey_; }
      set {
        kmsKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disks" field.</summary>
    public const int DisksFieldNumber = 28;
    private static readonly pb::FieldCodec<global::Google.Cloud.Notebooks.V1.Instance.Types.Disk> _repeated_disks_codec
        = pb::FieldCodec.ForMessage(226, global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.Disk> disks_ = new pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.Disk>();
    /// <summary>
    /// Output only. Attached disks to notebook instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.Disk> Disks {
      get { return disks_; }
    }

    /// <summary>Field number for the "shielded_instance_config" field.</summary>
    public const int ShieldedInstanceConfigFieldNumber = 30;
    private global::Google.Cloud.Notebooks.V1.Instance.Types.ShieldedInstanceConfig shieldedInstanceConfig_;
    /// <summary>
    /// Optional. Shielded VM configuration.
    /// [Images using supported Shielded VM
    /// features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Instance.Types.ShieldedInstanceConfig ShieldedInstanceConfig {
      get { return shieldedInstanceConfig_; }
      set {
        shieldedInstanceConfig_ = value;
      }
    }

    /// <summary>Field number for the "no_public_ip" field.</summary>
    public const int NoPublicIpFieldNumber = 17;
    private bool noPublicIp_;
    /// <summary>
    /// If true, no public IP will be assigned to this instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NoPublicIp {
      get { return noPublicIp_; }
      set {
        noPublicIp_ = value;
      }
    }

    /// <summary>Field number for the "no_proxy_access" field.</summary>
    public const int NoProxyAccessFieldNumber = 18;
    private bool noProxyAccess_;
    /// <summary>
    /// If true, the notebook instance will not register with the proxy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NoProxyAccess {
      get { return noProxyAccess_; }
      set {
        noProxyAccess_ = value;
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 19;
    private string network_ = "";
    /// <summary>
    /// The name of the VPC that this instance is in.
    /// Format:
    /// `projects/{project_id}/global/networks/{network_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnet" field.</summary>
    public const int SubnetFieldNumber = 20;
    private string subnet_ = "";
    /// <summary>
    /// The name of the subnet that this instance is in.
    /// Format:
    /// `projects/{project_id}/regions/{region}/subnetworks/{subnetwork_id}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Subnet {
      get { return subnet_; }
      set {
        subnet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 21;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 170);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Labels to apply to this instance.
    /// These can be later modified by the setLabels method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 22;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 178);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom metadata to apply to this instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 32;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(258);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. The Compute Engine tags to add to runtime (see [Tagging
    /// instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "upgrade_history" field.</summary>
    public const int UpgradeHistoryFieldNumber = 29;
    private static readonly pb::FieldCodec<global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry> _repeated_upgradeHistory_codec
        = pb::FieldCodec.ForMessage(234, global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry> upgradeHistory_ = new pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry>();
    /// <summary>
    /// The upgrade history of this instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry> UpgradeHistory {
      get { return upgradeHistory_; }
    }

    /// <summary>Field number for the "nic_type" field.</summary>
    public const int NicTypeFieldNumber = 33;
    private global::Google.Cloud.Notebooks.V1.Instance.Types.NicType nicType_ = global::Google.Cloud.Notebooks.V1.Instance.Types.NicType.UnspecifiedNicType;
    /// <summary>
    /// Optional. The type of vNIC to be used on this interface. This may be gVNIC or
    /// VirtioNet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Instance.Types.NicType NicType {
      get { return nicType_; }
      set {
        nicType_ = value;
      }
    }

    /// <summary>Field number for the "reservation_affinity" field.</summary>
    public const int ReservationAffinityFieldNumber = 34;
    private global::Google.Cloud.Notebooks.V1.ReservationAffinity reservationAffinity_;
    /// <summary>
    /// Optional. The optional reservation affinity. Setting this field will apply
    /// the specified [Zonal Compute
    /// Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)
    /// to this notebook instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.ReservationAffinity ReservationAffinity {
      get { return reservationAffinity_; }
      set {
        reservationAffinity_ = value;
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 36;
    private string creator_ = "";
    /// <summary>
    /// Output only. Email address of entity that sent original CreateInstance request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Creator {
      get { return creator_; }
      set {
        creator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "can_ip_forward" field.</summary>
    public const int CanIpForwardFieldNumber = 39;
    private bool canIpForward_;
    /// <summary>
    /// Optional. Flag to enable ip forwarding or not, default false/off.
    /// https://cloud.google.com/vpc/docs/using-routes#canipforward
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanIpForward {
      get { return canIpForward_; }
      set {
        canIpForward_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 23;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Instance creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 24;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. Instance update time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    private object environment_;
    /// <summary>Enum of possible cases for the "environment" oneof.</summary>
    public enum EnvironmentOneofCase {
      None = 0,
      VmImage = 2,
      ContainerImage = 3,
    }
    private EnvironmentOneofCase environmentCase_ = EnvironmentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnvironmentOneofCase EnvironmentCase {
      get { return environmentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnvironment() {
      environmentCase_ = EnvironmentOneofCase.None;
      environment_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Instance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Instance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(VmImage, other.VmImage)) return false;
      if (!object.Equals(ContainerImage, other.ContainerImage)) return false;
      if (PostStartupScript != other.PostStartupScript) return false;
      if (ProxyUri != other.ProxyUri) return false;
      if(!instanceOwners_.Equals(other.instanceOwners_)) return false;
      if (ServiceAccount != other.ServiceAccount) return false;
      if(!serviceAccountScopes_.Equals(other.serviceAccountScopes_)) return false;
      if (MachineType != other.MachineType) return false;
      if (!object.Equals(AcceleratorConfig, other.AcceleratorConfig)) return false;
      if (State != other.State) return false;
      if (InstallGpuDriver != other.InstallGpuDriver) return false;
      if (CustomGpuDriverPath != other.CustomGpuDriverPath) return false;
      if (BootDiskType != other.BootDiskType) return false;
      if (BootDiskSizeGb != other.BootDiskSizeGb) return false;
      if (DataDiskType != other.DataDiskType) return false;
      if (DataDiskSizeGb != other.DataDiskSizeGb) return false;
      if (NoRemoveDataDisk != other.NoRemoveDataDisk) return false;
      if (DiskEncryption != other.DiskEncryption) return false;
      if (KmsKey != other.KmsKey) return false;
      if(!disks_.Equals(other.disks_)) return false;
      if (!object.Equals(ShieldedInstanceConfig, other.ShieldedInstanceConfig)) return false;
      if (NoPublicIp != other.NoPublicIp) return false;
      if (NoProxyAccess != other.NoProxyAccess) return false;
      if (Network != other.Network) return false;
      if (Subnet != other.Subnet) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if(!upgradeHistory_.Equals(other.upgradeHistory_)) return false;
      if (NicType != other.NicType) return false;
      if (!object.Equals(ReservationAffinity, other.ReservationAffinity)) return false;
      if (Creator != other.Creator) return false;
      if (CanIpForward != other.CanIpForward) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (EnvironmentCase != other.EnvironmentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (environmentCase_ == EnvironmentOneofCase.VmImage) hash ^= VmImage.GetHashCode();
      if (environmentCase_ == EnvironmentOneofCase.ContainerImage) hash ^= ContainerImage.GetHashCode();
      if (PostStartupScript.Length != 0) hash ^= PostStartupScript.GetHashCode();
      if (ProxyUri.Length != 0) hash ^= ProxyUri.GetHashCode();
      hash ^= instanceOwners_.GetHashCode();
      if (ServiceAccount.Length != 0) hash ^= ServiceAccount.GetHashCode();
      hash ^= serviceAccountScopes_.GetHashCode();
      if (MachineType.Length != 0) hash ^= MachineType.GetHashCode();
      if (acceleratorConfig_ != null) hash ^= AcceleratorConfig.GetHashCode();
      if (State != global::Google.Cloud.Notebooks.V1.Instance.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (InstallGpuDriver != false) hash ^= InstallGpuDriver.GetHashCode();
      if (CustomGpuDriverPath.Length != 0) hash ^= CustomGpuDriverPath.GetHashCode();
      if (BootDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) hash ^= BootDiskType.GetHashCode();
      if (BootDiskSizeGb != 0L) hash ^= BootDiskSizeGb.GetHashCode();
      if (DataDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) hash ^= DataDiskType.GetHashCode();
      if (DataDiskSizeGb != 0L) hash ^= DataDiskSizeGb.GetHashCode();
      if (NoRemoveDataDisk != false) hash ^= NoRemoveDataDisk.GetHashCode();
      if (DiskEncryption != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption.Unspecified) hash ^= DiskEncryption.GetHashCode();
      if (KmsKey.Length != 0) hash ^= KmsKey.GetHashCode();
      hash ^= disks_.GetHashCode();
      if (shieldedInstanceConfig_ != null) hash ^= ShieldedInstanceConfig.GetHashCode();
      if (NoPublicIp != false) hash ^= NoPublicIp.GetHashCode();
      if (NoProxyAccess != false) hash ^= NoProxyAccess.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (Subnet.Length != 0) hash ^= Subnet.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= Metadata.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= upgradeHistory_.GetHashCode();
      if (NicType != global::Google.Cloud.Notebooks.V1.Instance.Types.NicType.UnspecifiedNicType) hash ^= NicType.GetHashCode();
      if (reservationAffinity_ != null) hash ^= ReservationAffinity.GetHashCode();
      if (Creator.Length != 0) hash ^= Creator.GetHashCode();
      if (CanIpForward != false) hash ^= CanIpForward.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      hash ^= (int) environmentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (environmentCase_ == EnvironmentOneofCase.VmImage) {
        output.WriteRawTag(18);
        output.WriteMessage(VmImage);
      }
      if (environmentCase_ == EnvironmentOneofCase.ContainerImage) {
        output.WriteRawTag(26);
        output.WriteMessage(ContainerImage);
      }
      if (PostStartupScript.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PostStartupScript);
      }
      if (ProxyUri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProxyUri);
      }
      instanceOwners_.WriteTo(output, _repeated_instanceOwners_codec);
      if (ServiceAccount.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ServiceAccount);
      }
      if (MachineType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MachineType);
      }
      if (acceleratorConfig_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(AcceleratorConfig);
      }
      if (State != global::Google.Cloud.Notebooks.V1.Instance.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (InstallGpuDriver != false) {
        output.WriteRawTag(88);
        output.WriteBool(InstallGpuDriver);
      }
      if (CustomGpuDriverPath.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CustomGpuDriverPath);
      }
      if (BootDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) {
        output.WriteRawTag(104);
        output.WriteEnum((int) BootDiskType);
      }
      if (BootDiskSizeGb != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(BootDiskSizeGb);
      }
      if (DiskEncryption != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) DiskEncryption);
      }
      if (KmsKey.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(KmsKey);
      }
      if (NoPublicIp != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(NoPublicIp);
      }
      if (NoProxyAccess != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(NoProxyAccess);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Network);
      }
      if (Subnet.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Subnet);
      }
      labels_.WriteTo(output, _map_labels_codec);
      metadata_.WriteTo(output, _map_metadata_codec);
      if (createTime_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(UpdateTime);
      }
      if (DataDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) DataDiskType);
      }
      if (DataDiskSizeGb != 0L) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(DataDiskSizeGb);
      }
      if (NoRemoveDataDisk != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(NoRemoveDataDisk);
      }
      disks_.WriteTo(output, _repeated_disks_codec);
      upgradeHistory_.WriteTo(output, _repeated_upgradeHistory_codec);
      if (shieldedInstanceConfig_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ShieldedInstanceConfig);
      }
      serviceAccountScopes_.WriteTo(output, _repeated_serviceAccountScopes_codec);
      tags_.WriteTo(output, _repeated_tags_codec);
      if (NicType != global::Google.Cloud.Notebooks.V1.Instance.Types.NicType.UnspecifiedNicType) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) NicType);
      }
      if (reservationAffinity_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(ReservationAffinity);
      }
      if (Creator.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(Creator);
      }
      if (CanIpForward != false) {
        output.WriteRawTag(184, 2);
        output.WriteBool(CanIpForward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (environmentCase_ == EnvironmentOneofCase.VmImage) {
        output.WriteRawTag(18);
        output.WriteMessage(VmImage);
      }
      if (environmentCase_ == EnvironmentOneofCase.ContainerImage) {
        output.WriteRawTag(26);
        output.WriteMessage(ContainerImage);
      }
      if (PostStartupScript.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PostStartupScript);
      }
      if (ProxyUri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ProxyUri);
      }
      instanceOwners_.WriteTo(ref output, _repeated_instanceOwners_codec);
      if (ServiceAccount.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ServiceAccount);
      }
      if (MachineType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MachineType);
      }
      if (acceleratorConfig_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(AcceleratorConfig);
      }
      if (State != global::Google.Cloud.Notebooks.V1.Instance.Types.State.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) State);
      }
      if (InstallGpuDriver != false) {
        output.WriteRawTag(88);
        output.WriteBool(InstallGpuDriver);
      }
      if (CustomGpuDriverPath.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CustomGpuDriverPath);
      }
      if (BootDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) {
        output.WriteRawTag(104);
        output.WriteEnum((int) BootDiskType);
      }
      if (BootDiskSizeGb != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(BootDiskSizeGb);
      }
      if (DiskEncryption != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) DiskEncryption);
      }
      if (KmsKey.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(KmsKey);
      }
      if (NoPublicIp != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(NoPublicIp);
      }
      if (NoProxyAccess != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(NoProxyAccess);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Network);
      }
      if (Subnet.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Subnet);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      metadata_.WriteTo(ref output, _map_metadata_codec);
      if (createTime_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(UpdateTime);
      }
      if (DataDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) DataDiskType);
      }
      if (DataDiskSizeGb != 0L) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(DataDiskSizeGb);
      }
      if (NoRemoveDataDisk != false) {
        output.WriteRawTag(216, 1);
        output.WriteBool(NoRemoveDataDisk);
      }
      disks_.WriteTo(ref output, _repeated_disks_codec);
      upgradeHistory_.WriteTo(ref output, _repeated_upgradeHistory_codec);
      if (shieldedInstanceConfig_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ShieldedInstanceConfig);
      }
      serviceAccountScopes_.WriteTo(ref output, _repeated_serviceAccountScopes_codec);
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (NicType != global::Google.Cloud.Notebooks.V1.Instance.Types.NicType.UnspecifiedNicType) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) NicType);
      }
      if (reservationAffinity_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(ReservationAffinity);
      }
      if (Creator.Length != 0) {
        output.WriteRawTag(162, 2);
        output.WriteString(Creator);
      }
      if (CanIpForward != false) {
        output.WriteRawTag(184, 2);
        output.WriteBool(CanIpForward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (environmentCase_ == EnvironmentOneofCase.VmImage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VmImage);
      }
      if (environmentCase_ == EnvironmentOneofCase.ContainerImage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContainerImage);
      }
      if (PostStartupScript.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostStartupScript);
      }
      if (ProxyUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxyUri);
      }
      size += instanceOwners_.CalculateSize(_repeated_instanceOwners_codec);
      if (ServiceAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccount);
      }
      size += serviceAccountScopes_.CalculateSize(_repeated_serviceAccountScopes_codec);
      if (MachineType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineType);
      }
      if (acceleratorConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcceleratorConfig);
      }
      if (State != global::Google.Cloud.Notebooks.V1.Instance.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (InstallGpuDriver != false) {
        size += 1 + 1;
      }
      if (CustomGpuDriverPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomGpuDriverPath);
      }
      if (BootDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BootDiskType);
      }
      if (BootDiskSizeGb != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BootDiskSizeGb);
      }
      if (DataDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DataDiskType);
      }
      if (DataDiskSizeGb != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(DataDiskSizeGb);
      }
      if (NoRemoveDataDisk != false) {
        size += 2 + 1;
      }
      if (DiskEncryption != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DiskEncryption);
      }
      if (KmsKey.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(KmsKey);
      }
      size += disks_.CalculateSize(_repeated_disks_codec);
      if (shieldedInstanceConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShieldedInstanceConfig);
      }
      if (NoPublicIp != false) {
        size += 2 + 1;
      }
      if (NoProxyAccess != false) {
        size += 2 + 1;
      }
      if (Network.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (Subnet.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Subnet);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      size += metadata_.CalculateSize(_map_metadata_codec);
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += upgradeHistory_.CalculateSize(_repeated_upgradeHistory_codec);
      if (NicType != global::Google.Cloud.Notebooks.V1.Instance.Types.NicType.UnspecifiedNicType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) NicType);
      }
      if (reservationAffinity_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReservationAffinity);
      }
      if (Creator.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Creator);
      }
      if (CanIpForward != false) {
        size += 2 + 1;
      }
      if (createTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Instance other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PostStartupScript.Length != 0) {
        PostStartupScript = other.PostStartupScript;
      }
      if (other.ProxyUri.Length != 0) {
        ProxyUri = other.ProxyUri;
      }
      instanceOwners_.Add(other.instanceOwners_);
      if (other.ServiceAccount.Length != 0) {
        ServiceAccount = other.ServiceAccount;
      }
      serviceAccountScopes_.Add(other.serviceAccountScopes_);
      if (other.MachineType.Length != 0) {
        MachineType = other.MachineType;
      }
      if (other.acceleratorConfig_ != null) {
        if (acceleratorConfig_ == null) {
          AcceleratorConfig = new global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorConfig();
        }
        AcceleratorConfig.MergeFrom(other.AcceleratorConfig);
      }
      if (other.State != global::Google.Cloud.Notebooks.V1.Instance.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.InstallGpuDriver != false) {
        InstallGpuDriver = other.InstallGpuDriver;
      }
      if (other.CustomGpuDriverPath.Length != 0) {
        CustomGpuDriverPath = other.CustomGpuDriverPath;
      }
      if (other.BootDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) {
        BootDiskType = other.BootDiskType;
      }
      if (other.BootDiskSizeGb != 0L) {
        BootDiskSizeGb = other.BootDiskSizeGb;
      }
      if (other.DataDiskType != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType.Unspecified) {
        DataDiskType = other.DataDiskType;
      }
      if (other.DataDiskSizeGb != 0L) {
        DataDiskSizeGb = other.DataDiskSizeGb;
      }
      if (other.NoRemoveDataDisk != false) {
        NoRemoveDataDisk = other.NoRemoveDataDisk;
      }
      if (other.DiskEncryption != global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption.Unspecified) {
        DiskEncryption = other.DiskEncryption;
      }
      if (other.KmsKey.Length != 0) {
        KmsKey = other.KmsKey;
      }
      disks_.Add(other.disks_);
      if (other.shieldedInstanceConfig_ != null) {
        if (shieldedInstanceConfig_ == null) {
          ShieldedInstanceConfig = new global::Google.Cloud.Notebooks.V1.Instance.Types.ShieldedInstanceConfig();
        }
        ShieldedInstanceConfig.MergeFrom(other.ShieldedInstanceConfig);
      }
      if (other.NoPublicIp != false) {
        NoPublicIp = other.NoPublicIp;
      }
      if (other.NoProxyAccess != false) {
        NoProxyAccess = other.NoProxyAccess;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.Subnet.Length != 0) {
        Subnet = other.Subnet;
      }
      labels_.MergeFrom(other.labels_);
      metadata_.MergeFrom(other.metadata_);
      tags_.Add(other.tags_);
      upgradeHistory_.Add(other.upgradeHistory_);
      if (other.NicType != global::Google.Cloud.Notebooks.V1.Instance.Types.NicType.UnspecifiedNicType) {
        NicType = other.NicType;
      }
      if (other.reservationAffinity_ != null) {
        if (reservationAffinity_ == null) {
          ReservationAffinity = new global::Google.Cloud.Notebooks.V1.ReservationAffinity();
        }
        ReservationAffinity.MergeFrom(other.ReservationAffinity);
      }
      if (other.Creator.Length != 0) {
        Creator = other.Creator;
      }
      if (other.CanIpForward != false) {
        CanIpForward = other.CanIpForward;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      switch (other.EnvironmentCase) {
        case EnvironmentOneofCase.VmImage:
          if (VmImage == null) {
            VmImage = new global::Google.Cloud.Notebooks.V1.VmImage();
          }
          VmImage.MergeFrom(other.VmImage);
          break;
        case EnvironmentOneofCase.ContainerImage:
          if (ContainerImage == null) {
            ContainerImage = new global::Google.Cloud.Notebooks.V1.ContainerImage();
          }
          ContainerImage.MergeFrom(other.ContainerImage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Notebooks.V1.VmImage subBuilder = new global::Google.Cloud.Notebooks.V1.VmImage();
            if (environmentCase_ == EnvironmentOneofCase.VmImage) {
              subBuilder.MergeFrom(VmImage);
            }
            input.ReadMessage(subBuilder);
            VmImage = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Notebooks.V1.ContainerImage subBuilder = new global::Google.Cloud.Notebooks.V1.ContainerImage();
            if (environmentCase_ == EnvironmentOneofCase.ContainerImage) {
              subBuilder.MergeFrom(ContainerImage);
            }
            input.ReadMessage(subBuilder);
            ContainerImage = subBuilder;
            break;
          }
          case 34: {
            PostStartupScript = input.ReadString();
            break;
          }
          case 42: {
            ProxyUri = input.ReadString();
            break;
          }
          case 50: {
            instanceOwners_.AddEntriesFrom(input, _repeated_instanceOwners_codec);
            break;
          }
          case 58: {
            ServiceAccount = input.ReadString();
            break;
          }
          case 66: {
            MachineType = input.ReadString();
            break;
          }
          case 74: {
            if (acceleratorConfig_ == null) {
              AcceleratorConfig = new global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorConfig();
            }
            input.ReadMessage(AcceleratorConfig);
            break;
          }
          case 80: {
            State = (global::Google.Cloud.Notebooks.V1.Instance.Types.State) input.ReadEnum();
            break;
          }
          case 88: {
            InstallGpuDriver = input.ReadBool();
            break;
          }
          case 98: {
            CustomGpuDriverPath = input.ReadString();
            break;
          }
          case 104: {
            BootDiskType = (global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType) input.ReadEnum();
            break;
          }
          case 112: {
            BootDiskSizeGb = input.ReadInt64();
            break;
          }
          case 120: {
            DiskEncryption = (global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption) input.ReadEnum();
            break;
          }
          case 130: {
            KmsKey = input.ReadString();
            break;
          }
          case 136: {
            NoPublicIp = input.ReadBool();
            break;
          }
          case 144: {
            NoProxyAccess = input.ReadBool();
            break;
          }
          case 154: {
            Network = input.ReadString();
            break;
          }
          case 162: {
            Subnet = input.ReadString();
            break;
          }
          case 170: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 178: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 186: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 194: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 200: {
            DataDiskType = (global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType) input.ReadEnum();
            break;
          }
          case 208: {
            DataDiskSizeGb = input.ReadInt64();
            break;
          }
          case 216: {
            NoRemoveDataDisk = input.ReadBool();
            break;
          }
          case 226: {
            disks_.AddEntriesFrom(input, _repeated_disks_codec);
            break;
          }
          case 234: {
            upgradeHistory_.AddEntriesFrom(input, _repeated_upgradeHistory_codec);
            break;
          }
          case 242: {
            if (shieldedInstanceConfig_ == null) {
              ShieldedInstanceConfig = new global::Google.Cloud.Notebooks.V1.Instance.Types.ShieldedInstanceConfig();
            }
            input.ReadMessage(ShieldedInstanceConfig);
            break;
          }
          case 250: {
            serviceAccountScopes_.AddEntriesFrom(input, _repeated_serviceAccountScopes_codec);
            break;
          }
          case 258: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 264: {
            NicType = (global::Google.Cloud.Notebooks.V1.Instance.Types.NicType) input.ReadEnum();
            break;
          }
          case 274: {
            if (reservationAffinity_ == null) {
              ReservationAffinity = new global::Google.Cloud.Notebooks.V1.ReservationAffinity();
            }
            input.ReadMessage(ReservationAffinity);
            break;
          }
          case 290: {
            Creator = input.ReadString();
            break;
          }
          case 312: {
            CanIpForward = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Notebooks.V1.VmImage subBuilder = new global::Google.Cloud.Notebooks.V1.VmImage();
            if (environmentCase_ == EnvironmentOneofCase.VmImage) {
              subBuilder.MergeFrom(VmImage);
            }
            input.ReadMessage(subBuilder);
            VmImage = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Notebooks.V1.ContainerImage subBuilder = new global::Google.Cloud.Notebooks.V1.ContainerImage();
            if (environmentCase_ == EnvironmentOneofCase.ContainerImage) {
              subBuilder.MergeFrom(ContainerImage);
            }
            input.ReadMessage(subBuilder);
            ContainerImage = subBuilder;
            break;
          }
          case 34: {
            PostStartupScript = input.ReadString();
            break;
          }
          case 42: {
            ProxyUri = input.ReadString();
            break;
          }
          case 50: {
            instanceOwners_.AddEntriesFrom(ref input, _repeated_instanceOwners_codec);
            break;
          }
          case 58: {
            ServiceAccount = input.ReadString();
            break;
          }
          case 66: {
            MachineType = input.ReadString();
            break;
          }
          case 74: {
            if (acceleratorConfig_ == null) {
              AcceleratorConfig = new global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorConfig();
            }
            input.ReadMessage(AcceleratorConfig);
            break;
          }
          case 80: {
            State = (global::Google.Cloud.Notebooks.V1.Instance.Types.State) input.ReadEnum();
            break;
          }
          case 88: {
            InstallGpuDriver = input.ReadBool();
            break;
          }
          case 98: {
            CustomGpuDriverPath = input.ReadString();
            break;
          }
          case 104: {
            BootDiskType = (global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType) input.ReadEnum();
            break;
          }
          case 112: {
            BootDiskSizeGb = input.ReadInt64();
            break;
          }
          case 120: {
            DiskEncryption = (global::Google.Cloud.Notebooks.V1.Instance.Types.DiskEncryption) input.ReadEnum();
            break;
          }
          case 130: {
            KmsKey = input.ReadString();
            break;
          }
          case 136: {
            NoPublicIp = input.ReadBool();
            break;
          }
          case 144: {
            NoProxyAccess = input.ReadBool();
            break;
          }
          case 154: {
            Network = input.ReadString();
            break;
          }
          case 162: {
            Subnet = input.ReadString();
            break;
          }
          case 170: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 178: {
            metadata_.AddEntriesFrom(ref input, _map_metadata_codec);
            break;
          }
          case 186: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 194: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 200: {
            DataDiskType = (global::Google.Cloud.Notebooks.V1.Instance.Types.DiskType) input.ReadEnum();
            break;
          }
          case 208: {
            DataDiskSizeGb = input.ReadInt64();
            break;
          }
          case 216: {
            NoRemoveDataDisk = input.ReadBool();
            break;
          }
          case 226: {
            disks_.AddEntriesFrom(ref input, _repeated_disks_codec);
            break;
          }
          case 234: {
            upgradeHistory_.AddEntriesFrom(ref input, _repeated_upgradeHistory_codec);
            break;
          }
          case 242: {
            if (shieldedInstanceConfig_ == null) {
              ShieldedInstanceConfig = new global::Google.Cloud.Notebooks.V1.Instance.Types.ShieldedInstanceConfig();
            }
            input.ReadMessage(ShieldedInstanceConfig);
            break;
          }
          case 250: {
            serviceAccountScopes_.AddEntriesFrom(ref input, _repeated_serviceAccountScopes_codec);
            break;
          }
          case 258: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
          case 264: {
            NicType = (global::Google.Cloud.Notebooks.V1.Instance.Types.NicType) input.ReadEnum();
            break;
          }
          case 274: {
            if (reservationAffinity_ == null) {
              ReservationAffinity = new global::Google.Cloud.Notebooks.V1.ReservationAffinity();
            }
            input.ReadMessage(ReservationAffinity);
            break;
          }
          case 290: {
            Creator = input.ReadString();
            break;
          }
          case 312: {
            CanIpForward = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Instance message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Definition of the types of hardware accelerators that can be used on this
      /// instance.
      /// </summary>
      public enum AcceleratorType {
        /// <summary>
        /// Accelerator type is not specified.
        /// </summary>
        [pbr::OriginalName("ACCELERATOR_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Accelerator type is Nvidia Tesla K80.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_K80")] NvidiaTeslaK80 = 1,
        /// <summary>
        /// Accelerator type is Nvidia Tesla P100.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_P100")] NvidiaTeslaP100 = 2,
        /// <summary>
        /// Accelerator type is Nvidia Tesla V100.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_V100")] NvidiaTeslaV100 = 3,
        /// <summary>
        /// Accelerator type is Nvidia Tesla P4.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_P4")] NvidiaTeslaP4 = 4,
        /// <summary>
        /// Accelerator type is Nvidia Tesla T4.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_T4")] NvidiaTeslaT4 = 5,
        /// <summary>
        /// Accelerator type is Nvidia Tesla A100.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_A100")] NvidiaTeslaA100 = 11,
        /// <summary>
        /// Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_T4_VWS")] NvidiaTeslaT4Vws = 8,
        /// <summary>
        /// Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_P100_VWS")] NvidiaTeslaP100Vws = 9,
        /// <summary>
        /// Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_P4_VWS")] NvidiaTeslaP4Vws = 10,
        /// <summary>
        /// (Coming soon) Accelerator type is TPU V2.
        /// </summary>
        [pbr::OriginalName("TPU_V2")] TpuV2 = 6,
        /// <summary>
        /// (Coming soon) Accelerator type is TPU V3.
        /// </summary>
        [pbr::OriginalName("TPU_V3")] TpuV3 = 7,
      }

      /// <summary>
      /// The definition of the states of this instance.
      /// </summary>
      public enum State {
        /// <summary>
        /// State is not specified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The control logic is starting the instance.
        /// </summary>
        [pbr::OriginalName("STARTING")] Starting = 1,
        /// <summary>
        /// The control logic is installing required frameworks and registering the
        /// instance with notebook proxy
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 2,
        /// <summary>
        /// The instance is running.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 3,
        /// <summary>
        /// The control logic is stopping the instance.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 4,
        /// <summary>
        /// The instance is stopped.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 5,
        /// <summary>
        /// The instance is deleted.
        /// </summary>
        [pbr::OriginalName("DELETED")] Deleted = 6,
        /// <summary>
        /// The instance is upgrading.
        /// </summary>
        [pbr::OriginalName("UPGRADING")] Upgrading = 7,
        /// <summary>
        /// The instance is being created.
        /// </summary>
        [pbr::OriginalName("INITIALIZING")] Initializing = 8,
        /// <summary>
        /// The instance is getting registered.
        /// </summary>
        [pbr::OriginalName("REGISTERING")] Registering = 9,
        /// <summary>
        /// The instance is suspending.
        /// </summary>
        [pbr::OriginalName("SUSPENDING")] Suspending = 10,
        /// <summary>
        /// The instance is suspended.
        /// </summary>
        [pbr::OriginalName("SUSPENDED")] Suspended = 11,
      }

      /// <summary>
      /// Possible disk types for notebook instances.
      /// </summary>
      public enum DiskType {
        /// <summary>
        /// Disk type not set.
        /// </summary>
        [pbr::OriginalName("DISK_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Standard persistent disk type.
        /// </summary>
        [pbr::OriginalName("PD_STANDARD")] PdStandard = 1,
        /// <summary>
        /// SSD persistent disk type.
        /// </summary>
        [pbr::OriginalName("PD_SSD")] PdSsd = 2,
        /// <summary>
        /// Balanced persistent disk type.
        /// </summary>
        [pbr::OriginalName("PD_BALANCED")] PdBalanced = 3,
        /// <summary>
        /// Extreme persistent disk type.
        /// </summary>
        [pbr::OriginalName("PD_EXTREME")] PdExtreme = 4,
      }

      /// <summary>
      /// Definition of the disk encryption options.
      /// </summary>
      public enum DiskEncryption {
        /// <summary>
        /// Disk encryption is not specified.
        /// </summary>
        [pbr::OriginalName("DISK_ENCRYPTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Use Google managed encryption keys to encrypt the boot disk.
        /// </summary>
        [pbr::OriginalName("GMEK")] Gmek = 1,
        /// <summary>
        /// Use customer managed encryption keys to encrypt the boot disk.
        /// </summary>
        [pbr::OriginalName("CMEK")] Cmek = 2,
      }

      /// <summary>
      /// The type of vNIC driver.
      /// Default should be UNSPECIFIED_NIC_TYPE.
      /// </summary>
      public enum NicType {
        /// <summary>
        /// No type specified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED_NIC_TYPE")] UnspecifiedNicType = 0,
        /// <summary>
        /// VIRTIO
        /// </summary>
        [pbr::OriginalName("VIRTIO_NET")] VirtioNet = 1,
        /// <summary>
        /// GVNIC
        /// </summary>
        [pbr::OriginalName("GVNIC")] Gvnic = 2,
      }

      /// <summary>
      /// Definition of a hardware accelerator. Note that not all combinations
      /// of `type` and `core_count` are valid. Check [GPUs on Compute
      /// Engine](https://cloud.google.com/compute/docs/gpus/#gpus-list) to find a
      /// valid combination. TPUs are not supported.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AcceleratorConfig : pb::IMessage<AcceleratorConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AcceleratorConfig> _parser = new pb::MessageParser<AcceleratorConfig>(() => new AcceleratorConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AcceleratorConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Notebooks.V1.Instance.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AcceleratorConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AcceleratorConfig(AcceleratorConfig other) : this() {
          type_ = other.type_;
          coreCount_ = other.coreCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AcceleratorConfig Clone() {
          return new AcceleratorConfig(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType type_ = global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType.Unspecified;
        /// <summary>
        /// Type of this accelerator.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "core_count" field.</summary>
        public const int CoreCountFieldNumber = 2;
        private long coreCount_;
        /// <summary>
        /// Count of cores of this accelerator.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long CoreCount {
          get { return coreCount_; }
          set {
            coreCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AcceleratorConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AcceleratorConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (CoreCount != other.CoreCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType.Unspecified) hash ^= Type.GetHashCode();
          if (CoreCount != 0L) hash ^= CoreCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (CoreCount != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(CoreCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (CoreCount != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(CoreCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (CoreCount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CoreCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AcceleratorConfig other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType.Unspecified) {
            Type = other.Type;
          }
          if (other.CoreCount != 0L) {
            CoreCount = other.CoreCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType) input.ReadEnum();
                break;
              }
              case 16: {
                CoreCount = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Google.Cloud.Notebooks.V1.Instance.Types.AcceleratorType) input.ReadEnum();
                break;
              }
              case 16: {
                CoreCount = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// An instance-attached disk resource.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Disk : pb::IMessage<Disk>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Disk> _parser = new pb::MessageParser<Disk>(() => new Disk());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Disk> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Notebooks.V1.Instance.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Disk() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Disk(Disk other) : this() {
          autoDelete_ = other.autoDelete_;
          boot_ = other.boot_;
          deviceName_ = other.deviceName_;
          diskSizeGb_ = other.diskSizeGb_;
          guestOsFeatures_ = other.guestOsFeatures_.Clone();
          index_ = other.index_;
          interface_ = other.interface_;
          kind_ = other.kind_;
          licenses_ = other.licenses_.Clone();
          mode_ = other.mode_;
          source_ = other.source_;
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Disk Clone() {
          return new Disk(this);
        }

        /// <summary>Field number for the "auto_delete" field.</summary>
        public const int AutoDeleteFieldNumber = 1;
        private bool autoDelete_;
        /// <summary>
        /// Indicates whether the disk will be auto-deleted when the instance is
        /// deleted (but not when the disk is detached from the instance).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool AutoDelete {
          get { return autoDelete_; }
          set {
            autoDelete_ = value;
          }
        }

        /// <summary>Field number for the "boot" field.</summary>
        public const int BootFieldNumber = 2;
        private bool boot_;
        /// <summary>
        /// Indicates that this is a boot disk. The virtual machine will use the
        /// first partition of the disk for its root filesystem.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Boot {
          get { return boot_; }
          set {
            boot_ = value;
          }
        }

        /// <summary>Field number for the "device_name" field.</summary>
        public const int DeviceNameFieldNumber = 3;
        private string deviceName_ = "";
        /// <summary>
        /// Indicates a unique device name of your choice that is reflected into the
        /// `/dev/disk/by-id/google-*` tree of a Linux operating system running
        /// within the instance. This name can be used to reference the device for
        /// mounting, resizing, and so on, from within the instance.
        ///
        /// If not specified, the server chooses a default device name to apply to
        /// this disk, in the form persistent-disk-x, where x is a number assigned by
        /// Google Compute Engine.This field is only applicable for persistent disks.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DeviceName {
          get { return deviceName_; }
          set {
            deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "disk_size_gb" field.</summary>
        public const int DiskSizeGbFieldNumber = 4;
        private long diskSizeGb_;
        /// <summary>
        /// Indicates the size of the disk in base-2 GB.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long DiskSizeGb {
          get { return diskSizeGb_; }
          set {
            diskSizeGb_ = value;
          }
        }

        /// <summary>Field number for the "guest_os_features" field.</summary>
        public const int GuestOsFeaturesFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Types.GuestOsFeature> _repeated_guestOsFeatures_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Types.GuestOsFeature.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Types.GuestOsFeature> guestOsFeatures_ = new pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Types.GuestOsFeature>();
        /// <summary>
        /// Indicates a list of features to enable on the guest operating system.
        /// Applicable only for bootable images. Read  Enabling guest operating
        /// system features to see a list of available options.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Types.GuestOsFeature> GuestOsFeatures {
          get { return guestOsFeatures_; }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 6;
        private long index_;
        /// <summary>
        /// A zero-based index to this disk, where 0 is reserved for the
        /// boot disk. If you have many disks attached to an instance, each disk
        /// would have a unique index number.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        /// <summary>Field number for the "interface" field.</summary>
        public const int InterfaceFieldNumber = 7;
        private string interface_ = "";
        /// <summary>
        /// Indicates the disk interface to use for attaching this disk, which is
        /// either SCSI or NVME. The default is SCSI. Persistent disks must always
        /// use SCSI and the request will fail if you attempt to attach a persistent
        /// disk in any other format than SCSI. Local SSDs can use either NVME or
        /// SCSI. For performance characteristics of SCSI over NVMe, see Local SSD
        /// performance.
        /// Valid values:
        ///
        /// * `NVME`
        /// * `SCSI`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Interface {
          get { return interface_; }
          set {
            interface_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 8;
        private string kind_ = "";
        /// <summary>
        /// Type of the resource. Always compute#attachedDisk for attached
        /// disks.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Kind {
          get { return kind_; }
          set {
            kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "licenses" field.</summary>
        public const int LicensesFieldNumber = 9;
        private static readonly pb::FieldCodec<string> _repeated_licenses_codec
            = pb::FieldCodec.ForString(74);
        private readonly pbc::RepeatedField<string> licenses_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of publicly visible licenses. Reserved for Google's use.
        /// A License represents billing and aggregate usage data for public
        /// and marketplace images.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Licenses {
          get { return licenses_; }
        }

        /// <summary>Field number for the "mode" field.</summary>
        public const int ModeFieldNumber = 10;
        private string mode_ = "";
        /// <summary>
        /// The mode in which to attach this disk, either `READ_WRITE` or
        /// `READ_ONLY`. If not specified, the default is to attach the disk in
        /// `READ_WRITE` mode. Valid values:
        ///
        /// * `READ_ONLY`
        /// * `READ_WRITE`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Mode {
          get { return mode_; }
          set {
            mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "source" field.</summary>
        public const int SourceFieldNumber = 11;
        private string source_ = "";
        /// <summary>
        /// Indicates a valid partial or full URL to an existing Persistent Disk
        /// resource.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Source {
          get { return source_; }
          set {
            source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 12;
        private string type_ = "";
        /// <summary>
        /// Indicates the type of the disk, either `SCRATCH` or `PERSISTENT`.
        /// Valid values:
        ///
        /// * `PERSISTENT`
        /// * `SCRATCH`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Disk);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Disk other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AutoDelete != other.AutoDelete) return false;
          if (Boot != other.Boot) return false;
          if (DeviceName != other.DeviceName) return false;
          if (DiskSizeGb != other.DiskSizeGb) return false;
          if(!guestOsFeatures_.Equals(other.guestOsFeatures_)) return false;
          if (Index != other.Index) return false;
          if (Interface != other.Interface) return false;
          if (Kind != other.Kind) return false;
          if(!licenses_.Equals(other.licenses_)) return false;
          if (Mode != other.Mode) return false;
          if (Source != other.Source) return false;
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (AutoDelete != false) hash ^= AutoDelete.GetHashCode();
          if (Boot != false) hash ^= Boot.GetHashCode();
          if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
          if (DiskSizeGb != 0L) hash ^= DiskSizeGb.GetHashCode();
          hash ^= guestOsFeatures_.GetHashCode();
          if (Index != 0L) hash ^= Index.GetHashCode();
          if (Interface.Length != 0) hash ^= Interface.GetHashCode();
          if (Kind.Length != 0) hash ^= Kind.GetHashCode();
          hash ^= licenses_.GetHashCode();
          if (Mode.Length != 0) hash ^= Mode.GetHashCode();
          if (Source.Length != 0) hash ^= Source.GetHashCode();
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (AutoDelete != false) {
            output.WriteRawTag(8);
            output.WriteBool(AutoDelete);
          }
          if (Boot != false) {
            output.WriteRawTag(16);
            output.WriteBool(Boot);
          }
          if (DeviceName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DeviceName);
          }
          if (DiskSizeGb != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(DiskSizeGb);
          }
          guestOsFeatures_.WriteTo(output, _repeated_guestOsFeatures_codec);
          if (Index != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(Index);
          }
          if (Interface.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Interface);
          }
          if (Kind.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Kind);
          }
          licenses_.WriteTo(output, _repeated_licenses_codec);
          if (Mode.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Mode);
          }
          if (Source.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Source);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (AutoDelete != false) {
            output.WriteRawTag(8);
            output.WriteBool(AutoDelete);
          }
          if (Boot != false) {
            output.WriteRawTag(16);
            output.WriteBool(Boot);
          }
          if (DeviceName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DeviceName);
          }
          if (DiskSizeGb != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(DiskSizeGb);
          }
          guestOsFeatures_.WriteTo(ref output, _repeated_guestOsFeatures_codec);
          if (Index != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(Index);
          }
          if (Interface.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Interface);
          }
          if (Kind.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Kind);
          }
          licenses_.WriteTo(ref output, _repeated_licenses_codec);
          if (Mode.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Mode);
          }
          if (Source.Length != 0) {
            output.WriteRawTag(90);
            output.WriteString(Source);
          }
          if (Type.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (AutoDelete != false) {
            size += 1 + 1;
          }
          if (Boot != false) {
            size += 1 + 1;
          }
          if (DeviceName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
          }
          if (DiskSizeGb != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiskSizeGb);
          }
          size += guestOsFeatures_.CalculateSize(_repeated_guestOsFeatures_codec);
          if (Index != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Index);
          }
          if (Interface.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Interface);
          }
          if (Kind.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
          }
          size += licenses_.CalculateSize(_repeated_licenses_codec);
          if (Mode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
          }
          if (Source.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
          }
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Disk other) {
          if (other == null) {
            return;
          }
          if (other.AutoDelete != false) {
            AutoDelete = other.AutoDelete;
          }
          if (other.Boot != false) {
            Boot = other.Boot;
          }
          if (other.DeviceName.Length != 0) {
            DeviceName = other.DeviceName;
          }
          if (other.DiskSizeGb != 0L) {
            DiskSizeGb = other.DiskSizeGb;
          }
          guestOsFeatures_.Add(other.guestOsFeatures_);
          if (other.Index != 0L) {
            Index = other.Index;
          }
          if (other.Interface.Length != 0) {
            Interface = other.Interface;
          }
          if (other.Kind.Length != 0) {
            Kind = other.Kind;
          }
          licenses_.Add(other.licenses_);
          if (other.Mode.Length != 0) {
            Mode = other.Mode;
          }
          if (other.Source.Length != 0) {
            Source = other.Source;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AutoDelete = input.ReadBool();
                break;
              }
              case 16: {
                Boot = input.ReadBool();
                break;
              }
              case 26: {
                DeviceName = input.ReadString();
                break;
              }
              case 32: {
                DiskSizeGb = input.ReadInt64();
                break;
              }
              case 42: {
                guestOsFeatures_.AddEntriesFrom(input, _repeated_guestOsFeatures_codec);
                break;
              }
              case 48: {
                Index = input.ReadInt64();
                break;
              }
              case 58: {
                Interface = input.ReadString();
                break;
              }
              case 66: {
                Kind = input.ReadString();
                break;
              }
              case 74: {
                licenses_.AddEntriesFrom(input, _repeated_licenses_codec);
                break;
              }
              case 82: {
                Mode = input.ReadString();
                break;
              }
              case 90: {
                Source = input.ReadString();
                break;
              }
              case 98: {
                Type = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                AutoDelete = input.ReadBool();
                break;
              }
              case 16: {
                Boot = input.ReadBool();
                break;
              }
              case 26: {
                DeviceName = input.ReadString();
                break;
              }
              case 32: {
                DiskSizeGb = input.ReadInt64();
                break;
              }
              case 42: {
                guestOsFeatures_.AddEntriesFrom(ref input, _repeated_guestOsFeatures_codec);
                break;
              }
              case 48: {
                Index = input.ReadInt64();
                break;
              }
              case 58: {
                Interface = input.ReadString();
                break;
              }
              case 66: {
                Kind = input.ReadString();
                break;
              }
              case 74: {
                licenses_.AddEntriesFrom(ref input, _repeated_licenses_codec);
                break;
              }
              case 82: {
                Mode = input.ReadString();
                break;
              }
              case 90: {
                Source = input.ReadString();
                break;
              }
              case 98: {
                Type = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Disk message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Guest OS features for boot disk.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class GuestOsFeature : pb::IMessage<GuestOsFeature>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<GuestOsFeature> _parser = new pb::MessageParser<GuestOsFeature>(() => new GuestOsFeature());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<GuestOsFeature> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Notebooks.V1.Instance.Types.Disk.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public GuestOsFeature() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public GuestOsFeature(GuestOsFeature other) : this() {
              type_ = other.type_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public GuestOsFeature Clone() {
              return new GuestOsFeature(this);
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 1;
            private string type_ = "";
            /// <summary>
            /// The ID of a supported feature. Read  Enabling guest operating system
            /// features to see a list of available options.
            /// Valid values:
            ///
            /// * `FEATURE_TYPE_UNSPECIFIED`
            /// * `MULTI_IP_SUBNET`
            /// * `SECURE_BOOT`
            /// * `UEFI_COMPATIBLE`
            /// * `VIRTIO_SCSI_MULTIQUEUE`
            /// * `WINDOWS`
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Type {
              get { return type_; }
              set {
                type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as GuestOsFeature);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(GuestOsFeature other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Type != other.Type) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Type.Length != 0) hash ^= Type.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Type.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Type.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Type);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Type.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(GuestOsFeature other) {
              if (other == null) {
                return;
              }
              if (other.Type.Length != 0) {
                Type = other.Type;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Type = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Type = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// A set of Shielded Instance options.
      /// Check [Images using supported Shielded VM
      /// features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
      /// Not all combinations are valid.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ShieldedInstanceConfig : pb::IMessage<ShieldedInstanceConfig>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ShieldedInstanceConfig> _parser = new pb::MessageParser<ShieldedInstanceConfig>(() => new ShieldedInstanceConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ShieldedInstanceConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Notebooks.V1.Instance.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ShieldedInstanceConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ShieldedInstanceConfig(ShieldedInstanceConfig other) : this() {
          enableSecureBoot_ = other.enableSecureBoot_;
          enableVtpm_ = other.enableVtpm_;
          enableIntegrityMonitoring_ = other.enableIntegrityMonitoring_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ShieldedInstanceConfig Clone() {
          return new ShieldedInstanceConfig(this);
        }

        /// <summary>Field number for the "enable_secure_boot" field.</summary>
        public const int EnableSecureBootFieldNumber = 1;
        private bool enableSecureBoot_;
        /// <summary>
        /// Defines whether the instance has Secure Boot enabled.
        ///
        /// Secure Boot helps ensure that the system only runs authentic software by
        /// verifying the digital signature of all boot components, and halting the
        /// boot process if signature verification fails. Disabled by default.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool EnableSecureBoot {
          get { return enableSecureBoot_; }
          set {
            enableSecureBoot_ = value;
          }
        }

        /// <summary>Field number for the "enable_vtpm" field.</summary>
        public const int EnableVtpmFieldNumber = 2;
        private bool enableVtpm_;
        /// <summary>
        /// Defines whether the instance has the vTPM enabled. Enabled by default.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool EnableVtpm {
          get { return enableVtpm_; }
          set {
            enableVtpm_ = value;
          }
        }

        /// <summary>Field number for the "enable_integrity_monitoring" field.</summary>
        public const int EnableIntegrityMonitoringFieldNumber = 3;
        private bool enableIntegrityMonitoring_;
        /// <summary>
        /// Defines whether the instance has integrity monitoring enabled.
        ///
        /// Enables monitoring and attestation of the boot integrity of the instance.
        /// The attestation is performed against the integrity policy baseline. This
        /// baseline is initially derived from the implicitly trusted boot image when
        /// the instance is created. Enabled by default.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool EnableIntegrityMonitoring {
          get { return enableIntegrityMonitoring_; }
          set {
            enableIntegrityMonitoring_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ShieldedInstanceConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ShieldedInstanceConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EnableSecureBoot != other.EnableSecureBoot) return false;
          if (EnableVtpm != other.EnableVtpm) return false;
          if (EnableIntegrityMonitoring != other.EnableIntegrityMonitoring) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (EnableSecureBoot != false) hash ^= EnableSecureBoot.GetHashCode();
          if (EnableVtpm != false) hash ^= EnableVtpm.GetHashCode();
          if (EnableIntegrityMonitoring != false) hash ^= EnableIntegrityMonitoring.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (EnableSecureBoot != false) {
            output.WriteRawTag(8);
            output.WriteBool(EnableSecureBoot);
          }
          if (EnableVtpm != false) {
            output.WriteRawTag(16);
            output.WriteBool(EnableVtpm);
          }
          if (EnableIntegrityMonitoring != false) {
            output.WriteRawTag(24);
            output.WriteBool(EnableIntegrityMonitoring);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (EnableSecureBoot != false) {
            output.WriteRawTag(8);
            output.WriteBool(EnableSecureBoot);
          }
          if (EnableVtpm != false) {
            output.WriteRawTag(16);
            output.WriteBool(EnableVtpm);
          }
          if (EnableIntegrityMonitoring != false) {
            output.WriteRawTag(24);
            output.WriteBool(EnableIntegrityMonitoring);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (EnableSecureBoot != false) {
            size += 1 + 1;
          }
          if (EnableVtpm != false) {
            size += 1 + 1;
          }
          if (EnableIntegrityMonitoring != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ShieldedInstanceConfig other) {
          if (other == null) {
            return;
          }
          if (other.EnableSecureBoot != false) {
            EnableSecureBoot = other.EnableSecureBoot;
          }
          if (other.EnableVtpm != false) {
            EnableVtpm = other.EnableVtpm;
          }
          if (other.EnableIntegrityMonitoring != false) {
            EnableIntegrityMonitoring = other.EnableIntegrityMonitoring;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EnableSecureBoot = input.ReadBool();
                break;
              }
              case 16: {
                EnableVtpm = input.ReadBool();
                break;
              }
              case 24: {
                EnableIntegrityMonitoring = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                EnableSecureBoot = input.ReadBool();
                break;
              }
              case 16: {
                EnableVtpm = input.ReadBool();
                break;
              }
              case 24: {
                EnableIntegrityMonitoring = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// The entry of VM image upgrade history.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class UpgradeHistoryEntry : pb::IMessage<UpgradeHistoryEntry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UpgradeHistoryEntry> _parser = new pb::MessageParser<UpgradeHistoryEntry>(() => new UpgradeHistoryEntry());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UpgradeHistoryEntry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Notebooks.V1.Instance.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UpgradeHistoryEntry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UpgradeHistoryEntry(UpgradeHistoryEntry other) : this() {
          snapshot_ = other.snapshot_;
          vmImage_ = other.vmImage_;
          containerImage_ = other.containerImage_;
          framework_ = other.framework_;
          version_ = other.version_;
          state_ = other.state_;
          createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
          targetImage_ = other.targetImage_;
          action_ = other.action_;
          targetVersion_ = other.targetVersion_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UpgradeHistoryEntry Clone() {
          return new UpgradeHistoryEntry(this);
        }

        /// <summary>Field number for the "snapshot" field.</summary>
        public const int SnapshotFieldNumber = 1;
        private string snapshot_ = "";
        /// <summary>
        /// The snapshot of the boot disk of this notebook instance before upgrade.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Snapshot {
          get { return snapshot_; }
          set {
            snapshot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "vm_image" field.</summary>
        public const int VmImageFieldNumber = 2;
        private string vmImage_ = "";
        /// <summary>
        /// The VM image before this instance upgrade.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string VmImage {
          get { return vmImage_; }
          set {
            vmImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "container_image" field.</summary>
        public const int ContainerImageFieldNumber = 3;
        private string containerImage_ = "";
        /// <summary>
        /// The container image before this instance upgrade.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ContainerImage {
          get { return containerImage_; }
          set {
            containerImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "framework" field.</summary>
        public const int FrameworkFieldNumber = 4;
        private string framework_ = "";
        /// <summary>
        /// The framework of this notebook instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Framework {
          get { return framework_; }
          set {
            framework_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 5;
        private string version_ = "";
        /// <summary>
        /// The version of the notebook instance before this upgrade.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Version {
          get { return version_; }
          set {
            version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 6;
        private global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State state_ = global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State.Unspecified;
        /// <summary>
        /// The state of this instance upgrade history entry.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        /// <summary>Field number for the "create_time" field.</summary>
        public const int CreateTimeFieldNumber = 7;
        private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
        /// <summary>
        /// The time that this instance upgrade history entry is created.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
          get { return createTime_; }
          set {
            createTime_ = value;
          }
        }

        /// <summary>Field number for the "target_image" field.</summary>
        public const int TargetImageFieldNumber = 8;
        private string targetImage_ = "";
        /// <summary>
        /// Target VM Image. Format: `ainotebooks-vm/project/image-name/name`.
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TargetImage {
          get { return targetImage_; }
          set {
            targetImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "action" field.</summary>
        public const int ActionFieldNumber = 9;
        private global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action action_ = global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action.Unspecified;
        /// <summary>
        /// Action. Rolloback or Upgrade.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action Action {
          get { return action_; }
          set {
            action_ = value;
          }
        }

        /// <summary>Field number for the "target_version" field.</summary>
        public const int TargetVersionFieldNumber = 10;
        private string targetVersion_ = "";
        /// <summary>
        /// Target VM Version, like m63.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string TargetVersion {
          get { return targetVersion_; }
          set {
            targetVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UpgradeHistoryEntry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UpgradeHistoryEntry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Snapshot != other.Snapshot) return false;
          if (VmImage != other.VmImage) return false;
          if (ContainerImage != other.ContainerImage) return false;
          if (Framework != other.Framework) return false;
          if (Version != other.Version) return false;
          if (State != other.State) return false;
          if (!object.Equals(CreateTime, other.CreateTime)) return false;
          if (TargetImage != other.TargetImage) return false;
          if (Action != other.Action) return false;
          if (TargetVersion != other.TargetVersion) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Snapshot.Length != 0) hash ^= Snapshot.GetHashCode();
          if (VmImage.Length != 0) hash ^= VmImage.GetHashCode();
          if (ContainerImage.Length != 0) hash ^= ContainerImage.GetHashCode();
          if (Framework.Length != 0) hash ^= Framework.GetHashCode();
          if (Version.Length != 0) hash ^= Version.GetHashCode();
          if (State != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State.Unspecified) hash ^= State.GetHashCode();
          if (createTime_ != null) hash ^= CreateTime.GetHashCode();
          if (TargetImage.Length != 0) hash ^= TargetImage.GetHashCode();
          if (Action != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action.Unspecified) hash ^= Action.GetHashCode();
          if (TargetVersion.Length != 0) hash ^= TargetVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Snapshot.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Snapshot);
          }
          if (VmImage.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(VmImage);
          }
          if (ContainerImage.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ContainerImage);
          }
          if (Framework.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Framework);
          }
          if (Version.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Version);
          }
          if (State != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State.Unspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) State);
          }
          if (createTime_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(CreateTime);
          }
          if (TargetImage.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(TargetImage);
          }
          if (Action != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action.Unspecified) {
            output.WriteRawTag(72);
            output.WriteEnum((int) Action);
          }
          if (TargetVersion.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(TargetVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Snapshot.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Snapshot);
          }
          if (VmImage.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(VmImage);
          }
          if (ContainerImage.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ContainerImage);
          }
          if (Framework.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Framework);
          }
          if (Version.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Version);
          }
          if (State != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State.Unspecified) {
            output.WriteRawTag(48);
            output.WriteEnum((int) State);
          }
          if (createTime_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(CreateTime);
          }
          if (TargetImage.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(TargetImage);
          }
          if (Action != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action.Unspecified) {
            output.WriteRawTag(72);
            output.WriteEnum((int) Action);
          }
          if (TargetVersion.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(TargetVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Snapshot.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Snapshot);
          }
          if (VmImage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(VmImage);
          }
          if (ContainerImage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ContainerImage);
          }
          if (Framework.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Framework);
          }
          if (Version.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
          }
          if (State != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
          }
          if (createTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
          }
          if (TargetImage.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetImage);
          }
          if (Action != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
          }
          if (TargetVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UpgradeHistoryEntry other) {
          if (other == null) {
            return;
          }
          if (other.Snapshot.Length != 0) {
            Snapshot = other.Snapshot;
          }
          if (other.VmImage.Length != 0) {
            VmImage = other.VmImage;
          }
          if (other.ContainerImage.Length != 0) {
            ContainerImage = other.ContainerImage;
          }
          if (other.Framework.Length != 0) {
            Framework = other.Framework;
          }
          if (other.Version.Length != 0) {
            Version = other.Version;
          }
          if (other.State != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State.Unspecified) {
            State = other.State;
          }
          if (other.createTime_ != null) {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            CreateTime.MergeFrom(other.CreateTime);
          }
          if (other.TargetImage.Length != 0) {
            TargetImage = other.TargetImage;
          }
          if (other.Action != global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action.Unspecified) {
            Action = other.Action;
          }
          if (other.TargetVersion.Length != 0) {
            TargetVersion = other.TargetVersion;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Snapshot = input.ReadString();
                break;
              }
              case 18: {
                VmImage = input.ReadString();
                break;
              }
              case 26: {
                ContainerImage = input.ReadString();
                break;
              }
              case 34: {
                Framework = input.ReadString();
                break;
              }
              case 42: {
                Version = input.ReadString();
                break;
              }
              case 48: {
                State = (global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State) input.ReadEnum();
                break;
              }
              case 58: {
                if (createTime_ == null) {
                  CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(CreateTime);
                break;
              }
              case 66: {
                TargetImage = input.ReadString();
                break;
              }
              case 72: {
                Action = (global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action) input.ReadEnum();
                break;
              }
              case 82: {
                TargetVersion = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Snapshot = input.ReadString();
                break;
              }
              case 18: {
                VmImage = input.ReadString();
                break;
              }
              case 26: {
                ContainerImage = input.ReadString();
                break;
              }
              case 34: {
                Framework = input.ReadString();
                break;
              }
              case 42: {
                Version = input.ReadString();
                break;
              }
              case 48: {
                State = (global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.State) input.ReadEnum();
                break;
              }
              case 58: {
                if (createTime_ == null) {
                  CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(CreateTime);
                break;
              }
              case 66: {
                TargetImage = input.ReadString();
                break;
              }
              case 72: {
                Action = (global::Google.Cloud.Notebooks.V1.Instance.Types.UpgradeHistoryEntry.Types.Action) input.ReadEnum();
                break;
              }
              case 82: {
                TargetVersion = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the UpgradeHistoryEntry message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// The definition of the states of this upgrade history entry.
          /// </summary>
          public enum State {
            /// <summary>
            /// State is not specified.
            /// </summary>
            [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The instance upgrade is started.
            /// </summary>
            [pbr::OriginalName("STARTED")] Started = 1,
            /// <summary>
            /// The instance upgrade is succeeded.
            /// </summary>
            [pbr::OriginalName("SUCCEEDED")] Succeeded = 2,
            /// <summary>
            /// The instance upgrade is failed.
            /// </summary>
            [pbr::OriginalName("FAILED")] Failed = 3,
          }

          /// <summary>
          /// The definition of operations of this upgrade history entry.
          /// </summary>
          public enum Action {
            /// <summary>
            /// Operation is not specified.
            /// </summary>
            [pbr::OriginalName("ACTION_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Upgrade.
            /// </summary>
            [pbr::OriginalName("UPGRADE")] Upgrade = 1,
            /// <summary>
            /// Rollback.
            /// </summary>
            [pbr::OriginalName("ROLLBACK")] Rollback = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
