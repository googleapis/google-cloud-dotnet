// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/notebooks/v1/runtime.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Notebooks.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/notebooks/v1/runtime.proto</summary>
  public static partial class RuntimeReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/notebooks/v1/runtime.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RuntimeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvY2xvdWQvbm90ZWJvb2tzL3YxL3J1bnRpbWUucHJvdG8SGWdv",
            "b2dsZS5jbG91ZC5ub3RlYm9va3MudjEaH2dvb2dsZS9hcGkvZmllbGRfYmVo",
            "YXZpb3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aK2dvb2ds",
            "ZS9jbG91ZC9ub3RlYm9va3MvdjEvZW52aXJvbm1lbnQucHJvdG8aH2dvb2ds",
            "ZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8irQcKB1J1bnRpbWUSEQoEbmFt",
            "ZRgBIAEoCUID4EEDEkQKD3ZpcnR1YWxfbWFjaGluZRgCIAEoCzIpLmdvb2ds",
            "ZS5jbG91ZC5ub3RlYm9va3MudjEuVmlydHVhbE1hY2hpbmVIABI8CgVzdGF0",
            "ZRgDIAEoDjIoLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZS5T",
            "dGF0ZUID4EEDEkkKDGhlYWx0aF9zdGF0ZRgEIAEoDjIuLmdvb2dsZS5jbG91",
            "ZC5ub3RlYm9va3MudjEuUnVudGltZS5IZWFsdGhTdGF0ZUID4EEDEkUKDWFj",
            "Y2Vzc19jb25maWcYBSABKAsyLi5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYx",
            "LlJ1bnRpbWVBY2Nlc3NDb25maWcSSQoPc29mdHdhcmVfY29uZmlnGAYgASgL",
            "MjAuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5SdW50aW1lU29mdHdhcmVD",
            "b25maWcSPwoHbWV0cmljcxgHIAEoCzIpLmdvb2dsZS5jbG91ZC5ub3RlYm9v",
            "a3MudjEuUnVudGltZU1ldHJpY3NCA+BBAxI0CgtjcmVhdGVfdGltZRgUIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVf",
            "dGltZRgVIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAyKU",
            "AQoFU3RhdGUSFQoRU1RBVEVfVU5TUEVDSUZJRUQQABIMCghTVEFSVElORxAB",
            "EhAKDFBST1ZJU0lPTklORxACEgoKBkFDVElWRRADEgwKCFNUT1BQSU5HEAQS",
            "CwoHU1RPUFBFRBAFEgwKCERFTEVUSU5HEAYSDQoJVVBHUkFESU5HEAcSEAoM",
            "SU5JVElBTElaSU5HEAgidwoLSGVhbHRoU3RhdGUSHAoYSEVBTFRIX1NUQVRF",
            "X1VOU1BFQ0lGSUVEEAASCwoHSEVBTFRIWRABEg0KCVVOSEVBTFRIWRACEhcK",
            "E0FHRU5UX05PVF9JTlNUQUxMRUQQAxIVChFBR0VOVF9OT1RfUlVOTklORxAE",
            "OmHqQV4KIG5vdGVib29rcy5nb29nbGVhcGlzLmNvbS9SdW50aW1lEjpwcm9q",
            "ZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0vcnVudGltZXMv",
            "e3J1bnRpbWV9Qg4KDHJ1bnRpbWVfdHlwZSKlAwoYUnVudGltZUFjY2VsZXJh",
            "dG9yQ29uZmlnElEKBHR5cGUYASABKA4yQy5nb29nbGUuY2xvdWQubm90ZWJv",
            "b2tzLnYxLlJ1bnRpbWVBY2NlbGVyYXRvckNvbmZpZy5BY2NlbGVyYXRvclR5",
            "cGUSEgoKY29yZV9jb3VudBgCIAEoAyKhAgoPQWNjZWxlcmF0b3JUeXBlEiAK",
            "HEFDQ0VMRVJBVE9SX1RZUEVfVU5TUEVDSUZJRUQQABIYChBOVklESUFfVEVT",
            "TEFfSzgwEAEaAggBEhUKEU5WSURJQV9URVNMQV9QMTAwEAISFQoRTlZJRElB",
            "X1RFU0xBX1YxMDAQAxITCg9OVklESUFfVEVTTEFfUDQQBBITCg9OVklESUFf",
            "VEVTTEFfVDQQBRIVChFOVklESUFfVEVTTEFfQTEwMBAGEgoKBlRQVV9WMhAH",
            "EgoKBlRQVV9WMxAIEhcKE05WSURJQV9URVNMQV9UNF9WV1MQCRIZChVOVklE",
            "SUFfVEVTTEFfUDEwMF9WV1MQChIXChNOVklESUFfVEVTTEFfUDRfVldTEAsi",
            "IwoQRW5jcnlwdGlvbkNvbmZpZxIPCgdrbXNfa2V5GAEgASgJIqgDCglMb2Nh",
            "bERpc2sSGAoLYXV0b19kZWxldGUYASABKAhCA+BBAxIRCgRib290GAIgASgI",
            "QgPgQQMSGAoLZGV2aWNlX25hbWUYAyABKAlCA+BBAxJaChFndWVzdF9vc19m",
            "ZWF0dXJlcxgEIAMoCzI6Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuTG9j",
            "YWxEaXNrLlJ1bnRpbWVHdWVzdE9zRmVhdHVyZUID4EEDEhIKBWluZGV4GAUg",
            "ASgFQgPgQQMSVAoRaW5pdGlhbGl6ZV9wYXJhbXMYBiABKAsyNC5nb29nbGUu",
            "Y2xvdWQubm90ZWJvb2tzLnYxLkxvY2FsRGlza0luaXRpYWxpemVQYXJhbXNC",
            "A+BBBBIRCglpbnRlcmZhY2UYByABKAkSEQoEa2luZBgIIAEoCUID4EEDEhUK",
            "CGxpY2Vuc2VzGAkgAygJQgPgQQMSDAoEbW9kZRgKIAEoCRIOCgZzb3VyY2UY",
            "CyABKAkSDAoEdHlwZRgMIAEoCRolChVSdW50aW1lR3Vlc3RPc0ZlYXR1cmUS",
            "DAoEdHlwZRgBIAEoCSKqAwoZTG9jYWxEaXNrSW5pdGlhbGl6ZVBhcmFtcxIY",
            "CgtkZXNjcmlwdGlvbhgBIAEoCUID4EEBEhYKCWRpc2tfbmFtZRgCIAEoCUID",
            "4EEBEhkKDGRpc2tfc2l6ZV9nYhgDIAEoA0ID4EEBElUKCWRpc2tfdHlwZRgE",
            "IAEoDjI9Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuTG9jYWxEaXNrSW5p",
            "dGlhbGl6ZVBhcmFtcy5EaXNrVHlwZUID4EEEElUKBmxhYmVscxgFIAMoCzJA",
            "Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuTG9jYWxEaXNrSW5pdGlhbGl6",
            "ZVBhcmFtcy5MYWJlbHNFbnRyeUID4EEBGi0KC0xhYmVsc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiYwoIRGlza1R5cGUSGQoVRElT",
            "S19UWVBFX1VOU1BFQ0lGSUVEEAASDwoLUERfU1RBTkRBUkQQARIKCgZQRF9T",
            "U0QQAhIPCgtQRF9CQUxBTkNFRBADEg4KClBEX0VYVFJFTUUQBCL7AQoTUnVu",
            "dGltZUFjY2Vzc0NvbmZpZxJVCgthY2Nlc3NfdHlwZRgBIAEoDjJALmdvb2ds",
            "ZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZUFjY2Vzc0NvbmZpZy5SdW50",
            "aW1lQWNjZXNzVHlwZRIVCg1ydW50aW1lX293bmVyGAIgASgJEhYKCXByb3h5",
            "X3VyaRgDIAEoCUID4EEDIl4KEVJ1bnRpbWVBY2Nlc3NUeXBlEiMKH1JVTlRJ",
            "TUVfQUNDRVNTX1RZUEVfVU5TUEVDSUZJRUQQABIPCgtTSU5HTEVfVVNFUhAB",
            "EhMKD1NFUlZJQ0VfQUNDT1VOVBACIuQFChVSdW50aW1lU29mdHdhcmVDb25m",
            "aWcSIQoZbm90ZWJvb2tfdXBncmFkZV9zY2hlZHVsZRgBIAEoCRIlChhlbmFi",
            "bGVfaGVhbHRoX21vbml0b3JpbmcYAiABKAhIAIgBARIaCg1pZGxlX3NodXRk",
            "b3duGAMgASgISAGIAQESHQoVaWRsZV9zaHV0ZG93bl90aW1lb3V0GAQgASgF",
            "EhoKEmluc3RhbGxfZ3B1X2RyaXZlchgFIAEoCBIeChZjdXN0b21fZ3B1X2Ry",
            "aXZlcl9wYXRoGAYgASgJEhsKE3Bvc3Rfc3RhcnR1cF9zY3JpcHQYByABKAkS",
            "PwoHa2VybmVscxgIIAMoCzIpLmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEu",
            "Q29udGFpbmVySW1hZ2VCA+BBARIdCgt1cGdyYWRlYWJsZRgJIAEoCEID4EED",
            "SAKIAQEScAoccG9zdF9zdGFydHVwX3NjcmlwdF9iZWhhdmlvchgKIAEoDjJK",
            "Lmdvb2dsZS5jbG91ZC5ub3RlYm9va3MudjEuUnVudGltZVNvZnR3YXJlQ29u",
            "ZmlnLlBvc3RTdGFydHVwU2NyaXB0QmVoYXZpb3ISHQoQZGlzYWJsZV90ZXJt",
            "aW5hbBgLIAEoCEgDiAEBEhkKB3ZlcnNpb24YDCABKAlCA+BBA0gEiAEBIoAB",
            "ChlQb3N0U3RhcnR1cFNjcmlwdEJlaGF2aW9yEiwKKFBPU1RfU1RBUlRVUF9T",
            "Q1JJUFRfQkVIQVZJT1JfVU5TUEVDSUZJRUQQABITCg9SVU5fRVZFUllfU1RB",
            "UlQQARIgChxET1dOTE9BRF9BTkRfUlVOX0VWRVJZX1NUQVJUEAJCGwoZX2Vu",
            "YWJsZV9oZWFsdGhfbW9uaXRvcmluZ0IQCg5faWRsZV9zaHV0ZG93bkIOCgxf",
            "dXBncmFkZWFibGVCEwoRX2Rpc2FibGVfdGVybWluYWxCCgoIX3ZlcnNpb24i",
            "oQEKDlJ1bnRpbWVNZXRyaWNzElkKDnN5c3RlbV9tZXRyaWNzGAEgAygLMjwu",
            "Z29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5SdW50aW1lTWV0cmljcy5TeXN0",
            "ZW1NZXRyaWNzRW50cnlCA+BBAxo0ChJTeXN0ZW1NZXRyaWNzRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJ1Ch1SdW50aW1lU2hpZWxk",
            "ZWRJbnN0YW5jZUNvbmZpZxIaChJlbmFibGVfc2VjdXJlX2Jvb3QYASABKAgS",
            "EwoLZW5hYmxlX3Z0cG0YAiABKAgSIwobZW5hYmxlX2ludGVncml0eV9tb25p",
            "dG9yaW5nGAMgASgIIpcBCg5WaXJ0dWFsTWFjaGluZRIaCg1pbnN0YW5jZV9u",
            "YW1lGAEgASgJQgPgQQMSGAoLaW5zdGFuY2VfaWQYAiABKAlCA+BBAxJPChZ2",
            "aXJ0dWFsX21hY2hpbmVfY29uZmlnGAMgASgLMi8uZ29vZ2xlLmNsb3VkLm5v",
            "dGVib29rcy52MS5WaXJ0dWFsTWFjaGluZUNvbmZpZyLjCQoUVmlydHVhbE1h",
            "Y2hpbmVDb25maWcSEQoEem9uZRgBIAEoCUID4EEDEhkKDG1hY2hpbmVfdHlw",
            "ZRgCIAEoCUID4EECEkgKEGNvbnRhaW5lcl9pbWFnZXMYAyADKAsyKS5nb29n",
            "bGUuY2xvdWQubm90ZWJvb2tzLnYxLkNvbnRhaW5lckltYWdlQgPgQQESPAoJ",
            "ZGF0YV9kaXNrGAQgASgLMiQuZ29vZ2xlLmNsb3VkLm5vdGVib29rcy52MS5M",
            "b2NhbERpc2tCA+BBAhJLChFlbmNyeXB0aW9uX2NvbmZpZxgFIAEoCzIrLmdv",
            "b2dsZS5jbG91ZC5ub3RlYm9va3MudjEuRW5jcnlwdGlvbkNvbmZpZ0ID4EEB",
            "El8KGHNoaWVsZGVkX2luc3RhbmNlX2NvbmZpZxgGIAEoCzI4Lmdvb2dsZS5j",
            "bG91ZC5ub3RlYm9va3MudjEuUnVudGltZVNoaWVsZGVkSW5zdGFuY2VDb25m",
            "aWdCA+BBARJUChJhY2NlbGVyYXRvcl9jb25maWcYByABKAsyMy5nb29nbGUu",
            "Y2xvdWQubm90ZWJvb2tzLnYxLlJ1bnRpbWVBY2NlbGVyYXRvckNvbmZpZ0ID",
            "4EEBEhQKB25ldHdvcmsYCCABKAlCA+BBARITCgZzdWJuZXQYCSABKAlCA+BB",
            "ARIdChBpbnRlcm5hbF9pcF9vbmx5GAogASgIQgPgQQESEQoEdGFncxgNIAMo",
            "CUID4EEBEmMKEGd1ZXN0X2F0dHJpYnV0ZXMYDiADKAsyRC5nb29nbGUuY2xv",
            "dWQubm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLkd1ZXN0QXR0",
            "cmlidXRlc0VudHJ5QgPgQQMSVAoIbWV0YWRhdGEYDyADKAsyPS5nb29nbGUu",
            "Y2xvdWQubm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLk1ldGFk",
            "YXRhRW50cnlCA+BBARJQCgZsYWJlbHMYECADKAsyOy5nb29nbGUuY2xvdWQu",
            "bm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLkxhYmVsc0VudHJ5",
            "QgPgQQESTgoIbmljX3R5cGUYESABKA4yNy5nb29nbGUuY2xvdWQubm90ZWJv",
            "b2tzLnYxLlZpcnR1YWxNYWNoaW5lQ29uZmlnLk5pY1R5cGVCA+BBARIeChFy",
            "ZXNlcnZlZF9pcF9yYW5nZRgSIAEoCUID4EEBElIKCmJvb3RfaW1hZ2UYEyAB",
            "KAsyOS5nb29nbGUuY2xvdWQubm90ZWJvb2tzLnYxLlZpcnR1YWxNYWNoaW5l",
            "Q29uZmlnLkJvb3RJbWFnZUID4EEBGgsKCUJvb3RJbWFnZRo2ChRHdWVzdEF0",
            "dHJpYnV0ZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgB",
            "Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJ",
            "OgI4ARotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBIj4KB05pY1R5cGUSGAoUVU5TUEVDSUZJRURfTklDX1RZUEUQABIO",
            "CgpWSVJUSU9fTkVUEAESCQoFR1ZOSUMQAkLDAQodY29tLmdvb2dsZS5jbG91",
            "ZC5ub3RlYm9va3MudjFCDFJ1bnRpbWVQcm90b1ABWjtjbG91ZC5nb29nbGUu",
            "Y29tL2dvL25vdGVib29rcy9hcGl2MS9ub3RlYm9va3NwYjtub3RlYm9va3Nw",
            "YqoCGUdvb2dsZS5DbG91ZC5Ob3RlYm9va3MuVjHKAhlHb29nbGVcQ2xvdWRc",
            "Tm90ZWJvb2tzXFYx6gIcR29vZ2xlOjpDbG91ZDo6Tm90ZWJvb2tzOjpWMWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Notebooks.V1.EnvironmentReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.Runtime), global::Google.Cloud.Notebooks.V1.Runtime.Parser, new[]{ "Name", "VirtualMachine", "State", "HealthState", "AccessConfig", "SoftwareConfig", "Metrics", "CreateTime", "UpdateTime" }, new[]{ "RuntimeType" }, new[]{ typeof(global::Google.Cloud.Notebooks.V1.Runtime.Types.State), typeof(global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig), global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Parser, new[]{ "Type", "CoreCount" }, null, new[]{ typeof(global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.EncryptionConfig), global::Google.Cloud.Notebooks.V1.EncryptionConfig.Parser, new[]{ "KmsKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.LocalDisk), global::Google.Cloud.Notebooks.V1.LocalDisk.Parser, new[]{ "AutoDelete", "Boot", "DeviceName", "GuestOsFeatures", "Index", "InitializeParams", "Interface", "Kind", "Licenses", "Mode", "Source", "Type" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.LocalDisk.Types.RuntimeGuestOsFeature), global::Google.Cloud.Notebooks.V1.LocalDisk.Types.RuntimeGuestOsFeature.Parser, new[]{ "Type" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams), global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Parser, new[]{ "Description", "DiskName", "DiskSizeGb", "DiskType", "Labels" }, null, new[]{ typeof(global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig), global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Parser, new[]{ "AccessType", "RuntimeOwner", "ProxyUri" }, null, new[]{ typeof(global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig), global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Parser, new[]{ "NotebookUpgradeSchedule", "EnableHealthMonitoring", "IdleShutdown", "IdleShutdownTimeout", "InstallGpuDriver", "CustomGpuDriverPath", "PostStartupScript", "Kernels", "Upgradeable", "PostStartupScriptBehavior", "DisableTerminal", "Version" }, new[]{ "EnableHealthMonitoring", "IdleShutdown", "Upgradeable", "DisableTerminal", "Version" }, new[]{ typeof(global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.RuntimeMetrics), global::Google.Cloud.Notebooks.V1.RuntimeMetrics.Parser, new[]{ "SystemMetrics" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.RuntimeShieldedInstanceConfig), global::Google.Cloud.Notebooks.V1.RuntimeShieldedInstanceConfig.Parser, new[]{ "EnableSecureBoot", "EnableVtpm", "EnableIntegrityMonitoring" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.VirtualMachine), global::Google.Cloud.Notebooks.V1.VirtualMachine.Parser, new[]{ "InstanceName", "InstanceId", "VirtualMachineConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.VirtualMachineConfig), global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Parser, new[]{ "Zone", "MachineType", "ContainerImages", "DataDisk", "EncryptionConfig", "ShieldedInstanceConfig", "AcceleratorConfig", "Network", "Subnet", "InternalIpOnly", "Tags", "GuestAttributes", "Metadata", "Labels", "NicType", "ReservedIpRange", "BootImage" }, null, new[]{ typeof(global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.BootImage), global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.BootImage.Parser, null, null, null, null, null),
            null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The definition of a Runtime for a managed notebook instance.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Runtime : pb::IMessage<Runtime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Runtime> _parser = new pb::MessageParser<Runtime>(() => new Runtime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Runtime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Runtime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Runtime(Runtime other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      healthState_ = other.healthState_;
      accessConfig_ = other.accessConfig_ != null ? other.accessConfig_.Clone() : null;
      softwareConfig_ = other.softwareConfig_ != null ? other.softwareConfig_.Clone() : null;
      metrics_ = other.metrics_ != null ? other.metrics_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      switch (other.RuntimeTypeCase) {
        case RuntimeTypeOneofCase.VirtualMachine:
          VirtualMachine = other.VirtualMachine.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Runtime Clone() {
      return new Runtime(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The resource name of the runtime.
    /// Format:
    /// `projects/{project}/locations/{location}/runtimes/{runtimeId}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "virtual_machine" field.</summary>
    public const int VirtualMachineFieldNumber = 2;
    /// <summary>
    /// Use a Compute Engine VM image to start the managed notebook instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.VirtualMachine VirtualMachine {
      get { return runtimeTypeCase_ == RuntimeTypeOneofCase.VirtualMachine ? (global::Google.Cloud.Notebooks.V1.VirtualMachine) runtimeType_ : null; }
      set {
        runtimeType_ = value;
        runtimeTypeCase_ = value == null ? RuntimeTypeOneofCase.None : RuntimeTypeOneofCase.VirtualMachine;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Cloud.Notebooks.V1.Runtime.Types.State state_ = global::Google.Cloud.Notebooks.V1.Runtime.Types.State.Unspecified;
    /// <summary>
    /// Output only. Runtime state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Runtime.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "health_state" field.</summary>
    public const int HealthStateFieldNumber = 4;
    private global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState healthState_ = global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState.Unspecified;
    /// <summary>
    /// Output only. Runtime health_state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState HealthState {
      get { return healthState_; }
      set {
        healthState_ = value;
      }
    }

    /// <summary>Field number for the "access_config" field.</summary>
    public const int AccessConfigFieldNumber = 5;
    private global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig accessConfig_;
    /// <summary>
    /// The config settings for accessing runtime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig AccessConfig {
      get { return accessConfig_; }
      set {
        accessConfig_ = value;
      }
    }

    /// <summary>Field number for the "software_config" field.</summary>
    public const int SoftwareConfigFieldNumber = 6;
    private global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig softwareConfig_;
    /// <summary>
    /// The config settings for software inside the runtime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig SoftwareConfig {
      get { return softwareConfig_; }
      set {
        softwareConfig_ = value;
      }
    }

    /// <summary>Field number for the "metrics" field.</summary>
    public const int MetricsFieldNumber = 7;
    private global::Google.Cloud.Notebooks.V1.RuntimeMetrics metrics_;
    /// <summary>
    /// Output only. Contains Runtime daemon metrics such as Service status and JupyterLab
    /// stats.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.RuntimeMetrics Metrics {
      get { return metrics_; }
      set {
        metrics_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 20;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Runtime creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 21;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. Runtime update time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    private object runtimeType_;
    /// <summary>Enum of possible cases for the "runtime_type" oneof.</summary>
    public enum RuntimeTypeOneofCase {
      None = 0,
      VirtualMachine = 2,
    }
    private RuntimeTypeOneofCase runtimeTypeCase_ = RuntimeTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeTypeOneofCase RuntimeTypeCase {
      get { return runtimeTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRuntimeType() {
      runtimeTypeCase_ = RuntimeTypeOneofCase.None;
      runtimeType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Runtime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Runtime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(VirtualMachine, other.VirtualMachine)) return false;
      if (State != other.State) return false;
      if (HealthState != other.HealthState) return false;
      if (!object.Equals(AccessConfig, other.AccessConfig)) return false;
      if (!object.Equals(SoftwareConfig, other.SoftwareConfig)) return false;
      if (!object.Equals(Metrics, other.Metrics)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (RuntimeTypeCase != other.RuntimeTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (runtimeTypeCase_ == RuntimeTypeOneofCase.VirtualMachine) hash ^= VirtualMachine.GetHashCode();
      if (State != global::Google.Cloud.Notebooks.V1.Runtime.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (HealthState != global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState.Unspecified) hash ^= HealthState.GetHashCode();
      if (accessConfig_ != null) hash ^= AccessConfig.GetHashCode();
      if (softwareConfig_ != null) hash ^= SoftwareConfig.GetHashCode();
      if (metrics_ != null) hash ^= Metrics.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      hash ^= (int) runtimeTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (runtimeTypeCase_ == RuntimeTypeOneofCase.VirtualMachine) {
        output.WriteRawTag(18);
        output.WriteMessage(VirtualMachine);
      }
      if (State != global::Google.Cloud.Notebooks.V1.Runtime.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (HealthState != global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) HealthState);
      }
      if (accessConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AccessConfig);
      }
      if (softwareConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SoftwareConfig);
      }
      if (metrics_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Metrics);
      }
      if (createTime_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(UpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (runtimeTypeCase_ == RuntimeTypeOneofCase.VirtualMachine) {
        output.WriteRawTag(18);
        output.WriteMessage(VirtualMachine);
      }
      if (State != global::Google.Cloud.Notebooks.V1.Runtime.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (HealthState != global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) HealthState);
      }
      if (accessConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AccessConfig);
      }
      if (softwareConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SoftwareConfig);
      }
      if (metrics_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Metrics);
      }
      if (createTime_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(UpdateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (runtimeTypeCase_ == RuntimeTypeOneofCase.VirtualMachine) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VirtualMachine);
      }
      if (State != global::Google.Cloud.Notebooks.V1.Runtime.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (HealthState != global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HealthState);
      }
      if (accessConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessConfig);
      }
      if (softwareConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SoftwareConfig);
      }
      if (metrics_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metrics);
      }
      if (createTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Runtime other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != global::Google.Cloud.Notebooks.V1.Runtime.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.HealthState != global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState.Unspecified) {
        HealthState = other.HealthState;
      }
      if (other.accessConfig_ != null) {
        if (accessConfig_ == null) {
          AccessConfig = new global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig();
        }
        AccessConfig.MergeFrom(other.AccessConfig);
      }
      if (other.softwareConfig_ != null) {
        if (softwareConfig_ == null) {
          SoftwareConfig = new global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig();
        }
        SoftwareConfig.MergeFrom(other.SoftwareConfig);
      }
      if (other.metrics_ != null) {
        if (metrics_ == null) {
          Metrics = new global::Google.Cloud.Notebooks.V1.RuntimeMetrics();
        }
        Metrics.MergeFrom(other.Metrics);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      switch (other.RuntimeTypeCase) {
        case RuntimeTypeOneofCase.VirtualMachine:
          if (VirtualMachine == null) {
            VirtualMachine = new global::Google.Cloud.Notebooks.V1.VirtualMachine();
          }
          VirtualMachine.MergeFrom(other.VirtualMachine);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Notebooks.V1.VirtualMachine subBuilder = new global::Google.Cloud.Notebooks.V1.VirtualMachine();
            if (runtimeTypeCase_ == RuntimeTypeOneofCase.VirtualMachine) {
              subBuilder.MergeFrom(VirtualMachine);
            }
            input.ReadMessage(subBuilder);
            VirtualMachine = subBuilder;
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Notebooks.V1.Runtime.Types.State) input.ReadEnum();
            break;
          }
          case 32: {
            HealthState = (global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState) input.ReadEnum();
            break;
          }
          case 42: {
            if (accessConfig_ == null) {
              AccessConfig = new global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig();
            }
            input.ReadMessage(AccessConfig);
            break;
          }
          case 50: {
            if (softwareConfig_ == null) {
              SoftwareConfig = new global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig();
            }
            input.ReadMessage(SoftwareConfig);
            break;
          }
          case 58: {
            if (metrics_ == null) {
              Metrics = new global::Google.Cloud.Notebooks.V1.RuntimeMetrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 162: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 170: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            global::Google.Cloud.Notebooks.V1.VirtualMachine subBuilder = new global::Google.Cloud.Notebooks.V1.VirtualMachine();
            if (runtimeTypeCase_ == RuntimeTypeOneofCase.VirtualMachine) {
              subBuilder.MergeFrom(VirtualMachine);
            }
            input.ReadMessage(subBuilder);
            VirtualMachine = subBuilder;
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Notebooks.V1.Runtime.Types.State) input.ReadEnum();
            break;
          }
          case 32: {
            HealthState = (global::Google.Cloud.Notebooks.V1.Runtime.Types.HealthState) input.ReadEnum();
            break;
          }
          case 42: {
            if (accessConfig_ == null) {
              AccessConfig = new global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig();
            }
            input.ReadMessage(AccessConfig);
            break;
          }
          case 50: {
            if (softwareConfig_ == null) {
              SoftwareConfig = new global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig();
            }
            input.ReadMessage(SoftwareConfig);
            break;
          }
          case 58: {
            if (metrics_ == null) {
              Metrics = new global::Google.Cloud.Notebooks.V1.RuntimeMetrics();
            }
            input.ReadMessage(Metrics);
            break;
          }
          case 162: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 170: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Runtime message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The definition of the states of this runtime.
      /// </summary>
      public enum State {
        /// <summary>
        /// State is not specified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The compute layer is starting the runtime. It is not ready for use.
        /// </summary>
        [pbr::OriginalName("STARTING")] Starting = 1,
        /// <summary>
        /// The compute layer is installing required frameworks and registering the
        /// runtime with notebook proxy. It cannot be used.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 2,
        /// <summary>
        /// The runtime is currently running. It is ready for use.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 3,
        /// <summary>
        /// The control logic is stopping the runtime. It cannot be used.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 4,
        /// <summary>
        /// The runtime is stopped. It cannot be used.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 5,
        /// <summary>
        /// The runtime is being deleted. It cannot be used.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 6,
        /// <summary>
        /// The runtime is upgrading. It cannot be used.
        /// </summary>
        [pbr::OriginalName("UPGRADING")] Upgrading = 7,
        /// <summary>
        /// The runtime is being created and set up. It is not ready for use.
        /// </summary>
        [pbr::OriginalName("INITIALIZING")] Initializing = 8,
      }

      /// <summary>
      /// The runtime substate.
      /// </summary>
      public enum HealthState {
        /// <summary>
        /// The runtime substate is unknown.
        /// </summary>
        [pbr::OriginalName("HEALTH_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The runtime is known to be in an healthy state
        /// (for example, critical daemons are running)
        /// Applies to ACTIVE state.
        /// </summary>
        [pbr::OriginalName("HEALTHY")] Healthy = 1,
        /// <summary>
        /// The runtime is known to be in an unhealthy state
        /// (for example, critical daemons are not running)
        /// Applies to ACTIVE state.
        /// </summary>
        [pbr::OriginalName("UNHEALTHY")] Unhealthy = 2,
        /// <summary>
        /// The runtime has not installed health monitoring agent.
        /// Applies to ACTIVE state.
        /// </summary>
        [pbr::OriginalName("AGENT_NOT_INSTALLED")] AgentNotInstalled = 3,
        /// <summary>
        /// The runtime health monitoring agent is not running.
        /// Applies to ACTIVE state.
        /// </summary>
        [pbr::OriginalName("AGENT_NOT_RUNNING")] AgentNotRunning = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Definition of the types of hardware accelerators that can be used.
  /// Definition of the types of hardware accelerators that can be used.
  /// See [Compute Engine
  /// AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes).
  /// Examples:
  ///
  /// * `nvidia-tesla-k80`
  /// * `nvidia-tesla-p100`
  /// * `nvidia-tesla-v100`
  /// * `nvidia-tesla-p4`
  /// * `nvidia-tesla-t4`
  /// * `nvidia-tesla-a100`
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RuntimeAcceleratorConfig : pb::IMessage<RuntimeAcceleratorConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuntimeAcceleratorConfig> _parser = new pb::MessageParser<RuntimeAcceleratorConfig>(() => new RuntimeAcceleratorConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RuntimeAcceleratorConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeAcceleratorConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeAcceleratorConfig(RuntimeAcceleratorConfig other) : this() {
      type_ = other.type_;
      coreCount_ = other.coreCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeAcceleratorConfig Clone() {
      return new RuntimeAcceleratorConfig(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType type_ = global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType.Unspecified;
    /// <summary>
    /// Accelerator model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "core_count" field.</summary>
    public const int CoreCountFieldNumber = 2;
    private long coreCount_;
    /// <summary>
    /// Count of cores of this accelerator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CoreCount {
      get { return coreCount_; }
      set {
        coreCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RuntimeAcceleratorConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RuntimeAcceleratorConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (CoreCount != other.CoreCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType.Unspecified) hash ^= Type.GetHashCode();
      if (CoreCount != 0L) hash ^= CoreCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (CoreCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CoreCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (CoreCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CoreCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (CoreCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CoreCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RuntimeAcceleratorConfig other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType.Unspecified) {
        Type = other.Type;
      }
      if (other.CoreCount != 0L) {
        CoreCount = other.CoreCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType) input.ReadEnum();
            break;
          }
          case 16: {
            CoreCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig.Types.AcceleratorType) input.ReadEnum();
            break;
          }
          case 16: {
            CoreCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RuntimeAcceleratorConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Type of this accelerator.
      /// </summary>
      public enum AcceleratorType {
        /// <summary>
        /// Accelerator type is not specified.
        /// </summary>
        [pbr::OriginalName("ACCELERATOR_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Accelerator type is Nvidia Tesla K80.
        /// </summary>
        [global::System.ObsoleteAttribute]
        [pbr::OriginalName("NVIDIA_TESLA_K80")] NvidiaTeslaK80 = 1,
        /// <summary>
        /// Accelerator type is Nvidia Tesla P100.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_P100")] NvidiaTeslaP100 = 2,
        /// <summary>
        /// Accelerator type is Nvidia Tesla V100.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_V100")] NvidiaTeslaV100 = 3,
        /// <summary>
        /// Accelerator type is Nvidia Tesla P4.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_P4")] NvidiaTeslaP4 = 4,
        /// <summary>
        /// Accelerator type is Nvidia Tesla T4.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_T4")] NvidiaTeslaT4 = 5,
        /// <summary>
        /// Accelerator type is Nvidia Tesla A100.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_A100")] NvidiaTeslaA100 = 6,
        /// <summary>
        /// (Coming soon) Accelerator type is TPU V2.
        /// </summary>
        [pbr::OriginalName("TPU_V2")] TpuV2 = 7,
        /// <summary>
        /// (Coming soon) Accelerator type is TPU V3.
        /// </summary>
        [pbr::OriginalName("TPU_V3")] TpuV3 = 8,
        /// <summary>
        /// Accelerator type is NVIDIA Tesla T4 Virtual Workstations.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_T4_VWS")] NvidiaTeslaT4Vws = 9,
        /// <summary>
        /// Accelerator type is NVIDIA Tesla P100 Virtual Workstations.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_P100_VWS")] NvidiaTeslaP100Vws = 10,
        /// <summary>
        /// Accelerator type is NVIDIA Tesla P4 Virtual Workstations.
        /// </summary>
        [pbr::OriginalName("NVIDIA_TESLA_P4_VWS")] NvidiaTeslaP4Vws = 11,
      }

    }
    #endregion

  }

  /// <summary>
  /// Represents a custom encryption key configuration that can be applied to
  /// a resource. This will encrypt all disks in Virtual Machine.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EncryptionConfig : pb::IMessage<EncryptionConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EncryptionConfig> _parser = new pb::MessageParser<EncryptionConfig>(() => new EncryptionConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EncryptionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncryptionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncryptionConfig(EncryptionConfig other) : this() {
      kmsKey_ = other.kmsKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EncryptionConfig Clone() {
      return new EncryptionConfig(this);
    }

    /// <summary>Field number for the "kms_key" field.</summary>
    public const int KmsKeyFieldNumber = 1;
    private string kmsKey_ = "";
    /// <summary>
    /// The Cloud KMS resource identifier of the customer-managed encryption key
    /// used to protect a resource, such as a disks. It has the following
    /// format:
    /// `projects/{PROJECT_ID}/locations/{REGION}/keyRings/{KEY_RING_NAME}/cryptoKeys/{KEY_NAME}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KmsKey {
      get { return kmsKey_; }
      set {
        kmsKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EncryptionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EncryptionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KmsKey != other.KmsKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (KmsKey.Length != 0) hash ^= KmsKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (KmsKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(KmsKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (KmsKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(KmsKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (KmsKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KmsKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EncryptionConfig other) {
      if (other == null) {
        return;
      }
      if (other.KmsKey.Length != 0) {
        KmsKey = other.KmsKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            KmsKey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            KmsKey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Local attached disk resource.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalDisk : pb::IMessage<LocalDisk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalDisk> _parser = new pb::MessageParser<LocalDisk>(() => new LocalDisk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalDisk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalDisk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalDisk(LocalDisk other) : this() {
      autoDelete_ = other.autoDelete_;
      boot_ = other.boot_;
      deviceName_ = other.deviceName_;
      guestOsFeatures_ = other.guestOsFeatures_.Clone();
      index_ = other.index_;
      initializeParams_ = other.initializeParams_ != null ? other.initializeParams_.Clone() : null;
      interface_ = other.interface_;
      kind_ = other.kind_;
      licenses_ = other.licenses_.Clone();
      mode_ = other.mode_;
      source_ = other.source_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalDisk Clone() {
      return new LocalDisk(this);
    }

    /// <summary>Field number for the "auto_delete" field.</summary>
    public const int AutoDeleteFieldNumber = 1;
    private bool autoDelete_;
    /// <summary>
    /// Optional. Output only. Specifies whether the disk will be auto-deleted when the
    /// instance is deleted (but not when the disk is detached from the instance).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AutoDelete {
      get { return autoDelete_; }
      set {
        autoDelete_ = value;
      }
    }

    /// <summary>Field number for the "boot" field.</summary>
    public const int BootFieldNumber = 2;
    private bool boot_;
    /// <summary>
    /// Optional. Output only. Indicates that this is a boot disk. The virtual machine
    /// will use the first partition of the disk for its root filesystem.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Boot {
      get { return boot_; }
      set {
        boot_ = value;
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 3;
    private string deviceName_ = "";
    /// <summary>
    /// Optional. Output only. Specifies a unique device name
    /// of your choice that is reflected into the
    /// `/dev/disk/by-id/google-*` tree of a Linux operating system running within
    /// the instance. This name can be used to reference the device for mounting,
    /// resizing, and so on, from within the instance.
    ///
    /// If not specified, the server chooses a default device name to apply to this
    /// disk, in the form persistent-disk-x, where x is a number assigned by Google
    /// Compute Engine. This field is only applicable for persistent disks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guest_os_features" field.</summary>
    public const int GuestOsFeaturesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Notebooks.V1.LocalDisk.Types.RuntimeGuestOsFeature> _repeated_guestOsFeatures_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Notebooks.V1.LocalDisk.Types.RuntimeGuestOsFeature.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.LocalDisk.Types.RuntimeGuestOsFeature> guestOsFeatures_ = new pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.LocalDisk.Types.RuntimeGuestOsFeature>();
    /// <summary>
    /// Output only. Indicates a list of features to enable on the guest operating system.
    /// Applicable only for bootable images. Read  Enabling guest operating
    /// system features to see a list of available options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.LocalDisk.Types.RuntimeGuestOsFeature> GuestOsFeatures {
      get { return guestOsFeatures_; }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 5;
    private int index_;
    /// <summary>
    /// Output only. A zero-based index to this disk, where 0 is reserved for the
    /// boot disk. If you have many disks attached to an instance, each disk would
    /// have a unique index number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "initialize_params" field.</summary>
    public const int InitializeParamsFieldNumber = 6;
    private global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams initializeParams_;
    /// <summary>
    /// Input only. Specifies the parameters for a new disk that will be created
    /// alongside the new instance. Use initialization parameters to create boot
    /// disks or local SSDs attached to the new instance.
    ///
    /// This property is mutually exclusive with the source property; you can only
    /// define one or the other, but not both.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams InitializeParams {
      get { return initializeParams_; }
      set {
        initializeParams_ = value;
      }
    }

    /// <summary>Field number for the "interface" field.</summary>
    public const int InterfaceFieldNumber = 7;
    private string interface_ = "";
    /// <summary>
    /// Specifies the disk interface to use for attaching this disk, which is
    /// either SCSI or NVME. The default is SCSI. Persistent disks must always use
    /// SCSI and the request will fail if you attempt to attach a persistent disk
    /// in any other format than SCSI. Local SSDs can use either NVME or SCSI. For
    /// performance characteristics of SCSI over NVMe, see Local SSD performance.
    /// Valid values:
    ///
    /// * `NVME`
    /// * `SCSI`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Interface {
      get { return interface_; }
      set {
        interface_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 8;
    private string kind_ = "";
    /// <summary>
    /// Output only. Type of the resource. Always compute#attachedDisk for attached disks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "licenses" field.</summary>
    public const int LicensesFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_licenses_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> licenses_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Output only. Any valid publicly visible licenses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Licenses {
      get { return licenses_; }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 10;
    private string mode_ = "";
    /// <summary>
    /// The mode in which to attach this disk, either `READ_WRITE` or `READ_ONLY`.
    /// If not specified, the default is to attach the disk in `READ_WRITE` mode.
    /// Valid values:
    ///
    /// * `READ_ONLY`
    /// * `READ_WRITE`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 11;
    private string source_ = "";
    /// <summary>
    /// Specifies a valid partial or full URL to an existing Persistent Disk
    /// resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 12;
    private string type_ = "";
    /// <summary>
    /// Specifies the type of the disk, either `SCRATCH` or `PERSISTENT`. If not
    /// specified, the default is `PERSISTENT`.
    /// Valid values:
    ///
    /// * `PERSISTENT`
    /// * `SCRATCH`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalDisk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalDisk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutoDelete != other.AutoDelete) return false;
      if (Boot != other.Boot) return false;
      if (DeviceName != other.DeviceName) return false;
      if(!guestOsFeatures_.Equals(other.guestOsFeatures_)) return false;
      if (Index != other.Index) return false;
      if (!object.Equals(InitializeParams, other.InitializeParams)) return false;
      if (Interface != other.Interface) return false;
      if (Kind != other.Kind) return false;
      if(!licenses_.Equals(other.licenses_)) return false;
      if (Mode != other.Mode) return false;
      if (Source != other.Source) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AutoDelete != false) hash ^= AutoDelete.GetHashCode();
      if (Boot != false) hash ^= Boot.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      hash ^= guestOsFeatures_.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (initializeParams_ != null) hash ^= InitializeParams.GetHashCode();
      if (Interface.Length != 0) hash ^= Interface.GetHashCode();
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      hash ^= licenses_.GetHashCode();
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AutoDelete != false) {
        output.WriteRawTag(8);
        output.WriteBool(AutoDelete);
      }
      if (Boot != false) {
        output.WriteRawTag(16);
        output.WriteBool(Boot);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      guestOsFeatures_.WriteTo(output, _repeated_guestOsFeatures_codec);
      if (Index != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Index);
      }
      if (initializeParams_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(InitializeParams);
      }
      if (Interface.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Interface);
      }
      if (Kind.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Kind);
      }
      licenses_.WriteTo(output, _repeated_licenses_codec);
      if (Mode.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Mode);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Source);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AutoDelete != false) {
        output.WriteRawTag(8);
        output.WriteBool(AutoDelete);
      }
      if (Boot != false) {
        output.WriteRawTag(16);
        output.WriteBool(Boot);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceName);
      }
      guestOsFeatures_.WriteTo(ref output, _repeated_guestOsFeatures_codec);
      if (Index != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Index);
      }
      if (initializeParams_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(InitializeParams);
      }
      if (Interface.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Interface);
      }
      if (Kind.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Kind);
      }
      licenses_.WriteTo(ref output, _repeated_licenses_codec);
      if (Mode.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Mode);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Source);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AutoDelete != false) {
        size += 1 + 1;
      }
      if (Boot != false) {
        size += 1 + 1;
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      size += guestOsFeatures_.CalculateSize(_repeated_guestOsFeatures_codec);
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (initializeParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitializeParams);
      }
      if (Interface.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Interface);
      }
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      size += licenses_.CalculateSize(_repeated_licenses_codec);
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalDisk other) {
      if (other == null) {
        return;
      }
      if (other.AutoDelete != false) {
        AutoDelete = other.AutoDelete;
      }
      if (other.Boot != false) {
        Boot = other.Boot;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      guestOsFeatures_.Add(other.guestOsFeatures_);
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.initializeParams_ != null) {
        if (initializeParams_ == null) {
          InitializeParams = new global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams();
        }
        InitializeParams.MergeFrom(other.InitializeParams);
      }
      if (other.Interface.Length != 0) {
        Interface = other.Interface;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      licenses_.Add(other.licenses_);
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AutoDelete = input.ReadBool();
            break;
          }
          case 16: {
            Boot = input.ReadBool();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            guestOsFeatures_.AddEntriesFrom(input, _repeated_guestOsFeatures_codec);
            break;
          }
          case 40: {
            Index = input.ReadInt32();
            break;
          }
          case 50: {
            if (initializeParams_ == null) {
              InitializeParams = new global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams();
            }
            input.ReadMessage(InitializeParams);
            break;
          }
          case 58: {
            Interface = input.ReadString();
            break;
          }
          case 66: {
            Kind = input.ReadString();
            break;
          }
          case 74: {
            licenses_.AddEntriesFrom(input, _repeated_licenses_codec);
            break;
          }
          case 82: {
            Mode = input.ReadString();
            break;
          }
          case 90: {
            Source = input.ReadString();
            break;
          }
          case 98: {
            Type = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AutoDelete = input.ReadBool();
            break;
          }
          case 16: {
            Boot = input.ReadBool();
            break;
          }
          case 26: {
            DeviceName = input.ReadString();
            break;
          }
          case 34: {
            guestOsFeatures_.AddEntriesFrom(ref input, _repeated_guestOsFeatures_codec);
            break;
          }
          case 40: {
            Index = input.ReadInt32();
            break;
          }
          case 50: {
            if (initializeParams_ == null) {
              InitializeParams = new global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams();
            }
            input.ReadMessage(InitializeParams);
            break;
          }
          case 58: {
            Interface = input.ReadString();
            break;
          }
          case 66: {
            Kind = input.ReadString();
            break;
          }
          case 74: {
            licenses_.AddEntriesFrom(ref input, _repeated_licenses_codec);
            break;
          }
          case 82: {
            Mode = input.ReadString();
            break;
          }
          case 90: {
            Source = input.ReadString();
            break;
          }
          case 98: {
            Type = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LocalDisk message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Optional. A list of features to enable on the guest operating system.
      /// Applicable only for bootable images.
      /// Read [Enabling guest operating system
      /// features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features)
      /// to see a list of available options.
      /// Guest OS features for boot disk.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class RuntimeGuestOsFeature : pb::IMessage<RuntimeGuestOsFeature>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RuntimeGuestOsFeature> _parser = new pb::MessageParser<RuntimeGuestOsFeature>(() => new RuntimeGuestOsFeature());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RuntimeGuestOsFeature> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Notebooks.V1.LocalDisk.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RuntimeGuestOsFeature() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RuntimeGuestOsFeature(RuntimeGuestOsFeature other) : this() {
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RuntimeGuestOsFeature Clone() {
          return new RuntimeGuestOsFeature(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private string type_ = "";
        /// <summary>
        /// The ID of a supported feature. Read [Enabling guest operating system
        /// features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features)
        /// to see a list of available options.
        ///
        /// Valid values:
        ///
        /// * `FEATURE_TYPE_UNSPECIFIED`
        /// * `MULTI_IP_SUBNET`
        /// * `SECURE_BOOT`
        /// * `UEFI_COMPATIBLE`
        /// * `VIRTIO_SCSI_MULTIQUEUE`
        /// * `WINDOWS`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RuntimeGuestOsFeature);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RuntimeGuestOsFeature other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RuntimeGuestOsFeature other) {
          if (other == null) {
            return;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Input only. Specifies the parameters for a new disk that will be created
  /// alongside the new instance. Use initialization parameters to create boot
  /// disks or local SSDs attached to the new runtime.
  /// This property is mutually exclusive with the source property; you can only
  /// define one or the other, but not both.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocalDiskInitializeParams : pb::IMessage<LocalDiskInitializeParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocalDiskInitializeParams> _parser = new pb::MessageParser<LocalDiskInitializeParams>(() => new LocalDiskInitializeParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocalDiskInitializeParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalDiskInitializeParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalDiskInitializeParams(LocalDiskInitializeParams other) : this() {
      description_ = other.description_;
      diskName_ = other.diskName_;
      diskSizeGb_ = other.diskSizeGb_;
      diskType_ = other.diskType_;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocalDiskInitializeParams Clone() {
      return new LocalDiskInitializeParams(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    /// <summary>
    /// Optional. Provide this property when creating the disk.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disk_name" field.</summary>
    public const int DiskNameFieldNumber = 2;
    private string diskName_ = "";
    /// <summary>
    /// Optional. Specifies the disk name. If not specified, the default is to use the name
    /// of the instance. If the disk with the instance name exists already in the
    /// given zone/region, a new name will be automatically generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DiskName {
      get { return diskName_; }
      set {
        diskName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disk_size_gb" field.</summary>
    public const int DiskSizeGbFieldNumber = 3;
    private long diskSizeGb_;
    /// <summary>
    /// Optional. Specifies the size of the disk in base-2 GB. If not specified, the disk
    /// will be the same size as the image (usually 10GB). If specified, the size
    /// must be equal to or larger than 10GB. Default 100 GB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DiskSizeGb {
      get { return diskSizeGb_; }
      set {
        diskSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "disk_type" field.</summary>
    public const int DiskTypeFieldNumber = 4;
    private global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType diskType_ = global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType.Unspecified;
    /// <summary>
    /// Input only. The type of the boot disk attached to this instance, defaults to
    /// standard persistent disk (`PD_STANDARD`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType DiskType {
      get { return diskType_; }
      set {
        diskType_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Labels to apply to this disk. These can be later modified by the
    /// disks.setLabels method. This field is only applicable for persistent disks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocalDiskInitializeParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocalDiskInitializeParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (DiskName != other.DiskName) return false;
      if (DiskSizeGb != other.DiskSizeGb) return false;
      if (DiskType != other.DiskType) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (DiskName.Length != 0) hash ^= DiskName.GetHashCode();
      if (DiskSizeGb != 0L) hash ^= DiskSizeGb.GetHashCode();
      if (DiskType != global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType.Unspecified) hash ^= DiskType.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (DiskName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DiskName);
      }
      if (DiskSizeGb != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DiskSizeGb);
      }
      if (DiskType != global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) DiskType);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (DiskName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DiskName);
      }
      if (DiskSizeGb != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DiskSizeGb);
      }
      if (DiskType != global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) DiskType);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (DiskName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiskName);
      }
      if (DiskSizeGb != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiskSizeGb);
      }
      if (DiskType != global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DiskType);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocalDiskInitializeParams other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.DiskName.Length != 0) {
        DiskName = other.DiskName;
      }
      if (other.DiskSizeGb != 0L) {
        DiskSizeGb = other.DiskSizeGb;
      }
      if (other.DiskType != global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType.Unspecified) {
        DiskType = other.DiskType;
      }
      labels_.MergeFrom(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            DiskName = input.ReadString();
            break;
          }
          case 24: {
            DiskSizeGb = input.ReadInt64();
            break;
          }
          case 32: {
            DiskType = (global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType) input.ReadEnum();
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            DiskName = input.ReadString();
            break;
          }
          case 24: {
            DiskSizeGb = input.ReadInt64();
            break;
          }
          case 32: {
            DiskType = (global::Google.Cloud.Notebooks.V1.LocalDiskInitializeParams.Types.DiskType) input.ReadEnum();
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LocalDiskInitializeParams message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Possible disk types.
      /// </summary>
      public enum DiskType {
        /// <summary>
        /// Disk type not set.
        /// </summary>
        [pbr::OriginalName("DISK_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Standard persistent disk type.
        /// </summary>
        [pbr::OriginalName("PD_STANDARD")] PdStandard = 1,
        /// <summary>
        /// SSD persistent disk type.
        /// </summary>
        [pbr::OriginalName("PD_SSD")] PdSsd = 2,
        /// <summary>
        /// Balanced persistent disk type.
        /// </summary>
        [pbr::OriginalName("PD_BALANCED")] PdBalanced = 3,
        /// <summary>
        /// Extreme persistent disk type.
        /// </summary>
        [pbr::OriginalName("PD_EXTREME")] PdExtreme = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Specifies the login configuration for Runtime
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RuntimeAccessConfig : pb::IMessage<RuntimeAccessConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuntimeAccessConfig> _parser = new pb::MessageParser<RuntimeAccessConfig>(() => new RuntimeAccessConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RuntimeAccessConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeAccessConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeAccessConfig(RuntimeAccessConfig other) : this() {
      accessType_ = other.accessType_;
      runtimeOwner_ = other.runtimeOwner_;
      proxyUri_ = other.proxyUri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeAccessConfig Clone() {
      return new RuntimeAccessConfig(this);
    }

    /// <summary>Field number for the "access_type" field.</summary>
    public const int AccessTypeFieldNumber = 1;
    private global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType accessType_ = global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType.Unspecified;
    /// <summary>
    /// The type of access mode this instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType AccessType {
      get { return accessType_; }
      set {
        accessType_ = value;
      }
    }

    /// <summary>Field number for the "runtime_owner" field.</summary>
    public const int RuntimeOwnerFieldNumber = 2;
    private string runtimeOwner_ = "";
    /// <summary>
    /// The owner of this runtime after creation. Format: `alias@example.com`
    /// Currently supports one owner only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RuntimeOwner {
      get { return runtimeOwner_; }
      set {
        runtimeOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proxy_uri" field.</summary>
    public const int ProxyUriFieldNumber = 3;
    private string proxyUri_ = "";
    /// <summary>
    /// Output only. The proxy endpoint that is used to access the runtime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProxyUri {
      get { return proxyUri_; }
      set {
        proxyUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RuntimeAccessConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RuntimeAccessConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessType != other.AccessType) return false;
      if (RuntimeOwner != other.RuntimeOwner) return false;
      if (ProxyUri != other.ProxyUri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessType != global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType.Unspecified) hash ^= AccessType.GetHashCode();
      if (RuntimeOwner.Length != 0) hash ^= RuntimeOwner.GetHashCode();
      if (ProxyUri.Length != 0) hash ^= ProxyUri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccessType != global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AccessType);
      }
      if (RuntimeOwner.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RuntimeOwner);
      }
      if (ProxyUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProxyUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccessType != global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AccessType);
      }
      if (RuntimeOwner.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RuntimeOwner);
      }
      if (ProxyUri.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProxyUri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AccessType != global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AccessType);
      }
      if (RuntimeOwner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RuntimeOwner);
      }
      if (ProxyUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxyUri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RuntimeAccessConfig other) {
      if (other == null) {
        return;
      }
      if (other.AccessType != global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType.Unspecified) {
        AccessType = other.AccessType;
      }
      if (other.RuntimeOwner.Length != 0) {
        RuntimeOwner = other.RuntimeOwner;
      }
      if (other.ProxyUri.Length != 0) {
        ProxyUri = other.ProxyUri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccessType = (global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType) input.ReadEnum();
            break;
          }
          case 18: {
            RuntimeOwner = input.ReadString();
            break;
          }
          case 26: {
            ProxyUri = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccessType = (global::Google.Cloud.Notebooks.V1.RuntimeAccessConfig.Types.RuntimeAccessType) input.ReadEnum();
            break;
          }
          case 18: {
            RuntimeOwner = input.ReadString();
            break;
          }
          case 26: {
            ProxyUri = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RuntimeAccessConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Possible ways to access runtime. Authentication mode.
      /// Currently supports: Single User only.
      /// </summary>
      public enum RuntimeAccessType {
        /// <summary>
        /// Unspecified access.
        /// </summary>
        [pbr::OriginalName("RUNTIME_ACCESS_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Single user login.
        /// </summary>
        [pbr::OriginalName("SINGLE_USER")] SingleUser = 1,
        /// <summary>
        /// Service Account mode.
        /// In Service Account mode, Runtime creator will specify a SA that exists
        /// in the consumer project. Using Runtime Service Account field.
        /// Users accessing the Runtime need ActAs (Service Account User) permission.
        /// </summary>
        [pbr::OriginalName("SERVICE_ACCOUNT")] ServiceAccount = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Specifies the selection and configuration of software inside the runtime.
  /// The properties to set on runtime.
  /// Properties keys are specified in `key:value` format, for example:
  ///
  /// * `idle_shutdown: true`
  /// * `idle_shutdown_timeout: 180`
  /// * `enable_health_monitoring: true`
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RuntimeSoftwareConfig : pb::IMessage<RuntimeSoftwareConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuntimeSoftwareConfig> _parser = new pb::MessageParser<RuntimeSoftwareConfig>(() => new RuntimeSoftwareConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RuntimeSoftwareConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeSoftwareConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeSoftwareConfig(RuntimeSoftwareConfig other) : this() {
      _hasBits0 = other._hasBits0;
      notebookUpgradeSchedule_ = other.notebookUpgradeSchedule_;
      enableHealthMonitoring_ = other.enableHealthMonitoring_;
      idleShutdown_ = other.idleShutdown_;
      idleShutdownTimeout_ = other.idleShutdownTimeout_;
      installGpuDriver_ = other.installGpuDriver_;
      customGpuDriverPath_ = other.customGpuDriverPath_;
      postStartupScript_ = other.postStartupScript_;
      kernels_ = other.kernels_.Clone();
      upgradeable_ = other.upgradeable_;
      postStartupScriptBehavior_ = other.postStartupScriptBehavior_;
      disableTerminal_ = other.disableTerminal_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeSoftwareConfig Clone() {
      return new RuntimeSoftwareConfig(this);
    }

    /// <summary>Field number for the "notebook_upgrade_schedule" field.</summary>
    public const int NotebookUpgradeScheduleFieldNumber = 1;
    private string notebookUpgradeSchedule_ = "";
    /// <summary>
    /// Cron expression in UTC timezone, used to schedule instance auto upgrade.
    /// Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NotebookUpgradeSchedule {
      get { return notebookUpgradeSchedule_; }
      set {
        notebookUpgradeSchedule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable_health_monitoring" field.</summary>
    public const int EnableHealthMonitoringFieldNumber = 2;
    private readonly static bool EnableHealthMonitoringDefaultValue = false;

    private bool enableHealthMonitoring_;
    /// <summary>
    /// Verifies core internal services are running.
    /// Default: True
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableHealthMonitoring {
      get { if ((_hasBits0 & 1) != 0) { return enableHealthMonitoring_; } else { return EnableHealthMonitoringDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enableHealthMonitoring_ = value;
      }
    }
    /// <summary>Gets whether the "enable_health_monitoring" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableHealthMonitoring {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enable_health_monitoring" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableHealthMonitoring() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "idle_shutdown" field.</summary>
    public const int IdleShutdownFieldNumber = 3;
    private readonly static bool IdleShutdownDefaultValue = false;

    private bool idleShutdown_;
    /// <summary>
    /// Runtime will automatically shutdown after idle_shutdown_time.
    /// Default: True
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IdleShutdown {
      get { if ((_hasBits0 & 2) != 0) { return idleShutdown_; } else { return IdleShutdownDefaultValue; } }
      set {
        _hasBits0 |= 2;
        idleShutdown_ = value;
      }
    }
    /// <summary>Gets whether the "idle_shutdown" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdleShutdown {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "idle_shutdown" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdleShutdown() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "idle_shutdown_timeout" field.</summary>
    public const int IdleShutdownTimeoutFieldNumber = 4;
    private int idleShutdownTimeout_;
    /// <summary>
    /// Time in minutes to wait before shutting down runtime. Default: 180 minutes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IdleShutdownTimeout {
      get { return idleShutdownTimeout_; }
      set {
        idleShutdownTimeout_ = value;
      }
    }

    /// <summary>Field number for the "install_gpu_driver" field.</summary>
    public const int InstallGpuDriverFieldNumber = 5;
    private bool installGpuDriver_;
    /// <summary>
    /// Install Nvidia Driver automatically.
    /// Default: True
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InstallGpuDriver {
      get { return installGpuDriver_; }
      set {
        installGpuDriver_ = value;
      }
    }

    /// <summary>Field number for the "custom_gpu_driver_path" field.</summary>
    public const int CustomGpuDriverPathFieldNumber = 6;
    private string customGpuDriverPath_ = "";
    /// <summary>
    /// Specify a custom Cloud Storage path where the GPU driver is stored.
    /// If not specified, we'll automatically choose from official GPU drivers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomGpuDriverPath {
      get { return customGpuDriverPath_; }
      set {
        customGpuDriverPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "post_startup_script" field.</summary>
    public const int PostStartupScriptFieldNumber = 7;
    private string postStartupScript_ = "";
    /// <summary>
    /// Path to a Bash script that automatically runs after a notebook instance
    /// fully boots up. The path must be a URL or
    /// Cloud Storage path (`gs://path-to-file/file-name`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PostStartupScript {
      get { return postStartupScript_; }
      set {
        postStartupScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kernels" field.</summary>
    public const int KernelsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Cloud.Notebooks.V1.ContainerImage> _repeated_kernels_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Cloud.Notebooks.V1.ContainerImage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.ContainerImage> kernels_ = new pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.ContainerImage>();
    /// <summary>
    /// Optional. Use a list of container images to use as Kernels in the notebook instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.ContainerImage> Kernels {
      get { return kernels_; }
    }

    /// <summary>Field number for the "upgradeable" field.</summary>
    public const int UpgradeableFieldNumber = 9;
    private readonly static bool UpgradeableDefaultValue = false;

    private bool upgradeable_;
    /// <summary>
    /// Output only. Bool indicating whether an newer image is available in an image family.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Upgradeable {
      get { if ((_hasBits0 & 4) != 0) { return upgradeable_; } else { return UpgradeableDefaultValue; } }
      set {
        _hasBits0 |= 4;
        upgradeable_ = value;
      }
    }
    /// <summary>Gets whether the "upgradeable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUpgradeable {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "upgradeable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUpgradeable() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "post_startup_script_behavior" field.</summary>
    public const int PostStartupScriptBehaviorFieldNumber = 10;
    private global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior postStartupScriptBehavior_ = global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior.Unspecified;
    /// <summary>
    /// Behavior for the post startup script.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior PostStartupScriptBehavior {
      get { return postStartupScriptBehavior_; }
      set {
        postStartupScriptBehavior_ = value;
      }
    }

    /// <summary>Field number for the "disable_terminal" field.</summary>
    public const int DisableTerminalFieldNumber = 11;
    private readonly static bool DisableTerminalDefaultValue = false;

    private bool disableTerminal_;
    /// <summary>
    /// Bool indicating whether JupyterLab terminal will be available or not.
    /// Default: False
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableTerminal {
      get { if ((_hasBits0 & 8) != 0) { return disableTerminal_; } else { return DisableTerminalDefaultValue; } }
      set {
        _hasBits0 |= 8;
        disableTerminal_ = value;
      }
    }
    /// <summary>Gets whether the "disable_terminal" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisableTerminal {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "disable_terminal" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisableTerminal() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 12;
    private readonly static string VersionDefaultValue = "";

    private string version_;
    /// <summary>
    /// Output only. version of boot image such as M100, from release label of the image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_ ?? VersionDefaultValue; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersion {
      get { return version_ != null; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersion() {
      version_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RuntimeSoftwareConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RuntimeSoftwareConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotebookUpgradeSchedule != other.NotebookUpgradeSchedule) return false;
      if (EnableHealthMonitoring != other.EnableHealthMonitoring) return false;
      if (IdleShutdown != other.IdleShutdown) return false;
      if (IdleShutdownTimeout != other.IdleShutdownTimeout) return false;
      if (InstallGpuDriver != other.InstallGpuDriver) return false;
      if (CustomGpuDriverPath != other.CustomGpuDriverPath) return false;
      if (PostStartupScript != other.PostStartupScript) return false;
      if(!kernels_.Equals(other.kernels_)) return false;
      if (Upgradeable != other.Upgradeable) return false;
      if (PostStartupScriptBehavior != other.PostStartupScriptBehavior) return false;
      if (DisableTerminal != other.DisableTerminal) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NotebookUpgradeSchedule.Length != 0) hash ^= NotebookUpgradeSchedule.GetHashCode();
      if (HasEnableHealthMonitoring) hash ^= EnableHealthMonitoring.GetHashCode();
      if (HasIdleShutdown) hash ^= IdleShutdown.GetHashCode();
      if (IdleShutdownTimeout != 0) hash ^= IdleShutdownTimeout.GetHashCode();
      if (InstallGpuDriver != false) hash ^= InstallGpuDriver.GetHashCode();
      if (CustomGpuDriverPath.Length != 0) hash ^= CustomGpuDriverPath.GetHashCode();
      if (PostStartupScript.Length != 0) hash ^= PostStartupScript.GetHashCode();
      hash ^= kernels_.GetHashCode();
      if (HasUpgradeable) hash ^= Upgradeable.GetHashCode();
      if (PostStartupScriptBehavior != global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior.Unspecified) hash ^= PostStartupScriptBehavior.GetHashCode();
      if (HasDisableTerminal) hash ^= DisableTerminal.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NotebookUpgradeSchedule.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NotebookUpgradeSchedule);
      }
      if (HasEnableHealthMonitoring) {
        output.WriteRawTag(16);
        output.WriteBool(EnableHealthMonitoring);
      }
      if (HasIdleShutdown) {
        output.WriteRawTag(24);
        output.WriteBool(IdleShutdown);
      }
      if (IdleShutdownTimeout != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IdleShutdownTimeout);
      }
      if (InstallGpuDriver != false) {
        output.WriteRawTag(40);
        output.WriteBool(InstallGpuDriver);
      }
      if (CustomGpuDriverPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CustomGpuDriverPath);
      }
      if (PostStartupScript.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PostStartupScript);
      }
      kernels_.WriteTo(output, _repeated_kernels_codec);
      if (HasUpgradeable) {
        output.WriteRawTag(72);
        output.WriteBool(Upgradeable);
      }
      if (PostStartupScriptBehavior != global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) PostStartupScriptBehavior);
      }
      if (HasDisableTerminal) {
        output.WriteRawTag(88);
        output.WriteBool(DisableTerminal);
      }
      if (HasVersion) {
        output.WriteRawTag(98);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NotebookUpgradeSchedule.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NotebookUpgradeSchedule);
      }
      if (HasEnableHealthMonitoring) {
        output.WriteRawTag(16);
        output.WriteBool(EnableHealthMonitoring);
      }
      if (HasIdleShutdown) {
        output.WriteRawTag(24);
        output.WriteBool(IdleShutdown);
      }
      if (IdleShutdownTimeout != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IdleShutdownTimeout);
      }
      if (InstallGpuDriver != false) {
        output.WriteRawTag(40);
        output.WriteBool(InstallGpuDriver);
      }
      if (CustomGpuDriverPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CustomGpuDriverPath);
      }
      if (PostStartupScript.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PostStartupScript);
      }
      kernels_.WriteTo(ref output, _repeated_kernels_codec);
      if (HasUpgradeable) {
        output.WriteRawTag(72);
        output.WriteBool(Upgradeable);
      }
      if (PostStartupScriptBehavior != global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) PostStartupScriptBehavior);
      }
      if (HasDisableTerminal) {
        output.WriteRawTag(88);
        output.WriteBool(DisableTerminal);
      }
      if (HasVersion) {
        output.WriteRawTag(98);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NotebookUpgradeSchedule.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotebookUpgradeSchedule);
      }
      if (HasEnableHealthMonitoring) {
        size += 1 + 1;
      }
      if (HasIdleShutdown) {
        size += 1 + 1;
      }
      if (IdleShutdownTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdleShutdownTimeout);
      }
      if (InstallGpuDriver != false) {
        size += 1 + 1;
      }
      if (CustomGpuDriverPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomGpuDriverPath);
      }
      if (PostStartupScript.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostStartupScript);
      }
      size += kernels_.CalculateSize(_repeated_kernels_codec);
      if (HasUpgradeable) {
        size += 1 + 1;
      }
      if (PostStartupScriptBehavior != global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PostStartupScriptBehavior);
      }
      if (HasDisableTerminal) {
        size += 1 + 1;
      }
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RuntimeSoftwareConfig other) {
      if (other == null) {
        return;
      }
      if (other.NotebookUpgradeSchedule.Length != 0) {
        NotebookUpgradeSchedule = other.NotebookUpgradeSchedule;
      }
      if (other.HasEnableHealthMonitoring) {
        EnableHealthMonitoring = other.EnableHealthMonitoring;
      }
      if (other.HasIdleShutdown) {
        IdleShutdown = other.IdleShutdown;
      }
      if (other.IdleShutdownTimeout != 0) {
        IdleShutdownTimeout = other.IdleShutdownTimeout;
      }
      if (other.InstallGpuDriver != false) {
        InstallGpuDriver = other.InstallGpuDriver;
      }
      if (other.CustomGpuDriverPath.Length != 0) {
        CustomGpuDriverPath = other.CustomGpuDriverPath;
      }
      if (other.PostStartupScript.Length != 0) {
        PostStartupScript = other.PostStartupScript;
      }
      kernels_.Add(other.kernels_);
      if (other.HasUpgradeable) {
        Upgradeable = other.Upgradeable;
      }
      if (other.PostStartupScriptBehavior != global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior.Unspecified) {
        PostStartupScriptBehavior = other.PostStartupScriptBehavior;
      }
      if (other.HasDisableTerminal) {
        DisableTerminal = other.DisableTerminal;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NotebookUpgradeSchedule = input.ReadString();
            break;
          }
          case 16: {
            EnableHealthMonitoring = input.ReadBool();
            break;
          }
          case 24: {
            IdleShutdown = input.ReadBool();
            break;
          }
          case 32: {
            IdleShutdownTimeout = input.ReadInt32();
            break;
          }
          case 40: {
            InstallGpuDriver = input.ReadBool();
            break;
          }
          case 50: {
            CustomGpuDriverPath = input.ReadString();
            break;
          }
          case 58: {
            PostStartupScript = input.ReadString();
            break;
          }
          case 66: {
            kernels_.AddEntriesFrom(input, _repeated_kernels_codec);
            break;
          }
          case 72: {
            Upgradeable = input.ReadBool();
            break;
          }
          case 80: {
            PostStartupScriptBehavior = (global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior) input.ReadEnum();
            break;
          }
          case 88: {
            DisableTerminal = input.ReadBool();
            break;
          }
          case 98: {
            Version = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NotebookUpgradeSchedule = input.ReadString();
            break;
          }
          case 16: {
            EnableHealthMonitoring = input.ReadBool();
            break;
          }
          case 24: {
            IdleShutdown = input.ReadBool();
            break;
          }
          case 32: {
            IdleShutdownTimeout = input.ReadInt32();
            break;
          }
          case 40: {
            InstallGpuDriver = input.ReadBool();
            break;
          }
          case 50: {
            CustomGpuDriverPath = input.ReadString();
            break;
          }
          case 58: {
            PostStartupScript = input.ReadString();
            break;
          }
          case 66: {
            kernels_.AddEntriesFrom(ref input, _repeated_kernels_codec);
            break;
          }
          case 72: {
            Upgradeable = input.ReadBool();
            break;
          }
          case 80: {
            PostStartupScriptBehavior = (global::Google.Cloud.Notebooks.V1.RuntimeSoftwareConfig.Types.PostStartupScriptBehavior) input.ReadEnum();
            break;
          }
          case 88: {
            DisableTerminal = input.ReadBool();
            break;
          }
          case 98: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RuntimeSoftwareConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Behavior for the post startup script.
      /// </summary>
      public enum PostStartupScriptBehavior {
        /// <summary>
        /// Unspecified post startup script behavior. Will run only once at creation.
        /// </summary>
        [pbr::OriginalName("POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Runs the post startup script provided during creation at every start.
        /// </summary>
        [pbr::OriginalName("RUN_EVERY_START")] RunEveryStart = 1,
        /// <summary>
        /// Downloads and runs the provided post startup script at every start.
        /// </summary>
        [pbr::OriginalName("DOWNLOAD_AND_RUN_EVERY_START")] DownloadAndRunEveryStart = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Contains runtime daemon metrics, such as OS and kernels and sessions stats.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RuntimeMetrics : pb::IMessage<RuntimeMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuntimeMetrics> _parser = new pb::MessageParser<RuntimeMetrics>(() => new RuntimeMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RuntimeMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeMetrics(RuntimeMetrics other) : this() {
      systemMetrics_ = other.systemMetrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeMetrics Clone() {
      return new RuntimeMetrics(this);
    }

    /// <summary>Field number for the "system_metrics" field.</summary>
    public const int SystemMetricsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_systemMetrics_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 10);
    private readonly pbc::MapField<string, string> systemMetrics_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Output only. The system metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> SystemMetrics {
      get { return systemMetrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RuntimeMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RuntimeMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SystemMetrics.Equals(other.SystemMetrics)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SystemMetrics.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      systemMetrics_.WriteTo(output, _map_systemMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      systemMetrics_.WriteTo(ref output, _map_systemMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += systemMetrics_.CalculateSize(_map_systemMetrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RuntimeMetrics other) {
      if (other == null) {
        return;
      }
      systemMetrics_.MergeFrom(other.systemMetrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            systemMetrics_.AddEntriesFrom(input, _map_systemMetrics_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            systemMetrics_.AddEntriesFrom(ref input, _map_systemMetrics_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A set of Shielded Instance options.
  /// Check [Images using supported Shielded VM
  /// features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
  /// Not all combinations are valid.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RuntimeShieldedInstanceConfig : pb::IMessage<RuntimeShieldedInstanceConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuntimeShieldedInstanceConfig> _parser = new pb::MessageParser<RuntimeShieldedInstanceConfig>(() => new RuntimeShieldedInstanceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RuntimeShieldedInstanceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeShieldedInstanceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeShieldedInstanceConfig(RuntimeShieldedInstanceConfig other) : this() {
      enableSecureBoot_ = other.enableSecureBoot_;
      enableVtpm_ = other.enableVtpm_;
      enableIntegrityMonitoring_ = other.enableIntegrityMonitoring_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RuntimeShieldedInstanceConfig Clone() {
      return new RuntimeShieldedInstanceConfig(this);
    }

    /// <summary>Field number for the "enable_secure_boot" field.</summary>
    public const int EnableSecureBootFieldNumber = 1;
    private bool enableSecureBoot_;
    /// <summary>
    /// Defines whether the instance has Secure Boot enabled.
    ///
    /// Secure Boot helps ensure that the system only runs authentic software by
    /// verifying the digital signature of all boot components, and halting the
    /// boot process if signature verification fails. Disabled by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableSecureBoot {
      get { return enableSecureBoot_; }
      set {
        enableSecureBoot_ = value;
      }
    }

    /// <summary>Field number for the "enable_vtpm" field.</summary>
    public const int EnableVtpmFieldNumber = 2;
    private bool enableVtpm_;
    /// <summary>
    /// Defines whether the instance has the vTPM enabled. Enabled by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableVtpm {
      get { return enableVtpm_; }
      set {
        enableVtpm_ = value;
      }
    }

    /// <summary>Field number for the "enable_integrity_monitoring" field.</summary>
    public const int EnableIntegrityMonitoringFieldNumber = 3;
    private bool enableIntegrityMonitoring_;
    /// <summary>
    /// Defines whether the instance has integrity monitoring enabled.
    ///
    /// Enables monitoring and attestation of the boot integrity of the instance.
    /// The attestation is performed against the integrity policy baseline. This
    /// baseline is initially derived from the implicitly trusted boot image when
    /// the instance is created. Enabled by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableIntegrityMonitoring {
      get { return enableIntegrityMonitoring_; }
      set {
        enableIntegrityMonitoring_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RuntimeShieldedInstanceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RuntimeShieldedInstanceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableSecureBoot != other.EnableSecureBoot) return false;
      if (EnableVtpm != other.EnableVtpm) return false;
      if (EnableIntegrityMonitoring != other.EnableIntegrityMonitoring) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableSecureBoot != false) hash ^= EnableSecureBoot.GetHashCode();
      if (EnableVtpm != false) hash ^= EnableVtpm.GetHashCode();
      if (EnableIntegrityMonitoring != false) hash ^= EnableIntegrityMonitoring.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EnableSecureBoot != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableSecureBoot);
      }
      if (EnableVtpm != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableVtpm);
      }
      if (EnableIntegrityMonitoring != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableIntegrityMonitoring);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EnableSecureBoot != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableSecureBoot);
      }
      if (EnableVtpm != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableVtpm);
      }
      if (EnableIntegrityMonitoring != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableIntegrityMonitoring);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EnableSecureBoot != false) {
        size += 1 + 1;
      }
      if (EnableVtpm != false) {
        size += 1 + 1;
      }
      if (EnableIntegrityMonitoring != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RuntimeShieldedInstanceConfig other) {
      if (other == null) {
        return;
      }
      if (other.EnableSecureBoot != false) {
        EnableSecureBoot = other.EnableSecureBoot;
      }
      if (other.EnableVtpm != false) {
        EnableVtpm = other.EnableVtpm;
      }
      if (other.EnableIntegrityMonitoring != false) {
        EnableIntegrityMonitoring = other.EnableIntegrityMonitoring;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableSecureBoot = input.ReadBool();
            break;
          }
          case 16: {
            EnableVtpm = input.ReadBool();
            break;
          }
          case 24: {
            EnableIntegrityMonitoring = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnableSecureBoot = input.ReadBool();
            break;
          }
          case 16: {
            EnableVtpm = input.ReadBool();
            break;
          }
          case 24: {
            EnableIntegrityMonitoring = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Runtime using Virtual Machine for computing.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VirtualMachine : pb::IMessage<VirtualMachine>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualMachine> _parser = new pb::MessageParser<VirtualMachine>(() => new VirtualMachine());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VirtualMachine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VirtualMachine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VirtualMachine(VirtualMachine other) : this() {
      instanceName_ = other.instanceName_;
      instanceId_ = other.instanceId_;
      virtualMachineConfig_ = other.virtualMachineConfig_ != null ? other.virtualMachineConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VirtualMachine Clone() {
      return new VirtualMachine(this);
    }

    /// <summary>Field number for the "instance_name" field.</summary>
    public const int InstanceNameFieldNumber = 1;
    private string instanceName_ = "";
    /// <summary>
    /// Output only. The user-friendly name of the Managed Compute Engine instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstanceName {
      get { return instanceName_; }
      set {
        instanceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 2;
    private string instanceId_ = "";
    /// <summary>
    /// Output only. The unique identifier of the Managed Compute Engine instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "virtual_machine_config" field.</summary>
    public const int VirtualMachineConfigFieldNumber = 3;
    private global::Google.Cloud.Notebooks.V1.VirtualMachineConfig virtualMachineConfig_;
    /// <summary>
    /// Virtual Machine configuration settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.VirtualMachineConfig VirtualMachineConfig {
      get { return virtualMachineConfig_; }
      set {
        virtualMachineConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VirtualMachine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VirtualMachine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstanceName != other.InstanceName) return false;
      if (InstanceId != other.InstanceId) return false;
      if (!object.Equals(VirtualMachineConfig, other.VirtualMachineConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InstanceName.Length != 0) hash ^= InstanceName.GetHashCode();
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (virtualMachineConfig_ != null) hash ^= VirtualMachineConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstanceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceName);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceId);
      }
      if (virtualMachineConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VirtualMachineConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstanceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceName);
      }
      if (InstanceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstanceId);
      }
      if (virtualMachineConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VirtualMachineConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InstanceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceName);
      }
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (virtualMachineConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VirtualMachineConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VirtualMachine other) {
      if (other == null) {
        return;
      }
      if (other.InstanceName.Length != 0) {
        InstanceName = other.InstanceName;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.virtualMachineConfig_ != null) {
        if (virtualMachineConfig_ == null) {
          VirtualMachineConfig = new global::Google.Cloud.Notebooks.V1.VirtualMachineConfig();
        }
        VirtualMachineConfig.MergeFrom(other.VirtualMachineConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstanceName = input.ReadString();
            break;
          }
          case 18: {
            InstanceId = input.ReadString();
            break;
          }
          case 26: {
            if (virtualMachineConfig_ == null) {
              VirtualMachineConfig = new global::Google.Cloud.Notebooks.V1.VirtualMachineConfig();
            }
            input.ReadMessage(VirtualMachineConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InstanceName = input.ReadString();
            break;
          }
          case 18: {
            InstanceId = input.ReadString();
            break;
          }
          case 26: {
            if (virtualMachineConfig_ == null) {
              VirtualMachineConfig = new global::Google.Cloud.Notebooks.V1.VirtualMachineConfig();
            }
            input.ReadMessage(VirtualMachineConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The config settings for virtual machine.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class VirtualMachineConfig : pb::IMessage<VirtualMachineConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VirtualMachineConfig> _parser = new pb::MessageParser<VirtualMachineConfig>(() => new VirtualMachineConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VirtualMachineConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V1.RuntimeReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VirtualMachineConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VirtualMachineConfig(VirtualMachineConfig other) : this() {
      zone_ = other.zone_;
      machineType_ = other.machineType_;
      containerImages_ = other.containerImages_.Clone();
      dataDisk_ = other.dataDisk_ != null ? other.dataDisk_.Clone() : null;
      encryptionConfig_ = other.encryptionConfig_ != null ? other.encryptionConfig_.Clone() : null;
      shieldedInstanceConfig_ = other.shieldedInstanceConfig_ != null ? other.shieldedInstanceConfig_.Clone() : null;
      acceleratorConfig_ = other.acceleratorConfig_ != null ? other.acceleratorConfig_.Clone() : null;
      network_ = other.network_;
      subnet_ = other.subnet_;
      internalIpOnly_ = other.internalIpOnly_;
      tags_ = other.tags_.Clone();
      guestAttributes_ = other.guestAttributes_.Clone();
      metadata_ = other.metadata_.Clone();
      labels_ = other.labels_.Clone();
      nicType_ = other.nicType_;
      reservedIpRange_ = other.reservedIpRange_;
      bootImage_ = other.bootImage_ != null ? other.bootImage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VirtualMachineConfig Clone() {
      return new VirtualMachineConfig(this);
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 1;
    private string zone_ = "";
    /// <summary>
    /// Output only. The zone where the virtual machine is located.
    /// If using regional request, the notebooks service will pick a location
    /// in the corresponding runtime region.
    /// On a get request, zone will always be present. Example:
    /// * `us-central1-b`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "machine_type" field.</summary>
    public const int MachineTypeFieldNumber = 2;
    private string machineType_ = "";
    /// <summary>
    /// Required. The Compute Engine machine type used for runtimes.
    /// Short name is valid. Examples:
    /// * `n1-standard-2`
    /// * `e2-standard-8`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineType {
      get { return machineType_; }
      set {
        machineType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "container_images" field.</summary>
    public const int ContainerImagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Notebooks.V1.ContainerImage> _repeated_containerImages_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Notebooks.V1.ContainerImage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.ContainerImage> containerImages_ = new pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.ContainerImage>();
    /// <summary>
    /// Optional. Use a list of container images to use as Kernels in the notebook instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Notebooks.V1.ContainerImage> ContainerImages {
      get { return containerImages_; }
    }

    /// <summary>Field number for the "data_disk" field.</summary>
    public const int DataDiskFieldNumber = 4;
    private global::Google.Cloud.Notebooks.V1.LocalDisk dataDisk_;
    /// <summary>
    /// Required. Data disk option configuration settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.LocalDisk DataDisk {
      get { return dataDisk_; }
      set {
        dataDisk_ = value;
      }
    }

    /// <summary>Field number for the "encryption_config" field.</summary>
    public const int EncryptionConfigFieldNumber = 5;
    private global::Google.Cloud.Notebooks.V1.EncryptionConfig encryptionConfig_;
    /// <summary>
    /// Optional. Encryption settings for virtual machine data disk.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.EncryptionConfig EncryptionConfig {
      get { return encryptionConfig_; }
      set {
        encryptionConfig_ = value;
      }
    }

    /// <summary>Field number for the "shielded_instance_config" field.</summary>
    public const int ShieldedInstanceConfigFieldNumber = 6;
    private global::Google.Cloud.Notebooks.V1.RuntimeShieldedInstanceConfig shieldedInstanceConfig_;
    /// <summary>
    /// Optional. Shielded VM Instance configuration settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.RuntimeShieldedInstanceConfig ShieldedInstanceConfig {
      get { return shieldedInstanceConfig_; }
      set {
        shieldedInstanceConfig_ = value;
      }
    }

    /// <summary>Field number for the "accelerator_config" field.</summary>
    public const int AcceleratorConfigFieldNumber = 7;
    private global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig acceleratorConfig_;
    /// <summary>
    /// Optional. The Compute Engine accelerator configuration for this runtime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig AcceleratorConfig {
      get { return acceleratorConfig_; }
      set {
        acceleratorConfig_ = value;
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 8;
    private string network_ = "";
    /// <summary>
    /// Optional. The Compute Engine network to be used for machine
    /// communications. Cannot be specified with subnetwork. If neither
    /// `network` nor `subnet` is specified, the "default" network of
    /// the project is used, if it exists.
    ///
    /// A full URL or partial URI. Examples:
    ///
    /// * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default`
    /// * `projects/[project_id]/global/networks/default`
    ///
    /// Runtimes are managed resources inside Google Infrastructure.
    /// Runtimes support the following network configurations:
    ///
    /// * Google Managed Network (Network &amp; subnet are empty)
    /// * Consumer Project VPC (network &amp; subnet are required). Requires
    /// configuring Private Service Access.
    /// * Shared VPC (network &amp; subnet are required). Requires configuring Private
    /// Service Access.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnet" field.</summary>
    public const int SubnetFieldNumber = 9;
    private string subnet_ = "";
    /// <summary>
    /// Optional. The Compute Engine subnetwork to be used for machine
    /// communications. Cannot be specified with network.
    ///
    /// A full URL or partial URI are valid. Examples:
    ///
    /// * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0`
    /// * `projects/[project_id]/regions/us-east1/subnetworks/sub0`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Subnet {
      get { return subnet_; }
      set {
        subnet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "internal_ip_only" field.</summary>
    public const int InternalIpOnlyFieldNumber = 10;
    private bool internalIpOnly_;
    /// <summary>
    /// Optional. If true, runtime will only have internal IP
    /// addresses. By default, runtimes are not restricted to internal IP
    /// addresses, and will have ephemeral external IP addresses assigned to each
    /// vm. This `internal_ip_only` restriction can only be enabled for
    /// subnetwork enabled networks, and all dependencies must be
    /// configured to be accessible without external IP addresses.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InternalIpOnly {
      get { return internalIpOnly_; }
      set {
        internalIpOnly_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. The Compute Engine tags to add to runtime (see [Tagging
    /// instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "guest_attributes" field.</summary>
    public const int GuestAttributesFieldNumber = 14;
    private static readonly pbc::MapField<string, string>.Codec _map_guestAttributes_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 114);
    private readonly pbc::MapField<string, string> guestAttributes_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Output only. The Compute Engine guest attributes. (see
    /// [Project and instance
    /// guest
    /// attributes](https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> GuestAttributes {
      get { return guestAttributes_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 15;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 122);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The Compute Engine metadata entries to add to virtual machine. (see
    /// [Project and instance
    /// metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 16;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 130);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. The labels to associate with this runtime.
    /// Label **keys** must contain 1 to 63 characters, and must conform to
    /// [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
    /// Label **values** may be empty, but, if present, must contain 1 to 63
    /// characters, and must conform to [RFC
    /// 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be
    /// associated with a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "nic_type" field.</summary>
    public const int NicTypeFieldNumber = 17;
    private global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType nicType_ = global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType.UnspecifiedNicType;
    /// <summary>
    /// Optional. The type of vNIC to be used on this interface. This may be gVNIC or
    /// VirtioNet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType NicType {
      get { return nicType_; }
      set {
        nicType_ = value;
      }
    }

    /// <summary>Field number for the "reserved_ip_range" field.</summary>
    public const int ReservedIpRangeFieldNumber = 18;
    private string reservedIpRange_ = "";
    /// <summary>
    /// Optional. Reserved IP Range name is used for VPC Peering.
    /// The subnetwork allocation will use the range *name* if it's assigned.
    ///
    /// Example: managed-notebooks-range-c
    ///
    ///     PEERING_RANGE_NAME_3=managed-notebooks-range-c
    ///     gcloud compute addresses create $PEERING_RANGE_NAME_3 \
    ///       --global \
    ///       --prefix-length=24 \
    ///       --description="Google Cloud Managed Notebooks Range 24 c" \
    ///       --network=$NETWORK \
    ///       --addresses=192.168.0.0 \
    ///       --purpose=VPC_PEERING
    ///
    /// Field value will be: `managed-notebooks-range-c`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReservedIpRange {
      get { return reservedIpRange_; }
      set {
        reservedIpRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boot_image" field.</summary>
    public const int BootImageFieldNumber = 19;
    private global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.BootImage bootImage_;
    /// <summary>
    /// Optional. Boot image metadata used for runtime upgradeability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.BootImage BootImage {
      get { return bootImage_; }
      set {
        bootImage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VirtualMachineConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VirtualMachineConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Zone != other.Zone) return false;
      if (MachineType != other.MachineType) return false;
      if(!containerImages_.Equals(other.containerImages_)) return false;
      if (!object.Equals(DataDisk, other.DataDisk)) return false;
      if (!object.Equals(EncryptionConfig, other.EncryptionConfig)) return false;
      if (!object.Equals(ShieldedInstanceConfig, other.ShieldedInstanceConfig)) return false;
      if (!object.Equals(AcceleratorConfig, other.AcceleratorConfig)) return false;
      if (Network != other.Network) return false;
      if (Subnet != other.Subnet) return false;
      if (InternalIpOnly != other.InternalIpOnly) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (!GuestAttributes.Equals(other.GuestAttributes)) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (NicType != other.NicType) return false;
      if (ReservedIpRange != other.ReservedIpRange) return false;
      if (!object.Equals(BootImage, other.BootImage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (MachineType.Length != 0) hash ^= MachineType.GetHashCode();
      hash ^= containerImages_.GetHashCode();
      if (dataDisk_ != null) hash ^= DataDisk.GetHashCode();
      if (encryptionConfig_ != null) hash ^= EncryptionConfig.GetHashCode();
      if (shieldedInstanceConfig_ != null) hash ^= ShieldedInstanceConfig.GetHashCode();
      if (acceleratorConfig_ != null) hash ^= AcceleratorConfig.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (Subnet.Length != 0) hash ^= Subnet.GetHashCode();
      if (InternalIpOnly != false) hash ^= InternalIpOnly.GetHashCode();
      hash ^= tags_.GetHashCode();
      hash ^= GuestAttributes.GetHashCode();
      hash ^= Metadata.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (NicType != global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType.UnspecifiedNicType) hash ^= NicType.GetHashCode();
      if (ReservedIpRange.Length != 0) hash ^= ReservedIpRange.GetHashCode();
      if (bootImage_ != null) hash ^= BootImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Zone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Zone);
      }
      if (MachineType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MachineType);
      }
      containerImages_.WriteTo(output, _repeated_containerImages_codec);
      if (dataDisk_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DataDisk);
      }
      if (encryptionConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EncryptionConfig);
      }
      if (shieldedInstanceConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ShieldedInstanceConfig);
      }
      if (acceleratorConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AcceleratorConfig);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Network);
      }
      if (Subnet.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Subnet);
      }
      if (InternalIpOnly != false) {
        output.WriteRawTag(80);
        output.WriteBool(InternalIpOnly);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      guestAttributes_.WriteTo(output, _map_guestAttributes_codec);
      metadata_.WriteTo(output, _map_metadata_codec);
      labels_.WriteTo(output, _map_labels_codec);
      if (NicType != global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType.UnspecifiedNicType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) NicType);
      }
      if (ReservedIpRange.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ReservedIpRange);
      }
      if (bootImage_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(BootImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Zone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Zone);
      }
      if (MachineType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MachineType);
      }
      containerImages_.WriteTo(ref output, _repeated_containerImages_codec);
      if (dataDisk_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DataDisk);
      }
      if (encryptionConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EncryptionConfig);
      }
      if (shieldedInstanceConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ShieldedInstanceConfig);
      }
      if (acceleratorConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AcceleratorConfig);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Network);
      }
      if (Subnet.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Subnet);
      }
      if (InternalIpOnly != false) {
        output.WriteRawTag(80);
        output.WriteBool(InternalIpOnly);
      }
      tags_.WriteTo(ref output, _repeated_tags_codec);
      guestAttributes_.WriteTo(ref output, _map_guestAttributes_codec);
      metadata_.WriteTo(ref output, _map_metadata_codec);
      labels_.WriteTo(ref output, _map_labels_codec);
      if (NicType != global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType.UnspecifiedNicType) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) NicType);
      }
      if (ReservedIpRange.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ReservedIpRange);
      }
      if (bootImage_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(BootImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (MachineType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineType);
      }
      size += containerImages_.CalculateSize(_repeated_containerImages_codec);
      if (dataDisk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataDisk);
      }
      if (encryptionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionConfig);
      }
      if (shieldedInstanceConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShieldedInstanceConfig);
      }
      if (acceleratorConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AcceleratorConfig);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (Subnet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subnet);
      }
      if (InternalIpOnly != false) {
        size += 1 + 1;
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      size += guestAttributes_.CalculateSize(_map_guestAttributes_codec);
      size += metadata_.CalculateSize(_map_metadata_codec);
      size += labels_.CalculateSize(_map_labels_codec);
      if (NicType != global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType.UnspecifiedNicType) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) NicType);
      }
      if (ReservedIpRange.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReservedIpRange);
      }
      if (bootImage_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BootImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VirtualMachineConfig other) {
      if (other == null) {
        return;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.MachineType.Length != 0) {
        MachineType = other.MachineType;
      }
      containerImages_.Add(other.containerImages_);
      if (other.dataDisk_ != null) {
        if (dataDisk_ == null) {
          DataDisk = new global::Google.Cloud.Notebooks.V1.LocalDisk();
        }
        DataDisk.MergeFrom(other.DataDisk);
      }
      if (other.encryptionConfig_ != null) {
        if (encryptionConfig_ == null) {
          EncryptionConfig = new global::Google.Cloud.Notebooks.V1.EncryptionConfig();
        }
        EncryptionConfig.MergeFrom(other.EncryptionConfig);
      }
      if (other.shieldedInstanceConfig_ != null) {
        if (shieldedInstanceConfig_ == null) {
          ShieldedInstanceConfig = new global::Google.Cloud.Notebooks.V1.RuntimeShieldedInstanceConfig();
        }
        ShieldedInstanceConfig.MergeFrom(other.ShieldedInstanceConfig);
      }
      if (other.acceleratorConfig_ != null) {
        if (acceleratorConfig_ == null) {
          AcceleratorConfig = new global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig();
        }
        AcceleratorConfig.MergeFrom(other.AcceleratorConfig);
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.Subnet.Length != 0) {
        Subnet = other.Subnet;
      }
      if (other.InternalIpOnly != false) {
        InternalIpOnly = other.InternalIpOnly;
      }
      tags_.Add(other.tags_);
      guestAttributes_.MergeFrom(other.guestAttributes_);
      metadata_.MergeFrom(other.metadata_);
      labels_.MergeFrom(other.labels_);
      if (other.NicType != global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType.UnspecifiedNicType) {
        NicType = other.NicType;
      }
      if (other.ReservedIpRange.Length != 0) {
        ReservedIpRange = other.ReservedIpRange;
      }
      if (other.bootImage_ != null) {
        if (bootImage_ == null) {
          BootImage = new global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.BootImage();
        }
        BootImage.MergeFrom(other.BootImage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Zone = input.ReadString();
            break;
          }
          case 18: {
            MachineType = input.ReadString();
            break;
          }
          case 26: {
            containerImages_.AddEntriesFrom(input, _repeated_containerImages_codec);
            break;
          }
          case 34: {
            if (dataDisk_ == null) {
              DataDisk = new global::Google.Cloud.Notebooks.V1.LocalDisk();
            }
            input.ReadMessage(DataDisk);
            break;
          }
          case 42: {
            if (encryptionConfig_ == null) {
              EncryptionConfig = new global::Google.Cloud.Notebooks.V1.EncryptionConfig();
            }
            input.ReadMessage(EncryptionConfig);
            break;
          }
          case 50: {
            if (shieldedInstanceConfig_ == null) {
              ShieldedInstanceConfig = new global::Google.Cloud.Notebooks.V1.RuntimeShieldedInstanceConfig();
            }
            input.ReadMessage(ShieldedInstanceConfig);
            break;
          }
          case 58: {
            if (acceleratorConfig_ == null) {
              AcceleratorConfig = new global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig();
            }
            input.ReadMessage(AcceleratorConfig);
            break;
          }
          case 66: {
            Network = input.ReadString();
            break;
          }
          case 74: {
            Subnet = input.ReadString();
            break;
          }
          case 80: {
            InternalIpOnly = input.ReadBool();
            break;
          }
          case 106: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 114: {
            guestAttributes_.AddEntriesFrom(input, _map_guestAttributes_codec);
            break;
          }
          case 122: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 130: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 136: {
            NicType = (global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType) input.ReadEnum();
            break;
          }
          case 146: {
            ReservedIpRange = input.ReadString();
            break;
          }
          case 154: {
            if (bootImage_ == null) {
              BootImage = new global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.BootImage();
            }
            input.ReadMessage(BootImage);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Zone = input.ReadString();
            break;
          }
          case 18: {
            MachineType = input.ReadString();
            break;
          }
          case 26: {
            containerImages_.AddEntriesFrom(ref input, _repeated_containerImages_codec);
            break;
          }
          case 34: {
            if (dataDisk_ == null) {
              DataDisk = new global::Google.Cloud.Notebooks.V1.LocalDisk();
            }
            input.ReadMessage(DataDisk);
            break;
          }
          case 42: {
            if (encryptionConfig_ == null) {
              EncryptionConfig = new global::Google.Cloud.Notebooks.V1.EncryptionConfig();
            }
            input.ReadMessage(EncryptionConfig);
            break;
          }
          case 50: {
            if (shieldedInstanceConfig_ == null) {
              ShieldedInstanceConfig = new global::Google.Cloud.Notebooks.V1.RuntimeShieldedInstanceConfig();
            }
            input.ReadMessage(ShieldedInstanceConfig);
            break;
          }
          case 58: {
            if (acceleratorConfig_ == null) {
              AcceleratorConfig = new global::Google.Cloud.Notebooks.V1.RuntimeAcceleratorConfig();
            }
            input.ReadMessage(AcceleratorConfig);
            break;
          }
          case 66: {
            Network = input.ReadString();
            break;
          }
          case 74: {
            Subnet = input.ReadString();
            break;
          }
          case 80: {
            InternalIpOnly = input.ReadBool();
            break;
          }
          case 106: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
          case 114: {
            guestAttributes_.AddEntriesFrom(ref input, _map_guestAttributes_codec);
            break;
          }
          case 122: {
            metadata_.AddEntriesFrom(ref input, _map_metadata_codec);
            break;
          }
          case 130: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 136: {
            NicType = (global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.NicType) input.ReadEnum();
            break;
          }
          case 146: {
            ReservedIpRange = input.ReadString();
            break;
          }
          case 154: {
            if (bootImage_ == null) {
              BootImage = new global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Types.BootImage();
            }
            input.ReadMessage(BootImage);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VirtualMachineConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The type of vNIC driver.
      /// Default should be UNSPECIFIED_NIC_TYPE.
      /// </summary>
      public enum NicType {
        /// <summary>
        /// No type specified.
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED_NIC_TYPE")] UnspecifiedNicType = 0,
        /// <summary>
        /// VIRTIO
        /// </summary>
        [pbr::OriginalName("VIRTIO_NET")] VirtioNet = 1,
        /// <summary>
        /// GVNIC
        /// </summary>
        [pbr::OriginalName("GVNIC")] Gvnic = 2,
      }

      /// <summary>
      /// Definition of the boot image used by the Runtime.
      /// Used to facilitate runtime upgradeability.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class BootImage : pb::IMessage<BootImage>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BootImage> _parser = new pb::MessageParser<BootImage>(() => new BootImage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BootImage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Notebooks.V1.VirtualMachineConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BootImage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BootImage(BootImage other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BootImage Clone() {
          return new BootImage(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as BootImage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BootImage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BootImage other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
