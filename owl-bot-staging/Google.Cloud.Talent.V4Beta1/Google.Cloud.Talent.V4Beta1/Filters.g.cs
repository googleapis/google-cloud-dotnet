// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/talent/v4beta1/filters.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Talent.V4Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/talent/v4beta1/filters.proto</summary>
  public static partial class FiltersReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/talent/v4beta1/filters.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FiltersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY2xvdWQvdGFsZW50L3Y0YmV0YTEvZmlsdGVycy5wcm90bxIb",
            "Z29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExGh9nb29nbGUvYXBpL2ZpZWxk",
            "X2JlaGF2aW9yLnByb3RvGihnb29nbGUvY2xvdWQvdGFsZW50L3Y0YmV0YTEv",
            "Y29tbW9uLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8a",
            "GGdvb2dsZS90eXBlL2xhdGxuZy5wcm90bxobZ29vZ2xlL3R5cGUvdGltZW9m",
            "ZGF5LnByb3RvIoAFCghKb2JRdWVyeRINCgVxdWVyeRgBIAEoCRIbChNxdWVy",
            "eV9sYW5ndWFnZV9jb2RlGA4gASgJEhEKCWNvbXBhbmllcxgCIAMoCRJFChBs",
            "b2NhdGlvbl9maWx0ZXJzGAMgAygLMisuZ29vZ2xlLmNsb3VkLnRhbGVudC52",
            "NGJldGExLkxvY2F0aW9uRmlsdGVyEkAKDmpvYl9jYXRlZ29yaWVzGAQgAygO",
            "MiguZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLkpvYkNhdGVnb3J5EkIK",
            "DmNvbW11dGVfZmlsdGVyGAUgASgLMiouZ29vZ2xlLmNsb3VkLnRhbGVudC52",
            "NGJldGExLkNvbW11dGVGaWx0ZXISHQoVY29tcGFueV9kaXNwbGF5X25hbWVz",
            "GAYgAygJEkwKE2NvbXBlbnNhdGlvbl9maWx0ZXIYByABKAsyLy5nb29nbGUu",
            "Y2xvdWQudGFsZW50LnY0YmV0YTEuQ29tcGVuc2F0aW9uRmlsdGVyEh8KF2N1",
            "c3RvbV9hdHRyaWJ1dGVfZmlsdGVyGAggASgJEhsKE2Rpc2FibGVfc3BlbGxf",
            "Y2hlY2sYCSABKAgSRQoQZW1wbG95bWVudF90eXBlcxgKIAMoDjIrLmdvb2ds",
            "ZS5jbG91ZC50YWxlbnQudjRiZXRhMS5FbXBsb3ltZW50VHlwZRIWCg5sYW5n",
            "dWFnZV9jb2RlcxgLIAMoCRJHChJwdWJsaXNoX3RpbWVfcmFuZ2UYDCABKAsy",
            "Ky5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuVGltZXN0YW1wUmFuZ2US",
            "FQoNZXhjbHVkZWRfam9icxgNIAMoCSKDAwoOTG9jYXRpb25GaWx0ZXISDwoH",
            "YWRkcmVzcxgBIAEoCRITCgtyZWdpb25fY29kZRgCIAEoCRIkCgdsYXRfbG5n",
            "GAMgASgLMhMuZ29vZ2xlLnR5cGUuTGF0TG5nEhkKEWRpc3RhbmNlX2luX21p",
            "bGVzGAQgASgBEmEKFnRlbGVjb21tdXRlX3ByZWZlcmVuY2UYBSABKA4yQS5n",
            "b29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuTG9jYXRpb25GaWx0ZXIuVGVs",
            "ZWNvbW11dGVQcmVmZXJlbmNlEg8KB25lZ2F0ZWQYBiABKAgilQEKFVRlbGVj",
            "b21tdXRlUHJlZmVyZW5jZRImCiJURUxFQ09NTVVURV9QUkVGRVJFTkNFX1VO",
            "U1BFQ0lGSUVEEAASHAoUVEVMRUNPTU1VVEVfRVhDTFVERUQQARoCCAESFwoT",
            "VEVMRUNPTU1VVEVfQUxMT1dFRBACEh0KGVRFTEVDT01NVVRFX0pPQlNfRVhD",
            "TFVERUQQAyLKAwoSQ29tcGVuc2F0aW9uRmlsdGVyEk0KBHR5cGUYASABKA4y",
            "Oi5nb29nbGUuY2xvdWQudGFsZW50LnY0YmV0YTEuQ29tcGVuc2F0aW9uRmls",
            "dGVyLkZpbHRlclR5cGVCA+BBAhJSCgV1bml0cxgCIAMoDjI+Lmdvb2dsZS5j",
            "bG91ZC50YWxlbnQudjRiZXRhMS5Db21wZW5zYXRpb25JbmZvLkNvbXBlbnNh",
            "dGlvblVuaXRCA+BBAhJOCgVyYW5nZRgDIAEoCzI/Lmdvb2dsZS5jbG91ZC50",
            "YWxlbnQudjRiZXRhMS5Db21wZW5zYXRpb25JbmZvLkNvbXBlbnNhdGlvblJh",
            "bmdlEjgKMGluY2x1ZGVfam9ic193aXRoX3Vuc3BlY2lmaWVkX2NvbXBlbnNh",
            "dGlvbl9yYW5nZRgEIAEoCCKGAQoKRmlsdGVyVHlwZRIbChdGSUxURVJfVFlQ",
            "RV9VTlNQRUNJRklFRBAAEg0KCVVOSVRfT05MWRABEhMKD1VOSVRfQU5EX0FN",
            "T1VOVBACEhoKFkFOTlVBTElaRURfQkFTRV9BTU9VTlQQAxIbChdBTk5VQUxJ",
            "WkVEX1RPVEFMX0FNT1VOVBAEIssDCg1Db21tdXRlRmlsdGVyEkcKDmNvbW11",
            "dGVfbWV0aG9kGAEgASgOMiouZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGEx",
            "LkNvbW11dGVNZXRob2RCA+BBAhIzChFzdGFydF9jb29yZGluYXRlcxgCIAEo",
            "CzITLmdvb2dsZS50eXBlLkxhdExuZ0ID4EECEjcKD3RyYXZlbF9kdXJhdGlv",
            "bhgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkID4EECEiEKGWFs",
            "bG93X2ltcHJlY2lzZV9hZGRyZXNzZXMYBCABKAgSTgoMcm9hZF90cmFmZmlj",
            "GAUgASgOMjYuZ29vZ2xlLmNsb3VkLnRhbGVudC52NGJldGExLkNvbW11dGVG",
            "aWx0ZXIuUm9hZFRyYWZmaWNIABIwCg5kZXBhcnR1cmVfdGltZRgGIAEoCzIW",
            "Lmdvb2dsZS50eXBlLlRpbWVPZkRheUgAIkwKC1JvYWRUcmFmZmljEhwKGFJP",
            "QURfVFJBRkZJQ19VTlNQRUNJRklFRBAAEhAKDFRSQUZGSUNfRlJFRRABEg0K",
            "CUJVU1lfSE9VUhACQhAKDnRyYWZmaWNfb3B0aW9uQnAKH2NvbS5nb29nbGUu",
            "Y2xvdWQudGFsZW50LnY0YmV0YTFCDEZpbHRlcnNQcm90b1ABWjdjbG91ZC5n",
            "b29nbGUuY29tL2dvL3RhbGVudC9hcGl2NGJldGExL3RhbGVudHBiO3RhbGVu",
            "dHBiogIDQ1RTYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Cloud.Talent.V4Beta1.CommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Type.LatlngReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.JobQuery), global::Google.Cloud.Talent.V4Beta1.JobQuery.Parser, new[]{ "Query", "QueryLanguageCode", "Companies", "LocationFilters", "JobCategories", "CommuteFilter", "CompanyDisplayNames", "CompensationFilter", "CustomAttributeFilter", "DisableSpellCheck", "EmploymentTypes", "LanguageCodes", "PublishTimeRange", "ExcludedJobs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.LocationFilter), global::Google.Cloud.Talent.V4Beta1.LocationFilter.Parser, new[]{ "Address", "RegionCode", "LatLng", "DistanceInMiles", "TelecommutePreference", "Negated" }, null, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.CompensationFilter), global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Parser, new[]{ "Type", "Units", "Range", "IncludeJobsWithUnspecifiedCompensationRange" }, null, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Talent.V4Beta1.CommuteFilter), global::Google.Cloud.Talent.V4Beta1.CommuteFilter.Parser, new[]{ "CommuteMethod", "StartCoordinates", "TravelDuration", "AllowImpreciseAddresses", "RoadTraffic", "DepartureTime" }, new[]{ "TrafficOption" }, new[]{ typeof(global::Google.Cloud.Talent.V4Beta1.CommuteFilter.Types.RoadTraffic) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The query required to perform a search query.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class JobQuery : pb::IMessage<JobQuery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JobQuery> _parser = new pb::MessageParser<JobQuery>(() => new JobQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JobQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.FiltersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobQuery(JobQuery other) : this() {
      query_ = other.query_;
      queryLanguageCode_ = other.queryLanguageCode_;
      companies_ = other.companies_.Clone();
      locationFilters_ = other.locationFilters_.Clone();
      jobCategories_ = other.jobCategories_.Clone();
      commuteFilter_ = other.commuteFilter_ != null ? other.commuteFilter_.Clone() : null;
      companyDisplayNames_ = other.companyDisplayNames_.Clone();
      compensationFilter_ = other.compensationFilter_ != null ? other.compensationFilter_.Clone() : null;
      customAttributeFilter_ = other.customAttributeFilter_;
      disableSpellCheck_ = other.disableSpellCheck_;
      employmentTypes_ = other.employmentTypes_.Clone();
      languageCodes_ = other.languageCodes_.Clone();
      publishTimeRange_ = other.publishTimeRange_ != null ? other.publishTimeRange_.Clone() : null;
      excludedJobs_ = other.excludedJobs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobQuery Clone() {
      return new JobQuery(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private string query_ = "";
    /// <summary>
    /// The query string that matches against the job title, description, and
    /// location fields.
    ///
    /// The maximum number of allowed characters is 255.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query_language_code" field.</summary>
    public const int QueryLanguageCodeFieldNumber = 14;
    private string queryLanguageCode_ = "";
    /// <summary>
    /// The language code of [query][google.cloud.talent.v4beta1.JobQuery.query].
    /// For example, "en-US". This field helps to better interpret the query.
    ///
    /// If a value isn't specified, the query language code is automatically
    /// detected, which may not be accurate.
    ///
    /// Language code should be in BCP-47 format, such as "en-US" or "sr-Latn".
    /// For more information, see
    /// [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string QueryLanguageCode {
      get { return queryLanguageCode_; }
      set {
        queryLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companies" field.</summary>
    public const int CompaniesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_companies_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> companies_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This filter specifies the company entities to search against.
    ///
    /// If a value isn't specified, jobs are searched for against all
    /// companies.
    ///
    /// If multiple values are specified, jobs are searched against the
    /// companies specified.
    ///
    /// The format is
    /// "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}". For
    /// example, "projects/foo/tenants/bar/companies/baz".
    ///
    /// If tenant id is unspecified, the default tenant is used. For
    /// example, "projects/foo/companies/bar".
    ///
    /// At most 20 company filters are allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Companies {
      get { return companies_; }
    }

    /// <summary>Field number for the "location_filters" field.</summary>
    public const int LocationFiltersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.LocationFilter> _repeated_locationFilters_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Talent.V4Beta1.LocationFilter.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.LocationFilter> locationFilters_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.LocationFilter>();
    /// <summary>
    /// The location filter specifies geo-regions containing the jobs to
    /// search against. See
    /// [LocationFilter][google.cloud.talent.v4beta1.LocationFilter] for more
    /// information.
    ///
    /// If a location value isn't specified, jobs fitting the other search
    /// criteria are retrieved regardless of where they're located.
    ///
    /// If multiple values are specified, jobs are retrieved from any of the
    /// specified locations. If different values are specified for the
    /// [LocationFilter.distance_in_miles][google.cloud.talent.v4beta1.LocationFilter.distance_in_miles]
    /// parameter, the maximum provided distance is used for all locations.
    ///
    /// At most 5 location filters are allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.LocationFilter> LocationFilters {
      get { return locationFilters_; }
    }

    /// <summary>Field number for the "job_categories" field.</summary>
    public const int JobCategoriesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.JobCategory> _repeated_jobCategories_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Cloud.Talent.V4Beta1.JobCategory) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.JobCategory> jobCategories_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.JobCategory>();
    /// <summary>
    /// The category filter specifies the categories of jobs to search against.
    /// See [JobCategory][google.cloud.talent.v4beta1.JobCategory] for more
    /// information.
    ///
    /// If a value isn't specified, jobs from any category are searched against.
    ///
    /// If multiple values are specified, jobs from any of the specified
    /// categories are searched against.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.JobCategory> JobCategories {
      get { return jobCategories_; }
    }

    /// <summary>Field number for the "commute_filter" field.</summary>
    public const int CommuteFilterFieldNumber = 5;
    private global::Google.Cloud.Talent.V4Beta1.CommuteFilter commuteFilter_;
    /// <summary>
    /// Allows filtering jobs by commute time with different travel methods (for
    ///  example, driving or public transit).
    ///
    /// Note: This only works when you specify a
    /// [CommuteMethod][google.cloud.talent.v4beta1.CommuteMethod]. In this case,
    /// [location_filters][google.cloud.talent.v4beta1.JobQuery.location_filters]
    /// is ignored.
    ///
    ///  Currently we don't support sorting by commute time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Talent.V4Beta1.CommuteFilter CommuteFilter {
      get { return commuteFilter_; }
      set {
        commuteFilter_ = value;
      }
    }

    /// <summary>Field number for the "company_display_names" field.</summary>
    public const int CompanyDisplayNamesFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_companyDisplayNames_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> companyDisplayNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This filter specifies the company
    /// [Company.display_name][google.cloud.talent.v4beta1.Company.display_name] of
    /// the jobs to search against. The company name must match the value exactly.
    ///
    /// Alternatively, the value being searched for can be wrapped in different
    /// match operators.
    /// `SUBSTRING_MATCH([value])`
    /// The company name must contain a case insensitive substring match of the
    /// value. Using this function may increase latency.
    ///
    /// Sample Value: `SUBSTRING_MATCH(google)`
    ///
    /// `MULTI_WORD_TOKEN_MATCH([value])`
    /// The value will be treated as a multi word token and the company name must
    /// contain a case insensitive match of the value. Using this function may
    /// increase latency.
    ///
    /// Sample Value: `MULTI_WORD_TOKEN_MATCH(google)`
    ///
    /// If a value isn't specified, jobs within the search results are
    /// associated with any company.
    ///
    /// If multiple values are specified, jobs within the search results may be
    /// associated with any of the specified companies.
    ///
    /// At most 20 company display name filters are allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> CompanyDisplayNames {
      get { return companyDisplayNames_; }
    }

    /// <summary>Field number for the "compensation_filter" field.</summary>
    public const int CompensationFilterFieldNumber = 7;
    private global::Google.Cloud.Talent.V4Beta1.CompensationFilter compensationFilter_;
    /// <summary>
    /// This search filter is applied only to
    /// [Job.compensation_info][google.cloud.talent.v4beta1.Job.compensation_info].
    /// For example, if the filter is specified as "Hourly job with per-hour
    /// compensation > $15", only jobs meeting these criteria are searched. If a
    /// filter isn't defined, all open jobs are searched.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Talent.V4Beta1.CompensationFilter CompensationFilter {
      get { return compensationFilter_; }
      set {
        compensationFilter_ = value;
      }
    }

    /// <summary>Field number for the "custom_attribute_filter" field.</summary>
    public const int CustomAttributeFilterFieldNumber = 8;
    private string customAttributeFilter_ = "";
    /// <summary>
    /// This filter specifies a structured syntax to match against the
    /// [Job.custom_attributes][google.cloud.talent.v4beta1.Job.custom_attributes]
    /// marked as `filterable`.
    ///
    /// The syntax for this expression is a subset of SQL syntax.
    ///
    /// Supported operators are: `=`, `!=`, `&lt;`, `&lt;=`, `>`, and `>=` where the
    /// left of the operator is a custom field key and the right of the operator
    /// is a number or a quoted string. You must escape backslash (\\) and
    /// quote (\") characters.
    ///
    /// Supported functions are `LOWER([field_name])` to
    /// perform a case insensitive match and `EMPTY([field_name])` to filter on the
    /// existence of a key.
    ///
    /// Boolean expressions (AND/OR/NOT) are supported up to 3 levels of
    /// nesting (for example, "((A AND B AND C) OR NOT D) AND E"), a maximum of 100
    /// comparisons or functions are allowed in the expression. The expression
    /// must be &lt; 10000 bytes in length.
    ///
    /// Sample Query:
    /// `(LOWER(driving_license)="class \"a\"" OR EMPTY(driving_license)) AND
    /// driving_years > 10`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomAttributeFilter {
      get { return customAttributeFilter_; }
      set {
        customAttributeFilter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disable_spell_check" field.</summary>
    public const int DisableSpellCheckFieldNumber = 9;
    private bool disableSpellCheck_;
    /// <summary>
    /// This flag controls the spell-check feature. If false, the
    /// service attempts to correct a misspelled query,
    /// for example, "enginee" is corrected to "engineer".
    ///
    /// Defaults to false: a spell check is performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableSpellCheck {
      get { return disableSpellCheck_; }
      set {
        disableSpellCheck_ = value;
      }
    }

    /// <summary>Field number for the "employment_types" field.</summary>
    public const int EmploymentTypesFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.EmploymentType> _repeated_employmentTypes_codec
        = pb::FieldCodec.ForEnum(82, x => (int) x, x => (global::Google.Cloud.Talent.V4Beta1.EmploymentType) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.EmploymentType> employmentTypes_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.EmploymentType>();
    /// <summary>
    /// The employment type filter specifies the employment type of jobs to
    /// search against, such as
    /// [EmploymentType.FULL_TIME][google.cloud.talent.v4beta1.EmploymentType.FULL_TIME].
    ///
    /// If a value isn't specified, jobs in the search results includes any
    /// employment type.
    ///
    /// If multiple values are specified, jobs in the search results include
    /// any of the specified employment types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.EmploymentType> EmploymentTypes {
      get { return employmentTypes_; }
    }

    /// <summary>Field number for the "language_codes" field.</summary>
    public const int LanguageCodesFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_languageCodes_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> languageCodes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This filter specifies the locale of jobs to search against,
    /// for example, "en-US".
    ///
    /// If a value isn't specified, the search results can contain jobs in any
    /// locale.
    ///
    /// Language codes should be in BCP-47 format, such as "en-US" or "sr-Latn".
    /// For more information, see
    /// [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).
    ///
    /// At most 10 language code filters are allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> LanguageCodes {
      get { return languageCodes_; }
    }

    /// <summary>Field number for the "publish_time_range" field.</summary>
    public const int PublishTimeRangeFieldNumber = 12;
    private global::Google.Cloud.Talent.V4Beta1.TimestampRange publishTimeRange_;
    /// <summary>
    /// Jobs published within a range specified by this filter are searched
    /// against.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Talent.V4Beta1.TimestampRange PublishTimeRange {
      get { return publishTimeRange_; }
      set {
        publishTimeRange_ = value;
      }
    }

    /// <summary>Field number for the "excluded_jobs" field.</summary>
    public const int ExcludedJobsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_excludedJobs_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> excludedJobs_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This filter specifies a list of job names to be excluded during search.
    ///
    /// At most 400 excluded job names are allowed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ExcludedJobs {
      get { return excludedJobs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JobQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JobQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Query != other.Query) return false;
      if (QueryLanguageCode != other.QueryLanguageCode) return false;
      if(!companies_.Equals(other.companies_)) return false;
      if(!locationFilters_.Equals(other.locationFilters_)) return false;
      if(!jobCategories_.Equals(other.jobCategories_)) return false;
      if (!object.Equals(CommuteFilter, other.CommuteFilter)) return false;
      if(!companyDisplayNames_.Equals(other.companyDisplayNames_)) return false;
      if (!object.Equals(CompensationFilter, other.CompensationFilter)) return false;
      if (CustomAttributeFilter != other.CustomAttributeFilter) return false;
      if (DisableSpellCheck != other.DisableSpellCheck) return false;
      if(!employmentTypes_.Equals(other.employmentTypes_)) return false;
      if(!languageCodes_.Equals(other.languageCodes_)) return false;
      if (!object.Equals(PublishTimeRange, other.PublishTimeRange)) return false;
      if(!excludedJobs_.Equals(other.excludedJobs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (QueryLanguageCode.Length != 0) hash ^= QueryLanguageCode.GetHashCode();
      hash ^= companies_.GetHashCode();
      hash ^= locationFilters_.GetHashCode();
      hash ^= jobCategories_.GetHashCode();
      if (commuteFilter_ != null) hash ^= CommuteFilter.GetHashCode();
      hash ^= companyDisplayNames_.GetHashCode();
      if (compensationFilter_ != null) hash ^= CompensationFilter.GetHashCode();
      if (CustomAttributeFilter.Length != 0) hash ^= CustomAttributeFilter.GetHashCode();
      if (DisableSpellCheck != false) hash ^= DisableSpellCheck.GetHashCode();
      hash ^= employmentTypes_.GetHashCode();
      hash ^= languageCodes_.GetHashCode();
      if (publishTimeRange_ != null) hash ^= PublishTimeRange.GetHashCode();
      hash ^= excludedJobs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      companies_.WriteTo(output, _repeated_companies_codec);
      locationFilters_.WriteTo(output, _repeated_locationFilters_codec);
      jobCategories_.WriteTo(output, _repeated_jobCategories_codec);
      if (commuteFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CommuteFilter);
      }
      companyDisplayNames_.WriteTo(output, _repeated_companyDisplayNames_codec);
      if (compensationFilter_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CompensationFilter);
      }
      if (CustomAttributeFilter.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CustomAttributeFilter);
      }
      if (DisableSpellCheck != false) {
        output.WriteRawTag(72);
        output.WriteBool(DisableSpellCheck);
      }
      employmentTypes_.WriteTo(output, _repeated_employmentTypes_codec);
      languageCodes_.WriteTo(output, _repeated_languageCodes_codec);
      if (publishTimeRange_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PublishTimeRange);
      }
      excludedJobs_.WriteTo(output, _repeated_excludedJobs_codec);
      if (QueryLanguageCode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(QueryLanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      companies_.WriteTo(ref output, _repeated_companies_codec);
      locationFilters_.WriteTo(ref output, _repeated_locationFilters_codec);
      jobCategories_.WriteTo(ref output, _repeated_jobCategories_codec);
      if (commuteFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CommuteFilter);
      }
      companyDisplayNames_.WriteTo(ref output, _repeated_companyDisplayNames_codec);
      if (compensationFilter_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CompensationFilter);
      }
      if (CustomAttributeFilter.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CustomAttributeFilter);
      }
      if (DisableSpellCheck != false) {
        output.WriteRawTag(72);
        output.WriteBool(DisableSpellCheck);
      }
      employmentTypes_.WriteTo(ref output, _repeated_employmentTypes_codec);
      languageCodes_.WriteTo(ref output, _repeated_languageCodes_codec);
      if (publishTimeRange_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PublishTimeRange);
      }
      excludedJobs_.WriteTo(ref output, _repeated_excludedJobs_codec);
      if (QueryLanguageCode.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(QueryLanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (QueryLanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QueryLanguageCode);
      }
      size += companies_.CalculateSize(_repeated_companies_codec);
      size += locationFilters_.CalculateSize(_repeated_locationFilters_codec);
      size += jobCategories_.CalculateSize(_repeated_jobCategories_codec);
      if (commuteFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommuteFilter);
      }
      size += companyDisplayNames_.CalculateSize(_repeated_companyDisplayNames_codec);
      if (compensationFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CompensationFilter);
      }
      if (CustomAttributeFilter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomAttributeFilter);
      }
      if (DisableSpellCheck != false) {
        size += 1 + 1;
      }
      size += employmentTypes_.CalculateSize(_repeated_employmentTypes_codec);
      size += languageCodes_.CalculateSize(_repeated_languageCodes_codec);
      if (publishTimeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTimeRange);
      }
      size += excludedJobs_.CalculateSize(_repeated_excludedJobs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JobQuery other) {
      if (other == null) {
        return;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.QueryLanguageCode.Length != 0) {
        QueryLanguageCode = other.QueryLanguageCode;
      }
      companies_.Add(other.companies_);
      locationFilters_.Add(other.locationFilters_);
      jobCategories_.Add(other.jobCategories_);
      if (other.commuteFilter_ != null) {
        if (commuteFilter_ == null) {
          CommuteFilter = new global::Google.Cloud.Talent.V4Beta1.CommuteFilter();
        }
        CommuteFilter.MergeFrom(other.CommuteFilter);
      }
      companyDisplayNames_.Add(other.companyDisplayNames_);
      if (other.compensationFilter_ != null) {
        if (compensationFilter_ == null) {
          CompensationFilter = new global::Google.Cloud.Talent.V4Beta1.CompensationFilter();
        }
        CompensationFilter.MergeFrom(other.CompensationFilter);
      }
      if (other.CustomAttributeFilter.Length != 0) {
        CustomAttributeFilter = other.CustomAttributeFilter;
      }
      if (other.DisableSpellCheck != false) {
        DisableSpellCheck = other.DisableSpellCheck;
      }
      employmentTypes_.Add(other.employmentTypes_);
      languageCodes_.Add(other.languageCodes_);
      if (other.publishTimeRange_ != null) {
        if (publishTimeRange_ == null) {
          PublishTimeRange = new global::Google.Cloud.Talent.V4Beta1.TimestampRange();
        }
        PublishTimeRange.MergeFrom(other.PublishTimeRange);
      }
      excludedJobs_.Add(other.excludedJobs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
          case 18: {
            companies_.AddEntriesFrom(input, _repeated_companies_codec);
            break;
          }
          case 26: {
            locationFilters_.AddEntriesFrom(input, _repeated_locationFilters_codec);
            break;
          }
          case 34:
          case 32: {
            jobCategories_.AddEntriesFrom(input, _repeated_jobCategories_codec);
            break;
          }
          case 42: {
            if (commuteFilter_ == null) {
              CommuteFilter = new global::Google.Cloud.Talent.V4Beta1.CommuteFilter();
            }
            input.ReadMessage(CommuteFilter);
            break;
          }
          case 50: {
            companyDisplayNames_.AddEntriesFrom(input, _repeated_companyDisplayNames_codec);
            break;
          }
          case 58: {
            if (compensationFilter_ == null) {
              CompensationFilter = new global::Google.Cloud.Talent.V4Beta1.CompensationFilter();
            }
            input.ReadMessage(CompensationFilter);
            break;
          }
          case 66: {
            CustomAttributeFilter = input.ReadString();
            break;
          }
          case 72: {
            DisableSpellCheck = input.ReadBool();
            break;
          }
          case 82:
          case 80: {
            employmentTypes_.AddEntriesFrom(input, _repeated_employmentTypes_codec);
            break;
          }
          case 90: {
            languageCodes_.AddEntriesFrom(input, _repeated_languageCodes_codec);
            break;
          }
          case 98: {
            if (publishTimeRange_ == null) {
              PublishTimeRange = new global::Google.Cloud.Talent.V4Beta1.TimestampRange();
            }
            input.ReadMessage(PublishTimeRange);
            break;
          }
          case 106: {
            excludedJobs_.AddEntriesFrom(input, _repeated_excludedJobs_codec);
            break;
          }
          case 114: {
            QueryLanguageCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
          case 18: {
            companies_.AddEntriesFrom(ref input, _repeated_companies_codec);
            break;
          }
          case 26: {
            locationFilters_.AddEntriesFrom(ref input, _repeated_locationFilters_codec);
            break;
          }
          case 34:
          case 32: {
            jobCategories_.AddEntriesFrom(ref input, _repeated_jobCategories_codec);
            break;
          }
          case 42: {
            if (commuteFilter_ == null) {
              CommuteFilter = new global::Google.Cloud.Talent.V4Beta1.CommuteFilter();
            }
            input.ReadMessage(CommuteFilter);
            break;
          }
          case 50: {
            companyDisplayNames_.AddEntriesFrom(ref input, _repeated_companyDisplayNames_codec);
            break;
          }
          case 58: {
            if (compensationFilter_ == null) {
              CompensationFilter = new global::Google.Cloud.Talent.V4Beta1.CompensationFilter();
            }
            input.ReadMessage(CompensationFilter);
            break;
          }
          case 66: {
            CustomAttributeFilter = input.ReadString();
            break;
          }
          case 72: {
            DisableSpellCheck = input.ReadBool();
            break;
          }
          case 82:
          case 80: {
            employmentTypes_.AddEntriesFrom(ref input, _repeated_employmentTypes_codec);
            break;
          }
          case 90: {
            languageCodes_.AddEntriesFrom(ref input, _repeated_languageCodes_codec);
            break;
          }
          case 98: {
            if (publishTimeRange_ == null) {
              PublishTimeRange = new global::Google.Cloud.Talent.V4Beta1.TimestampRange();
            }
            input.ReadMessage(PublishTimeRange);
            break;
          }
          case 106: {
            excludedJobs_.AddEntriesFrom(ref input, _repeated_excludedJobs_codec);
            break;
          }
          case 114: {
            QueryLanguageCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Geographic region of the search.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LocationFilter : pb::IMessage<LocationFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationFilter> _parser = new pb::MessageParser<LocationFilter>(() => new LocationFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocationFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.FiltersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationFilter(LocationFilter other) : this() {
      address_ = other.address_;
      regionCode_ = other.regionCode_;
      latLng_ = other.latLng_ != null ? other.latLng_.Clone() : null;
      distanceInMiles_ = other.distanceInMiles_;
      telecommutePreference_ = other.telecommutePreference_;
      negated_ = other.negated_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationFilter Clone() {
      return new LocationFilter(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// The address name, such as "Mountain View" or "Bay Area".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_code" field.</summary>
    public const int RegionCodeFieldNumber = 2;
    private string regionCode_ = "";
    /// <summary>
    /// CLDR region code of the country/region. This field may be used in two ways:
    ///
    /// 1) If telecommute preference is not set, this field is used address
    /// ambiguity of the user-input address. For example, "Liverpool" may refer to
    /// "Liverpool, NY, US" or "Liverpool, UK". This region code biases the
    /// address resolution toward a specific country or territory. If this field is
    /// not set, address resolution is biased toward the United States by default.
    ///
    /// 2) If telecommute preference is set to TELECOMMUTE_ALLOWED, the
    /// telecommute location filter will be limited to the region specified in this
    /// field. If this field is not set, the telecommute job locations will not be
    ///
    /// See
    /// https://unicode-org.github.io/cldr-staging/charts/latest/supplemental/territory_information.html
    /// for details. Example: "CH" for Switzerland.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RegionCode {
      get { return regionCode_; }
      set {
        regionCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lat_lng" field.</summary>
    public const int LatLngFieldNumber = 3;
    private global::Google.Type.LatLng latLng_;
    /// <summary>
    /// The latitude and longitude of the geographic center to search from. This
    /// field is ignored if `address` is provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LatLng LatLng {
      get { return latLng_; }
      set {
        latLng_ = value;
      }
    }

    /// <summary>Field number for the "distance_in_miles" field.</summary>
    public const int DistanceInMilesFieldNumber = 4;
    private double distanceInMiles_;
    /// <summary>
    /// The distance_in_miles is applied when the location being searched for is
    /// identified as a city or smaller. This field is ignored if the location
    /// being searched for is a state or larger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double DistanceInMiles {
      get { return distanceInMiles_; }
      set {
        distanceInMiles_ = value;
      }
    }

    /// <summary>Field number for the "telecommute_preference" field.</summary>
    public const int TelecommutePreferenceFieldNumber = 5;
    private global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference telecommutePreference_ = global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference.Unspecified;
    /// <summary>
    /// Allows the client to return jobs without a
    /// set location, specifically, telecommuting jobs (telecommuting is considered
    /// by the service as a special location).
    /// [Job.posting_region][google.cloud.talent.v4beta1.Job.posting_region]
    /// indicates if a job permits telecommuting. If this field is set to
    /// [TelecommutePreference.TELECOMMUTE_ALLOWED][google.cloud.talent.v4beta1.LocationFilter.TelecommutePreference.TELECOMMUTE_ALLOWED],
    /// telecommuting jobs are searched, and
    /// [address][google.cloud.talent.v4beta1.LocationFilter.address] and
    /// [lat_lng][google.cloud.talent.v4beta1.LocationFilter.lat_lng] are ignored.
    /// If not set or set to
    /// [TelecommutePreference.TELECOMMUTE_EXCLUDED][google.cloud.talent.v4beta1.LocationFilter.TelecommutePreference.TELECOMMUTE_EXCLUDED],
    /// the telecommute status of the jobs is ignored. Jobs that have
    /// [PostingRegion.TELECOMMUTE][google.cloud.talent.v4beta1.PostingRegion.TELECOMMUTE]
    /// and have additional
    /// [Job.addresses][google.cloud.talent.v4beta1.Job.addresses] may still be
    /// matched based on other location filters using
    /// [address][google.cloud.talent.v4beta1.LocationFilter.address] or
    /// [latlng][].
    ///
    /// This filter can be used by itself to search exclusively for telecommuting
    /// jobs, or it can be combined with another location
    /// filter to search for a combination of job locations,
    /// such as "Mountain View" or "telecommuting" jobs. However, when used in
    /// combination with other location filters, telecommuting jobs can be
    /// treated as less relevant than other jobs in the search response.
    ///
    /// This field is only used for job search requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference TelecommutePreference {
      get { return telecommutePreference_; }
      set {
        telecommutePreference_ = value;
      }
    }

    /// <summary>Field number for the "negated" field.</summary>
    public const int NegatedFieldNumber = 6;
    private bool negated_;
    /// <summary>
    /// Whether to apply negation to the filter so profiles matching the filter
    /// are excluded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Negated {
      get { return negated_; }
      set {
        negated_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocationFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocationFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (RegionCode != other.RegionCode) return false;
      if (!object.Equals(LatLng, other.LatLng)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DistanceInMiles, other.DistanceInMiles)) return false;
      if (TelecommutePreference != other.TelecommutePreference) return false;
      if (Negated != other.Negated) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (RegionCode.Length != 0) hash ^= RegionCode.GetHashCode();
      if (latLng_ != null) hash ^= LatLng.GetHashCode();
      if (DistanceInMiles != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DistanceInMiles);
      if (TelecommutePreference != global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference.Unspecified) hash ^= TelecommutePreference.GetHashCode();
      if (Negated != false) hash ^= Negated.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (RegionCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionCode);
      }
      if (latLng_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LatLng);
      }
      if (DistanceInMiles != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(DistanceInMiles);
      }
      if (TelecommutePreference != global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TelecommutePreference);
      }
      if (Negated != false) {
        output.WriteRawTag(48);
        output.WriteBool(Negated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (RegionCode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionCode);
      }
      if (latLng_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LatLng);
      }
      if (DistanceInMiles != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(DistanceInMiles);
      }
      if (TelecommutePreference != global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) TelecommutePreference);
      }
      if (Negated != false) {
        output.WriteRawTag(48);
        output.WriteBool(Negated);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (RegionCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionCode);
      }
      if (latLng_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatLng);
      }
      if (DistanceInMiles != 0D) {
        size += 1 + 8;
      }
      if (TelecommutePreference != global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TelecommutePreference);
      }
      if (Negated != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocationFilter other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.RegionCode.Length != 0) {
        RegionCode = other.RegionCode;
      }
      if (other.latLng_ != null) {
        if (latLng_ == null) {
          LatLng = new global::Google.Type.LatLng();
        }
        LatLng.MergeFrom(other.LatLng);
      }
      if (other.DistanceInMiles != 0D) {
        DistanceInMiles = other.DistanceInMiles;
      }
      if (other.TelecommutePreference != global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference.Unspecified) {
        TelecommutePreference = other.TelecommutePreference;
      }
      if (other.Negated != false) {
        Negated = other.Negated;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            RegionCode = input.ReadString();
            break;
          }
          case 26: {
            if (latLng_ == null) {
              LatLng = new global::Google.Type.LatLng();
            }
            input.ReadMessage(LatLng);
            break;
          }
          case 33: {
            DistanceInMiles = input.ReadDouble();
            break;
          }
          case 40: {
            TelecommutePreference = (global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference) input.ReadEnum();
            break;
          }
          case 48: {
            Negated = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            RegionCode = input.ReadString();
            break;
          }
          case 26: {
            if (latLng_ == null) {
              LatLng = new global::Google.Type.LatLng();
            }
            input.ReadMessage(LatLng);
            break;
          }
          case 33: {
            DistanceInMiles = input.ReadDouble();
            break;
          }
          case 40: {
            TelecommutePreference = (global::Google.Cloud.Talent.V4Beta1.LocationFilter.Types.TelecommutePreference) input.ReadEnum();
            break;
          }
          case 48: {
            Negated = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LocationFilter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Specify whether to include telecommute jobs.
      /// </summary>
      public enum TelecommutePreference {
        /// <summary>
        /// Default value if the telecommute preference isn't specified.
        /// </summary>
        [pbr::OriginalName("TELECOMMUTE_PREFERENCE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Deprecated: Ignore telecommute status of jobs. Use
        /// TELECOMMUTE_JOBS_EXCLUDED if want to exclude telecommute jobs.
        /// </summary>
        [global::System.ObsoleteAttribute]
        [pbr::OriginalName("TELECOMMUTE_EXCLUDED")] TelecommuteExcluded = 1,
        /// <summary>
        /// Allow telecommute jobs.
        /// </summary>
        [pbr::OriginalName("TELECOMMUTE_ALLOWED")] TelecommuteAllowed = 2,
        /// <summary>
        /// Exclude telecommute jobs.
        /// </summary>
        [pbr::OriginalName("TELECOMMUTE_JOBS_EXCLUDED")] TelecommuteJobsExcluded = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Filter on job compensation type and amount.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CompensationFilter : pb::IMessage<CompensationFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompensationFilter> _parser = new pb::MessageParser<CompensationFilter>(() => new CompensationFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompensationFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.FiltersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompensationFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompensationFilter(CompensationFilter other) : this() {
      type_ = other.type_;
      units_ = other.units_.Clone();
      range_ = other.range_ != null ? other.range_.Clone() : null;
      includeJobsWithUnspecifiedCompensationRange_ = other.includeJobsWithUnspecifiedCompensationRange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompensationFilter Clone() {
      return new CompensationFilter(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType type_ = global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType.Unspecified;
    /// <summary>
    /// Required. Type of filter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit> _repeated_units_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit> units_ = new pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit>();
    /// <summary>
    /// Required. Specify desired `base compensation entry's`
    /// [CompensationInfo.CompensationUnit][google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationUnit> Units {
      get { return units_; }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 3;
    private global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange range_;
    /// <summary>
    /// Compensation range.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    /// <summary>Field number for the "include_jobs_with_unspecified_compensation_range" field.</summary>
    public const int IncludeJobsWithUnspecifiedCompensationRangeFieldNumber = 4;
    private bool includeJobsWithUnspecifiedCompensationRange_;
    /// <summary>
    /// If set to true, jobs with unspecified compensation range fields are
    /// included.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeJobsWithUnspecifiedCompensationRange {
      get { return includeJobsWithUnspecifiedCompensationRange_; }
      set {
        includeJobsWithUnspecifiedCompensationRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompensationFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompensationFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!units_.Equals(other.units_)) return false;
      if (!object.Equals(Range, other.Range)) return false;
      if (IncludeJobsWithUnspecifiedCompensationRange != other.IncludeJobsWithUnspecifiedCompensationRange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType.Unspecified) hash ^= Type.GetHashCode();
      hash ^= units_.GetHashCode();
      if (range_ != null) hash ^= Range.GetHashCode();
      if (IncludeJobsWithUnspecifiedCompensationRange != false) hash ^= IncludeJobsWithUnspecifiedCompensationRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      units_.WriteTo(output, _repeated_units_codec);
      if (range_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Range);
      }
      if (IncludeJobsWithUnspecifiedCompensationRange != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeJobsWithUnspecifiedCompensationRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      units_.WriteTo(ref output, _repeated_units_codec);
      if (range_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Range);
      }
      if (IncludeJobsWithUnspecifiedCompensationRange != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeJobsWithUnspecifiedCompensationRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += units_.CalculateSize(_repeated_units_codec);
      if (range_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Range);
      }
      if (IncludeJobsWithUnspecifiedCompensationRange != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompensationFilter other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType.Unspecified) {
        Type = other.Type;
      }
      units_.Add(other.units_);
      if (other.range_ != null) {
        if (range_ == null) {
          Range = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
        }
        Range.MergeFrom(other.Range);
      }
      if (other.IncludeJobsWithUnspecifiedCompensationRange != false) {
        IncludeJobsWithUnspecifiedCompensationRange = other.IncludeJobsWithUnspecifiedCompensationRange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            units_.AddEntriesFrom(input, _repeated_units_codec);
            break;
          }
          case 26: {
            if (range_ == null) {
              Range = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
            }
            input.ReadMessage(Range);
            break;
          }
          case 32: {
            IncludeJobsWithUnspecifiedCompensationRange = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Google.Cloud.Talent.V4Beta1.CompensationFilter.Types.FilterType) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            units_.AddEntriesFrom(ref input, _repeated_units_codec);
            break;
          }
          case 26: {
            if (range_ == null) {
              Range = new global::Google.Cloud.Talent.V4Beta1.CompensationInfo.Types.CompensationRange();
            }
            input.ReadMessage(Range);
            break;
          }
          case 32: {
            IncludeJobsWithUnspecifiedCompensationRange = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CompensationFilter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Specify the type of filtering.
      /// </summary>
      public enum FilterType {
        /// <summary>
        /// Filter type unspecified. Position holder, INVALID, should never be used.
        /// </summary>
        [pbr::OriginalName("FILTER_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Filter by `base compensation entry's` unit. A job is a match if and
        /// only if the job contains a base CompensationEntry and the base
        /// CompensationEntry's unit matches provided
        /// [units][google.cloud.talent.v4beta1.CompensationFilter.units]. Populate
        /// one or more
        /// [units][google.cloud.talent.v4beta1.CompensationFilter.units].
        ///
        /// See
        /// [CompensationInfo.CompensationEntry][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry]
        /// for definition of base compensation entry.
        /// </summary>
        [pbr::OriginalName("UNIT_ONLY")] UnitOnly = 1,
        /// <summary>
        /// Filter by `base compensation entry's` unit and amount / range. A job
        /// is a match if and only if the job contains a base CompensationEntry, and
        /// the base entry's unit matches provided
        /// [CompensationUnit][google.cloud.talent.v4beta1.CompensationInfo.CompensationUnit]
        /// and amount or range overlaps with provided
        /// [CompensationRange][google.cloud.talent.v4beta1.CompensationInfo.CompensationRange].
        ///
        /// See
        /// [CompensationInfo.CompensationEntry][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry]
        /// for definition of base compensation entry.
        ///
        /// Set exactly one
        /// [units][google.cloud.talent.v4beta1.CompensationFilter.units] and
        /// populate [range][google.cloud.talent.v4beta1.CompensationFilter.range].
        /// </summary>
        [pbr::OriginalName("UNIT_AND_AMOUNT")] UnitAndAmount = 2,
        /// <summary>
        /// Filter by annualized base compensation amount and `base compensation
        /// entry's` unit. Populate
        /// [range][google.cloud.talent.v4beta1.CompensationFilter.range] and zero or
        /// more [units][google.cloud.talent.v4beta1.CompensationFilter.units].
        /// </summary>
        [pbr::OriginalName("ANNUALIZED_BASE_AMOUNT")] AnnualizedBaseAmount = 3,
        /// <summary>
        /// Filter by annualized total compensation amount and `base compensation
        /// entry's` unit . Populate
        /// [range][google.cloud.talent.v4beta1.CompensationFilter.range] and zero or
        /// more [units][google.cloud.talent.v4beta1.CompensationFilter.units].
        /// </summary>
        [pbr::OriginalName("ANNUALIZED_TOTAL_AMOUNT")] AnnualizedTotalAmount = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Parameters needed for commute search.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CommuteFilter : pb::IMessage<CommuteFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommuteFilter> _parser = new pb::MessageParser<CommuteFilter>(() => new CommuteFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CommuteFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Talent.V4Beta1.FiltersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommuteFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommuteFilter(CommuteFilter other) : this() {
      commuteMethod_ = other.commuteMethod_;
      startCoordinates_ = other.startCoordinates_ != null ? other.startCoordinates_.Clone() : null;
      travelDuration_ = other.travelDuration_ != null ? other.travelDuration_.Clone() : null;
      allowImpreciseAddresses_ = other.allowImpreciseAddresses_;
      switch (other.TrafficOptionCase) {
        case TrafficOptionOneofCase.RoadTraffic:
          RoadTraffic = other.RoadTraffic;
          break;
        case TrafficOptionOneofCase.DepartureTime:
          DepartureTime = other.DepartureTime.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommuteFilter Clone() {
      return new CommuteFilter(this);
    }

    /// <summary>Field number for the "commute_method" field.</summary>
    public const int CommuteMethodFieldNumber = 1;
    private global::Google.Cloud.Talent.V4Beta1.CommuteMethod commuteMethod_ = global::Google.Cloud.Talent.V4Beta1.CommuteMethod.Unspecified;
    /// <summary>
    /// Required. The method of transportation to calculate the commute time for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Talent.V4Beta1.CommuteMethod CommuteMethod {
      get { return commuteMethod_; }
      set {
        commuteMethod_ = value;
      }
    }

    /// <summary>Field number for the "start_coordinates" field.</summary>
    public const int StartCoordinatesFieldNumber = 2;
    private global::Google.Type.LatLng startCoordinates_;
    /// <summary>
    /// Required. The latitude and longitude of the location to calculate the
    /// commute time from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LatLng StartCoordinates {
      get { return startCoordinates_; }
      set {
        startCoordinates_ = value;
      }
    }

    /// <summary>Field number for the "travel_duration" field.</summary>
    public const int TravelDurationFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration travelDuration_;
    /// <summary>
    /// Required. The maximum travel time in seconds. The maximum allowed value is
    /// `3600s` (one hour). Format is `123s`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration TravelDuration {
      get { return travelDuration_; }
      set {
        travelDuration_ = value;
      }
    }

    /// <summary>Field number for the "allow_imprecise_addresses" field.</summary>
    public const int AllowImpreciseAddressesFieldNumber = 4;
    private bool allowImpreciseAddresses_;
    /// <summary>
    /// If `true`, jobs without street level addresses may also be returned.
    /// For city level addresses, the city center is used. For state and coarser
    /// level addresses, text matching is used.
    /// If this field is set to `false` or isn't specified, only jobs that include
    /// street level addresses will be returned by commute search.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowImpreciseAddresses {
      get { return allowImpreciseAddresses_; }
      set {
        allowImpreciseAddresses_ = value;
      }
    }

    /// <summary>Field number for the "road_traffic" field.</summary>
    public const int RoadTrafficFieldNumber = 5;
    /// <summary>
    /// Specifies the traffic density to use when calculating commute time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Talent.V4Beta1.CommuteFilter.Types.RoadTraffic RoadTraffic {
      get { return HasRoadTraffic ? (global::Google.Cloud.Talent.V4Beta1.CommuteFilter.Types.RoadTraffic) trafficOption_ : global::Google.Cloud.Talent.V4Beta1.CommuteFilter.Types.RoadTraffic.Unspecified; }
      set {
        trafficOption_ = value;
        trafficOptionCase_ = TrafficOptionOneofCase.RoadTraffic;
      }
    }
    /// <summary>Gets whether the "road_traffic" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRoadTraffic {
      get { return trafficOptionCase_ == TrafficOptionOneofCase.RoadTraffic; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "road_traffic" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRoadTraffic() {
      if (HasRoadTraffic) {
        ClearTrafficOption();
      }
    }

    /// <summary>Field number for the "departure_time" field.</summary>
    public const int DepartureTimeFieldNumber = 6;
    /// <summary>
    /// The departure time used to calculate traffic impact, represented as
    /// [google.type.TimeOfDay][google.type.TimeOfDay] in local time zone.
    ///
    /// Currently traffic model is restricted to hour level resolution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.TimeOfDay DepartureTime {
      get { return trafficOptionCase_ == TrafficOptionOneofCase.DepartureTime ? (global::Google.Type.TimeOfDay) trafficOption_ : null; }
      set {
        trafficOption_ = value;
        trafficOptionCase_ = value == null ? TrafficOptionOneofCase.None : TrafficOptionOneofCase.DepartureTime;
      }
    }

    private object trafficOption_;
    /// <summary>Enum of possible cases for the "traffic_option" oneof.</summary>
    public enum TrafficOptionOneofCase {
      None = 0,
      RoadTraffic = 5,
      DepartureTime = 6,
    }
    private TrafficOptionOneofCase trafficOptionCase_ = TrafficOptionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficOptionOneofCase TrafficOptionCase {
      get { return trafficOptionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTrafficOption() {
      trafficOptionCase_ = TrafficOptionOneofCase.None;
      trafficOption_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CommuteFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CommuteFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommuteMethod != other.CommuteMethod) return false;
      if (!object.Equals(StartCoordinates, other.StartCoordinates)) return false;
      if (!object.Equals(TravelDuration, other.TravelDuration)) return false;
      if (AllowImpreciseAddresses != other.AllowImpreciseAddresses) return false;
      if (RoadTraffic != other.RoadTraffic) return false;
      if (!object.Equals(DepartureTime, other.DepartureTime)) return false;
      if (TrafficOptionCase != other.TrafficOptionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CommuteMethod != global::Google.Cloud.Talent.V4Beta1.CommuteMethod.Unspecified) hash ^= CommuteMethod.GetHashCode();
      if (startCoordinates_ != null) hash ^= StartCoordinates.GetHashCode();
      if (travelDuration_ != null) hash ^= TravelDuration.GetHashCode();
      if (AllowImpreciseAddresses != false) hash ^= AllowImpreciseAddresses.GetHashCode();
      if (HasRoadTraffic) hash ^= RoadTraffic.GetHashCode();
      if (trafficOptionCase_ == TrafficOptionOneofCase.DepartureTime) hash ^= DepartureTime.GetHashCode();
      hash ^= (int) trafficOptionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CommuteMethod != global::Google.Cloud.Talent.V4Beta1.CommuteMethod.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CommuteMethod);
      }
      if (startCoordinates_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartCoordinates);
      }
      if (travelDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TravelDuration);
      }
      if (AllowImpreciseAddresses != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllowImpreciseAddresses);
      }
      if (HasRoadTraffic) {
        output.WriteRawTag(40);
        output.WriteEnum((int) RoadTraffic);
      }
      if (trafficOptionCase_ == TrafficOptionOneofCase.DepartureTime) {
        output.WriteRawTag(50);
        output.WriteMessage(DepartureTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CommuteMethod != global::Google.Cloud.Talent.V4Beta1.CommuteMethod.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CommuteMethod);
      }
      if (startCoordinates_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartCoordinates);
      }
      if (travelDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TravelDuration);
      }
      if (AllowImpreciseAddresses != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllowImpreciseAddresses);
      }
      if (HasRoadTraffic) {
        output.WriteRawTag(40);
        output.WriteEnum((int) RoadTraffic);
      }
      if (trafficOptionCase_ == TrafficOptionOneofCase.DepartureTime) {
        output.WriteRawTag(50);
        output.WriteMessage(DepartureTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CommuteMethod != global::Google.Cloud.Talent.V4Beta1.CommuteMethod.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommuteMethod);
      }
      if (startCoordinates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartCoordinates);
      }
      if (travelDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TravelDuration);
      }
      if (AllowImpreciseAddresses != false) {
        size += 1 + 1;
      }
      if (HasRoadTraffic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoadTraffic);
      }
      if (trafficOptionCase_ == TrafficOptionOneofCase.DepartureTime) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartureTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CommuteFilter other) {
      if (other == null) {
        return;
      }
      if (other.CommuteMethod != global::Google.Cloud.Talent.V4Beta1.CommuteMethod.Unspecified) {
        CommuteMethod = other.CommuteMethod;
      }
      if (other.startCoordinates_ != null) {
        if (startCoordinates_ == null) {
          StartCoordinates = new global::Google.Type.LatLng();
        }
        StartCoordinates.MergeFrom(other.StartCoordinates);
      }
      if (other.travelDuration_ != null) {
        if (travelDuration_ == null) {
          TravelDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TravelDuration.MergeFrom(other.TravelDuration);
      }
      if (other.AllowImpreciseAddresses != false) {
        AllowImpreciseAddresses = other.AllowImpreciseAddresses;
      }
      switch (other.TrafficOptionCase) {
        case TrafficOptionOneofCase.RoadTraffic:
          RoadTraffic = other.RoadTraffic;
          break;
        case TrafficOptionOneofCase.DepartureTime:
          if (DepartureTime == null) {
            DepartureTime = new global::Google.Type.TimeOfDay();
          }
          DepartureTime.MergeFrom(other.DepartureTime);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommuteMethod = (global::Google.Cloud.Talent.V4Beta1.CommuteMethod) input.ReadEnum();
            break;
          }
          case 18: {
            if (startCoordinates_ == null) {
              StartCoordinates = new global::Google.Type.LatLng();
            }
            input.ReadMessage(StartCoordinates);
            break;
          }
          case 26: {
            if (travelDuration_ == null) {
              TravelDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TravelDuration);
            break;
          }
          case 32: {
            AllowImpreciseAddresses = input.ReadBool();
            break;
          }
          case 40: {
            trafficOption_ = input.ReadEnum();
            trafficOptionCase_ = TrafficOptionOneofCase.RoadTraffic;
            break;
          }
          case 50: {
            global::Google.Type.TimeOfDay subBuilder = new global::Google.Type.TimeOfDay();
            if (trafficOptionCase_ == TrafficOptionOneofCase.DepartureTime) {
              subBuilder.MergeFrom(DepartureTime);
            }
            input.ReadMessage(subBuilder);
            DepartureTime = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CommuteMethod = (global::Google.Cloud.Talent.V4Beta1.CommuteMethod) input.ReadEnum();
            break;
          }
          case 18: {
            if (startCoordinates_ == null) {
              StartCoordinates = new global::Google.Type.LatLng();
            }
            input.ReadMessage(StartCoordinates);
            break;
          }
          case 26: {
            if (travelDuration_ == null) {
              TravelDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TravelDuration);
            break;
          }
          case 32: {
            AllowImpreciseAddresses = input.ReadBool();
            break;
          }
          case 40: {
            trafficOption_ = input.ReadEnum();
            trafficOptionCase_ = TrafficOptionOneofCase.RoadTraffic;
            break;
          }
          case 50: {
            global::Google.Type.TimeOfDay subBuilder = new global::Google.Type.TimeOfDay();
            if (trafficOptionCase_ == TrafficOptionOneofCase.DepartureTime) {
              subBuilder.MergeFrom(DepartureTime);
            }
            input.ReadMessage(subBuilder);
            DepartureTime = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CommuteFilter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The traffic density to use when calculating commute time.
      /// </summary>
      public enum RoadTraffic {
        /// <summary>
        /// Road traffic situation isn't specified.
        /// </summary>
        [pbr::OriginalName("ROAD_TRAFFIC_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Optimal commute time without considering any traffic impact.
        /// </summary>
        [pbr::OriginalName("TRAFFIC_FREE")] TrafficFree = 1,
        /// <summary>
        /// Commute time calculation takes in account the peak traffic impact.
        /// </summary>
        [pbr::OriginalName("BUSY_HOUR")] BusyHour = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
