// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/servicehealth/v1/event_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ServiceHealth.V1 {
  /// <summary>
  /// Request service health events relevant to your Google Cloud project.
  /// </summary>
  public static partial class ServiceHealth
  {
    static readonly string __ServiceName = "google.cloud.servicehealth.v1.ServiceHealth";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.ListEventsRequest> __Marshaller_google_cloud_servicehealth_v1_ListEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.ListEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.ListEventsResponse> __Marshaller_google_cloud_servicehealth_v1_ListEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.ListEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.GetEventRequest> __Marshaller_google_cloud_servicehealth_v1_GetEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.GetEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.Event> __Marshaller_google_cloud_servicehealth_v1_Event = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.Event.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest> __Marshaller_google_cloud_servicehealth_v1_ListOrganizationEventsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse> __Marshaller_google_cloud_servicehealth_v1_ListOrganizationEventsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest> __Marshaller_google_cloud_servicehealth_v1_GetOrganizationEventRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.OrganizationEvent> __Marshaller_google_cloud_servicehealth_v1_OrganizationEvent = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.OrganizationEvent.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest> __Marshaller_google_cloud_servicehealth_v1_ListOrganizationImpactsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse> __Marshaller_google_cloud_servicehealth_v1_ListOrganizationImpactsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest> __Marshaller_google_cloud_servicehealth_v1_GetOrganizationImpactRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ServiceHealth.V1.OrganizationImpact> __Marshaller_google_cloud_servicehealth_v1_OrganizationImpact = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ServiceHealth.V1.OrganizationImpact.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceHealth.V1.ListEventsRequest, global::Google.Cloud.ServiceHealth.V1.ListEventsResponse> __Method_ListEvents = new grpc::Method<global::Google.Cloud.ServiceHealth.V1.ListEventsRequest, global::Google.Cloud.ServiceHealth.V1.ListEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEvents",
        __Marshaller_google_cloud_servicehealth_v1_ListEventsRequest,
        __Marshaller_google_cloud_servicehealth_v1_ListEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceHealth.V1.GetEventRequest, global::Google.Cloud.ServiceHealth.V1.Event> __Method_GetEvent = new grpc::Method<global::Google.Cloud.ServiceHealth.V1.GetEventRequest, global::Google.Cloud.ServiceHealth.V1.Event>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEvent",
        __Marshaller_google_cloud_servicehealth_v1_GetEventRequest,
        __Marshaller_google_cloud_servicehealth_v1_Event);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest, global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse> __Method_ListOrganizationEvents = new grpc::Method<global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest, global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrganizationEvents",
        __Marshaller_google_cloud_servicehealth_v1_ListOrganizationEventsRequest,
        __Marshaller_google_cloud_servicehealth_v1_ListOrganizationEventsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest, global::Google.Cloud.ServiceHealth.V1.OrganizationEvent> __Method_GetOrganizationEvent = new grpc::Method<global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest, global::Google.Cloud.ServiceHealth.V1.OrganizationEvent>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationEvent",
        __Marshaller_google_cloud_servicehealth_v1_GetOrganizationEventRequest,
        __Marshaller_google_cloud_servicehealth_v1_OrganizationEvent);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest, global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse> __Method_ListOrganizationImpacts = new grpc::Method<global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest, global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrganizationImpacts",
        __Marshaller_google_cloud_servicehealth_v1_ListOrganizationImpactsRequest,
        __Marshaller_google_cloud_servicehealth_v1_ListOrganizationImpactsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest, global::Google.Cloud.ServiceHealth.V1.OrganizationImpact> __Method_GetOrganizationImpact = new grpc::Method<global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest, global::Google.Cloud.ServiceHealth.V1.OrganizationImpact>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrganizationImpact",
        __Marshaller_google_cloud_servicehealth_v1_GetOrganizationImpactRequest,
        __Marshaller_google_cloud_servicehealth_v1_OrganizationImpact);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ServiceHealth.V1.EventServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ServiceHealth</summary>
    [grpc::BindServiceMethod(typeof(ServiceHealth), "BindService")]
    public abstract partial class ServiceHealthBase
    {
      /// <summary>
      /// Lists events under a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceHealth.V1.ListEventsResponse> ListEvents(global::Google.Cloud.ServiceHealth.V1.ListEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a resource containing information about an event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceHealth.V1.Event> GetEvent(global::Google.Cloud.ServiceHealth.V1.GetEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists organization events under a given organization and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse> ListOrganizationEvents(global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a resource containing information about an event affecting an
      /// organization .
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceHealth.V1.OrganizationEvent> GetOrganizationEvent(global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists assets impacted by organization events under a given organization and
      /// location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse> ListOrganizationImpacts(global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a resource containing information about impact to an asset under
      /// an organization affected by a service health event.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ServiceHealth.V1.OrganizationImpact> GetOrganizationImpact(global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ServiceHealth</summary>
    public partial class ServiceHealthClient : grpc::ClientBase<ServiceHealthClient>
    {
      /// <summary>Creates a new client for ServiceHealth</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServiceHealthClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ServiceHealth that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ServiceHealthClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServiceHealthClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ServiceHealthClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists events under a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.ListEventsResponse ListEvents(global::Google.Cloud.ServiceHealth.V1.ListEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists events under a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.ListEventsResponse ListEvents(global::Google.Cloud.ServiceHealth.V1.ListEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEvents, null, options, request);
      }
      /// <summary>
      /// Lists events under a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.ListEventsResponse> ListEventsAsync(global::Google.Cloud.ServiceHealth.V1.ListEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists events under a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.ListEventsResponse> ListEventsAsync(global::Google.Cloud.ServiceHealth.V1.ListEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEvents, null, options, request);
      }
      /// <summary>
      /// Retrieves a resource containing information about an event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.Event GetEvent(global::Google.Cloud.ServiceHealth.V1.GetEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a resource containing information about an event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.Event GetEvent(global::Google.Cloud.ServiceHealth.V1.GetEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEvent, null, options, request);
      }
      /// <summary>
      /// Retrieves a resource containing information about an event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.Event> GetEventAsync(global::Google.Cloud.ServiceHealth.V1.GetEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a resource containing information about an event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.Event> GetEventAsync(global::Google.Cloud.ServiceHealth.V1.GetEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEvent, null, options, request);
      }
      /// <summary>
      /// Lists organization events under a given organization and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse ListOrganizationEvents(global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationEvents(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists organization events under a given organization and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse ListOrganizationEvents(global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrganizationEvents, null, options, request);
      }
      /// <summary>
      /// Lists organization events under a given organization and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse> ListOrganizationEventsAsync(global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationEventsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists organization events under a given organization and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse> ListOrganizationEventsAsync(global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrganizationEvents, null, options, request);
      }
      /// <summary>
      /// Retrieves a resource containing information about an event affecting an
      /// organization .
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.OrganizationEvent GetOrganizationEvent(global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationEvent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a resource containing information about an event affecting an
      /// organization .
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.OrganizationEvent GetOrganizationEvent(global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationEvent, null, options, request);
      }
      /// <summary>
      /// Retrieves a resource containing information about an event affecting an
      /// organization .
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.OrganizationEvent> GetOrganizationEventAsync(global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationEventAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a resource containing information about an event affecting an
      /// organization .
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.OrganizationEvent> GetOrganizationEventAsync(global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationEvent, null, options, request);
      }
      /// <summary>
      /// Lists assets impacted by organization events under a given organization and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse ListOrganizationImpacts(global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationImpacts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists assets impacted by organization events under a given organization and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse ListOrganizationImpacts(global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrganizationImpacts, null, options, request);
      }
      /// <summary>
      /// Lists assets impacted by organization events under a given organization and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse> ListOrganizationImpactsAsync(global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrganizationImpactsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists assets impacted by organization events under a given organization and
      /// location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse> ListOrganizationImpactsAsync(global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrganizationImpacts, null, options, request);
      }
      /// <summary>
      /// Retrieves a resource containing information about impact to an asset under
      /// an organization affected by a service health event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.OrganizationImpact GetOrganizationImpact(global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationImpact(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a resource containing information about impact to an asset under
      /// an organization affected by a service health event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ServiceHealth.V1.OrganizationImpact GetOrganizationImpact(global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrganizationImpact, null, options, request);
      }
      /// <summary>
      /// Retrieves a resource containing information about impact to an asset under
      /// an organization affected by a service health event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.OrganizationImpact> GetOrganizationImpactAsync(global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrganizationImpactAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a resource containing information about impact to an asset under
      /// an organization affected by a service health event.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ServiceHealth.V1.OrganizationImpact> GetOrganizationImpactAsync(global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrganizationImpact, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ServiceHealthClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ServiceHealthClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ServiceHealthBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListEvents, serviceImpl.ListEvents)
          .AddMethod(__Method_GetEvent, serviceImpl.GetEvent)
          .AddMethod(__Method_ListOrganizationEvents, serviceImpl.ListOrganizationEvents)
          .AddMethod(__Method_GetOrganizationEvent, serviceImpl.GetOrganizationEvent)
          .AddMethod(__Method_ListOrganizationImpacts, serviceImpl.ListOrganizationImpacts)
          .AddMethod(__Method_GetOrganizationImpact, serviceImpl.GetOrganizationImpact).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ServiceHealthBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceHealth.V1.ListEventsRequest, global::Google.Cloud.ServiceHealth.V1.ListEventsResponse>(serviceImpl.ListEvents));
      serviceBinder.AddMethod(__Method_GetEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceHealth.V1.GetEventRequest, global::Google.Cloud.ServiceHealth.V1.Event>(serviceImpl.GetEvent));
      serviceBinder.AddMethod(__Method_ListOrganizationEvents, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsRequest, global::Google.Cloud.ServiceHealth.V1.ListOrganizationEventsResponse>(serviceImpl.ListOrganizationEvents));
      serviceBinder.AddMethod(__Method_GetOrganizationEvent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceHealth.V1.GetOrganizationEventRequest, global::Google.Cloud.ServiceHealth.V1.OrganizationEvent>(serviceImpl.GetOrganizationEvent));
      serviceBinder.AddMethod(__Method_ListOrganizationImpacts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsRequest, global::Google.Cloud.ServiceHealth.V1.ListOrganizationImpactsResponse>(serviceImpl.ListOrganizationImpacts));
      serviceBinder.AddMethod(__Method_GetOrganizationImpact, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ServiceHealth.V1.GetOrganizationImpactRequest, global::Google.Cloud.ServiceHealth.V1.OrganizationImpact>(serviceImpl.GetOrganizationImpact));
    }

  }
}
#endregion
