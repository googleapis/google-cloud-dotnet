// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/secretmanager/v1/service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.SecretManager.V1 {
  /// <summary>
  /// Secret Manager Service
  ///
  /// Manages secrets and operations using those secrets. Implements a REST
  /// model with the following objects:
  ///
  /// * [Secret][google.cloud.secretmanager.v1.Secret]
  /// * [SecretVersion][google.cloud.secretmanager.v1.SecretVersion]
  /// </summary>
  public static partial class SecretManagerService
  {
    static readonly string __ServiceName = "google.cloud.secretmanager.v1.SecretManagerService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.ListSecretsRequest> __Marshaller_google_cloud_secretmanager_v1_ListSecretsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.ListSecretsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.ListSecretsResponse> __Marshaller_google_cloud_secretmanager_v1_ListSecretsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.ListSecretsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.CreateSecretRequest> __Marshaller_google_cloud_secretmanager_v1_CreateSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.CreateSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.Secret> __Marshaller_google_cloud_secretmanager_v1_Secret = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.Secret.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest> __Marshaller_google_cloud_secretmanager_v1_AddSecretVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.SecretVersion> __Marshaller_google_cloud_secretmanager_v1_SecretVersion = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.SecretVersion.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.GetSecretRequest> __Marshaller_google_cloud_secretmanager_v1_GetSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.GetSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.UpdateSecretRequest> __Marshaller_google_cloud_secretmanager_v1_UpdateSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.UpdateSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.DeleteSecretRequest> __Marshaller_google_cloud_secretmanager_v1_DeleteSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.DeleteSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest> __Marshaller_google_cloud_secretmanager_v1_ListSecretVersionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse> __Marshaller_google_cloud_secretmanager_v1_ListSecretVersionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest> __Marshaller_google_cloud_secretmanager_v1_GetSecretVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest> __Marshaller_google_cloud_secretmanager_v1_AccessSecretVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse> __Marshaller_google_cloud_secretmanager_v1_AccessSecretVersionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest> __Marshaller_google_cloud_secretmanager_v1_DisableSecretVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest> __Marshaller_google_cloud_secretmanager_v1_EnableSecretVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest> __Marshaller_google_cloud_secretmanager_v1_DestroySecretVersionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.ListSecretsRequest, global::Google.Cloud.SecretManager.V1.ListSecretsResponse> __Method_ListSecrets = new grpc::Method<global::Google.Cloud.SecretManager.V1.ListSecretsRequest, global::Google.Cloud.SecretManager.V1.ListSecretsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSecrets",
        __Marshaller_google_cloud_secretmanager_v1_ListSecretsRequest,
        __Marshaller_google_cloud_secretmanager_v1_ListSecretsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.CreateSecretRequest, global::Google.Cloud.SecretManager.V1.Secret> __Method_CreateSecret = new grpc::Method<global::Google.Cloud.SecretManager.V1.CreateSecretRequest, global::Google.Cloud.SecretManager.V1.Secret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSecret",
        __Marshaller_google_cloud_secretmanager_v1_CreateSecretRequest,
        __Marshaller_google_cloud_secretmanager_v1_Secret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion> __Method_AddSecretVersion = new grpc::Method<global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSecretVersion",
        __Marshaller_google_cloud_secretmanager_v1_AddSecretVersionRequest,
        __Marshaller_google_cloud_secretmanager_v1_SecretVersion);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.GetSecretRequest, global::Google.Cloud.SecretManager.V1.Secret> __Method_GetSecret = new grpc::Method<global::Google.Cloud.SecretManager.V1.GetSecretRequest, global::Google.Cloud.SecretManager.V1.Secret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSecret",
        __Marshaller_google_cloud_secretmanager_v1_GetSecretRequest,
        __Marshaller_google_cloud_secretmanager_v1_Secret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.UpdateSecretRequest, global::Google.Cloud.SecretManager.V1.Secret> __Method_UpdateSecret = new grpc::Method<global::Google.Cloud.SecretManager.V1.UpdateSecretRequest, global::Google.Cloud.SecretManager.V1.Secret>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSecret",
        __Marshaller_google_cloud_secretmanager_v1_UpdateSecretRequest,
        __Marshaller_google_cloud_secretmanager_v1_Secret);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.DeleteSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSecret = new grpc::Method<global::Google.Cloud.SecretManager.V1.DeleteSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSecret",
        __Marshaller_google_cloud_secretmanager_v1_DeleteSecretRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest, global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse> __Method_ListSecretVersions = new grpc::Method<global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest, global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSecretVersions",
        __Marshaller_google_cloud_secretmanager_v1_ListSecretVersionsRequest,
        __Marshaller_google_cloud_secretmanager_v1_ListSecretVersionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion> __Method_GetSecretVersion = new grpc::Method<global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSecretVersion",
        __Marshaller_google_cloud_secretmanager_v1_GetSecretVersionRequest,
        __Marshaller_google_cloud_secretmanager_v1_SecretVersion);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest, global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse> __Method_AccessSecretVersion = new grpc::Method<global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest, global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AccessSecretVersion",
        __Marshaller_google_cloud_secretmanager_v1_AccessSecretVersionRequest,
        __Marshaller_google_cloud_secretmanager_v1_AccessSecretVersionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion> __Method_DisableSecretVersion = new grpc::Method<global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisableSecretVersion",
        __Marshaller_google_cloud_secretmanager_v1_DisableSecretVersionRequest,
        __Marshaller_google_cloud_secretmanager_v1_SecretVersion);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion> __Method_EnableSecretVersion = new grpc::Method<global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnableSecretVersion",
        __Marshaller_google_cloud_secretmanager_v1_EnableSecretVersionRequest,
        __Marshaller_google_cloud_secretmanager_v1_SecretVersion);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion> __Method_DestroySecretVersion = new grpc::Method<global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DestroySecretVersion",
        __Marshaller_google_cloud_secretmanager_v1_DestroySecretVersionRequest,
        __Marshaller_google_cloud_secretmanager_v1_SecretVersion);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.SecretManager.V1.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SecretManagerService</summary>
    [grpc::BindServiceMethod(typeof(SecretManagerService), "BindService")]
    public abstract partial class SecretManagerServiceBase
    {
      /// <summary>
      /// Lists [Secrets][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.ListSecretsResponse> ListSecrets(global::Google.Cloud.SecretManager.V1.ListSecretsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new [Secret][google.cloud.secretmanager.v1.Secret] containing no
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.Secret> CreateSecret(global::Google.Cloud.SecretManager.V1.CreateSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new [SecretVersion][google.cloud.secretmanager.v1.SecretVersion]
      /// containing secret data and attaches it to an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.SecretVersion> AddSecretVersion(global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets metadata for a given [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.Secret> GetSecret(global::Google.Cloud.SecretManager.V1.GetSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates metadata of an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.Secret> UpdateSecret(global::Google.Cloud.SecretManager.V1.UpdateSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSecret(global::Google.Cloud.SecretManager.V1.DeleteSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists [SecretVersions][google.cloud.secretmanager.v1.SecretVersion]. This
      /// call does not return secret data.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse> ListSecretVersions(global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets metadata for a
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.SecretVersion> GetSecretVersion(global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Accesses a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// This call returns the secret data.
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse> AccessSecretVersion(global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Disables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DISABLED][google.cloud.secretmanager.v1.SecretVersion.State.DISABLED].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.SecretVersion> DisableSecretVersion(global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Enables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [ENABLED][google.cloud.secretmanager.v1.SecretVersion.State.ENABLED].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.SecretVersion> EnableSecretVersion(global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Destroys a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DESTROYED][google.cloud.secretmanager.v1.SecretVersion.State.DESTROYED]
      /// and irrevocably destroys the secret data.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecretManager.V1.SecretVersion> DestroySecretVersion(global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets the access control policy on the specified secret. Replaces any
      /// existing policy.
      ///
      /// Permissions on
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion] are enforced
      /// according to the policy set on the associated
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the access control policy for a secret.
      /// Returns empty policy if the secret exists and does not have a policy set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns permissions that a caller has for the specified secret.
      /// If the secret does not exist, this call returns an empty set of
      /// permissions, not a NOT_FOUND error.
      ///
      /// Note: This operation is designed to be used for building permission-aware
      /// UIs and command-line tools, not for authorization checking. This operation
      /// may "fail open" without warning.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SecretManagerService</summary>
    public partial class SecretManagerServiceClient : grpc::ClientBase<SecretManagerServiceClient>
    {
      /// <summary>Creates a new client for SecretManagerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SecretManagerServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SecretManagerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SecretManagerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SecretManagerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SecretManagerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists [Secrets][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.ListSecretsResponse ListSecrets(global::Google.Cloud.SecretManager.V1.ListSecretsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSecrets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists [Secrets][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.ListSecretsResponse ListSecrets(global::Google.Cloud.SecretManager.V1.ListSecretsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSecrets, null, options, request);
      }
      /// <summary>
      /// Lists [Secrets][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.ListSecretsResponse> ListSecretsAsync(global::Google.Cloud.SecretManager.V1.ListSecretsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSecretsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists [Secrets][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.ListSecretsResponse> ListSecretsAsync(global::Google.Cloud.SecretManager.V1.ListSecretsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSecrets, null, options, request);
      }
      /// <summary>
      /// Creates a new [Secret][google.cloud.secretmanager.v1.Secret] containing no
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.Secret CreateSecret(global::Google.Cloud.SecretManager.V1.CreateSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new [Secret][google.cloud.secretmanager.v1.Secret] containing no
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.Secret CreateSecret(global::Google.Cloud.SecretManager.V1.CreateSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSecret, null, options, request);
      }
      /// <summary>
      /// Creates a new [Secret][google.cloud.secretmanager.v1.Secret] containing no
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.Secret> CreateSecretAsync(global::Google.Cloud.SecretManager.V1.CreateSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new [Secret][google.cloud.secretmanager.v1.Secret] containing no
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.Secret> CreateSecretAsync(global::Google.Cloud.SecretManager.V1.CreateSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSecret, null, options, request);
      }
      /// <summary>
      /// Creates a new [SecretVersion][google.cloud.secretmanager.v1.SecretVersion]
      /// containing secret data and attaches it to an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion AddSecretVersion(global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSecretVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new [SecretVersion][google.cloud.secretmanager.v1.SecretVersion]
      /// containing secret data and attaches it to an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion AddSecretVersion(global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSecretVersion, null, options, request);
      }
      /// <summary>
      /// Creates a new [SecretVersion][google.cloud.secretmanager.v1.SecretVersion]
      /// containing secret data and attaches it to an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> AddSecretVersionAsync(global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSecretVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new [SecretVersion][google.cloud.secretmanager.v1.SecretVersion]
      /// containing secret data and attaches it to an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> AddSecretVersionAsync(global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSecretVersion, null, options, request);
      }
      /// <summary>
      /// Gets metadata for a given [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.Secret GetSecret(global::Google.Cloud.SecretManager.V1.GetSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets metadata for a given [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.Secret GetSecret(global::Google.Cloud.SecretManager.V1.GetSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSecret, null, options, request);
      }
      /// <summary>
      /// Gets metadata for a given [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.Secret> GetSecretAsync(global::Google.Cloud.SecretManager.V1.GetSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets metadata for a given [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.Secret> GetSecretAsync(global::Google.Cloud.SecretManager.V1.GetSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSecret, null, options, request);
      }
      /// <summary>
      /// Updates metadata of an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.Secret UpdateSecret(global::Google.Cloud.SecretManager.V1.UpdateSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates metadata of an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.Secret UpdateSecret(global::Google.Cloud.SecretManager.V1.UpdateSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSecret, null, options, request);
      }
      /// <summary>
      /// Updates metadata of an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.Secret> UpdateSecretAsync(global::Google.Cloud.SecretManager.V1.UpdateSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates metadata of an existing
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.Secret> UpdateSecretAsync(global::Google.Cloud.SecretManager.V1.UpdateSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSecret, null, options, request);
      }
      /// <summary>
      /// Deletes a [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSecret(global::Google.Cloud.SecretManager.V1.DeleteSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSecret(global::Google.Cloud.SecretManager.V1.DeleteSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSecret, null, options, request);
      }
      /// <summary>
      /// Deletes a [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSecretAsync(global::Google.Cloud.SecretManager.V1.DeleteSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSecretAsync(global::Google.Cloud.SecretManager.V1.DeleteSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSecret, null, options, request);
      }
      /// <summary>
      /// Lists [SecretVersions][google.cloud.secretmanager.v1.SecretVersion]. This
      /// call does not return secret data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse ListSecretVersions(global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSecretVersions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists [SecretVersions][google.cloud.secretmanager.v1.SecretVersion]. This
      /// call does not return secret data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse ListSecretVersions(global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSecretVersions, null, options, request);
      }
      /// <summary>
      /// Lists [SecretVersions][google.cloud.secretmanager.v1.SecretVersion]. This
      /// call does not return secret data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse> ListSecretVersionsAsync(global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSecretVersionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists [SecretVersions][google.cloud.secretmanager.v1.SecretVersion]. This
      /// call does not return secret data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse> ListSecretVersionsAsync(global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSecretVersions, null, options, request);
      }
      /// <summary>
      /// Gets metadata for a
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion GetSecretVersion(global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSecretVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets metadata for a
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion GetSecretVersion(global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSecretVersion, null, options, request);
      }
      /// <summary>
      /// Gets metadata for a
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> GetSecretVersionAsync(global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSecretVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets metadata for a
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> GetSecretVersionAsync(global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSecretVersion, null, options, request);
      }
      /// <summary>
      /// Accesses a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// This call returns the secret data.
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse AccessSecretVersion(global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccessSecretVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Accesses a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// This call returns the secret data.
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse AccessSecretVersion(global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AccessSecretVersion, null, options, request);
      }
      /// <summary>
      /// Accesses a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// This call returns the secret data.
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse> AccessSecretVersionAsync(global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AccessSecretVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Accesses a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// This call returns the secret data.
      ///
      /// `projects/*/secrets/*/versions/latest` is an alias to the most recently
      /// created [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse> AccessSecretVersionAsync(global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AccessSecretVersion, null, options, request);
      }
      /// <summary>
      /// Disables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DISABLED][google.cloud.secretmanager.v1.SecretVersion.State.DISABLED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion DisableSecretVersion(global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSecretVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Disables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DISABLED][google.cloud.secretmanager.v1.SecretVersion.State.DISABLED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion DisableSecretVersion(global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisableSecretVersion, null, options, request);
      }
      /// <summary>
      /// Disables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DISABLED][google.cloud.secretmanager.v1.SecretVersion.State.DISABLED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> DisableSecretVersionAsync(global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisableSecretVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Disables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DISABLED][google.cloud.secretmanager.v1.SecretVersion.State.DISABLED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> DisableSecretVersionAsync(global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisableSecretVersion, null, options, request);
      }
      /// <summary>
      /// Enables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [ENABLED][google.cloud.secretmanager.v1.SecretVersion.State.ENABLED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion EnableSecretVersion(global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableSecretVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [ENABLED][google.cloud.secretmanager.v1.SecretVersion.State.ENABLED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion EnableSecretVersion(global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnableSecretVersion, null, options, request);
      }
      /// <summary>
      /// Enables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [ENABLED][google.cloud.secretmanager.v1.SecretVersion.State.ENABLED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> EnableSecretVersionAsync(global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnableSecretVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Enables a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [ENABLED][google.cloud.secretmanager.v1.SecretVersion.State.ENABLED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> EnableSecretVersionAsync(global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnableSecretVersion, null, options, request);
      }
      /// <summary>
      /// Destroys a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DESTROYED][google.cloud.secretmanager.v1.SecretVersion.State.DESTROYED]
      /// and irrevocably destroys the secret data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion DestroySecretVersion(global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DestroySecretVersion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Destroys a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DESTROYED][google.cloud.secretmanager.v1.SecretVersion.State.DESTROYED]
      /// and irrevocably destroys the secret data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecretManager.V1.SecretVersion DestroySecretVersion(global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DestroySecretVersion, null, options, request);
      }
      /// <summary>
      /// Destroys a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DESTROYED][google.cloud.secretmanager.v1.SecretVersion.State.DESTROYED]
      /// and irrevocably destroys the secret data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> DestroySecretVersionAsync(global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DestroySecretVersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Destroys a [SecretVersion][google.cloud.secretmanager.v1.SecretVersion].
      ///
      /// Sets the [state][google.cloud.secretmanager.v1.SecretVersion.state] of the
      /// [SecretVersion][google.cloud.secretmanager.v1.SecretVersion] to
      /// [DESTROYED][google.cloud.secretmanager.v1.SecretVersion.State.DESTROYED]
      /// and irrevocably destroys the secret data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecretManager.V1.SecretVersion> DestroySecretVersionAsync(global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DestroySecretVersion, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on the specified secret. Replaces any
      /// existing policy.
      ///
      /// Permissions on
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion] are enforced
      /// according to the policy set on the associated
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on the specified secret. Replaces any
      /// existing policy.
      ///
      /// Permissions on
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion] are enforced
      /// according to the policy set on the associated
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on the specified secret. Replaces any
      /// existing policy.
      ///
      /// Permissions on
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion] are enforced
      /// according to the policy set on the associated
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on the specified secret. Replaces any
      /// existing policy.
      ///
      /// Permissions on
      /// [SecretVersions][google.cloud.secretmanager.v1.SecretVersion] are enforced
      /// according to the policy set on the associated
      /// [Secret][google.cloud.secretmanager.v1.Secret].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for a secret.
      /// Returns empty policy if the secret exists and does not have a policy set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for a secret.
      /// Returns empty policy if the secret exists and does not have a policy set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for a secret.
      /// Returns empty policy if the secret exists and does not have a policy set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for a secret.
      /// Returns empty policy if the secret exists and does not have a policy set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Returns permissions that a caller has for the specified secret.
      /// If the secret does not exist, this call returns an empty set of
      /// permissions, not a NOT_FOUND error.
      ///
      /// Note: This operation is designed to be used for building permission-aware
      /// UIs and command-line tools, not for authorization checking. This operation
      /// may "fail open" without warning.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns permissions that a caller has for the specified secret.
      /// If the secret does not exist, this call returns an empty set of
      /// permissions, not a NOT_FOUND error.
      ///
      /// Note: This operation is designed to be used for building permission-aware
      /// UIs and command-line tools, not for authorization checking. This operation
      /// may "fail open" without warning.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Returns permissions that a caller has for the specified secret.
      /// If the secret does not exist, this call returns an empty set of
      /// permissions, not a NOT_FOUND error.
      ///
      /// Note: This operation is designed to be used for building permission-aware
      /// UIs and command-line tools, not for authorization checking. This operation
      /// may "fail open" without warning.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns permissions that a caller has for the specified secret.
      /// If the secret does not exist, this call returns an empty set of
      /// permissions, not a NOT_FOUND error.
      ///
      /// Note: This operation is designed to be used for building permission-aware
      /// UIs and command-line tools, not for authorization checking. This operation
      /// may "fail open" without warning.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SecretManagerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SecretManagerServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SecretManagerServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListSecrets, serviceImpl.ListSecrets)
          .AddMethod(__Method_CreateSecret, serviceImpl.CreateSecret)
          .AddMethod(__Method_AddSecretVersion, serviceImpl.AddSecretVersion)
          .AddMethod(__Method_GetSecret, serviceImpl.GetSecret)
          .AddMethod(__Method_UpdateSecret, serviceImpl.UpdateSecret)
          .AddMethod(__Method_DeleteSecret, serviceImpl.DeleteSecret)
          .AddMethod(__Method_ListSecretVersions, serviceImpl.ListSecretVersions)
          .AddMethod(__Method_GetSecretVersion, serviceImpl.GetSecretVersion)
          .AddMethod(__Method_AccessSecretVersion, serviceImpl.AccessSecretVersion)
          .AddMethod(__Method_DisableSecretVersion, serviceImpl.DisableSecretVersion)
          .AddMethod(__Method_EnableSecretVersion, serviceImpl.EnableSecretVersion)
          .AddMethod(__Method_DestroySecretVersion, serviceImpl.DestroySecretVersion)
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SecretManagerServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListSecrets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.ListSecretsRequest, global::Google.Cloud.SecretManager.V1.ListSecretsResponse>(serviceImpl.ListSecrets));
      serviceBinder.AddMethod(__Method_CreateSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.CreateSecretRequest, global::Google.Cloud.SecretManager.V1.Secret>(serviceImpl.CreateSecret));
      serviceBinder.AddMethod(__Method_AddSecretVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.AddSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(serviceImpl.AddSecretVersion));
      serviceBinder.AddMethod(__Method_GetSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.GetSecretRequest, global::Google.Cloud.SecretManager.V1.Secret>(serviceImpl.GetSecret));
      serviceBinder.AddMethod(__Method_UpdateSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.UpdateSecretRequest, global::Google.Cloud.SecretManager.V1.Secret>(serviceImpl.UpdateSecret));
      serviceBinder.AddMethod(__Method_DeleteSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.DeleteSecretRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSecret));
      serviceBinder.AddMethod(__Method_ListSecretVersions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.ListSecretVersionsRequest, global::Google.Cloud.SecretManager.V1.ListSecretVersionsResponse>(serviceImpl.ListSecretVersions));
      serviceBinder.AddMethod(__Method_GetSecretVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.GetSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(serviceImpl.GetSecretVersion));
      serviceBinder.AddMethod(__Method_AccessSecretVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.AccessSecretVersionRequest, global::Google.Cloud.SecretManager.V1.AccessSecretVersionResponse>(serviceImpl.AccessSecretVersion));
      serviceBinder.AddMethod(__Method_DisableSecretVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.DisableSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(serviceImpl.DisableSecretVersion));
      serviceBinder.AddMethod(__Method_EnableSecretVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.EnableSecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(serviceImpl.EnableSecretVersion));
      serviceBinder.AddMethod(__Method_DestroySecretVersion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecretManager.V1.DestroySecretVersionRequest, global::Google.Cloud.SecretManager.V1.SecretVersion>(serviceImpl.DestroySecretVersion));
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
    }

  }
}
#endregion
