// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/cloudbuild/v1/cloudbuild.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.CloudBuild.V1 {
  /// <summary>
  /// Creates and manages builds on Google Cloud Platform.
  ///
  /// The main concept used by this API is a `Build`, which describes the location
  /// of the source to build, how to build the source, and where to store the
  /// built artifacts, if any.
  ///
  /// A user can list previously-requested builds or get builds by their ID to
  /// determine the status of the build.
  /// </summary>
  public static partial class CloudBuild
  {
    static readonly string __ServiceName = "google.devtools.cloudbuild.v1.CloudBuild";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.CreateBuildRequest> __Marshaller_google_devtools_cloudbuild_v1_CreateBuildRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.CreateBuildRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.GetBuildRequest> __Marshaller_google_devtools_cloudbuild_v1_GetBuildRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.GetBuildRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.Build> __Marshaller_google_devtools_cloudbuild_v1_Build = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.Build.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ListBuildsRequest> __Marshaller_google_devtools_cloudbuild_v1_ListBuildsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ListBuildsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ListBuildsResponse> __Marshaller_google_devtools_cloudbuild_v1_ListBuildsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ListBuildsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.CancelBuildRequest> __Marshaller_google_devtools_cloudbuild_v1_CancelBuildRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.CancelBuildRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.RetryBuildRequest> __Marshaller_google_devtools_cloudbuild_v1_RetryBuildRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.RetryBuildRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest> __Marshaller_google_devtools_cloudbuild_v1_ApproveBuildRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest> __Marshaller_google_devtools_cloudbuild_v1_CreateBuildTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.BuildTrigger> __Marshaller_google_devtools_cloudbuild_v1_BuildTrigger = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.BuildTrigger.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest> __Marshaller_google_devtools_cloudbuild_v1_GetBuildTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest> __Marshaller_google_devtools_cloudbuild_v1_ListBuildTriggersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse> __Marshaller_google_devtools_cloudbuild_v1_ListBuildTriggersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest> __Marshaller_google_devtools_cloudbuild_v1_DeleteBuildTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest> __Marshaller_google_devtools_cloudbuild_v1_UpdateBuildTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest> __Marshaller_google_devtools_cloudbuild_v1_RunBuildTriggerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest> __Marshaller_google_devtools_cloudbuild_v1_ReceiveTriggerWebhookRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse> __Marshaller_google_devtools_cloudbuild_v1_ReceiveTriggerWebhookResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest> __Marshaller_google_devtools_cloudbuild_v1_CreateWorkerPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest> __Marshaller_google_devtools_cloudbuild_v1_GetWorkerPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.WorkerPool> __Marshaller_google_devtools_cloudbuild_v1_WorkerPool = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.WorkerPool.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest> __Marshaller_google_devtools_cloudbuild_v1_DeleteWorkerPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest> __Marshaller_google_devtools_cloudbuild_v1_UpdateWorkerPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest> __Marshaller_google_devtools_cloudbuild_v1_ListWorkerPoolsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse> __Marshaller_google_devtools_cloudbuild_v1_ListWorkerPoolsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.CreateBuildRequest, global::Google.LongRunning.Operation> __Method_CreateBuild = new grpc::Method<global::Google.Cloud.CloudBuild.V1.CreateBuildRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBuild",
        __Marshaller_google_devtools_cloudbuild_v1_CreateBuildRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.GetBuildRequest, global::Google.Cloud.CloudBuild.V1.Build> __Method_GetBuild = new grpc::Method<global::Google.Cloud.CloudBuild.V1.GetBuildRequest, global::Google.Cloud.CloudBuild.V1.Build>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBuild",
        __Marshaller_google_devtools_cloudbuild_v1_GetBuildRequest,
        __Marshaller_google_devtools_cloudbuild_v1_Build);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.ListBuildsRequest, global::Google.Cloud.CloudBuild.V1.ListBuildsResponse> __Method_ListBuilds = new grpc::Method<global::Google.Cloud.CloudBuild.V1.ListBuildsRequest, global::Google.Cloud.CloudBuild.V1.ListBuildsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBuilds",
        __Marshaller_google_devtools_cloudbuild_v1_ListBuildsRequest,
        __Marshaller_google_devtools_cloudbuild_v1_ListBuildsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.CancelBuildRequest, global::Google.Cloud.CloudBuild.V1.Build> __Method_CancelBuild = new grpc::Method<global::Google.Cloud.CloudBuild.V1.CancelBuildRequest, global::Google.Cloud.CloudBuild.V1.Build>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelBuild",
        __Marshaller_google_devtools_cloudbuild_v1_CancelBuildRequest,
        __Marshaller_google_devtools_cloudbuild_v1_Build);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.RetryBuildRequest, global::Google.LongRunning.Operation> __Method_RetryBuild = new grpc::Method<global::Google.Cloud.CloudBuild.V1.RetryBuildRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetryBuild",
        __Marshaller_google_devtools_cloudbuild_v1_RetryBuildRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest, global::Google.LongRunning.Operation> __Method_ApproveBuild = new grpc::Method<global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApproveBuild",
        __Marshaller_google_devtools_cloudbuild_v1_ApproveBuildRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger> __Method_CreateBuildTrigger = new grpc::Method<global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBuildTrigger",
        __Marshaller_google_devtools_cloudbuild_v1_CreateBuildTriggerRequest,
        __Marshaller_google_devtools_cloudbuild_v1_BuildTrigger);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger> __Method_GetBuildTrigger = new grpc::Method<global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBuildTrigger",
        __Marshaller_google_devtools_cloudbuild_v1_GetBuildTriggerRequest,
        __Marshaller_google_devtools_cloudbuild_v1_BuildTrigger);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest, global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse> __Method_ListBuildTriggers = new grpc::Method<global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest, global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBuildTriggers",
        __Marshaller_google_devtools_cloudbuild_v1_ListBuildTriggersRequest,
        __Marshaller_google_devtools_cloudbuild_v1_ListBuildTriggersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteBuildTrigger = new grpc::Method<global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBuildTrigger",
        __Marshaller_google_devtools_cloudbuild_v1_DeleteBuildTriggerRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger> __Method_UpdateBuildTrigger = new grpc::Method<global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBuildTrigger",
        __Marshaller_google_devtools_cloudbuild_v1_UpdateBuildTriggerRequest,
        __Marshaller_google_devtools_cloudbuild_v1_BuildTrigger);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest, global::Google.LongRunning.Operation> __Method_RunBuildTrigger = new grpc::Method<global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunBuildTrigger",
        __Marshaller_google_devtools_cloudbuild_v1_RunBuildTriggerRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest, global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse> __Method_ReceiveTriggerWebhook = new grpc::Method<global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest, global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReceiveTriggerWebhook",
        __Marshaller_google_devtools_cloudbuild_v1_ReceiveTriggerWebhookRequest,
        __Marshaller_google_devtools_cloudbuild_v1_ReceiveTriggerWebhookResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest, global::Google.LongRunning.Operation> __Method_CreateWorkerPool = new grpc::Method<global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWorkerPool",
        __Marshaller_google_devtools_cloudbuild_v1_CreateWorkerPoolRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest, global::Google.Cloud.CloudBuild.V1.WorkerPool> __Method_GetWorkerPool = new grpc::Method<global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest, global::Google.Cloud.CloudBuild.V1.WorkerPool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkerPool",
        __Marshaller_google_devtools_cloudbuild_v1_GetWorkerPoolRequest,
        __Marshaller_google_devtools_cloudbuild_v1_WorkerPool);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest, global::Google.LongRunning.Operation> __Method_DeleteWorkerPool = new grpc::Method<global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWorkerPool",
        __Marshaller_google_devtools_cloudbuild_v1_DeleteWorkerPoolRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest, global::Google.LongRunning.Operation> __Method_UpdateWorkerPool = new grpc::Method<global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWorkerPool",
        __Marshaller_google_devtools_cloudbuild_v1_UpdateWorkerPoolRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest, global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse> __Method_ListWorkerPools = new grpc::Method<global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest, global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorkerPools",
        __Marshaller_google_devtools_cloudbuild_v1_ListWorkerPoolsRequest,
        __Marshaller_google_devtools_cloudbuild_v1_ListWorkerPoolsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.CloudBuild.V1.CloudbuildReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CloudBuild</summary>
    [grpc::BindServiceMethod(typeof(CloudBuild), "BindService")]
    public abstract partial class CloudBuildBase
    {
      /// <summary>
      /// Starts a build with the specified configuration.
      ///
      /// This method returns a long-running `Operation`, which includes the build
      /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
      /// `SUCCESS` or `FAILURE`).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateBuild(global::Google.Cloud.CloudBuild.V1.CreateBuildRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns information about a previously requested build.
      ///
      /// The `Build` that is returned includes its status (such as `SUCCESS`,
      /// `FAILURE`, or `WORKING`), and timing information.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.Build> GetBuild(global::Google.Cloud.CloudBuild.V1.GetBuildRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists previously requested builds.
      ///
      /// Previously requested builds may still be in-progress, or may have finished
      /// successfully or unsuccessfully.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.ListBuildsResponse> ListBuilds(global::Google.Cloud.CloudBuild.V1.ListBuildsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Cancels a build in progress.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.Build> CancelBuild(global::Google.Cloud.CloudBuild.V1.CancelBuildRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new build based on the specified build.
      ///
      /// This method creates a new build using the original build request, which may
      /// or may not result in an identical build.
      ///
      /// For triggered builds:
      ///
      /// * Triggered builds resolve to a precise revision; therefore a retry of a
      /// triggered build will result in a build that uses the same revision.
      ///
      /// For non-triggered builds that specify `RepoSource`:
      ///
      /// * If the original build built from the tip of a branch, the retried build
      /// will build from the tip of that branch, which may not be the same revision
      /// as the original build.
      /// * If the original build specified a commit sha or revision ID, the retried
      /// build will use the identical source.
      ///
      /// For builds that specify `StorageSource`:
      ///
      /// * If the original build pulled source from Cloud Storage without
      /// specifying the generation of the object, the new build will use the current
      /// object, which may be different from the original build source.
      /// * If the original build pulled source from Cloud Storage and specified the
      /// generation of the object, the new build will attempt to use the same
      /// object, which may or may not be available depending on the bucket's
      /// lifecycle management settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RetryBuild(global::Google.Cloud.CloudBuild.V1.RetryBuildRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Approves or rejects a pending build.
      ///
      /// If approved, the returned LRO will be analogous to the LRO returned from
      /// a CreateBuild call.
      ///
      /// If rejected, the returned LRO will be immediately done.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ApproveBuild(global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.BuildTrigger> CreateBuildTrigger(global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns information about a `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.BuildTrigger> GetBuildTrigger(global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists existing `BuildTrigger`s.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse> ListBuildTriggers(global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBuildTrigger(global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.BuildTrigger> UpdateBuildTrigger(global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Runs a `BuildTrigger` at a particular source revision.
      ///
      /// To run a regional or global trigger, use the POST request
      /// that includes the location endpoint in the path (ex.
      /// v1/projects/{projectId}/locations/{region}/triggers/{triggerId}:run). The
      /// POST request that does not include the location endpoint in the path can
      /// only be used when running global triggers.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RunBuildTrigger(global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ReceiveTriggerWebhook [Experimental] is called when the API receives a
      /// webhook request targeted at a specific trigger.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse> ReceiveTriggerWebhook(global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateWorkerPool(global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns details of a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.WorkerPool> GetWorkerPool(global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteWorkerPool(global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateWorkerPool(global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists `WorkerPool`s.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse> ListWorkerPools(global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CloudBuild</summary>
    public partial class CloudBuildClient : grpc::ClientBase<CloudBuildClient>
    {
      /// <summary>Creates a new client for CloudBuild</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudBuildClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CloudBuild that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudBuildClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudBuildClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudBuildClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Starts a build with the specified configuration.
      ///
      /// This method returns a long-running `Operation`, which includes the build
      /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
      /// `SUCCESS` or `FAILURE`).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateBuild(global::Google.Cloud.CloudBuild.V1.CreateBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a build with the specified configuration.
      ///
      /// This method returns a long-running `Operation`, which includes the build
      /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
      /// `SUCCESS` or `FAILURE`).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateBuild(global::Google.Cloud.CloudBuild.V1.CreateBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBuild, null, options, request);
      }
      /// <summary>
      /// Starts a build with the specified configuration.
      ///
      /// This method returns a long-running `Operation`, which includes the build
      /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
      /// `SUCCESS` or `FAILURE`).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateBuildAsync(global::Google.Cloud.CloudBuild.V1.CreateBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a build with the specified configuration.
      ///
      /// This method returns a long-running `Operation`, which includes the build
      /// ID. Pass the build ID to `GetBuild` to determine the build status (such as
      /// `SUCCESS` or `FAILURE`).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateBuildAsync(global::Google.Cloud.CloudBuild.V1.CreateBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBuild, null, options, request);
      }
      /// <summary>
      /// Returns information about a previously requested build.
      ///
      /// The `Build` that is returned includes its status (such as `SUCCESS`,
      /// `FAILURE`, or `WORKING`), and timing information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.Build GetBuild(global::Google.Cloud.CloudBuild.V1.GetBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about a previously requested build.
      ///
      /// The `Build` that is returned includes its status (such as `SUCCESS`,
      /// `FAILURE`, or `WORKING`), and timing information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.Build GetBuild(global::Google.Cloud.CloudBuild.V1.GetBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBuild, null, options, request);
      }
      /// <summary>
      /// Returns information about a previously requested build.
      ///
      /// The `Build` that is returned includes its status (such as `SUCCESS`,
      /// `FAILURE`, or `WORKING`), and timing information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.Build> GetBuildAsync(global::Google.Cloud.CloudBuild.V1.GetBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about a previously requested build.
      ///
      /// The `Build` that is returned includes its status (such as `SUCCESS`,
      /// `FAILURE`, or `WORKING`), and timing information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.Build> GetBuildAsync(global::Google.Cloud.CloudBuild.V1.GetBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBuild, null, options, request);
      }
      /// <summary>
      /// Lists previously requested builds.
      ///
      /// Previously requested builds may still be in-progress, or may have finished
      /// successfully or unsuccessfully.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.ListBuildsResponse ListBuilds(global::Google.Cloud.CloudBuild.V1.ListBuildsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuilds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists previously requested builds.
      ///
      /// Previously requested builds may still be in-progress, or may have finished
      /// successfully or unsuccessfully.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.ListBuildsResponse ListBuilds(global::Google.Cloud.CloudBuild.V1.ListBuildsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBuilds, null, options, request);
      }
      /// <summary>
      /// Lists previously requested builds.
      ///
      /// Previously requested builds may still be in-progress, or may have finished
      /// successfully or unsuccessfully.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.ListBuildsResponse> ListBuildsAsync(global::Google.Cloud.CloudBuild.V1.ListBuildsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuildsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists previously requested builds.
      ///
      /// Previously requested builds may still be in-progress, or may have finished
      /// successfully or unsuccessfully.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.ListBuildsResponse> ListBuildsAsync(global::Google.Cloud.CloudBuild.V1.ListBuildsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBuilds, null, options, request);
      }
      /// <summary>
      /// Cancels a build in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.Build CancelBuild(global::Google.Cloud.CloudBuild.V1.CancelBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelBuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels a build in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.Build CancelBuild(global::Google.Cloud.CloudBuild.V1.CancelBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelBuild, null, options, request);
      }
      /// <summary>
      /// Cancels a build in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.Build> CancelBuildAsync(global::Google.Cloud.CloudBuild.V1.CancelBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelBuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels a build in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.Build> CancelBuildAsync(global::Google.Cloud.CloudBuild.V1.CancelBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelBuild, null, options, request);
      }
      /// <summary>
      /// Creates a new build based on the specified build.
      ///
      /// This method creates a new build using the original build request, which may
      /// or may not result in an identical build.
      ///
      /// For triggered builds:
      ///
      /// * Triggered builds resolve to a precise revision; therefore a retry of a
      /// triggered build will result in a build that uses the same revision.
      ///
      /// For non-triggered builds that specify `RepoSource`:
      ///
      /// * If the original build built from the tip of a branch, the retried build
      /// will build from the tip of that branch, which may not be the same revision
      /// as the original build.
      /// * If the original build specified a commit sha or revision ID, the retried
      /// build will use the identical source.
      ///
      /// For builds that specify `StorageSource`:
      ///
      /// * If the original build pulled source from Cloud Storage without
      /// specifying the generation of the object, the new build will use the current
      /// object, which may be different from the original build source.
      /// * If the original build pulled source from Cloud Storage and specified the
      /// generation of the object, the new build will attempt to use the same
      /// object, which may or may not be available depending on the bucket's
      /// lifecycle management settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RetryBuild(global::Google.Cloud.CloudBuild.V1.RetryBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetryBuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new build based on the specified build.
      ///
      /// This method creates a new build using the original build request, which may
      /// or may not result in an identical build.
      ///
      /// For triggered builds:
      ///
      /// * Triggered builds resolve to a precise revision; therefore a retry of a
      /// triggered build will result in a build that uses the same revision.
      ///
      /// For non-triggered builds that specify `RepoSource`:
      ///
      /// * If the original build built from the tip of a branch, the retried build
      /// will build from the tip of that branch, which may not be the same revision
      /// as the original build.
      /// * If the original build specified a commit sha or revision ID, the retried
      /// build will use the identical source.
      ///
      /// For builds that specify `StorageSource`:
      ///
      /// * If the original build pulled source from Cloud Storage without
      /// specifying the generation of the object, the new build will use the current
      /// object, which may be different from the original build source.
      /// * If the original build pulled source from Cloud Storage and specified the
      /// generation of the object, the new build will attempt to use the same
      /// object, which may or may not be available depending on the bucket's
      /// lifecycle management settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RetryBuild(global::Google.Cloud.CloudBuild.V1.RetryBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RetryBuild, null, options, request);
      }
      /// <summary>
      /// Creates a new build based on the specified build.
      ///
      /// This method creates a new build using the original build request, which may
      /// or may not result in an identical build.
      ///
      /// For triggered builds:
      ///
      /// * Triggered builds resolve to a precise revision; therefore a retry of a
      /// triggered build will result in a build that uses the same revision.
      ///
      /// For non-triggered builds that specify `RepoSource`:
      ///
      /// * If the original build built from the tip of a branch, the retried build
      /// will build from the tip of that branch, which may not be the same revision
      /// as the original build.
      /// * If the original build specified a commit sha or revision ID, the retried
      /// build will use the identical source.
      ///
      /// For builds that specify `StorageSource`:
      ///
      /// * If the original build pulled source from Cloud Storage without
      /// specifying the generation of the object, the new build will use the current
      /// object, which may be different from the original build source.
      /// * If the original build pulled source from Cloud Storage and specified the
      /// generation of the object, the new build will attempt to use the same
      /// object, which may or may not be available depending on the bucket's
      /// lifecycle management settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RetryBuildAsync(global::Google.Cloud.CloudBuild.V1.RetryBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetryBuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new build based on the specified build.
      ///
      /// This method creates a new build using the original build request, which may
      /// or may not result in an identical build.
      ///
      /// For triggered builds:
      ///
      /// * Triggered builds resolve to a precise revision; therefore a retry of a
      /// triggered build will result in a build that uses the same revision.
      ///
      /// For non-triggered builds that specify `RepoSource`:
      ///
      /// * If the original build built from the tip of a branch, the retried build
      /// will build from the tip of that branch, which may not be the same revision
      /// as the original build.
      /// * If the original build specified a commit sha or revision ID, the retried
      /// build will use the identical source.
      ///
      /// For builds that specify `StorageSource`:
      ///
      /// * If the original build pulled source from Cloud Storage without
      /// specifying the generation of the object, the new build will use the current
      /// object, which may be different from the original build source.
      /// * If the original build pulled source from Cloud Storage and specified the
      /// generation of the object, the new build will attempt to use the same
      /// object, which may or may not be available depending on the bucket's
      /// lifecycle management settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RetryBuildAsync(global::Google.Cloud.CloudBuild.V1.RetryBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RetryBuild, null, options, request);
      }
      /// <summary>
      /// Approves or rejects a pending build.
      ///
      /// If approved, the returned LRO will be analogous to the LRO returned from
      /// a CreateBuild call.
      ///
      /// If rejected, the returned LRO will be immediately done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ApproveBuild(global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApproveBuild(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Approves or rejects a pending build.
      ///
      /// If approved, the returned LRO will be analogous to the LRO returned from
      /// a CreateBuild call.
      ///
      /// If rejected, the returned LRO will be immediately done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ApproveBuild(global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ApproveBuild, null, options, request);
      }
      /// <summary>
      /// Approves or rejects a pending build.
      ///
      /// If approved, the returned LRO will be analogous to the LRO returned from
      /// a CreateBuild call.
      ///
      /// If rejected, the returned LRO will be immediately done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ApproveBuildAsync(global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ApproveBuildAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Approves or rejects a pending build.
      ///
      /// If approved, the returned LRO will be analogous to the LRO returned from
      /// a CreateBuild call.
      ///
      /// If rejected, the returned LRO will be immediately done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ApproveBuildAsync(global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ApproveBuild, null, options, request);
      }
      /// <summary>
      /// Creates a new `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.BuildTrigger CreateBuildTrigger(global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBuildTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.BuildTrigger CreateBuildTrigger(global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Creates a new `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.BuildTrigger> CreateBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBuildTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.BuildTrigger> CreateBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Returns information about a `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.BuildTrigger GetBuildTrigger(global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBuildTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about a `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.BuildTrigger GetBuildTrigger(global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Returns information about a `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.BuildTrigger> GetBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBuildTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about a `BuildTrigger`.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.BuildTrigger> GetBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Lists existing `BuildTrigger`s.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse ListBuildTriggers(global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuildTriggers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists existing `BuildTrigger`s.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse ListBuildTriggers(global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBuildTriggers, null, options, request);
      }
      /// <summary>
      /// Lists existing `BuildTrigger`s.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse> ListBuildTriggersAsync(global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuildTriggersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists existing `BuildTrigger`s.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse> ListBuildTriggersAsync(global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBuildTriggers, null, options, request);
      }
      /// <summary>
      /// Deletes a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBuildTrigger(global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBuildTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBuildTrigger(global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Deletes a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBuildTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Updates a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.BuildTrigger UpdateBuildTrigger(global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBuildTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.BuildTrigger UpdateBuildTrigger(global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Updates a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.BuildTrigger> UpdateBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBuildTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `BuildTrigger` by its project ID and trigger ID.
      ///
      /// This API is experimental.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.BuildTrigger> UpdateBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Runs a `BuildTrigger` at a particular source revision.
      ///
      /// To run a regional or global trigger, use the POST request
      /// that includes the location endpoint in the path (ex.
      /// v1/projects/{projectId}/locations/{region}/triggers/{triggerId}:run). The
      /// POST request that does not include the location endpoint in the path can
      /// only be used when running global triggers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunBuildTrigger(global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunBuildTrigger(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Runs a `BuildTrigger` at a particular source revision.
      ///
      /// To run a regional or global trigger, use the POST request
      /// that includes the location endpoint in the path (ex.
      /// v1/projects/{projectId}/locations/{region}/triggers/{triggerId}:run). The
      /// POST request that does not include the location endpoint in the path can
      /// only be used when running global triggers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunBuildTrigger(global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunBuildTrigger, null, options, request);
      }
      /// <summary>
      /// Runs a `BuildTrigger` at a particular source revision.
      ///
      /// To run a regional or global trigger, use the POST request
      /// that includes the location endpoint in the path (ex.
      /// v1/projects/{projectId}/locations/{region}/triggers/{triggerId}:run). The
      /// POST request that does not include the location endpoint in the path can
      /// only be used when running global triggers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunBuildTriggerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Runs a `BuildTrigger` at a particular source revision.
      ///
      /// To run a regional or global trigger, use the POST request
      /// that includes the location endpoint in the path (ex.
      /// v1/projects/{projectId}/locations/{region}/triggers/{triggerId}:run). The
      /// POST request that does not include the location endpoint in the path can
      /// only be used when running global triggers.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunBuildTriggerAsync(global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunBuildTrigger, null, options, request);
      }
      /// <summary>
      /// ReceiveTriggerWebhook [Experimental] is called when the API receives a
      /// webhook request targeted at a specific trigger.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse ReceiveTriggerWebhook(global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceiveTriggerWebhook(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReceiveTriggerWebhook [Experimental] is called when the API receives a
      /// webhook request targeted at a specific trigger.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse ReceiveTriggerWebhook(global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReceiveTriggerWebhook, null, options, request);
      }
      /// <summary>
      /// ReceiveTriggerWebhook [Experimental] is called when the API receives a
      /// webhook request targeted at a specific trigger.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse> ReceiveTriggerWebhookAsync(global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReceiveTriggerWebhookAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReceiveTriggerWebhook [Experimental] is called when the API receives a
      /// webhook request targeted at a specific trigger.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse> ReceiveTriggerWebhookAsync(global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReceiveTriggerWebhook, null, options, request);
      }
      /// <summary>
      /// Creates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkerPool(global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkerPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateWorkerPool(global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWorkerPool, null, options, request);
      }
      /// <summary>
      /// Creates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkerPoolAsync(global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWorkerPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateWorkerPoolAsync(global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWorkerPool, null, options, request);
      }
      /// <summary>
      /// Returns details of a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.WorkerPool GetWorkerPool(global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkerPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns details of a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.WorkerPool GetWorkerPool(global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkerPool, null, options, request);
      }
      /// <summary>
      /// Returns details of a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.WorkerPool> GetWorkerPoolAsync(global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkerPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns details of a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.WorkerPool> GetWorkerPoolAsync(global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkerPool, null, options, request);
      }
      /// <summary>
      /// Deletes a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteWorkerPool(global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkerPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteWorkerPool(global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWorkerPool, null, options, request);
      }
      /// <summary>
      /// Deletes a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteWorkerPoolAsync(global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWorkerPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteWorkerPoolAsync(global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWorkerPool, null, options, request);
      }
      /// <summary>
      /// Updates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateWorkerPool(global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkerPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateWorkerPool(global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWorkerPool, null, options, request);
      }
      /// <summary>
      /// Updates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateWorkerPoolAsync(global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWorkerPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `WorkerPool`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateWorkerPoolAsync(global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWorkerPool, null, options, request);
      }
      /// <summary>
      /// Lists `WorkerPool`s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse ListWorkerPools(global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkerPools(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists `WorkerPool`s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse ListWorkerPools(global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWorkerPools, null, options, request);
      }
      /// <summary>
      /// Lists `WorkerPool`s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse> ListWorkerPoolsAsync(global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkerPoolsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists `WorkerPool`s.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse> ListWorkerPoolsAsync(global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWorkerPools, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CloudBuildClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CloudBuildClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CloudBuildBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateBuild, serviceImpl.CreateBuild)
          .AddMethod(__Method_GetBuild, serviceImpl.GetBuild)
          .AddMethod(__Method_ListBuilds, serviceImpl.ListBuilds)
          .AddMethod(__Method_CancelBuild, serviceImpl.CancelBuild)
          .AddMethod(__Method_RetryBuild, serviceImpl.RetryBuild)
          .AddMethod(__Method_ApproveBuild, serviceImpl.ApproveBuild)
          .AddMethod(__Method_CreateBuildTrigger, serviceImpl.CreateBuildTrigger)
          .AddMethod(__Method_GetBuildTrigger, serviceImpl.GetBuildTrigger)
          .AddMethod(__Method_ListBuildTriggers, serviceImpl.ListBuildTriggers)
          .AddMethod(__Method_DeleteBuildTrigger, serviceImpl.DeleteBuildTrigger)
          .AddMethod(__Method_UpdateBuildTrigger, serviceImpl.UpdateBuildTrigger)
          .AddMethod(__Method_RunBuildTrigger, serviceImpl.RunBuildTrigger)
          .AddMethod(__Method_ReceiveTriggerWebhook, serviceImpl.ReceiveTriggerWebhook)
          .AddMethod(__Method_CreateWorkerPool, serviceImpl.CreateWorkerPool)
          .AddMethod(__Method_GetWorkerPool, serviceImpl.GetWorkerPool)
          .AddMethod(__Method_DeleteWorkerPool, serviceImpl.DeleteWorkerPool)
          .AddMethod(__Method_UpdateWorkerPool, serviceImpl.UpdateWorkerPool)
          .AddMethod(__Method_ListWorkerPools, serviceImpl.ListWorkerPools).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CloudBuildBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateBuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.CreateBuildRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateBuild));
      serviceBinder.AddMethod(__Method_GetBuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.GetBuildRequest, global::Google.Cloud.CloudBuild.V1.Build>(serviceImpl.GetBuild));
      serviceBinder.AddMethod(__Method_ListBuilds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.ListBuildsRequest, global::Google.Cloud.CloudBuild.V1.ListBuildsResponse>(serviceImpl.ListBuilds));
      serviceBinder.AddMethod(__Method_CancelBuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.CancelBuildRequest, global::Google.Cloud.CloudBuild.V1.Build>(serviceImpl.CancelBuild));
      serviceBinder.AddMethod(__Method_RetryBuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.RetryBuildRequest, global::Google.LongRunning.Operation>(serviceImpl.RetryBuild));
      serviceBinder.AddMethod(__Method_ApproveBuild, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.ApproveBuildRequest, global::Google.LongRunning.Operation>(serviceImpl.ApproveBuild));
      serviceBinder.AddMethod(__Method_CreateBuildTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.CreateBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger>(serviceImpl.CreateBuildTrigger));
      serviceBinder.AddMethod(__Method_GetBuildTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.GetBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger>(serviceImpl.GetBuildTrigger));
      serviceBinder.AddMethod(__Method_ListBuildTriggers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.ListBuildTriggersRequest, global::Google.Cloud.CloudBuild.V1.ListBuildTriggersResponse>(serviceImpl.ListBuildTriggers));
      serviceBinder.AddMethod(__Method_DeleteBuildTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.DeleteBuildTriggerRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteBuildTrigger));
      serviceBinder.AddMethod(__Method_UpdateBuildTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.UpdateBuildTriggerRequest, global::Google.Cloud.CloudBuild.V1.BuildTrigger>(serviceImpl.UpdateBuildTrigger));
      serviceBinder.AddMethod(__Method_RunBuildTrigger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.RunBuildTriggerRequest, global::Google.LongRunning.Operation>(serviceImpl.RunBuildTrigger));
      serviceBinder.AddMethod(__Method_ReceiveTriggerWebhook, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookRequest, global::Google.Cloud.CloudBuild.V1.ReceiveTriggerWebhookResponse>(serviceImpl.ReceiveTriggerWebhook));
      serviceBinder.AddMethod(__Method_CreateWorkerPool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.CreateWorkerPoolRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateWorkerPool));
      serviceBinder.AddMethod(__Method_GetWorkerPool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.GetWorkerPoolRequest, global::Google.Cloud.CloudBuild.V1.WorkerPool>(serviceImpl.GetWorkerPool));
      serviceBinder.AddMethod(__Method_DeleteWorkerPool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.DeleteWorkerPoolRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteWorkerPool));
      serviceBinder.AddMethod(__Method_UpdateWorkerPool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.UpdateWorkerPoolRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateWorkerPool));
      serviceBinder.AddMethod(__Method_ListWorkerPools, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsRequest, global::Google.Cloud.CloudBuild.V1.ListWorkerPoolsResponse>(serviceImpl.ListWorkerPools));
    }

  }
}
#endregion
