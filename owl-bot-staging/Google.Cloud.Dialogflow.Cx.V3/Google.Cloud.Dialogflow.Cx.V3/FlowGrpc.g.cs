// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/dialogflow/cx/v3/flow.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Dialogflow.Cx.V3 {
  /// <summary>
  /// Service for managing [Flows][google.cloud.dialogflow.cx.v3.Flow].
  /// </summary>
  public static partial class Flows
  {
    static readonly string __ServiceName = "google.cloud.dialogflow.cx.v3.Flows";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3_CreateFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.Flow> __Marshaller_google_cloud_dialogflow_cx_v3_Flow = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.Flow.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3_DeleteFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest> __Marshaller_google_cloud_dialogflow_cx_v3_ListFlowsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse> __Marshaller_google_cloud_dialogflow_cx_v3_ListFlowsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3_GetFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3_UpdateFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3_TrainFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3_ValidateFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> __Marshaller_google_cloud_dialogflow_cx_v3_FlowValidationResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest> __Marshaller_google_cloud_dialogflow_cx_v3_GetFlowValidationResultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3_ImportFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest> __Marshaller_google_cloud_dialogflow_cx_v3_ExportFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow> __Method_CreateFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3_CreateFlowRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3_Flow);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3_DeleteFlowRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest, global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse> __Method_ListFlows = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest, global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFlows",
        __Marshaller_google_cloud_dialogflow_cx_v3_ListFlowsRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3_ListFlowsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow> __Method_GetFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3_GetFlowRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3_Flow);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow> __Method_UpdateFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3_UpdateFlowRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3_Flow);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest, global::Google.LongRunning.Operation> __Method_TrainFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TrainFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3_TrainFlowRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> __Method_ValidateFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3_ValidateFlowRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3_FlowValidationResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest, global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> __Method_GetFlowValidationResult = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest, global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFlowValidationResult",
        __Marshaller_google_cloud_dialogflow_cx_v3_GetFlowValidationResultRequest,
        __Marshaller_google_cloud_dialogflow_cx_v3_FlowValidationResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest, global::Google.LongRunning.Operation> __Method_ImportFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3_ImportFlowRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest, global::Google.LongRunning.Operation> __Method_ExportFlow = new grpc::Method<global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportFlow",
        __Marshaller_google_cloud_dialogflow_cx_v3_ExportFlowRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Dialogflow.Cx.V3.FlowReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Flows</summary>
    [grpc::BindServiceMethod(typeof(Flows), "BindService")]
    public abstract partial class FlowsBase
    {
      /// <summary>
      /// Creates a flow in the specified agent.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3.Flow> CreateFlow(global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a specified flow.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFlow(global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the list of all flows in the specified agent.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse> ListFlows(global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the specified flow.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3.Flow> GetFlow(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the specified flow.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3.Flow> UpdateFlow(global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Trains the specified flow. Note that only the flow in 'draft' environment
      /// is trained.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> TrainFlow(global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Validates the specified flow and creates or updates validation results.
      /// Please call this API after the training is completed to get the complete
      /// validation results.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> ValidateFlow(global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the latest flow validation result. Flow validation is performed
      /// when ValidateFlow is called.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> GetFlowValidationResult(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports the specified flow to the specified agent from a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ImportFlowResponse][google.cloud.dialogflow.cx.v3.ImportFlowResponse]
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportFlow(global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Exports the specified flow to a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ExportFlowResponse][google.cloud.dialogflow.cx.v3.ExportFlowResponse]
      ///
      /// Note that resources (e.g. intents, entities, webhooks) that the flow
      /// references will also be exported.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportFlow(global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Flows</summary>
    public partial class FlowsClient : grpc::ClientBase<FlowsClient>
    {
      /// <summary>Creates a new client for Flows</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FlowsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Flows that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public FlowsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FlowsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected FlowsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a flow in the specified agent.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.Flow CreateFlow(global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a flow in the specified agent.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.Flow CreateFlow(global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFlow, null, options, request);
      }
      /// <summary>
      /// Creates a flow in the specified agent.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.Flow> CreateFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a flow in the specified agent.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.Flow> CreateFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFlow, null, options, request);
      }
      /// <summary>
      /// Deletes a specified flow.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteFlow(global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a specified flow.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteFlow(global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteFlow, null, options, request);
      }
      /// <summary>
      /// Deletes a specified flow.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a specified flow.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteFlow, null, options, request);
      }
      /// <summary>
      /// Returns the list of all flows in the specified agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse ListFlows(global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFlows(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of all flows in the specified agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse ListFlows(global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFlows, null, options, request);
      }
      /// <summary>
      /// Returns the list of all flows in the specified agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse> ListFlowsAsync(global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFlowsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of all flows in the specified agent.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse> ListFlowsAsync(global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFlows, null, options, request);
      }
      /// <summary>
      /// Retrieves the specified flow.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.Flow GetFlow(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the specified flow.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.Flow GetFlow(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFlow, null, options, request);
      }
      /// <summary>
      /// Retrieves the specified flow.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.Flow> GetFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the specified flow.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.Flow> GetFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFlow, null, options, request);
      }
      /// <summary>
      /// Updates the specified flow.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.Flow UpdateFlow(global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified flow.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.Flow UpdateFlow(global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFlow, null, options, request);
      }
      /// <summary>
      /// Updates the specified flow.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.Flow> UpdateFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified flow.
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.Flow> UpdateFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFlow, null, options, request);
      }
      /// <summary>
      /// Trains the specified flow. Note that only the flow in 'draft' environment
      /// is trained.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TrainFlow(global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrainFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Trains the specified flow. Note that only the flow in 'draft' environment
      /// is trained.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TrainFlow(global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TrainFlow, null, options, request);
      }
      /// <summary>
      /// Trains the specified flow. Note that only the flow in 'draft' environment
      /// is trained.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TrainFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TrainFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Trains the specified flow. Note that only the flow in 'draft' environment
      /// is trained.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`: An [Empty
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TrainFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TrainFlow, null, options, request);
      }
      /// <summary>
      /// Validates the specified flow and creates or updates validation results.
      /// Please call this API after the training is completed to get the complete
      /// validation results.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult ValidateFlow(global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validates the specified flow and creates or updates validation results.
      /// Please call this API after the training is completed to get the complete
      /// validation results.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult ValidateFlow(global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateFlow, null, options, request);
      }
      /// <summary>
      /// Validates the specified flow and creates or updates validation results.
      /// Please call this API after the training is completed to get the complete
      /// validation results.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> ValidateFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validates the specified flow and creates or updates validation results.
      /// Please call this API after the training is completed to get the complete
      /// validation results.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> ValidateFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateFlow, null, options, request);
      }
      /// <summary>
      /// Gets the latest flow validation result. Flow validation is performed
      /// when ValidateFlow is called.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult GetFlowValidationResult(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFlowValidationResult(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the latest flow validation result. Flow validation is performed
      /// when ValidateFlow is called.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult GetFlowValidationResult(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFlowValidationResult, null, options, request);
      }
      /// <summary>
      /// Gets the latest flow validation result. Flow validation is performed
      /// when ValidateFlow is called.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> GetFlowValidationResultAsync(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFlowValidationResultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the latest flow validation result. Flow validation is performed
      /// when ValidateFlow is called.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult> GetFlowValidationResultAsync(global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFlowValidationResult, null, options, request);
      }
      /// <summary>
      /// Imports the specified flow to the specified agent from a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ImportFlowResponse][google.cloud.dialogflow.cx.v3.ImportFlowResponse]
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportFlow(global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports the specified flow to the specified agent from a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ImportFlowResponse][google.cloud.dialogflow.cx.v3.ImportFlowResponse]
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportFlow(global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportFlow, null, options, request);
      }
      /// <summary>
      /// Imports the specified flow to the specified agent from a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ImportFlowResponse][google.cloud.dialogflow.cx.v3.ImportFlowResponse]
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports the specified flow to the specified agent from a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ImportFlowResponse][google.cloud.dialogflow.cx.v3.ImportFlowResponse]
      ///
      /// Note: You should always train a flow prior to sending it queries. See the
      /// [training
      /// documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportFlow, null, options, request);
      }
      /// <summary>
      /// Exports the specified flow to a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ExportFlowResponse][google.cloud.dialogflow.cx.v3.ExportFlowResponse]
      ///
      /// Note that resources (e.g. intents, entities, webhooks) that the flow
      /// references will also be exported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportFlow(global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports the specified flow to a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ExportFlowResponse][google.cloud.dialogflow.cx.v3.ExportFlowResponse]
      ///
      /// Note that resources (e.g. intents, entities, webhooks) that the flow
      /// references will also be exported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportFlow(global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportFlow, null, options, request);
      }
      /// <summary>
      /// Exports the specified flow to a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ExportFlowResponse][google.cloud.dialogflow.cx.v3.ExportFlowResponse]
      ///
      /// Note that resources (e.g. intents, entities, webhooks) that the flow
      /// references will also be exported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports the specified flow to a binary file.
      ///
      /// This method is a [long-running
      /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
      /// The returned `Operation` type has the following method-specific fields:
      ///
      /// - `metadata`: An empty [Struct
      ///   message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
      /// - `response`:
      /// [ExportFlowResponse][google.cloud.dialogflow.cx.v3.ExportFlowResponse]
      ///
      /// Note that resources (e.g. intents, entities, webhooks) that the flow
      /// references will also be exported.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportFlowAsync(global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportFlow, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override FlowsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new FlowsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(FlowsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateFlow, serviceImpl.CreateFlow)
          .AddMethod(__Method_DeleteFlow, serviceImpl.DeleteFlow)
          .AddMethod(__Method_ListFlows, serviceImpl.ListFlows)
          .AddMethod(__Method_GetFlow, serviceImpl.GetFlow)
          .AddMethod(__Method_UpdateFlow, serviceImpl.UpdateFlow)
          .AddMethod(__Method_TrainFlow, serviceImpl.TrainFlow)
          .AddMethod(__Method_ValidateFlow, serviceImpl.ValidateFlow)
          .AddMethod(__Method_GetFlowValidationResult, serviceImpl.GetFlowValidationResult)
          .AddMethod(__Method_ImportFlow, serviceImpl.ImportFlow)
          .AddMethod(__Method_ExportFlow, serviceImpl.ExportFlow).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, FlowsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.CreateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow>(serviceImpl.CreateFlow));
      serviceBinder.AddMethod(__Method_DeleteFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.DeleteFlowRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteFlow));
      serviceBinder.AddMethod(__Method_ListFlows, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsRequest, global::Google.Cloud.Dialogflow.Cx.V3.ListFlowsResponse>(serviceImpl.ListFlows));
      serviceBinder.AddMethod(__Method_GetFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.GetFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow>(serviceImpl.GetFlow));
      serviceBinder.AddMethod(__Method_UpdateFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.UpdateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.Flow>(serviceImpl.UpdateFlow));
      serviceBinder.AddMethod(__Method_TrainFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.TrainFlowRequest, global::Google.LongRunning.Operation>(serviceImpl.TrainFlow));
      serviceBinder.AddMethod(__Method_ValidateFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.ValidateFlowRequest, global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult>(serviceImpl.ValidateFlow));
      serviceBinder.AddMethod(__Method_GetFlowValidationResult, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.GetFlowValidationResultRequest, global::Google.Cloud.Dialogflow.Cx.V3.FlowValidationResult>(serviceImpl.GetFlowValidationResult));
      serviceBinder.AddMethod(__Method_ImportFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.ImportFlowRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportFlow));
      serviceBinder.AddMethod(__Method_ExportFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.Cx.V3.ExportFlowRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportFlow));
    }

  }
}
#endregion
