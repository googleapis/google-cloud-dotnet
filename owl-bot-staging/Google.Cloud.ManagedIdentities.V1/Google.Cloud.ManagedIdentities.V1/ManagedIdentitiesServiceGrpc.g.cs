// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/managedidentities/v1/managed_identities_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.ManagedIdentities.V1 {
  /// <summary>
  /// API Overview
  ///
  /// The `managedidentites.googleapis.com` service implements the Google Cloud
  /// Managed Identites API for identity services
  /// (e.g. Microsoft Active Directory).
  ///
  /// The Managed Identities service provides methods to manage
  /// (create/read/update/delete) domains, reset managed identities admin password,
  /// add/remove domain controllers in GCP regions and add/remove VPC peering.
  ///
  /// Data Model
  ///
  /// The Managed Identities service exposes the following resources:
  ///
  /// * Locations as global, named as follows:
  ///   `projects/{project_id}/locations/global`.
  ///
  /// * Domains, named as follows:
  ///   `/projects/{project_id}/locations/global/domain/{domain_name}`.
  ///
  /// The `{domain_name}` refers to fully qualified domain name in the customer
  /// project e.g. mydomain.myorganization.com, with the following restrictions:
  ///
  ///  * Must contain only lowercase letters, numbers, periods and hyphens.
  ///  * Must start with a letter.
  ///  * Must contain between 2-64 characters.
  ///  * Must end with a number or a letter.
  ///  * Must not start with period.
  ///  * First segement length (mydomain form example above) shouldn't exceed
  ///    15 chars.
  ///  * The last segment cannot be fully numeric.
  ///  * Must be unique within the customer project.
  /// </summary>
  public static partial class ManagedIdentitiesService
  {
    static readonly string __ServiceName = "google.cloud.managedidentities.v1.ManagedIdentitiesService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest> __Marshaller_google_cloud_managedidentities_v1_CreateMicrosoftAdDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest> __Marshaller_google_cloud_managedidentities_v1_ResetAdminPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse> __Marshaller_google_cloud_managedidentities_v1_ResetAdminPasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest> __Marshaller_google_cloud_managedidentities_v1_ListDomainsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse> __Marshaller_google_cloud_managedidentities_v1_ListDomainsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest> __Marshaller_google_cloud_managedidentities_v1_GetDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.Domain> __Marshaller_google_cloud_managedidentities_v1_Domain = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.Domain.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest> __Marshaller_google_cloud_managedidentities_v1_UpdateDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest> __Marshaller_google_cloud_managedidentities_v1_DeleteDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest> __Marshaller_google_cloud_managedidentities_v1_AttachTrustRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest> __Marshaller_google_cloud_managedidentities_v1_ReconfigureTrustRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest> __Marshaller_google_cloud_managedidentities_v1_DetachTrustRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest> __Marshaller_google_cloud_managedidentities_v1_ValidateTrustRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest, global::Google.LongRunning.Operation> __Method_CreateMicrosoftAdDomain = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateMicrosoftAdDomain",
        __Marshaller_google_cloud_managedidentities_v1_CreateMicrosoftAdDomainRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest, global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse> __Method_ResetAdminPassword = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest, global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetAdminPassword",
        __Marshaller_google_cloud_managedidentities_v1_ResetAdminPasswordRequest,
        __Marshaller_google_cloud_managedidentities_v1_ResetAdminPasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest, global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse> __Method_ListDomains = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest, global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDomains",
        __Marshaller_google_cloud_managedidentities_v1_ListDomainsRequest,
        __Marshaller_google_cloud_managedidentities_v1_ListDomainsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest, global::Google.Cloud.ManagedIdentities.V1.Domain> __Method_GetDomain = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest, global::Google.Cloud.ManagedIdentities.V1.Domain>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDomain",
        __Marshaller_google_cloud_managedidentities_v1_GetDomainRequest,
        __Marshaller_google_cloud_managedidentities_v1_Domain);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest, global::Google.LongRunning.Operation> __Method_UpdateDomain = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateDomain",
        __Marshaller_google_cloud_managedidentities_v1_UpdateDomainRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest, global::Google.LongRunning.Operation> __Method_DeleteDomain = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDomain",
        __Marshaller_google_cloud_managedidentities_v1_DeleteDomainRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest, global::Google.LongRunning.Operation> __Method_AttachTrust = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AttachTrust",
        __Marshaller_google_cloud_managedidentities_v1_AttachTrustRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest, global::Google.LongRunning.Operation> __Method_ReconfigureTrust = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReconfigureTrust",
        __Marshaller_google_cloud_managedidentities_v1_ReconfigureTrustRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest, global::Google.LongRunning.Operation> __Method_DetachTrust = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DetachTrust",
        __Marshaller_google_cloud_managedidentities_v1_DetachTrustRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest, global::Google.LongRunning.Operation> __Method_ValidateTrust = new grpc::Method<global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateTrust",
        __Marshaller_google_cloud_managedidentities_v1_ValidateTrustRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.ManagedIdentities.V1.ManagedIdentitiesServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ManagedIdentitiesService</summary>
    [grpc::BindServiceMethod(typeof(ManagedIdentitiesService), "BindService")]
    public abstract partial class ManagedIdentitiesServiceBase
    {
      /// <summary>
      /// Creates a Microsoft AD domain.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateMicrosoftAdDomain(global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resets a domain's administrator password.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse> ResetAdminPassword(global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists domains in a project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse> ListDomains(global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets information about a domain.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.ManagedIdentities.V1.Domain> GetDomain(global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the metadata and configuration of a domain.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateDomain(global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a domain.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteDomain(global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Adds an AD trust to a domain.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> AttachTrust(global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the DNS conditional forwarder.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ReconfigureTrust(global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Removes an AD trust.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DetachTrust(global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Validates a trust state, that the target domain is reachable, and that the
      /// target domain is able to accept incoming trust requests.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ValidateTrust(global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ManagedIdentitiesService</summary>
    public partial class ManagedIdentitiesServiceClient : grpc::ClientBase<ManagedIdentitiesServiceClient>
    {
      /// <summary>Creates a new client for ManagedIdentitiesService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ManagedIdentitiesServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ManagedIdentitiesService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ManagedIdentitiesServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ManagedIdentitiesServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ManagedIdentitiesServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a Microsoft AD domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateMicrosoftAdDomain(global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMicrosoftAdDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Microsoft AD domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateMicrosoftAdDomain(global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateMicrosoftAdDomain, null, options, request);
      }
      /// <summary>
      /// Creates a Microsoft AD domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateMicrosoftAdDomainAsync(global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMicrosoftAdDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Microsoft AD domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateMicrosoftAdDomainAsync(global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateMicrosoftAdDomain, null, options, request);
      }
      /// <summary>
      /// Resets a domain's administrator password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse ResetAdminPassword(global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetAdminPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resets a domain's administrator password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse ResetAdminPassword(global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetAdminPassword, null, options, request);
      }
      /// <summary>
      /// Resets a domain's administrator password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse> ResetAdminPasswordAsync(global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetAdminPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resets a domain's administrator password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse> ResetAdminPasswordAsync(global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetAdminPassword, null, options, request);
      }
      /// <summary>
      /// Lists domains in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse ListDomains(global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDomains(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists domains in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse ListDomains(global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDomains, null, options, request);
      }
      /// <summary>
      /// Lists domains in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse> ListDomainsAsync(global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListDomainsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists domains in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse> ListDomainsAsync(global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDomains, null, options, request);
      }
      /// <summary>
      /// Gets information about a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ManagedIdentities.V1.Domain GetDomain(global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.ManagedIdentities.V1.Domain GetDomain(global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDomain, null, options, request);
      }
      /// <summary>
      /// Gets information about a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ManagedIdentities.V1.Domain> GetDomainAsync(global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.ManagedIdentities.V1.Domain> GetDomainAsync(global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDomain, null, options, request);
      }
      /// <summary>
      /// Updates the metadata and configuration of a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateDomain(global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the metadata and configuration of a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateDomain(global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateDomain, null, options, request);
      }
      /// <summary>
      /// Updates the metadata and configuration of a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateDomainAsync(global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the metadata and configuration of a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateDomainAsync(global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateDomain, null, options, request);
      }
      /// <summary>
      /// Deletes a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteDomain(global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteDomain(global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDomain, null, options, request);
      }
      /// <summary>
      /// Deletes a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteDomainAsync(global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteDomainAsync(global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDomain, null, options, request);
      }
      /// <summary>
      /// Adds an AD trust to a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AttachTrust(global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttachTrust(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Adds an AD trust to a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AttachTrust(global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AttachTrust, null, options, request);
      }
      /// <summary>
      /// Adds an AD trust to a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AttachTrustAsync(global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttachTrustAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Adds an AD trust to a domain.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AttachTrustAsync(global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AttachTrust, null, options, request);
      }
      /// <summary>
      /// Updates the DNS conditional forwarder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ReconfigureTrust(global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReconfigureTrust(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the DNS conditional forwarder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ReconfigureTrust(global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReconfigureTrust, null, options, request);
      }
      /// <summary>
      /// Updates the DNS conditional forwarder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ReconfigureTrustAsync(global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReconfigureTrustAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the DNS conditional forwarder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ReconfigureTrustAsync(global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReconfigureTrust, null, options, request);
      }
      /// <summary>
      /// Removes an AD trust.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DetachTrust(global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DetachTrust(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Removes an AD trust.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DetachTrust(global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DetachTrust, null, options, request);
      }
      /// <summary>
      /// Removes an AD trust.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DetachTrustAsync(global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DetachTrustAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Removes an AD trust.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DetachTrustAsync(global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DetachTrust, null, options, request);
      }
      /// <summary>
      /// Validates a trust state, that the target domain is reachable, and that the
      /// target domain is able to accept incoming trust requests.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ValidateTrust(global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateTrust(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validates a trust state, that the target domain is reachable, and that the
      /// target domain is able to accept incoming trust requests.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ValidateTrust(global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateTrust, null, options, request);
      }
      /// <summary>
      /// Validates a trust state, that the target domain is reachable, and that the
      /// target domain is able to accept incoming trust requests.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ValidateTrustAsync(global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateTrustAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Validates a trust state, that the target domain is reachable, and that the
      /// target domain is able to accept incoming trust requests.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ValidateTrustAsync(global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateTrust, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ManagedIdentitiesServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ManagedIdentitiesServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ManagedIdentitiesServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateMicrosoftAdDomain, serviceImpl.CreateMicrosoftAdDomain)
          .AddMethod(__Method_ResetAdminPassword, serviceImpl.ResetAdminPassword)
          .AddMethod(__Method_ListDomains, serviceImpl.ListDomains)
          .AddMethod(__Method_GetDomain, serviceImpl.GetDomain)
          .AddMethod(__Method_UpdateDomain, serviceImpl.UpdateDomain)
          .AddMethod(__Method_DeleteDomain, serviceImpl.DeleteDomain)
          .AddMethod(__Method_AttachTrust, serviceImpl.AttachTrust)
          .AddMethod(__Method_ReconfigureTrust, serviceImpl.ReconfigureTrust)
          .AddMethod(__Method_DetachTrust, serviceImpl.DetachTrust)
          .AddMethod(__Method_ValidateTrust, serviceImpl.ValidateTrust).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ManagedIdentitiesServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateMicrosoftAdDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.CreateMicrosoftAdDomainRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateMicrosoftAdDomain));
      serviceBinder.AddMethod(__Method_ResetAdminPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordRequest, global::Google.Cloud.ManagedIdentities.V1.ResetAdminPasswordResponse>(serviceImpl.ResetAdminPassword));
      serviceBinder.AddMethod(__Method_ListDomains, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.ListDomainsRequest, global::Google.Cloud.ManagedIdentities.V1.ListDomainsResponse>(serviceImpl.ListDomains));
      serviceBinder.AddMethod(__Method_GetDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.GetDomainRequest, global::Google.Cloud.ManagedIdentities.V1.Domain>(serviceImpl.GetDomain));
      serviceBinder.AddMethod(__Method_UpdateDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.UpdateDomainRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateDomain));
      serviceBinder.AddMethod(__Method_DeleteDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.DeleteDomainRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteDomain));
      serviceBinder.AddMethod(__Method_AttachTrust, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.AttachTrustRequest, global::Google.LongRunning.Operation>(serviceImpl.AttachTrust));
      serviceBinder.AddMethod(__Method_ReconfigureTrust, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.ReconfigureTrustRequest, global::Google.LongRunning.Operation>(serviceImpl.ReconfigureTrust));
      serviceBinder.AddMethod(__Method_DetachTrust, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.DetachTrustRequest, global::Google.LongRunning.Operation>(serviceImpl.DetachTrust));
      serviceBinder.AddMethod(__Method_ValidateTrust, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.ManagedIdentities.V1.ValidateTrustRequest, global::Google.LongRunning.Operation>(serviceImpl.ValidateTrust));
    }

  }
}
#endregion
