// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/managedidentities/v1/resource.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.ManagedIdentities.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/managedidentities/v1/resource.proto</summary>
  public static partial class ResourceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/managedidentities/v1/resource.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjBnb29nbGUvY2xvdWQvbWFuYWdlZGlkZW50aXRpZXMvdjEvcmVzb3VyY2Uu",
            "cHJvdG8SIWdvb2dsZS5jbG91ZC5tYW5hZ2VkaWRlbnRpdGllcy52MRofZ29v",
            "Z2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9yZXNv",
            "dXJjZS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byKe",
            "BgoGRG9tYWluEhEKBG5hbWUYASABKAlCA+BBAhJKCgZsYWJlbHMYAiADKAsy",
            "NS5nb29nbGUuY2xvdWQubWFuYWdlZGlkZW50aXRpZXMudjEuRG9tYWluLkxh",
            "YmVsc0VudHJ5QgPgQQESIAoTYXV0aG9yaXplZF9uZXR3b3JrcxgDIAMoCUID",
            "4EEBEh4KEXJlc2VydmVkX2lwX3JhbmdlGAQgASgJQgPgQQISFgoJbG9jYXRp",
            "b25zGAUgAygJQgPgQQISEgoFYWRtaW4YBiABKAlCA+BBARIRCgRmcWRuGAog",
            "ASgJQgPgQQMSNAoLY3JlYXRlX3RpbWUYCyABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYDCABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSQwoFc3RhdGUYDSABKA4yLy5n",
            "b29nbGUuY2xvdWQubWFuYWdlZGlkZW50aXRpZXMudjEuRG9tYWluLlN0YXRl",
            "QgPgQQMSGwoOc3RhdHVzX21lc3NhZ2UYDiABKAlCA+BBAxI9CgZ0cnVzdHMY",
            "DyADKAsyKC5nb29nbGUuY2xvdWQubWFuYWdlZGlkZW50aXRpZXMudjEuVHJ1",
            "c3RCA+BBAxotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIo8BCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgwK",
            "CENSRUFUSU5HEAESCQoFUkVBRFkQAhIMCghVUERBVElORxADEgwKCERFTEVU",
            "SU5HEAQSDQoJUkVQQUlSSU5HEAUSGgoWUEVSRk9STUlOR19NQUlOVEVOQU5D",
            "RRAGEg8KC1VOQVZBSUxBQkxFEAc6ZupBYwonbWFuYWdlZGlkZW50aXRpZXMu",
            "Z29vZ2xlYXBpcy5jb20vRG9tYWluEjhwcm9qZWN0cy97cHJvamVjdH0vbG9j",
            "YXRpb25zL3tsb2NhdGlvbn0vZG9tYWlucy97ZG9tYWlufSLhBgoFVHJ1c3QS",
            "HwoSdGFyZ2V0X2RvbWFpbl9uYW1lGAEgASgJQgPgQQISSwoKdHJ1c3RfdHlw",
            "ZRgCIAEoDjIyLmdvb2dsZS5jbG91ZC5tYW5hZ2VkaWRlbnRpdGllcy52MS5U",
            "cnVzdC5UcnVzdFR5cGVCA+BBAhJVCg90cnVzdF9kaXJlY3Rpb24YAyABKA4y",
            "Ny5nb29nbGUuY2xvdWQubWFuYWdlZGlkZW50aXRpZXMudjEuVHJ1c3QuVHJ1",
            "c3REaXJlY3Rpb25CA+BBAhIlChhzZWxlY3RpdmVfYXV0aGVudGljYXRpb24Y",
            "BCABKAhCA+BBARIkChd0YXJnZXRfZG5zX2lwX2FkZHJlc3NlcxgFIAMoCUID",
            "4EECEiMKFnRydXN0X2hhbmRzaGFrZV9zZWNyZXQYBiABKAlCA+BBAhI0Cgtj",
            "cmVhdGVfdGltZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBC",
            "A+BBAxI0Cgt1cGRhdGVfdGltZRgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXBCA+BBAxJCCgVzdGF0ZRgJIAEoDjIuLmdvb2dsZS5jbG91ZC5t",
            "YW5hZ2VkaWRlbnRpdGllcy52MS5UcnVzdC5TdGF0ZUID4EEDEh4KEXN0YXRl",
            "X2Rlc2NyaXB0aW9uGAsgASgJQgPgQQMSQgoZbGFzdF90cnVzdF9oZWFydGJl",
            "YXRfdGltZRgMIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BB",
            "AyJpCgVTdGF0ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgwKCENSRUFUSU5H",
            "EAESDAoIVVBEQVRJTkcQAhIMCghERUxFVElORxADEg0KCUNPTk5FQ1RFRBAE",
            "EhAKDERJU0NPTk5FQ1RFRBAFIkEKCVRydXN0VHlwZRIaChZUUlVTVF9UWVBF",
            "X1VOU1BFQ0lGSUVEEAASCgoGRk9SRVNUEAESDAoIRVhURVJOQUwQAiJfCg5U",
            "cnVzdERpcmVjdGlvbhIfChtUUlVTVF9ESVJFQ1RJT05fVU5TUEVDSUZJRUQQ",
            "ABILCgdJTkJPVU5EEAESDAoIT1VUQk9VTkQQAhIRCg1CSURJUkVDVElPTkFM",
            "EANC/AEKJWNvbS5nb29nbGUuY2xvdWQubWFuYWdlZGlkZW50aXRpZXMudjFC",
            "DVJlc291cmNlUHJvdG9QAVpTY2xvdWQuZ29vZ2xlLmNvbS9nby9tYW5hZ2Vk",
            "aWRlbnRpdGllcy9hcGl2MS9tYW5hZ2VkaWRlbnRpdGllc3BiO21hbmFnZWRp",
            "ZGVudGl0aWVzcGKqAiFHb29nbGUuQ2xvdWQuTWFuYWdlZElkZW50aXRpZXMu",
            "VjHKAiFHb29nbGVcQ2xvdWRcTWFuYWdlZElkZW50aXRpZXNcVjHqAiRHb29n",
            "bGU6OkNsb3VkOjpNYW5hZ2VkSWRlbnRpdGllczo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedIdentities.V1.Domain), global::Google.Cloud.ManagedIdentities.V1.Domain.Parser, new[]{ "Name", "Labels", "AuthorizedNetworks", "ReservedIpRange", "Locations", "Admin", "Fqdn", "CreateTime", "UpdateTime", "State", "StatusMessage", "Trusts" }, null, new[]{ typeof(global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.ManagedIdentities.V1.Trust), global::Google.Cloud.ManagedIdentities.V1.Trust.Parser, new[]{ "TargetDomainName", "TrustType", "TrustDirection", "SelectiveAuthentication", "TargetDnsIpAddresses", "TrustHandshakeSecret", "CreateTime", "UpdateTime", "State", "StateDescription", "LastTrustHeartbeatTime" }, null, new[]{ typeof(global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State), typeof(global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType), typeof(global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Represents a managed Microsoft Active Directory domain.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Domain : pb::IMessage<Domain>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Domain> _parser = new pb::MessageParser<Domain>(() => new Domain());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Domain> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedIdentities.V1.ResourceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Domain() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Domain(Domain other) : this() {
      name_ = other.name_;
      labels_ = other.labels_.Clone();
      authorizedNetworks_ = other.authorizedNetworks_.Clone();
      reservedIpRange_ = other.reservedIpRange_;
      locations_ = other.locations_.Clone();
      admin_ = other.admin_;
      fqdn_ = other.fqdn_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      state_ = other.state_;
      statusMessage_ = other.statusMessage_;
      trusts_ = other.trusts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Domain Clone() {
      return new Domain(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The unique name of the domain using the form:
    /// `projects/{project_id}/locations/global/domains/{domain_name}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Optional. Resource labels that can contain user-provided metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "authorized_networks" field.</summary>
    public const int AuthorizedNetworksFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_authorizedNetworks_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> authorizedNetworks_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. The full names of the Google Compute Engine
    /// [networks](/compute/docs/networks-and-firewalls#networks) the domain
    /// instance is connected to. Networks can be added using UpdateDomain.
    /// The domain is only available on networks listed in `authorized_networks`.
    /// If CIDR subnets overlap between networks, domain creation will fail.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> AuthorizedNetworks {
      get { return authorizedNetworks_; }
    }

    /// <summary>Field number for the "reserved_ip_range" field.</summary>
    public const int ReservedIpRangeFieldNumber = 4;
    private string reservedIpRange_ = "";
    /// <summary>
    /// Required. The CIDR range of internal addresses that are reserved for this
    /// domain. Reserved networks must be /24 or larger. Ranges must be
    /// unique and non-overlapping with existing subnets in
    /// [Domain].[authorized_networks].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReservedIpRange {
      get { return reservedIpRange_; }
      set {
        reservedIpRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_locations_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> locations_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. Locations where domain needs to be provisioned.
    /// [regions][compute/docs/regions-zones/]
    /// e.g. us-west1 or us-east4
    /// Service supports up to 4 locations at once. Each location will use a /26
    /// block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Locations {
      get { return locations_; }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 6;
    private string admin_ = "";
    /// <summary>
    /// Optional. The name of delegated administrator account used to perform
    /// Active Directory operations. If not specified, `setupadmin` will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Admin {
      get { return admin_; }
      set {
        admin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fqdn" field.</summary>
    public const int FqdnFieldNumber = 10;
    private string fqdn_ = "";
    /// <summary>
    /// Output only. The fully-qualified domain name of the exposed domain used by
    /// clients to connect to the service. Similar to what would be chosen for an
    /// Active Directory set up on an internal network.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Fqdn {
      get { return fqdn_; }
      set {
        fqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the instance was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The last update time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 13;
    private global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State state_ = global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of this domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 14;
    private string statusMessage_ = "";
    /// <summary>
    /// Output only. Additional information about the current status of this
    /// domain, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trusts" field.</summary>
    public const int TrustsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Google.Cloud.ManagedIdentities.V1.Trust> _repeated_trusts_codec
        = pb::FieldCodec.ForMessage(122, global::Google.Cloud.ManagedIdentities.V1.Trust.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.ManagedIdentities.V1.Trust> trusts_ = new pbc::RepeatedField<global::Google.Cloud.ManagedIdentities.V1.Trust>();
    /// <summary>
    /// Output only. The current trusts associated with the domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.ManagedIdentities.V1.Trust> Trusts {
      get { return trusts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Domain);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Domain other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if(!authorizedNetworks_.Equals(other.authorizedNetworks_)) return false;
      if (ReservedIpRange != other.ReservedIpRange) return false;
      if(!locations_.Equals(other.locations_)) return false;
      if (Admin != other.Admin) return false;
      if (Fqdn != other.Fqdn) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (State != other.State) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if(!trusts_.Equals(other.trusts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= authorizedNetworks_.GetHashCode();
      if (ReservedIpRange.Length != 0) hash ^= ReservedIpRange.GetHashCode();
      hash ^= locations_.GetHashCode();
      if (Admin.Length != 0) hash ^= Admin.GetHashCode();
      if (Fqdn.Length != 0) hash ^= Fqdn.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (State != global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      hash ^= trusts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      labels_.WriteTo(output, _map_labels_codec);
      authorizedNetworks_.WriteTo(output, _repeated_authorizedNetworks_codec);
      if (ReservedIpRange.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReservedIpRange);
      }
      locations_.WriteTo(output, _repeated_locations_codec);
      if (Admin.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Admin);
      }
      if (Fqdn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Fqdn);
      }
      if (createTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(UpdateTime);
      }
      if (State != global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State.Unspecified) {
        output.WriteRawTag(104);
        output.WriteEnum((int) State);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(StatusMessage);
      }
      trusts_.WriteTo(output, _repeated_trusts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      authorizedNetworks_.WriteTo(ref output, _repeated_authorizedNetworks_codec);
      if (ReservedIpRange.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReservedIpRange);
      }
      locations_.WriteTo(ref output, _repeated_locations_codec);
      if (Admin.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Admin);
      }
      if (Fqdn.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Fqdn);
      }
      if (createTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(UpdateTime);
      }
      if (State != global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State.Unspecified) {
        output.WriteRawTag(104);
        output.WriteEnum((int) State);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(StatusMessage);
      }
      trusts_.WriteTo(ref output, _repeated_trusts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      size += authorizedNetworks_.CalculateSize(_repeated_authorizedNetworks_codec);
      if (ReservedIpRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReservedIpRange);
      }
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (Admin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Admin);
      }
      if (Fqdn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fqdn);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (State != global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      size += trusts_.CalculateSize(_repeated_trusts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Domain other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      labels_.MergeFrom(other.labels_);
      authorizedNetworks_.Add(other.authorizedNetworks_);
      if (other.ReservedIpRange.Length != 0) {
        ReservedIpRange = other.ReservedIpRange;
      }
      locations_.Add(other.locations_);
      if (other.Admin.Length != 0) {
        Admin = other.Admin;
      }
      if (other.Fqdn.Length != 0) {
        Fqdn = other.Fqdn;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.State != global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      trusts_.Add(other.trusts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 26: {
            authorizedNetworks_.AddEntriesFrom(input, _repeated_authorizedNetworks_codec);
            break;
          }
          case 34: {
            ReservedIpRange = input.ReadString();
            break;
          }
          case 42: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
          case 50: {
            Admin = input.ReadString();
            break;
          }
          case 82: {
            Fqdn = input.ReadString();
            break;
          }
          case 90: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 98: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 104: {
            State = (global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State) input.ReadEnum();
            break;
          }
          case 114: {
            StatusMessage = input.ReadString();
            break;
          }
          case 122: {
            trusts_.AddEntriesFrom(input, _repeated_trusts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 26: {
            authorizedNetworks_.AddEntriesFrom(ref input, _repeated_authorizedNetworks_codec);
            break;
          }
          case 34: {
            ReservedIpRange = input.ReadString();
            break;
          }
          case 42: {
            locations_.AddEntriesFrom(ref input, _repeated_locations_codec);
            break;
          }
          case 50: {
            Admin = input.ReadString();
            break;
          }
          case 82: {
            Fqdn = input.ReadString();
            break;
          }
          case 90: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 98: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 104: {
            State = (global::Google.Cloud.ManagedIdentities.V1.Domain.Types.State) input.ReadEnum();
            break;
          }
          case 114: {
            StatusMessage = input.ReadString();
            break;
          }
          case 122: {
            trusts_.AddEntriesFrom(ref input, _repeated_trusts_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Domain message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Represents the different states of a managed domain.
      /// </summary>
      public enum State {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The domain is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The domain has been created and is fully usable.
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 2,
        /// <summary>
        /// The domain's configuration is being updated.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 3,
        /// <summary>
        /// The domain is being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 4,
        /// <summary>
        /// The domain is being repaired and may be unusable. Details
        /// can be found in the `status_message` field.
        /// </summary>
        [pbr::OriginalName("REPAIRING")] Repairing = 5,
        /// <summary>
        /// The domain is undergoing maintenance.
        /// </summary>
        [pbr::OriginalName("PERFORMING_MAINTENANCE")] PerformingMaintenance = 6,
        /// <summary>
        /// The domain is not serving requests.
        /// </summary>
        [pbr::OriginalName("UNAVAILABLE")] Unavailable = 7,
      }

    }
    #endregion

  }

  /// <summary>
  /// Represents a relationship between two domains. This allows a controller in
  /// one domain to authenticate a user in another domain.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Trust : pb::IMessage<Trust>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Trust> _parser = new pb::MessageParser<Trust>(() => new Trust());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Trust> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.ManagedIdentities.V1.ResourceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Trust() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Trust(Trust other) : this() {
      targetDomainName_ = other.targetDomainName_;
      trustType_ = other.trustType_;
      trustDirection_ = other.trustDirection_;
      selectiveAuthentication_ = other.selectiveAuthentication_;
      targetDnsIpAddresses_ = other.targetDnsIpAddresses_.Clone();
      trustHandshakeSecret_ = other.trustHandshakeSecret_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      state_ = other.state_;
      stateDescription_ = other.stateDescription_;
      lastTrustHeartbeatTime_ = other.lastTrustHeartbeatTime_ != null ? other.lastTrustHeartbeatTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Trust Clone() {
      return new Trust(this);
    }

    /// <summary>Field number for the "target_domain_name" field.</summary>
    public const int TargetDomainNameFieldNumber = 1;
    private string targetDomainName_ = "";
    /// <summary>
    /// Required. The fully qualified target domain name which will be in trust with the
    /// current domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TargetDomainName {
      get { return targetDomainName_; }
      set {
        targetDomainName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trust_type" field.</summary>
    public const int TrustTypeFieldNumber = 2;
    private global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType trustType_ = global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType.Unspecified;
    /// <summary>
    /// Required. The type of trust represented by the trust resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType TrustType {
      get { return trustType_; }
      set {
        trustType_ = value;
      }
    }

    /// <summary>Field number for the "trust_direction" field.</summary>
    public const int TrustDirectionFieldNumber = 3;
    private global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection trustDirection_ = global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection.Unspecified;
    /// <summary>
    /// Required. The trust direction, which decides if the current domain is trusted,
    /// trusting, or both.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection TrustDirection {
      get { return trustDirection_; }
      set {
        trustDirection_ = value;
      }
    }

    /// <summary>Field number for the "selective_authentication" field.</summary>
    public const int SelectiveAuthenticationFieldNumber = 4;
    private bool selectiveAuthentication_;
    /// <summary>
    /// Optional. The trust authentication type, which decides whether the trusted side has
    /// forest/domain wide access or selective access to an approved set of
    /// resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SelectiveAuthentication {
      get { return selectiveAuthentication_; }
      set {
        selectiveAuthentication_ = value;
      }
    }

    /// <summary>Field number for the "target_dns_ip_addresses" field.</summary>
    public const int TargetDnsIpAddressesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_targetDnsIpAddresses_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> targetDnsIpAddresses_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. The target DNS server IP addresses which can resolve the remote domain
    /// involved in the trust.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> TargetDnsIpAddresses {
      get { return targetDnsIpAddresses_; }
    }

    /// <summary>Field number for the "trust_handshake_secret" field.</summary>
    public const int TrustHandshakeSecretFieldNumber = 6;
    private string trustHandshakeSecret_ = "";
    /// <summary>
    /// Required. The trust secret used for the handshake with the target domain. This will
    /// not be stored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrustHandshakeSecret {
      get { return trustHandshakeSecret_; }
      set {
        trustHandshakeSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time the instance was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The last update time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 9;
    private global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State state_ = global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current state of the trust.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "state_description" field.</summary>
    public const int StateDescriptionFieldNumber = 11;
    private string stateDescription_ = "";
    /// <summary>
    /// Output only. Additional information about the current state of the trust, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StateDescription {
      get { return stateDescription_; }
      set {
        stateDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_trust_heartbeat_time" field.</summary>
    public const int LastTrustHeartbeatTimeFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastTrustHeartbeatTime_;
    /// <summary>
    /// Output only. The last heartbeat time when the trust was known to be connected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastTrustHeartbeatTime {
      get { return lastTrustHeartbeatTime_; }
      set {
        lastTrustHeartbeatTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Trust);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Trust other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetDomainName != other.TargetDomainName) return false;
      if (TrustType != other.TrustType) return false;
      if (TrustDirection != other.TrustDirection) return false;
      if (SelectiveAuthentication != other.SelectiveAuthentication) return false;
      if(!targetDnsIpAddresses_.Equals(other.targetDnsIpAddresses_)) return false;
      if (TrustHandshakeSecret != other.TrustHandshakeSecret) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (State != other.State) return false;
      if (StateDescription != other.StateDescription) return false;
      if (!object.Equals(LastTrustHeartbeatTime, other.LastTrustHeartbeatTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetDomainName.Length != 0) hash ^= TargetDomainName.GetHashCode();
      if (TrustType != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType.Unspecified) hash ^= TrustType.GetHashCode();
      if (TrustDirection != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection.Unspecified) hash ^= TrustDirection.GetHashCode();
      if (SelectiveAuthentication != false) hash ^= SelectiveAuthentication.GetHashCode();
      hash ^= targetDnsIpAddresses_.GetHashCode();
      if (TrustHandshakeSecret.Length != 0) hash ^= TrustHandshakeSecret.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (State != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (StateDescription.Length != 0) hash ^= StateDescription.GetHashCode();
      if (lastTrustHeartbeatTime_ != null) hash ^= LastTrustHeartbeatTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TargetDomainName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TargetDomainName);
      }
      if (TrustType != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TrustType);
      }
      if (TrustDirection != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TrustDirection);
      }
      if (SelectiveAuthentication != false) {
        output.WriteRawTag(32);
        output.WriteBool(SelectiveAuthentication);
      }
      targetDnsIpAddresses_.WriteTo(output, _repeated_targetDnsIpAddresses_codec);
      if (TrustHandshakeSecret.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TrustHandshakeSecret);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UpdateTime);
      }
      if (State != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) State);
      }
      if (StateDescription.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StateDescription);
      }
      if (lastTrustHeartbeatTime_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LastTrustHeartbeatTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TargetDomainName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TargetDomainName);
      }
      if (TrustType != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TrustType);
      }
      if (TrustDirection != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TrustDirection);
      }
      if (SelectiveAuthentication != false) {
        output.WriteRawTag(32);
        output.WriteBool(SelectiveAuthentication);
      }
      targetDnsIpAddresses_.WriteTo(ref output, _repeated_targetDnsIpAddresses_codec);
      if (TrustHandshakeSecret.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TrustHandshakeSecret);
      }
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UpdateTime);
      }
      if (State != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) State);
      }
      if (StateDescription.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StateDescription);
      }
      if (lastTrustHeartbeatTime_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LastTrustHeartbeatTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TargetDomainName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetDomainName);
      }
      if (TrustType != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TrustType);
      }
      if (TrustDirection != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TrustDirection);
      }
      if (SelectiveAuthentication != false) {
        size += 1 + 1;
      }
      size += targetDnsIpAddresses_.CalculateSize(_repeated_targetDnsIpAddresses_codec);
      if (TrustHandshakeSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrustHandshakeSecret);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (State != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (StateDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateDescription);
      }
      if (lastTrustHeartbeatTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTrustHeartbeatTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Trust other) {
      if (other == null) {
        return;
      }
      if (other.TargetDomainName.Length != 0) {
        TargetDomainName = other.TargetDomainName;
      }
      if (other.TrustType != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType.Unspecified) {
        TrustType = other.TrustType;
      }
      if (other.TrustDirection != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection.Unspecified) {
        TrustDirection = other.TrustDirection;
      }
      if (other.SelectiveAuthentication != false) {
        SelectiveAuthentication = other.SelectiveAuthentication;
      }
      targetDnsIpAddresses_.Add(other.targetDnsIpAddresses_);
      if (other.TrustHandshakeSecret.Length != 0) {
        TrustHandshakeSecret = other.TrustHandshakeSecret;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.State != global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.StateDescription.Length != 0) {
        StateDescription = other.StateDescription;
      }
      if (other.lastTrustHeartbeatTime_ != null) {
        if (lastTrustHeartbeatTime_ == null) {
          LastTrustHeartbeatTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastTrustHeartbeatTime.MergeFrom(other.LastTrustHeartbeatTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TargetDomainName = input.ReadString();
            break;
          }
          case 16: {
            TrustType = (global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType) input.ReadEnum();
            break;
          }
          case 24: {
            TrustDirection = (global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection) input.ReadEnum();
            break;
          }
          case 32: {
            SelectiveAuthentication = input.ReadBool();
            break;
          }
          case 42: {
            targetDnsIpAddresses_.AddEntriesFrom(input, _repeated_targetDnsIpAddresses_codec);
            break;
          }
          case 50: {
            TrustHandshakeSecret = input.ReadString();
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 72: {
            State = (global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State) input.ReadEnum();
            break;
          }
          case 90: {
            StateDescription = input.ReadString();
            break;
          }
          case 98: {
            if (lastTrustHeartbeatTime_ == null) {
              LastTrustHeartbeatTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastTrustHeartbeatTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TargetDomainName = input.ReadString();
            break;
          }
          case 16: {
            TrustType = (global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustType) input.ReadEnum();
            break;
          }
          case 24: {
            TrustDirection = (global::Google.Cloud.ManagedIdentities.V1.Trust.Types.TrustDirection) input.ReadEnum();
            break;
          }
          case 32: {
            SelectiveAuthentication = input.ReadBool();
            break;
          }
          case 42: {
            targetDnsIpAddresses_.AddEntriesFrom(ref input, _repeated_targetDnsIpAddresses_codec);
            break;
          }
          case 50: {
            TrustHandshakeSecret = input.ReadString();
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 72: {
            State = (global::Google.Cloud.ManagedIdentities.V1.Trust.Types.State) input.ReadEnum();
            break;
          }
          case 90: {
            StateDescription = input.ReadString();
            break;
          }
          case 98: {
            if (lastTrustHeartbeatTime_ == null) {
              LastTrustHeartbeatTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastTrustHeartbeatTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Trust message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Represents the different states of a domain trust.
      /// </summary>
      public enum State {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The domain trust is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The domain trust is being updated.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 2,
        /// <summary>
        /// The domain trust is being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 3,
        /// <summary>
        /// The domain trust is connected.
        /// </summary>
        [pbr::OriginalName("CONNECTED")] Connected = 4,
        /// <summary>
        /// The domain trust is disconnected.
        /// </summary>
        [pbr::OriginalName("DISCONNECTED")] Disconnected = 5,
      }

      /// <summary>
      /// Represents the different inter-forest trust types.
      /// </summary>
      public enum TrustType {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("TRUST_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The forest trust.
        /// </summary>
        [pbr::OriginalName("FOREST")] Forest = 1,
        /// <summary>
        /// The external domain trust.
        /// </summary>
        [pbr::OriginalName("EXTERNAL")] External = 2,
      }

      /// <summary>
      /// Represents the direction of trust.
      /// See
      /// [System.DirectoryServices.ActiveDirectory.TrustDirection](https://docs.microsoft.com/en-us/dotnet/api/system.directoryservices.activedirectory.trustdirection?view=netframework-4.7.2)
      /// for more information.
      /// </summary>
      public enum TrustDirection {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("TRUST_DIRECTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The inbound direction represents the trusting side.
        /// </summary>
        [pbr::OriginalName("INBOUND")] Inbound = 1,
        /// <summary>
        /// The outboud direction represents the trusted side.
        /// </summary>
        [pbr::OriginalName("OUTBOUND")] Outbound = 2,
        /// <summary>
        /// The bidirectional direction represents the trusted / trusting side.
        /// </summary>
        [pbr::OriginalName("BIDIRECTIONAL")] Bidirectional = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
