// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/networksecurity/v1beta1/network_security.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.NetworkSecurity.V1Beta1 {
  /// <summary>
  /// Network Security API provides resources to configure authentication and
  /// authorization policies. Refer to per API resource documentation for more
  /// information.
  /// </summary>
  public static partial class NetworkSecurity
  {
    static readonly string __ServiceName = "google.cloud.networksecurity.v1beta1.NetworkSecurity";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest> __Marshaller_google_cloud_networksecurity_v1beta1_ListAuthorizationPoliciesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse> __Marshaller_google_cloud_networksecurity_v1beta1_ListAuthorizationPoliciesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_GetAuthorizationPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy> __Marshaller_google_cloud_networksecurity_v1beta1_AuthorizationPolicy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_CreateAuthorizationPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_UpdateAuthorizationPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_DeleteAuthorizationPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest> __Marshaller_google_cloud_networksecurity_v1beta1_ListServerTlsPoliciesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse> __Marshaller_google_cloud_networksecurity_v1beta1_ListServerTlsPoliciesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_GetServerTlsPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy> __Marshaller_google_cloud_networksecurity_v1beta1_ServerTlsPolicy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_CreateServerTlsPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_UpdateServerTlsPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_DeleteServerTlsPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest> __Marshaller_google_cloud_networksecurity_v1beta1_ListClientTlsPoliciesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse> __Marshaller_google_cloud_networksecurity_v1beta1_ListClientTlsPoliciesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_GetClientTlsPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy> __Marshaller_google_cloud_networksecurity_v1beta1_ClientTlsPolicy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_CreateClientTlsPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_UpdateClientTlsPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest> __Marshaller_google_cloud_networksecurity_v1beta1_DeleteClientTlsPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse> __Method_ListAuthorizationPolicies = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAuthorizationPolicies",
        __Marshaller_google_cloud_networksecurity_v1beta1_ListAuthorizationPoliciesRequest,
        __Marshaller_google_cloud_networksecurity_v1beta1_ListAuthorizationPoliciesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy> __Method_GetAuthorizationPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAuthorizationPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_GetAuthorizationPolicyRequest,
        __Marshaller_google_cloud_networksecurity_v1beta1_AuthorizationPolicy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest, global::Google.LongRunning.Operation> __Method_CreateAuthorizationPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAuthorizationPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_CreateAuthorizationPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest, global::Google.LongRunning.Operation> __Method_UpdateAuthorizationPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAuthorizationPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_UpdateAuthorizationPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest, global::Google.LongRunning.Operation> __Method_DeleteAuthorizationPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAuthorizationPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_DeleteAuthorizationPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse> __Method_ListServerTlsPolicies = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListServerTlsPolicies",
        __Marshaller_google_cloud_networksecurity_v1beta1_ListServerTlsPoliciesRequest,
        __Marshaller_google_cloud_networksecurity_v1beta1_ListServerTlsPoliciesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy> __Method_GetServerTlsPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetServerTlsPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_GetServerTlsPolicyRequest,
        __Marshaller_google_cloud_networksecurity_v1beta1_ServerTlsPolicy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest, global::Google.LongRunning.Operation> __Method_CreateServerTlsPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateServerTlsPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_CreateServerTlsPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest, global::Google.LongRunning.Operation> __Method_UpdateServerTlsPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateServerTlsPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_UpdateServerTlsPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest, global::Google.LongRunning.Operation> __Method_DeleteServerTlsPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteServerTlsPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_DeleteServerTlsPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse> __Method_ListClientTlsPolicies = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListClientTlsPolicies",
        __Marshaller_google_cloud_networksecurity_v1beta1_ListClientTlsPoliciesRequest,
        __Marshaller_google_cloud_networksecurity_v1beta1_ListClientTlsPoliciesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy> __Method_GetClientTlsPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClientTlsPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_GetClientTlsPolicyRequest,
        __Marshaller_google_cloud_networksecurity_v1beta1_ClientTlsPolicy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest, global::Google.LongRunning.Operation> __Method_CreateClientTlsPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateClientTlsPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_CreateClientTlsPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest, global::Google.LongRunning.Operation> __Method_UpdateClientTlsPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateClientTlsPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_UpdateClientTlsPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest, global::Google.LongRunning.Operation> __Method_DeleteClientTlsPolicy = new grpc::Method<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteClientTlsPolicy",
        __Marshaller_google_cloud_networksecurity_v1beta1_DeleteClientTlsPolicyRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.NetworkSecurity.V1Beta1.NetworkSecurityReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NetworkSecurity</summary>
    [grpc::BindServiceMethod(typeof(NetworkSecurity), "BindService")]
    public abstract partial class NetworkSecurityBase
    {
      /// <summary>
      /// Lists AuthorizationPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse> ListAuthorizationPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy> GetAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new AuthorizationPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ServerTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse> ListServerTlsPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy> GetServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new ServerTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ClientTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse> ListClientTlsPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy> GetClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new ClientTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the parameters of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NetworkSecurity</summary>
    public partial class NetworkSecurityClient : grpc::ClientBase<NetworkSecurityClient>
    {
      /// <summary>Creates a new client for NetworkSecurity</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NetworkSecurityClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NetworkSecurity that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NetworkSecurityClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NetworkSecurityClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NetworkSecurityClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists AuthorizationPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse ListAuthorizationPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuthorizationPolicies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists AuthorizationPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse ListAuthorizationPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAuthorizationPolicies, null, options, request);
      }
      /// <summary>
      /// Lists AuthorizationPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse> ListAuthorizationPoliciesAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuthorizationPoliciesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists AuthorizationPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse> ListAuthorizationPoliciesAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAuthorizationPolicies, null, options, request);
      }
      /// <summary>
      /// Gets details of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy GetAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuthorizationPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy GetAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAuthorizationPolicy, null, options, request);
      }
      /// <summary>
      /// Gets details of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy> GetAuthorizationPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAuthorizationPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy> GetAuthorizationPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAuthorizationPolicy, null, options, request);
      }
      /// <summary>
      /// Creates a new AuthorizationPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAuthorizationPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new AuthorizationPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAuthorizationPolicy, null, options, request);
      }
      /// <summary>
      /// Creates a new AuthorizationPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAuthorizationPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAuthorizationPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new AuthorizationPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateAuthorizationPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAuthorizationPolicy, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAuthorizationPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAuthorizationPolicy, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateAuthorizationPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAuthorizationPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateAuthorizationPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAuthorizationPolicy, null, options, request);
      }
      /// <summary>
      /// Deletes a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAuthorizationPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteAuthorizationPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAuthorizationPolicy, null, options, request);
      }
      /// <summary>
      /// Deletes a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteAuthorizationPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAuthorizationPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single AuthorizationPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteAuthorizationPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAuthorizationPolicy, null, options, request);
      }
      /// <summary>
      /// Lists ServerTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse ListServerTlsPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServerTlsPolicies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ServerTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse ListServerTlsPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListServerTlsPolicies, null, options, request);
      }
      /// <summary>
      /// Lists ServerTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse> ListServerTlsPoliciesAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListServerTlsPoliciesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ServerTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse> ListServerTlsPoliciesAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListServerTlsPolicies, null, options, request);
      }
      /// <summary>
      /// Gets details of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy GetServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServerTlsPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy GetServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetServerTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Gets details of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy> GetServerTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServerTlsPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy> GetServerTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetServerTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Creates a new ServerTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServerTlsPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new ServerTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateServerTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Creates a new ServerTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServerTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateServerTlsPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new ServerTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateServerTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateServerTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateServerTlsPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateServerTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateServerTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateServerTlsPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateServerTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateServerTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Deletes a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteServerTlsPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteServerTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteServerTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Deletes a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteServerTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteServerTlsPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single ServerTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteServerTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteServerTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Lists ClientTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse ListClientTlsPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListClientTlsPolicies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ClientTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse ListClientTlsPolicies(global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListClientTlsPolicies, null, options, request);
      }
      /// <summary>
      /// Lists ClientTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse> ListClientTlsPoliciesAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListClientTlsPoliciesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ClientTlsPolicies in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse> ListClientTlsPoliciesAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListClientTlsPolicies, null, options, request);
      }
      /// <summary>
      /// Gets details of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy GetClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientTlsPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy GetClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClientTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Gets details of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy> GetClientTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientTlsPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy> GetClientTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClientTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Creates a new ClientTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateClientTlsPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new ClientTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateClientTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Creates a new ClientTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateClientTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateClientTlsPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new ClientTlsPolicy in a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateClientTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateClientTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateClientTlsPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateClientTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Updates the parameters of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateClientTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateClientTlsPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the parameters of a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateClientTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateClientTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Deletes a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteClientTlsPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteClientTlsPolicy(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteClientTlsPolicy, null, options, request);
      }
      /// <summary>
      /// Deletes a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteClientTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteClientTlsPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a single ClientTlsPolicy.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteClientTlsPolicyAsync(global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteClientTlsPolicy, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override NetworkSecurityClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NetworkSecurityClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NetworkSecurityBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListAuthorizationPolicies, serviceImpl.ListAuthorizationPolicies)
          .AddMethod(__Method_GetAuthorizationPolicy, serviceImpl.GetAuthorizationPolicy)
          .AddMethod(__Method_CreateAuthorizationPolicy, serviceImpl.CreateAuthorizationPolicy)
          .AddMethod(__Method_UpdateAuthorizationPolicy, serviceImpl.UpdateAuthorizationPolicy)
          .AddMethod(__Method_DeleteAuthorizationPolicy, serviceImpl.DeleteAuthorizationPolicy)
          .AddMethod(__Method_ListServerTlsPolicies, serviceImpl.ListServerTlsPolicies)
          .AddMethod(__Method_GetServerTlsPolicy, serviceImpl.GetServerTlsPolicy)
          .AddMethod(__Method_CreateServerTlsPolicy, serviceImpl.CreateServerTlsPolicy)
          .AddMethod(__Method_UpdateServerTlsPolicy, serviceImpl.UpdateServerTlsPolicy)
          .AddMethod(__Method_DeleteServerTlsPolicy, serviceImpl.DeleteServerTlsPolicy)
          .AddMethod(__Method_ListClientTlsPolicies, serviceImpl.ListClientTlsPolicies)
          .AddMethod(__Method_GetClientTlsPolicy, serviceImpl.GetClientTlsPolicy)
          .AddMethod(__Method_CreateClientTlsPolicy, serviceImpl.CreateClientTlsPolicy)
          .AddMethod(__Method_UpdateClientTlsPolicy, serviceImpl.UpdateClientTlsPolicy)
          .AddMethod(__Method_DeleteClientTlsPolicy, serviceImpl.DeleteClientTlsPolicy).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NetworkSecurityBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListAuthorizationPolicies, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListAuthorizationPoliciesResponse>(serviceImpl.ListAuthorizationPolicies));
      serviceBinder.AddMethod(__Method_GetAuthorizationPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.GetAuthorizationPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.AuthorizationPolicy>(serviceImpl.GetAuthorizationPolicy));
      serviceBinder.AddMethod(__Method_CreateAuthorizationPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateAuthorizationPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateAuthorizationPolicy));
      serviceBinder.AddMethod(__Method_UpdateAuthorizationPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateAuthorizationPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateAuthorizationPolicy));
      serviceBinder.AddMethod(__Method_DeleteAuthorizationPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteAuthorizationPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteAuthorizationPolicy));
      serviceBinder.AddMethod(__Method_ListServerTlsPolicies, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListServerTlsPoliciesResponse>(serviceImpl.ListServerTlsPolicies));
      serviceBinder.AddMethod(__Method_GetServerTlsPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.GetServerTlsPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ServerTlsPolicy>(serviceImpl.GetServerTlsPolicy));
      serviceBinder.AddMethod(__Method_CreateServerTlsPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateServerTlsPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateServerTlsPolicy));
      serviceBinder.AddMethod(__Method_UpdateServerTlsPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateServerTlsPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateServerTlsPolicy));
      serviceBinder.AddMethod(__Method_DeleteServerTlsPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteServerTlsPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteServerTlsPolicy));
      serviceBinder.AddMethod(__Method_ListClientTlsPolicies, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ListClientTlsPoliciesResponse>(serviceImpl.ListClientTlsPolicies));
      serviceBinder.AddMethod(__Method_GetClientTlsPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.GetClientTlsPolicyRequest, global::Google.Cloud.NetworkSecurity.V1Beta1.ClientTlsPolicy>(serviceImpl.GetClientTlsPolicy));
      serviceBinder.AddMethod(__Method_CreateClientTlsPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.CreateClientTlsPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateClientTlsPolicy));
      serviceBinder.AddMethod(__Method_UpdateClientTlsPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.UpdateClientTlsPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateClientTlsPolicy));
      serviceBinder.AddMethod(__Method_DeleteClientTlsPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.NetworkSecurity.V1Beta1.DeleteClientTlsPolicyRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteClientTlsPolicy));
    }

  }
}
#endregion
