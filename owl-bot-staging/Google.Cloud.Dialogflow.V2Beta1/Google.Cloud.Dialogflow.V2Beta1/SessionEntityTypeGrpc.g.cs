// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/dialogflow/v2beta1/session_entity_type.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Dialogflow.V2Beta1 {
  /// <summary>
  /// Service for managing
  /// [SessionEntityTypes][google.cloud.dialogflow.v2beta1.SessionEntityType].
  /// </summary>
  public static partial class SessionEntityTypes
  {
    static readonly string __ServiceName = "google.cloud.dialogflow.v2beta1.SessionEntityTypes";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest> __Marshaller_google_cloud_dialogflow_v2beta1_ListSessionEntityTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse> __Marshaller_google_cloud_dialogflow_v2beta1_ListSessionEntityTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest> __Marshaller_google_cloud_dialogflow_v2beta1_GetSessionEntityTypeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> __Marshaller_google_cloud_dialogflow_v2beta1_SessionEntityType = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest> __Marshaller_google_cloud_dialogflow_v2beta1_CreateSessionEntityTypeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest> __Marshaller_google_cloud_dialogflow_v2beta1_UpdateSessionEntityTypeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest> __Marshaller_google_cloud_dialogflow_v2beta1_DeleteSessionEntityTypeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest, global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse> __Method_ListSessionEntityTypes = new grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest, global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSessionEntityTypes",
        __Marshaller_google_cloud_dialogflow_v2beta1_ListSessionEntityTypesRequest,
        __Marshaller_google_cloud_dialogflow_v2beta1_ListSessionEntityTypesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> __Method_GetSessionEntityType = new grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSessionEntityType",
        __Marshaller_google_cloud_dialogflow_v2beta1_GetSessionEntityTypeRequest,
        __Marshaller_google_cloud_dialogflow_v2beta1_SessionEntityType);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> __Method_CreateSessionEntityType = new grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSessionEntityType",
        __Marshaller_google_cloud_dialogflow_v2beta1_CreateSessionEntityTypeRequest,
        __Marshaller_google_cloud_dialogflow_v2beta1_SessionEntityType);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> __Method_UpdateSessionEntityType = new grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSessionEntityType",
        __Marshaller_google_cloud_dialogflow_v2beta1_UpdateSessionEntityTypeRequest,
        __Marshaller_google_cloud_dialogflow_v2beta1_SessionEntityType);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteSessionEntityType = new grpc::Method<global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSessionEntityType",
        __Marshaller_google_cloud_dialogflow_v2beta1_DeleteSessionEntityTypeRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityTypeReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SessionEntityTypes</summary>
    [grpc::BindServiceMethod(typeof(SessionEntityTypes), "BindService")]
    public abstract partial class SessionEntityTypesBase
    {
      /// <summary>
      /// Returns the list of all session entity types in the specified session.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse> ListSessionEntityTypes(global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> GetSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a session entity type.
      ///
      /// If the specified session entity type already exists, overrides the
      /// session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> CreateSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> UpdateSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SessionEntityTypes</summary>
    public partial class SessionEntityTypesClient : grpc::ClientBase<SessionEntityTypesClient>
    {
      /// <summary>Creates a new client for SessionEntityTypes</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SessionEntityTypesClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SessionEntityTypes that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SessionEntityTypesClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SessionEntityTypesClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SessionEntityTypesClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the list of all session entity types in the specified session.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse ListSessionEntityTypes(global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSessionEntityTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of all session entity types in the specified session.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse ListSessionEntityTypes(global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSessionEntityTypes, null, options, request);
      }
      /// <summary>
      /// Returns the list of all session entity types in the specified session.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse> ListSessionEntityTypesAsync(global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSessionEntityTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the list of all session entity types in the specified session.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse> ListSessionEntityTypesAsync(global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSessionEntityTypes, null, options, request);
      }
      /// <summary>
      /// Retrieves the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType GetSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSessionEntityType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType GetSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSessionEntityType, null, options, request);
      }
      /// <summary>
      /// Retrieves the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> GetSessionEntityTypeAsync(global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSessionEntityTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> GetSessionEntityTypeAsync(global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSessionEntityType, null, options, request);
      }
      /// <summary>
      /// Creates a session entity type.
      ///
      /// If the specified session entity type already exists, overrides the
      /// session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType CreateSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSessionEntityType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a session entity type.
      ///
      /// If the specified session entity type already exists, overrides the
      /// session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType CreateSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSessionEntityType, null, options, request);
      }
      /// <summary>
      /// Creates a session entity type.
      ///
      /// If the specified session entity type already exists, overrides the
      /// session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> CreateSessionEntityTypeAsync(global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSessionEntityTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a session entity type.
      ///
      /// If the specified session entity type already exists, overrides the
      /// session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> CreateSessionEntityTypeAsync(global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSessionEntityType, null, options, request);
      }
      /// <summary>
      /// Updates the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType UpdateSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSessionEntityType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType UpdateSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSessionEntityType, null, options, request);
      }
      /// <summary>
      /// Updates the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> UpdateSessionEntityTypeAsync(global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSessionEntityTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType> UpdateSessionEntityTypeAsync(global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSessionEntityType, null, options, request);
      }
      /// <summary>
      /// Deletes the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSessionEntityType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteSessionEntityType(global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSessionEntityType, null, options, request);
      }
      /// <summary>
      /// Deletes the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSessionEntityTypeAsync(global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSessionEntityTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified session entity type.
      ///
      /// This method doesn't work with Google Assistant integration.
      /// Contact Dialogflow support if you need to use session entities
      /// with Google Assistant integration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteSessionEntityTypeAsync(global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSessionEntityType, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SessionEntityTypesClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SessionEntityTypesClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SessionEntityTypesBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListSessionEntityTypes, serviceImpl.ListSessionEntityTypes)
          .AddMethod(__Method_GetSessionEntityType, serviceImpl.GetSessionEntityType)
          .AddMethod(__Method_CreateSessionEntityType, serviceImpl.CreateSessionEntityType)
          .AddMethod(__Method_UpdateSessionEntityType, serviceImpl.UpdateSessionEntityType)
          .AddMethod(__Method_DeleteSessionEntityType, serviceImpl.DeleteSessionEntityType).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SessionEntityTypesBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListSessionEntityTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesRequest, global::Google.Cloud.Dialogflow.V2Beta1.ListSessionEntityTypesResponse>(serviceImpl.ListSessionEntityTypes));
      serviceBinder.AddMethod(__Method_GetSessionEntityType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2Beta1.GetSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType>(serviceImpl.GetSessionEntityType));
      serviceBinder.AddMethod(__Method_CreateSessionEntityType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2Beta1.CreateSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType>(serviceImpl.CreateSessionEntityType));
      serviceBinder.AddMethod(__Method_UpdateSessionEntityType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2Beta1.UpdateSessionEntityTypeRequest, global::Google.Cloud.Dialogflow.V2Beta1.SessionEntityType>(serviceImpl.UpdateSessionEntityType));
      serviceBinder.AddMethod(__Method_DeleteSessionEntityType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dialogflow.V2Beta1.DeleteSessionEntityTypeRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteSessionEntityType));
    }

  }
}
#endregion
