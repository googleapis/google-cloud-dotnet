// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/cloudcontrolspartner/v1/core.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.CloudControlsPartner.V1 {
  /// <summary>
  /// Service describing handlers for resources
  /// </summary>
  public static partial class CloudControlsPartnerCore
  {
    static readonly string __ServiceName = "google.cloud.cloudcontrolspartner.v1.CloudControlsPartnerCore";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest> __Marshaller_google_cloud_cloudcontrolspartner_v1_GetWorkloadRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.Workload> __Marshaller_google_cloud_cloudcontrolspartner_v1_Workload = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.Workload.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest> __Marshaller_google_cloud_cloudcontrolspartner_v1_ListWorkloadsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse> __Marshaller_google_cloud_cloudcontrolspartner_v1_ListWorkloadsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest> __Marshaller_google_cloud_cloudcontrolspartner_v1_GetCustomerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.Customer> __Marshaller_google_cloud_cloudcontrolspartner_v1_Customer = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.Customer.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest> __Marshaller_google_cloud_cloudcontrolspartner_v1_ListCustomersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse> __Marshaller_google_cloud_cloudcontrolspartner_v1_ListCustomersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest> __Marshaller_google_cloud_cloudcontrolspartner_v1_GetEkmConnectionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.EkmConnections> __Marshaller_google_cloud_cloudcontrolspartner_v1_EkmConnections = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.EkmConnections.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest> __Marshaller_google_cloud_cloudcontrolspartner_v1_GetPartnerPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions> __Marshaller_google_cloud_cloudcontrolspartner_v1_PartnerPermissions = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest> __Marshaller_google_cloud_cloudcontrolspartner_v1_ListAccessApprovalRequestsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse> __Marshaller_google_cloud_cloudcontrolspartner_v1_ListAccessApprovalRequestsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest> __Marshaller_google_cloud_cloudcontrolspartner_v1_GetPartnerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.CloudControlsPartner.V1.Partner> __Marshaller_google_cloud_cloudcontrolspartner_v1_Partner = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.CloudControlsPartner.V1.Partner.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest, global::Google.Cloud.CloudControlsPartner.V1.Workload> __Method_GetWorkload = new grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest, global::Google.Cloud.CloudControlsPartner.V1.Workload>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWorkload",
        __Marshaller_google_cloud_cloudcontrolspartner_v1_GetWorkloadRequest,
        __Marshaller_google_cloud_cloudcontrolspartner_v1_Workload);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest, global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse> __Method_ListWorkloads = new grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest, global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWorkloads",
        __Marshaller_google_cloud_cloudcontrolspartner_v1_ListWorkloadsRequest,
        __Marshaller_google_cloud_cloudcontrolspartner_v1_ListWorkloadsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest, global::Google.Cloud.CloudControlsPartner.V1.Customer> __Method_GetCustomer = new grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest, global::Google.Cloud.CloudControlsPartner.V1.Customer>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomer",
        __Marshaller_google_cloud_cloudcontrolspartner_v1_GetCustomerRequest,
        __Marshaller_google_cloud_cloudcontrolspartner_v1_Customer);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest, global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse> __Method_ListCustomers = new grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest, global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCustomers",
        __Marshaller_google_cloud_cloudcontrolspartner_v1_ListCustomersRequest,
        __Marshaller_google_cloud_cloudcontrolspartner_v1_ListCustomersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest, global::Google.Cloud.CloudControlsPartner.V1.EkmConnections> __Method_GetEkmConnections = new grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest, global::Google.Cloud.CloudControlsPartner.V1.EkmConnections>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEkmConnections",
        __Marshaller_google_cloud_cloudcontrolspartner_v1_GetEkmConnectionsRequest,
        __Marshaller_google_cloud_cloudcontrolspartner_v1_EkmConnections);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest, global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions> __Method_GetPartnerPermissions = new grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest, global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPartnerPermissions",
        __Marshaller_google_cloud_cloudcontrolspartner_v1_GetPartnerPermissionsRequest,
        __Marshaller_google_cloud_cloudcontrolspartner_v1_PartnerPermissions);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest, global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse> __Method_ListAccessApprovalRequests = new grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest, global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAccessApprovalRequests",
        __Marshaller_google_cloud_cloudcontrolspartner_v1_ListAccessApprovalRequestsRequest,
        __Marshaller_google_cloud_cloudcontrolspartner_v1_ListAccessApprovalRequestsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest, global::Google.Cloud.CloudControlsPartner.V1.Partner> __Method_GetPartner = new grpc::Method<global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest, global::Google.Cloud.CloudControlsPartner.V1.Partner>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPartner",
        __Marshaller_google_cloud_cloudcontrolspartner_v1_GetPartnerRequest,
        __Marshaller_google_cloud_cloudcontrolspartner_v1_Partner);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.CloudControlsPartner.V1.CoreReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CloudControlsPartnerCore</summary>
    [grpc::BindServiceMethod(typeof(CloudControlsPartnerCore), "BindService")]
    public abstract partial class CloudControlsPartnerCoreBase
    {
      /// <summary>
      /// Gets details of a single workload
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudControlsPartner.V1.Workload> GetWorkload(global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists customer workloads for a given customer org id
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse> ListWorkloads(global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets details of a single customer
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudControlsPartner.V1.Customer> GetCustomer(global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists customers of a partner identified by its Google Cloud organization ID
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse> ListCustomers(global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the EKM connections associated with a workload
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudControlsPartner.V1.EkmConnections> GetEkmConnections(global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the partner permissions granted for a workload
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions> GetPartnerPermissions(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deprecated: Only returns access approval requests directly associated with
      /// an assured workload folder.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse> ListAccessApprovalRequests(global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get details of a Partner.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.CloudControlsPartner.V1.Partner> GetPartner(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CloudControlsPartnerCore</summary>
    public partial class CloudControlsPartnerCoreClient : grpc::ClientBase<CloudControlsPartnerCoreClient>
    {
      /// <summary>Creates a new client for CloudControlsPartnerCore</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudControlsPartnerCoreClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CloudControlsPartnerCore that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudControlsPartnerCoreClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudControlsPartnerCoreClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudControlsPartnerCoreClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Gets details of a single workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.Workload GetWorkload(global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkload(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.Workload GetWorkload(global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWorkload, null, options, request);
      }
      /// <summary>
      /// Gets details of a single workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.Workload> GetWorkloadAsync(global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWorkloadAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.Workload> GetWorkloadAsync(global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWorkload, null, options, request);
      }
      /// <summary>
      /// Lists customer workloads for a given customer org id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse ListWorkloads(global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkloads(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists customer workloads for a given customer org id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse ListWorkloads(global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWorkloads, null, options, request);
      }
      /// <summary>
      /// Lists customer workloads for a given customer org id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse> ListWorkloadsAsync(global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWorkloadsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists customer workloads for a given customer org id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse> ListWorkloadsAsync(global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWorkloads, null, options, request);
      }
      /// <summary>
      /// Gets details of a single customer
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.Customer GetCustomer(global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single customer
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.Customer GetCustomer(global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomer, null, options, request);
      }
      /// <summary>
      /// Gets details of a single customer
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.Customer> GetCustomerAsync(global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets details of a single customer
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.Customer> GetCustomerAsync(global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomer, null, options, request);
      }
      /// <summary>
      /// Lists customers of a partner identified by its Google Cloud organization ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse ListCustomers(global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists customers of a partner identified by its Google Cloud organization ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse ListCustomers(global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCustomers, null, options, request);
      }
      /// <summary>
      /// Lists customers of a partner identified by its Google Cloud organization ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse> ListCustomersAsync(global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists customers of a partner identified by its Google Cloud organization ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse> ListCustomersAsync(global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCustomers, null, options, request);
      }
      /// <summary>
      /// Gets the EKM connections associated with a workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.EkmConnections GetEkmConnections(global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEkmConnections(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the EKM connections associated with a workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.EkmConnections GetEkmConnections(global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEkmConnections, null, options, request);
      }
      /// <summary>
      /// Gets the EKM connections associated with a workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.EkmConnections> GetEkmConnectionsAsync(global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEkmConnectionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the EKM connections associated with a workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.EkmConnections> GetEkmConnectionsAsync(global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEkmConnections, null, options, request);
      }
      /// <summary>
      /// Gets the partner permissions granted for a workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions GetPartnerPermissions(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPartnerPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the partner permissions granted for a workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions GetPartnerPermissions(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPartnerPermissions, null, options, request);
      }
      /// <summary>
      /// Gets the partner permissions granted for a workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions> GetPartnerPermissionsAsync(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPartnerPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the partner permissions granted for a workload
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions> GetPartnerPermissionsAsync(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPartnerPermissions, null, options, request);
      }
      /// <summary>
      /// Deprecated: Only returns access approval requests directly associated with
      /// an assured workload folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse ListAccessApprovalRequests(global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccessApprovalRequests(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Only returns access approval requests directly associated with
      /// an assured workload folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse ListAccessApprovalRequests(global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAccessApprovalRequests, null, options, request);
      }
      /// <summary>
      /// Deprecated: Only returns access approval requests directly associated with
      /// an assured workload folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse> ListAccessApprovalRequestsAsync(global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAccessApprovalRequestsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deprecated: Only returns access approval requests directly associated with
      /// an assured workload folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.ObsoleteAttribute]
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse> ListAccessApprovalRequestsAsync(global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAccessApprovalRequests, null, options, request);
      }
      /// <summary>
      /// Get details of a Partner.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.Partner GetPartner(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPartner(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details of a Partner.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.CloudControlsPartner.V1.Partner GetPartner(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPartner, null, options, request);
      }
      /// <summary>
      /// Get details of a Partner.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.Partner> GetPartnerAsync(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPartnerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get details of a Partner.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.CloudControlsPartner.V1.Partner> GetPartnerAsync(global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPartner, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CloudControlsPartnerCoreClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CloudControlsPartnerCoreClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CloudControlsPartnerCoreBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetWorkload, serviceImpl.GetWorkload)
          .AddMethod(__Method_ListWorkloads, serviceImpl.ListWorkloads)
          .AddMethod(__Method_GetCustomer, serviceImpl.GetCustomer)
          .AddMethod(__Method_ListCustomers, serviceImpl.ListCustomers)
          .AddMethod(__Method_GetEkmConnections, serviceImpl.GetEkmConnections)
          .AddMethod(__Method_GetPartnerPermissions, serviceImpl.GetPartnerPermissions)
          .AddMethod(__Method_ListAccessApprovalRequests, serviceImpl.ListAccessApprovalRequests)
          .AddMethod(__Method_GetPartner, serviceImpl.GetPartner).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CloudControlsPartnerCoreBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetWorkload, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudControlsPartner.V1.GetWorkloadRequest, global::Google.Cloud.CloudControlsPartner.V1.Workload>(serviceImpl.GetWorkload));
      serviceBinder.AddMethod(__Method_ListWorkloads, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsRequest, global::Google.Cloud.CloudControlsPartner.V1.ListWorkloadsResponse>(serviceImpl.ListWorkloads));
      serviceBinder.AddMethod(__Method_GetCustomer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudControlsPartner.V1.GetCustomerRequest, global::Google.Cloud.CloudControlsPartner.V1.Customer>(serviceImpl.GetCustomer));
      serviceBinder.AddMethod(__Method_ListCustomers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudControlsPartner.V1.ListCustomersRequest, global::Google.Cloud.CloudControlsPartner.V1.ListCustomersResponse>(serviceImpl.ListCustomers));
      serviceBinder.AddMethod(__Method_GetEkmConnections, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudControlsPartner.V1.GetEkmConnectionsRequest, global::Google.Cloud.CloudControlsPartner.V1.EkmConnections>(serviceImpl.GetEkmConnections));
      serviceBinder.AddMethod(__Method_GetPartnerPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudControlsPartner.V1.GetPartnerPermissionsRequest, global::Google.Cloud.CloudControlsPartner.V1.PartnerPermissions>(serviceImpl.GetPartnerPermissions));
      serviceBinder.AddMethod(__Method_ListAccessApprovalRequests, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsRequest, global::Google.Cloud.CloudControlsPartner.V1.ListAccessApprovalRequestsResponse>(serviceImpl.ListAccessApprovalRequests));
      serviceBinder.AddMethod(__Method_GetPartner, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.CloudControlsPartner.V1.GetPartnerRequest, global::Google.Cloud.CloudControlsPartner.V1.Partner>(serviceImpl.GetPartner));
    }

  }
}
#endregion
