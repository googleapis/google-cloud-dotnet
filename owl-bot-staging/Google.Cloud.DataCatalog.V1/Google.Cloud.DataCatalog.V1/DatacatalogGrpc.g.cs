// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/datacatalog/v1/datacatalog.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.DataCatalog.V1 {
  /// <summary>
  /// Data Catalog API service allows you to discover, understand, and manage
  /// your data.
  /// </summary>
  public static partial class DataCatalog
  {
    static readonly string __ServiceName = "google.cloud.datacatalog.v1.DataCatalog";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest> __Marshaller_google_cloud_datacatalog_v1_SearchCatalogRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse> __Marshaller_google_cloud_datacatalog_v1_SearchCatalogResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest> __Marshaller_google_cloud_datacatalog_v1_CreateEntryGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.EntryGroup> __Marshaller_google_cloud_datacatalog_v1_EntryGroup = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.EntryGroup.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest> __Marshaller_google_cloud_datacatalog_v1_GetEntryGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest> __Marshaller_google_cloud_datacatalog_v1_UpdateEntryGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest> __Marshaller_google_cloud_datacatalog_v1_DeleteEntryGroupRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest> __Marshaller_google_cloud_datacatalog_v1_ListEntryGroupsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse> __Marshaller_google_cloud_datacatalog_v1_ListEntryGroupsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.CreateEntryRequest> __Marshaller_google_cloud_datacatalog_v1_CreateEntryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.CreateEntryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.Entry> __Marshaller_google_cloud_datacatalog_v1_Entry = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.Entry.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest> __Marshaller_google_cloud_datacatalog_v1_UpdateEntryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest> __Marshaller_google_cloud_datacatalog_v1_DeleteEntryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.GetEntryRequest> __Marshaller_google_cloud_datacatalog_v1_GetEntryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.GetEntryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.LookupEntryRequest> __Marshaller_google_cloud_datacatalog_v1_LookupEntryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.LookupEntryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ListEntriesRequest> __Marshaller_google_cloud_datacatalog_v1_ListEntriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ListEntriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ListEntriesResponse> __Marshaller_google_cloud_datacatalog_v1_ListEntriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ListEntriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest> __Marshaller_google_cloud_datacatalog_v1_ModifyEntryOverviewRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.EntryOverview> __Marshaller_google_cloud_datacatalog_v1_EntryOverview = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.EntryOverview.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest> __Marshaller_google_cloud_datacatalog_v1_ModifyEntryContactsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.Contacts> __Marshaller_google_cloud_datacatalog_v1_Contacts = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.Contacts.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest> __Marshaller_google_cloud_datacatalog_v1_CreateTagTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.TagTemplate> __Marshaller_google_cloud_datacatalog_v1_TagTemplate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.TagTemplate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest> __Marshaller_google_cloud_datacatalog_v1_GetTagTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest> __Marshaller_google_cloud_datacatalog_v1_UpdateTagTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest> __Marshaller_google_cloud_datacatalog_v1_DeleteTagTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest> __Marshaller_google_cloud_datacatalog_v1_CreateTagTemplateFieldRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.TagTemplateField> __Marshaller_google_cloud_datacatalog_v1_TagTemplateField = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.TagTemplateField.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest> __Marshaller_google_cloud_datacatalog_v1_UpdateTagTemplateFieldRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest> __Marshaller_google_cloud_datacatalog_v1_RenameTagTemplateFieldRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest> __Marshaller_google_cloud_datacatalog_v1_RenameTagTemplateFieldEnumValueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest> __Marshaller_google_cloud_datacatalog_v1_DeleteTagTemplateFieldRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.CreateTagRequest> __Marshaller_google_cloud_datacatalog_v1_CreateTagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.CreateTagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.Tag> __Marshaller_google_cloud_datacatalog_v1_Tag = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.Tag.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.UpdateTagRequest> __Marshaller_google_cloud_datacatalog_v1_UpdateTagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.UpdateTagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.DeleteTagRequest> __Marshaller_google_cloud_datacatalog_v1_DeleteTagRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.DeleteTagRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ListTagsRequest> __Marshaller_google_cloud_datacatalog_v1_ListTagsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ListTagsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ListTagsResponse> __Marshaller_google_cloud_datacatalog_v1_ListTagsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ListTagsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest> __Marshaller_google_cloud_datacatalog_v1_ReconcileTagsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.StarEntryRequest> __Marshaller_google_cloud_datacatalog_v1_StarEntryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.StarEntryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.StarEntryResponse> __Marshaller_google_cloud_datacatalog_v1_StarEntryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.StarEntryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest> __Marshaller_google_cloud_datacatalog_v1_UnstarEntryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse> __Marshaller_google_cloud_datacatalog_v1_UnstarEntryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest> __Marshaller_google_cloud_datacatalog_v1_ImportEntriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.SetConfigRequest> __Marshaller_google_cloud_datacatalog_v1_SetConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.SetConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.MigrationConfig> __Marshaller_google_cloud_datacatalog_v1_MigrationConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.MigrationConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest> __Marshaller_google_cloud_datacatalog_v1_RetrieveConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.OrganizationConfig> __Marshaller_google_cloud_datacatalog_v1_OrganizationConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.OrganizationConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest> __Marshaller_google_cloud_datacatalog_v1_RetrieveEffectiveConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest, global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse> __Method_SearchCatalog = new grpc::Method<global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest, global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchCatalog",
        __Marshaller_google_cloud_datacatalog_v1_SearchCatalogRequest,
        __Marshaller_google_cloud_datacatalog_v1_SearchCatalogResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup> __Method_CreateEntryGroup = new grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEntryGroup",
        __Marshaller_google_cloud_datacatalog_v1_CreateEntryGroupRequest,
        __Marshaller_google_cloud_datacatalog_v1_EntryGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup> __Method_GetEntryGroup = new grpc::Method<global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEntryGroup",
        __Marshaller_google_cloud_datacatalog_v1_GetEntryGroupRequest,
        __Marshaller_google_cloud_datacatalog_v1_EntryGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup> __Method_UpdateEntryGroup = new grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEntryGroup",
        __Marshaller_google_cloud_datacatalog_v1_UpdateEntryGroupRequest,
        __Marshaller_google_cloud_datacatalog_v1_EntryGroup);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteEntryGroup = new grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEntryGroup",
        __Marshaller_google_cloud_datacatalog_v1_DeleteEntryGroupRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest, global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse> __Method_ListEntryGroups = new grpc::Method<global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest, global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEntryGroups",
        __Marshaller_google_cloud_datacatalog_v1_ListEntryGroupsRequest,
        __Marshaller_google_cloud_datacatalog_v1_ListEntryGroupsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry> __Method_CreateEntry = new grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEntry",
        __Marshaller_google_cloud_datacatalog_v1_CreateEntryRequest,
        __Marshaller_google_cloud_datacatalog_v1_Entry);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry> __Method_UpdateEntry = new grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEntry",
        __Marshaller_google_cloud_datacatalog_v1_UpdateEntryRequest,
        __Marshaller_google_cloud_datacatalog_v1_Entry);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteEntry = new grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteEntry",
        __Marshaller_google_cloud_datacatalog_v1_DeleteEntryRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.GetEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry> __Method_GetEntry = new grpc::Method<global::Google.Cloud.DataCatalog.V1.GetEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEntry",
        __Marshaller_google_cloud_datacatalog_v1_GetEntryRequest,
        __Marshaller_google_cloud_datacatalog_v1_Entry);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.LookupEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry> __Method_LookupEntry = new grpc::Method<global::Google.Cloud.DataCatalog.V1.LookupEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LookupEntry",
        __Marshaller_google_cloud_datacatalog_v1_LookupEntryRequest,
        __Marshaller_google_cloud_datacatalog_v1_Entry);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.ListEntriesRequest, global::Google.Cloud.DataCatalog.V1.ListEntriesResponse> __Method_ListEntries = new grpc::Method<global::Google.Cloud.DataCatalog.V1.ListEntriesRequest, global::Google.Cloud.DataCatalog.V1.ListEntriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEntries",
        __Marshaller_google_cloud_datacatalog_v1_ListEntriesRequest,
        __Marshaller_google_cloud_datacatalog_v1_ListEntriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest, global::Google.Cloud.DataCatalog.V1.EntryOverview> __Method_ModifyEntryOverview = new grpc::Method<global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest, global::Google.Cloud.DataCatalog.V1.EntryOverview>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModifyEntryOverview",
        __Marshaller_google_cloud_datacatalog_v1_ModifyEntryOverviewRequest,
        __Marshaller_google_cloud_datacatalog_v1_EntryOverview);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest, global::Google.Cloud.DataCatalog.V1.Contacts> __Method_ModifyEntryContacts = new grpc::Method<global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest, global::Google.Cloud.DataCatalog.V1.Contacts>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ModifyEntryContacts",
        __Marshaller_google_cloud_datacatalog_v1_ModifyEntryContactsRequest,
        __Marshaller_google_cloud_datacatalog_v1_Contacts);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate> __Method_CreateTagTemplate = new grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTagTemplate",
        __Marshaller_google_cloud_datacatalog_v1_CreateTagTemplateRequest,
        __Marshaller_google_cloud_datacatalog_v1_TagTemplate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate> __Method_GetTagTemplate = new grpc::Method<global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTagTemplate",
        __Marshaller_google_cloud_datacatalog_v1_GetTagTemplateRequest,
        __Marshaller_google_cloud_datacatalog_v1_TagTemplate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate> __Method_UpdateTagTemplate = new grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTagTemplate",
        __Marshaller_google_cloud_datacatalog_v1_UpdateTagTemplateRequest,
        __Marshaller_google_cloud_datacatalog_v1_TagTemplate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTagTemplate = new grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTagTemplate",
        __Marshaller_google_cloud_datacatalog_v1_DeleteTagTemplateRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField> __Method_CreateTagTemplateField = new grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTagTemplateField",
        __Marshaller_google_cloud_datacatalog_v1_CreateTagTemplateFieldRequest,
        __Marshaller_google_cloud_datacatalog_v1_TagTemplateField);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField> __Method_UpdateTagTemplateField = new grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTagTemplateField",
        __Marshaller_google_cloud_datacatalog_v1_UpdateTagTemplateFieldRequest,
        __Marshaller_google_cloud_datacatalog_v1_TagTemplateField);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField> __Method_RenameTagTemplateField = new grpc::Method<global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RenameTagTemplateField",
        __Marshaller_google_cloud_datacatalog_v1_RenameTagTemplateFieldRequest,
        __Marshaller_google_cloud_datacatalog_v1_TagTemplateField);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField> __Method_RenameTagTemplateFieldEnumValue = new grpc::Method<global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RenameTagTemplateFieldEnumValue",
        __Marshaller_google_cloud_datacatalog_v1_RenameTagTemplateFieldEnumValueRequest,
        __Marshaller_google_cloud_datacatalog_v1_TagTemplateField);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTagTemplateField = new grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTagTemplateField",
        __Marshaller_google_cloud_datacatalog_v1_DeleteTagTemplateFieldRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateTagRequest, global::Google.Cloud.DataCatalog.V1.Tag> __Method_CreateTag = new grpc::Method<global::Google.Cloud.DataCatalog.V1.CreateTagRequest, global::Google.Cloud.DataCatalog.V1.Tag>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTag",
        __Marshaller_google_cloud_datacatalog_v1_CreateTagRequest,
        __Marshaller_google_cloud_datacatalog_v1_Tag);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateTagRequest, global::Google.Cloud.DataCatalog.V1.Tag> __Method_UpdateTag = new grpc::Method<global::Google.Cloud.DataCatalog.V1.UpdateTagRequest, global::Google.Cloud.DataCatalog.V1.Tag>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTag",
        __Marshaller_google_cloud_datacatalog_v1_UpdateTagRequest,
        __Marshaller_google_cloud_datacatalog_v1_Tag);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteTagRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTag = new grpc::Method<global::Google.Cloud.DataCatalog.V1.DeleteTagRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTag",
        __Marshaller_google_cloud_datacatalog_v1_DeleteTagRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.ListTagsRequest, global::Google.Cloud.DataCatalog.V1.ListTagsResponse> __Method_ListTags = new grpc::Method<global::Google.Cloud.DataCatalog.V1.ListTagsRequest, global::Google.Cloud.DataCatalog.V1.ListTagsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTags",
        __Marshaller_google_cloud_datacatalog_v1_ListTagsRequest,
        __Marshaller_google_cloud_datacatalog_v1_ListTagsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest, global::Google.LongRunning.Operation> __Method_ReconcileTags = new grpc::Method<global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReconcileTags",
        __Marshaller_google_cloud_datacatalog_v1_ReconcileTagsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.StarEntryRequest, global::Google.Cloud.DataCatalog.V1.StarEntryResponse> __Method_StarEntry = new grpc::Method<global::Google.Cloud.DataCatalog.V1.StarEntryRequest, global::Google.Cloud.DataCatalog.V1.StarEntryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StarEntry",
        __Marshaller_google_cloud_datacatalog_v1_StarEntryRequest,
        __Marshaller_google_cloud_datacatalog_v1_StarEntryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest, global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse> __Method_UnstarEntry = new grpc::Method<global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest, global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnstarEntry",
        __Marshaller_google_cloud_datacatalog_v1_UnstarEntryRequest,
        __Marshaller_google_cloud_datacatalog_v1_UnstarEntryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest, global::Google.LongRunning.Operation> __Method_ImportEntries = new grpc::Method<global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportEntries",
        __Marshaller_google_cloud_datacatalog_v1_ImportEntriesRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.SetConfigRequest, global::Google.Cloud.DataCatalog.V1.MigrationConfig> __Method_SetConfig = new grpc::Method<global::Google.Cloud.DataCatalog.V1.SetConfigRequest, global::Google.Cloud.DataCatalog.V1.MigrationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetConfig",
        __Marshaller_google_cloud_datacatalog_v1_SetConfigRequest,
        __Marshaller_google_cloud_datacatalog_v1_MigrationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest, global::Google.Cloud.DataCatalog.V1.OrganizationConfig> __Method_RetrieveConfig = new grpc::Method<global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest, global::Google.Cloud.DataCatalog.V1.OrganizationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveConfig",
        __Marshaller_google_cloud_datacatalog_v1_RetrieveConfigRequest,
        __Marshaller_google_cloud_datacatalog_v1_OrganizationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest, global::Google.Cloud.DataCatalog.V1.MigrationConfig> __Method_RetrieveEffectiveConfig = new grpc::Method<global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest, global::Google.Cloud.DataCatalog.V1.MigrationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveEffectiveConfig",
        __Marshaller_google_cloud_datacatalog_v1_RetrieveEffectiveConfigRequest,
        __Marshaller_google_cloud_datacatalog_v1_MigrationConfig);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.DataCatalog.V1.DatacatalogReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataCatalog</summary>
    [grpc::BindServiceMethod(typeof(DataCatalog), "BindService")]
    public abstract partial class DataCatalogBase
    {
      /// <summary>
      /// Searches Data Catalog for multiple resources like entries and tags that
      /// match a query.
      ///
      /// This is a [Custom Method]
      /// (https://cloud.google.com/apis/design/custom_methods) that doesn't return
      /// all information on a resource, only its ID and high level fields. To get
      /// more information, you can subsequently call specific get methods.
      ///
      /// Note: Data Catalog search queries don't guarantee full recall. Results
      /// that match your query might not be returned, even in subsequent
      /// result pages. Additionally, returned (and not returned) results can vary
      /// if you repeat search queries.
      ///
      /// For more information, see [Data Catalog search syntax]
      /// (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse> SearchCatalog(global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an entry group.
      ///
      /// An entry group contains logically related entries together with [Cloud
      /// Identity and Access Management](/data-catalog/docs/concepts/iam) policies.
      /// These policies specify users who can create, edit, and view entries
      /// within entry groups.
      ///
      /// Data Catalog automatically creates entry groups with names that start with
      /// the `@` symbol for the following resources:
      ///
      /// * BigQuery entries (`@bigquery`)
      /// * Pub/Sub topics (`@pubsub`)
      /// * Dataproc Metastore services (`@dataproc_metastore_{SERVICE_NAME_HASH}`)
      ///
      /// You can create your own entry groups for Cloud Storage fileset entries
      /// and custom entries together with the corresponding IAM policies.
      /// User-created entry groups can't contain the `@` symbol, it is reserved
      /// for automatically created groups.
      ///
      /// Entry groups, like entries, can be searched.
      ///
      /// A maximum of 10,000 entry groups may be created per organization across all
      /// locations.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.EntryGroup> CreateEntryGroup(global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an entry group.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.EntryGroup> GetEntryGroup(global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an entry group.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry_group.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.EntryGroup> UpdateEntryGroup(global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an entry group.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEntryGroup(global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists entry groups.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse> ListEntryGroups(global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an entry.
      ///
      /// You can create entries only with 'FILESET', 'CLUSTER', 'DATA_STREAM',
      /// or custom types. Data Catalog automatically creates entries with other
      /// types during metadata ingestion from integrated systems.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      ///
      /// An entry group can have a maximum of 100,000 entries.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.Entry> CreateEntry(global::Google.Cloud.DataCatalog.V1.CreateEntryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing entry.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.Entry> UpdateEntry(global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an existing entry.
      ///
      /// You can delete only the entries created by the
      /// [CreateEntry][google.cloud.datacatalog.v1.DataCatalog.CreateEntry]
      /// method.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEntry(global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an entry.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.Entry> GetEntry(global::Google.Cloud.DataCatalog.V1.GetEntryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an entry by its target resource name.
      ///
      /// The resource name comes from the source Google Cloud Platform service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.Entry> LookupEntry(global::Google.Cloud.DataCatalog.V1.LookupEntryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists entries.
      ///
      /// Note: Currently, this method can list only custom entries.
      /// To get a list of both custom and automatically created entries, use
      /// [SearchCatalog][google.cloud.datacatalog.v1.DataCatalog.SearchCatalog].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.ListEntriesResponse> ListEntries(global::Google.Cloud.DataCatalog.V1.ListEntriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Modifies entry overview, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateOverview`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.EntryOverview> ModifyEntryOverview(global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Modifies contacts, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateContacts`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.Contacts> ModifyEntryContacts(global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `parent` parameter.
      /// For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.TagTemplate> CreateTagTemplate(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a tag template.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.TagTemplate> GetTagTemplate(global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a tag template.
      ///
      /// You can't update template fields with this method. These fields are
      /// separate resources with their own create, update, and delete methods.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `tag_template.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.TagTemplate> UpdateTagTemplate(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a tag template and all tags that use it.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTagTemplate(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.TagTemplateField> CreateTagTemplateField(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a field in a tag template.
      ///
      /// You can't update the field type with this method.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.TagTemplateField> UpdateTagTemplateField(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Renames a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `name` parameter. For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.TagTemplateField> RenameTagTemplateField(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Renames an enum value in a tag template.
      ///
      /// Within a single enum field, enum values must be unique.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.TagTemplateField> RenameTagTemplateFieldEnumValue(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a field in a tag template and all uses of this field from the tags
      /// based on this template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTagTemplateField(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a tag and assigns it to:
      ///
      /// * An [Entry][google.cloud.datacatalog.v1.Entry] if the method name is
      ///   `projects.locations.entryGroups.entries.tags.create`.
      /// * Or [EntryGroup][google.cloud.datacatalog.v1.EntryGroup]if the method
      ///   name is `projects.locations.entryGroups.tags.create`.
      ///
      /// Note: The project identified by the `parent` parameter for the [tag]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
      /// and the [tag template]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
      /// used to create the tag must be in the same organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.Tag> CreateTag(global::Google.Cloud.DataCatalog.V1.CreateTagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing tag.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.Tag> UpdateTag(global::Google.Cloud.DataCatalog.V1.UpdateTagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a tag.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTag(global::Google.Cloud.DataCatalog.V1.DeleteTagRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists tags assigned to an [Entry][google.cloud.datacatalog.v1.Entry].
      /// The [columns][google.cloud.datacatalog.v1.Tag.column] in the response are
      /// lowercased.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.ListTagsResponse> ListTags(global::Google.Cloud.DataCatalog.V1.ListTagsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// `ReconcileTags` creates or updates a list of tags on the entry.
      /// If the
      /// [ReconcileTagsRequest.force_delete_missing][google.cloud.datacatalog.v1.ReconcileTagsRequest.force_delete_missing]
      /// parameter is set, the operation deletes tags not included in the input tag
      /// list.
      ///
      /// `ReconcileTags` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return [ReconcileTagsMetadata]
      /// [google.cloud.datacatalog.v1.ReconcileTagsMetadata] and
      /// a [ReconcileTagsResponse]
      /// [google.cloud.datacatalog.v1.ReconcileTagsResponse] message.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ReconcileTags(global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.StarEntryResponse> StarEntry(global::Google.Cloud.DataCatalog.V1.StarEntryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as NOT starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse> UnstarEntry(global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets an access control policy for a resource. Replaces any existing
      /// policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method sets policies only within Data Catalog and can't be
      /// used to manage policies in BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources synced with the Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the access control policy for a resource.
      ///
      /// May return:
      ///
      /// * A`NOT_FOUND` error if the resource doesn't exist or you don't have the
      ///   permission to view it.
      /// * An empty policy if the resource exists but doesn't have a set policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method doesn't get policies from Google Cloud Platform
      /// resources ingested into Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets your permissions on a resource.
      ///
      /// Returns an empty set of permissions if the resource doesn't exist.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method gets policies only within Data Catalog and can't be
      /// used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources ingested into Data Catalog.
      ///
      /// No Google IAM permissions are required to call this method.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Imports entries from a source, such as data previously dumped into a
      /// Cloud Storage bucket, into Data Catalog. Import of entries
      /// is a sync operation that reconciles the state of the third-party system
      /// with the Data Catalog.
      ///
      /// `ImportEntries` accepts source data snapshots of a third-party system.
      /// Snapshot should be delivered as a .wire or base65-encoded .txt file
      /// containing a sequence of Protocol Buffer messages of
      /// [DumpItem][google.cloud.datacatalog.v1.DumpItem] type.
      ///
      /// `ImportEntries` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return
      /// [ImportEntriesMetadata][google.cloud.datacatalog.v1.ImportEntriesMetadata]
      /// and an
      /// [ImportEntriesResponse][google.cloud.datacatalog.v1.ImportEntriesResponse]
      /// message.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ImportEntries(global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets the configuration related to the migration to Dataplex for an
      /// organization or project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.MigrationConfig> SetConfig(global::Google.Cloud.DataCatalog.V1.SetConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the configuration related to the migration from Data Catalog to
      /// Dataplex for a specific organization, including all the projects under it
      /// which have a separate configuration set.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.OrganizationConfig> RetrieveConfig(global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves the effective configuration related to the migration from Data
      /// Catalog to Dataplex for a specific organization or project. If there is no
      /// specific configuration set for the resource, the setting is checked
      /// hierarchicahlly through the ancestors of the resource, starting from the
      /// resource itself.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.DataCatalog.V1.MigrationConfig> RetrieveEffectiveConfig(global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataCatalog</summary>
    public partial class DataCatalogClient : grpc::ClientBase<DataCatalogClient>
    {
      /// <summary>Creates a new client for DataCatalog</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataCatalogClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataCatalog that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DataCatalogClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataCatalogClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DataCatalogClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Searches Data Catalog for multiple resources like entries and tags that
      /// match a query.
      ///
      /// This is a [Custom Method]
      /// (https://cloud.google.com/apis/design/custom_methods) that doesn't return
      /// all information on a resource, only its ID and high level fields. To get
      /// more information, you can subsequently call specific get methods.
      ///
      /// Note: Data Catalog search queries don't guarantee full recall. Results
      /// that match your query might not be returned, even in subsequent
      /// result pages. Additionally, returned (and not returned) results can vary
      /// if you repeat search queries.
      ///
      /// For more information, see [Data Catalog search syntax]
      /// (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse SearchCatalog(global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchCatalog(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches Data Catalog for multiple resources like entries and tags that
      /// match a query.
      ///
      /// This is a [Custom Method]
      /// (https://cloud.google.com/apis/design/custom_methods) that doesn't return
      /// all information on a resource, only its ID and high level fields. To get
      /// more information, you can subsequently call specific get methods.
      ///
      /// Note: Data Catalog search queries don't guarantee full recall. Results
      /// that match your query might not be returned, even in subsequent
      /// result pages. Additionally, returned (and not returned) results can vary
      /// if you repeat search queries.
      ///
      /// For more information, see [Data Catalog search syntax]
      /// (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse SearchCatalog(global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchCatalog, null, options, request);
      }
      /// <summary>
      /// Searches Data Catalog for multiple resources like entries and tags that
      /// match a query.
      ///
      /// This is a [Custom Method]
      /// (https://cloud.google.com/apis/design/custom_methods) that doesn't return
      /// all information on a resource, only its ID and high level fields. To get
      /// more information, you can subsequently call specific get methods.
      ///
      /// Note: Data Catalog search queries don't guarantee full recall. Results
      /// that match your query might not be returned, even in subsequent
      /// result pages. Additionally, returned (and not returned) results can vary
      /// if you repeat search queries.
      ///
      /// For more information, see [Data Catalog search syntax]
      /// (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse> SearchCatalogAsync(global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchCatalogAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches Data Catalog for multiple resources like entries and tags that
      /// match a query.
      ///
      /// This is a [Custom Method]
      /// (https://cloud.google.com/apis/design/custom_methods) that doesn't return
      /// all information on a resource, only its ID and high level fields. To get
      /// more information, you can subsequently call specific get methods.
      ///
      /// Note: Data Catalog search queries don't guarantee full recall. Results
      /// that match your query might not be returned, even in subsequent
      /// result pages. Additionally, returned (and not returned) results can vary
      /// if you repeat search queries.
      ///
      /// For more information, see [Data Catalog search syntax]
      /// (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse> SearchCatalogAsync(global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchCatalog, null, options, request);
      }
      /// <summary>
      /// Creates an entry group.
      ///
      /// An entry group contains logically related entries together with [Cloud
      /// Identity and Access Management](/data-catalog/docs/concepts/iam) policies.
      /// These policies specify users who can create, edit, and view entries
      /// within entry groups.
      ///
      /// Data Catalog automatically creates entry groups with names that start with
      /// the `@` symbol for the following resources:
      ///
      /// * BigQuery entries (`@bigquery`)
      /// * Pub/Sub topics (`@pubsub`)
      /// * Dataproc Metastore services (`@dataproc_metastore_{SERVICE_NAME_HASH}`)
      ///
      /// You can create your own entry groups for Cloud Storage fileset entries
      /// and custom entries together with the corresponding IAM policies.
      /// User-created entry groups can't contain the `@` symbol, it is reserved
      /// for automatically created groups.
      ///
      /// Entry groups, like entries, can be searched.
      ///
      /// A maximum of 10,000 entry groups may be created per organization across all
      /// locations.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.EntryGroup CreateEntryGroup(global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEntryGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an entry group.
      ///
      /// An entry group contains logically related entries together with [Cloud
      /// Identity and Access Management](/data-catalog/docs/concepts/iam) policies.
      /// These policies specify users who can create, edit, and view entries
      /// within entry groups.
      ///
      /// Data Catalog automatically creates entry groups with names that start with
      /// the `@` symbol for the following resources:
      ///
      /// * BigQuery entries (`@bigquery`)
      /// * Pub/Sub topics (`@pubsub`)
      /// * Dataproc Metastore services (`@dataproc_metastore_{SERVICE_NAME_HASH}`)
      ///
      /// You can create your own entry groups for Cloud Storage fileset entries
      /// and custom entries together with the corresponding IAM policies.
      /// User-created entry groups can't contain the `@` symbol, it is reserved
      /// for automatically created groups.
      ///
      /// Entry groups, like entries, can be searched.
      ///
      /// A maximum of 10,000 entry groups may be created per organization across all
      /// locations.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.EntryGroup CreateEntryGroup(global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEntryGroup, null, options, request);
      }
      /// <summary>
      /// Creates an entry group.
      ///
      /// An entry group contains logically related entries together with [Cloud
      /// Identity and Access Management](/data-catalog/docs/concepts/iam) policies.
      /// These policies specify users who can create, edit, and view entries
      /// within entry groups.
      ///
      /// Data Catalog automatically creates entry groups with names that start with
      /// the `@` symbol for the following resources:
      ///
      /// * BigQuery entries (`@bigquery`)
      /// * Pub/Sub topics (`@pubsub`)
      /// * Dataproc Metastore services (`@dataproc_metastore_{SERVICE_NAME_HASH}`)
      ///
      /// You can create your own entry groups for Cloud Storage fileset entries
      /// and custom entries together with the corresponding IAM policies.
      /// User-created entry groups can't contain the `@` symbol, it is reserved
      /// for automatically created groups.
      ///
      /// Entry groups, like entries, can be searched.
      ///
      /// A maximum of 10,000 entry groups may be created per organization across all
      /// locations.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.EntryGroup> CreateEntryGroupAsync(global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEntryGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an entry group.
      ///
      /// An entry group contains logically related entries together with [Cloud
      /// Identity and Access Management](/data-catalog/docs/concepts/iam) policies.
      /// These policies specify users who can create, edit, and view entries
      /// within entry groups.
      ///
      /// Data Catalog automatically creates entry groups with names that start with
      /// the `@` symbol for the following resources:
      ///
      /// * BigQuery entries (`@bigquery`)
      /// * Pub/Sub topics (`@pubsub`)
      /// * Dataproc Metastore services (`@dataproc_metastore_{SERVICE_NAME_HASH}`)
      ///
      /// You can create your own entry groups for Cloud Storage fileset entries
      /// and custom entries together with the corresponding IAM policies.
      /// User-created entry groups can't contain the `@` symbol, it is reserved
      /// for automatically created groups.
      ///
      /// Entry groups, like entries, can be searched.
      ///
      /// A maximum of 10,000 entry groups may be created per organization across all
      /// locations.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.EntryGroup> CreateEntryGroupAsync(global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEntryGroup, null, options, request);
      }
      /// <summary>
      /// Gets an entry group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.EntryGroup GetEntryGroup(global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEntryGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an entry group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.EntryGroup GetEntryGroup(global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEntryGroup, null, options, request);
      }
      /// <summary>
      /// Gets an entry group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.EntryGroup> GetEntryGroupAsync(global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEntryGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an entry group.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.EntryGroup> GetEntryGroupAsync(global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEntryGroup, null, options, request);
      }
      /// <summary>
      /// Updates an entry group.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry_group.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.EntryGroup UpdateEntryGroup(global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEntryGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an entry group.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry_group.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.EntryGroup UpdateEntryGroup(global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEntryGroup, null, options, request);
      }
      /// <summary>
      /// Updates an entry group.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry_group.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.EntryGroup> UpdateEntryGroupAsync(global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEntryGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an entry group.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry_group.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.EntryGroup> UpdateEntryGroupAsync(global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEntryGroup, null, options, request);
      }
      /// <summary>
      /// Deletes an entry group.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEntryGroup(global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEntryGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an entry group.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEntryGroup(global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEntryGroup, null, options, request);
      }
      /// <summary>
      /// Deletes an entry group.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEntryGroupAsync(global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEntryGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an entry group.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEntryGroupAsync(global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEntryGroup, null, options, request);
      }
      /// <summary>
      /// Lists entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse ListEntryGroups(global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntryGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse ListEntryGroups(global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEntryGroups, null, options, request);
      }
      /// <summary>
      /// Lists entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse> ListEntryGroupsAsync(global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntryGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse> ListEntryGroupsAsync(global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEntryGroups, null, options, request);
      }
      /// <summary>
      /// Creates an entry.
      ///
      /// You can create entries only with 'FILESET', 'CLUSTER', 'DATA_STREAM',
      /// or custom types. Data Catalog automatically creates entries with other
      /// types during metadata ingestion from integrated systems.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      ///
      /// An entry group can have a maximum of 100,000 entries.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Entry CreateEntry(global::Google.Cloud.DataCatalog.V1.CreateEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEntry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an entry.
      ///
      /// You can create entries only with 'FILESET', 'CLUSTER', 'DATA_STREAM',
      /// or custom types. Data Catalog automatically creates entries with other
      /// types during metadata ingestion from integrated systems.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      ///
      /// An entry group can have a maximum of 100,000 entries.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Entry CreateEntry(global::Google.Cloud.DataCatalog.V1.CreateEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEntry, null, options, request);
      }
      /// <summary>
      /// Creates an entry.
      ///
      /// You can create entries only with 'FILESET', 'CLUSTER', 'DATA_STREAM',
      /// or custom types. Data Catalog automatically creates entries with other
      /// types during metadata ingestion from integrated systems.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      ///
      /// An entry group can have a maximum of 100,000 entries.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Entry> CreateEntryAsync(global::Google.Cloud.DataCatalog.V1.CreateEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEntryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an entry.
      ///
      /// You can create entries only with 'FILESET', 'CLUSTER', 'DATA_STREAM',
      /// or custom types. Data Catalog automatically creates entries with other
      /// types during metadata ingestion from integrated systems.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      ///
      /// An entry group can have a maximum of 100,000 entries.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Entry> CreateEntryAsync(global::Google.Cloud.DataCatalog.V1.CreateEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEntry, null, options, request);
      }
      /// <summary>
      /// Updates an existing entry.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Entry UpdateEntry(global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEntry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing entry.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Entry UpdateEntry(global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEntry, null, options, request);
      }
      /// <summary>
      /// Updates an existing entry.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Entry> UpdateEntryAsync(global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEntryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing entry.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `entry.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Entry> UpdateEntryAsync(global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEntry, null, options, request);
      }
      /// <summary>
      /// Deletes an existing entry.
      ///
      /// You can delete only the entries created by the
      /// [CreateEntry][google.cloud.datacatalog.v1.DataCatalog.CreateEntry]
      /// method.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEntry(global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEntry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an existing entry.
      ///
      /// You can delete only the entries created by the
      /// [CreateEntry][google.cloud.datacatalog.v1.DataCatalog.CreateEntry]
      /// method.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteEntry(global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteEntry, null, options, request);
      }
      /// <summary>
      /// Deletes an existing entry.
      ///
      /// You can delete only the entries created by the
      /// [CreateEntry][google.cloud.datacatalog.v1.DataCatalog.CreateEntry]
      /// method.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEntryAsync(global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteEntryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an existing entry.
      ///
      /// You can delete only the entries created by the
      /// [CreateEntry][google.cloud.datacatalog.v1.DataCatalog.CreateEntry]
      /// method.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteEntryAsync(global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteEntry, null, options, request);
      }
      /// <summary>
      /// Gets an entry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Entry GetEntry(global::Google.Cloud.DataCatalog.V1.GetEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEntry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an entry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Entry GetEntry(global::Google.Cloud.DataCatalog.V1.GetEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEntry, null, options, request);
      }
      /// <summary>
      /// Gets an entry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Entry> GetEntryAsync(global::Google.Cloud.DataCatalog.V1.GetEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEntryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an entry.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Entry> GetEntryAsync(global::Google.Cloud.DataCatalog.V1.GetEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEntry, null, options, request);
      }
      /// <summary>
      /// Gets an entry by its target resource name.
      ///
      /// The resource name comes from the source Google Cloud Platform service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Entry LookupEntry(global::Google.Cloud.DataCatalog.V1.LookupEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupEntry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an entry by its target resource name.
      ///
      /// The resource name comes from the source Google Cloud Platform service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Entry LookupEntry(global::Google.Cloud.DataCatalog.V1.LookupEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LookupEntry, null, options, request);
      }
      /// <summary>
      /// Gets an entry by its target resource name.
      ///
      /// The resource name comes from the source Google Cloud Platform service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Entry> LookupEntryAsync(global::Google.Cloud.DataCatalog.V1.LookupEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LookupEntryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an entry by its target resource name.
      ///
      /// The resource name comes from the source Google Cloud Platform service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Entry> LookupEntryAsync(global::Google.Cloud.DataCatalog.V1.LookupEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LookupEntry, null, options, request);
      }
      /// <summary>
      /// Lists entries.
      ///
      /// Note: Currently, this method can list only custom entries.
      /// To get a list of both custom and automatically created entries, use
      /// [SearchCatalog][google.cloud.datacatalog.v1.DataCatalog.SearchCatalog].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.ListEntriesResponse ListEntries(global::Google.Cloud.DataCatalog.V1.ListEntriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists entries.
      ///
      /// Note: Currently, this method can list only custom entries.
      /// To get a list of both custom and automatically created entries, use
      /// [SearchCatalog][google.cloud.datacatalog.v1.DataCatalog.SearchCatalog].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.ListEntriesResponse ListEntries(global::Google.Cloud.DataCatalog.V1.ListEntriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEntries, null, options, request);
      }
      /// <summary>
      /// Lists entries.
      ///
      /// Note: Currently, this method can list only custom entries.
      /// To get a list of both custom and automatically created entries, use
      /// [SearchCatalog][google.cloud.datacatalog.v1.DataCatalog.SearchCatalog].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.ListEntriesResponse> ListEntriesAsync(global::Google.Cloud.DataCatalog.V1.ListEntriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEntriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists entries.
      ///
      /// Note: Currently, this method can list only custom entries.
      /// To get a list of both custom and automatically created entries, use
      /// [SearchCatalog][google.cloud.datacatalog.v1.DataCatalog.SearchCatalog].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.ListEntriesResponse> ListEntriesAsync(global::Google.Cloud.DataCatalog.V1.ListEntriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEntries, null, options, request);
      }
      /// <summary>
      /// Modifies entry overview, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateOverview`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.EntryOverview ModifyEntryOverview(global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyEntryOverview(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modifies entry overview, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateOverview`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.EntryOverview ModifyEntryOverview(global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModifyEntryOverview, null, options, request);
      }
      /// <summary>
      /// Modifies entry overview, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateOverview`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.EntryOverview> ModifyEntryOverviewAsync(global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyEntryOverviewAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modifies entry overview, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateOverview`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.EntryOverview> ModifyEntryOverviewAsync(global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModifyEntryOverview, null, options, request);
      }
      /// <summary>
      /// Modifies contacts, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateContacts`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Contacts ModifyEntryContacts(global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyEntryContacts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modifies contacts, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateContacts`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Contacts ModifyEntryContacts(global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ModifyEntryContacts, null, options, request);
      }
      /// <summary>
      /// Modifies contacts, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateContacts`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Contacts> ModifyEntryContactsAsync(global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ModifyEntryContactsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modifies contacts, part of the business context of an
      /// [Entry][google.cloud.datacatalog.v1.Entry].
      ///
      /// To call this method, you must have the `datacatalog.entries.updateContacts`
      /// IAM permission on the corresponding project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Contacts> ModifyEntryContactsAsync(global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ModifyEntryContacts, null, options, request);
      }
      /// <summary>
      /// Creates a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `parent` parameter.
      /// For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplate CreateTagTemplate(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTagTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `parent` parameter.
      /// For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplate CreateTagTemplate(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTagTemplate, null, options, request);
      }
      /// <summary>
      /// Creates a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `parent` parameter.
      /// For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplate> CreateTagTemplateAsync(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTagTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `parent` parameter.
      /// For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplate> CreateTagTemplateAsync(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTagTemplate, null, options, request);
      }
      /// <summary>
      /// Gets a tag template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplate GetTagTemplate(global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTagTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a tag template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplate GetTagTemplate(global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTagTemplate, null, options, request);
      }
      /// <summary>
      /// Gets a tag template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplate> GetTagTemplateAsync(global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTagTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a tag template.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplate> GetTagTemplateAsync(global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTagTemplate, null, options, request);
      }
      /// <summary>
      /// Updates a tag template.
      ///
      /// You can't update template fields with this method. These fields are
      /// separate resources with their own create, update, and delete methods.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `tag_template.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplate UpdateTagTemplate(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTagTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a tag template.
      ///
      /// You can't update template fields with this method. These fields are
      /// separate resources with their own create, update, and delete methods.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `tag_template.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplate UpdateTagTemplate(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTagTemplate, null, options, request);
      }
      /// <summary>
      /// Updates a tag template.
      ///
      /// You can't update template fields with this method. These fields are
      /// separate resources with their own create, update, and delete methods.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `tag_template.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplate> UpdateTagTemplateAsync(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTagTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a tag template.
      ///
      /// You can't update template fields with this method. These fields are
      /// separate resources with their own create, update, and delete methods.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `tag_template.name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplate> UpdateTagTemplateAsync(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTagTemplate, null, options, request);
      }
      /// <summary>
      /// Deletes a tag template and all tags that use it.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTagTemplate(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTagTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a tag template and all tags that use it.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTagTemplate(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTagTemplate, null, options, request);
      }
      /// <summary>
      /// Deletes a tag template and all tags that use it.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTagTemplateAsync(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTagTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a tag template and all tags that use it.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTagTemplateAsync(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTagTemplate, null, options, request);
      }
      /// <summary>
      /// Creates a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplateField CreateTagTemplateField(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTagTemplateField(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplateField CreateTagTemplateField(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTagTemplateField, null, options, request);
      }
      /// <summary>
      /// Creates a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplateField> CreateTagTemplateFieldAsync(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTagTemplateFieldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `parent` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplateField> CreateTagTemplateFieldAsync(global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTagTemplateField, null, options, request);
      }
      /// <summary>
      /// Updates a field in a tag template.
      ///
      /// You can't update the field type with this method.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplateField UpdateTagTemplateField(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTagTemplateField(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a field in a tag template.
      ///
      /// You can't update the field type with this method.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplateField UpdateTagTemplateField(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTagTemplateField, null, options, request);
      }
      /// <summary>
      /// Updates a field in a tag template.
      ///
      /// You can't update the field type with this method.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplateField> UpdateTagTemplateFieldAsync(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTagTemplateFieldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a field in a tag template.
      ///
      /// You can't update the field type with this method.
      ///
      /// You must enable the Data Catalog API in the project
      /// identified by the `name` parameter. For more information, see [Data Catalog
      /// resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplateField> UpdateTagTemplateFieldAsync(global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTagTemplateField, null, options, request);
      }
      /// <summary>
      /// Renames a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `name` parameter. For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplateField RenameTagTemplateField(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RenameTagTemplateField(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Renames a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `name` parameter. For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplateField RenameTagTemplateField(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RenameTagTemplateField, null, options, request);
      }
      /// <summary>
      /// Renames a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `name` parameter. For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplateField> RenameTagTemplateFieldAsync(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RenameTagTemplateFieldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Renames a field in a tag template.
      ///
      /// You must enable the Data Catalog API in the project identified by the
      /// `name` parameter. For more information, see [Data Catalog resource project]
      /// (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplateField> RenameTagTemplateFieldAsync(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RenameTagTemplateField, null, options, request);
      }
      /// <summary>
      /// Renames an enum value in a tag template.
      ///
      /// Within a single enum field, enum values must be unique.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplateField RenameTagTemplateFieldEnumValue(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RenameTagTemplateFieldEnumValue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Renames an enum value in a tag template.
      ///
      /// Within a single enum field, enum values must be unique.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.TagTemplateField RenameTagTemplateFieldEnumValue(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RenameTagTemplateFieldEnumValue, null, options, request);
      }
      /// <summary>
      /// Renames an enum value in a tag template.
      ///
      /// Within a single enum field, enum values must be unique.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplateField> RenameTagTemplateFieldEnumValueAsync(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RenameTagTemplateFieldEnumValueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Renames an enum value in a tag template.
      ///
      /// Within a single enum field, enum values must be unique.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.TagTemplateField> RenameTagTemplateFieldEnumValueAsync(global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RenameTagTemplateFieldEnumValue, null, options, request);
      }
      /// <summary>
      /// Deletes a field in a tag template and all uses of this field from the tags
      /// based on this template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTagTemplateField(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTagTemplateField(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a field in a tag template and all uses of this field from the tags
      /// based on this template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTagTemplateField(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTagTemplateField, null, options, request);
      }
      /// <summary>
      /// Deletes a field in a tag template and all uses of this field from the tags
      /// based on this template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTagTemplateFieldAsync(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTagTemplateFieldAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a field in a tag template and all uses of this field from the tags
      /// based on this template.
      ///
      /// You must enable the Data Catalog API in the project identified by
      /// the `name` parameter. For more information, see [Data Catalog resource
      /// project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTagTemplateFieldAsync(global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTagTemplateField, null, options, request);
      }
      /// <summary>
      /// Creates a tag and assigns it to:
      ///
      /// * An [Entry][google.cloud.datacatalog.v1.Entry] if the method name is
      ///   `projects.locations.entryGroups.entries.tags.create`.
      /// * Or [EntryGroup][google.cloud.datacatalog.v1.EntryGroup]if the method
      ///   name is `projects.locations.entryGroups.tags.create`.
      ///
      /// Note: The project identified by the `parent` parameter for the [tag]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
      /// and the [tag template]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
      /// used to create the tag must be in the same organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Tag CreateTag(global::Google.Cloud.DataCatalog.V1.CreateTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a tag and assigns it to:
      ///
      /// * An [Entry][google.cloud.datacatalog.v1.Entry] if the method name is
      ///   `projects.locations.entryGroups.entries.tags.create`.
      /// * Or [EntryGroup][google.cloud.datacatalog.v1.EntryGroup]if the method
      ///   name is `projects.locations.entryGroups.tags.create`.
      ///
      /// Note: The project identified by the `parent` parameter for the [tag]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
      /// and the [tag template]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
      /// used to create the tag must be in the same organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Tag CreateTag(global::Google.Cloud.DataCatalog.V1.CreateTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTag, null, options, request);
      }
      /// <summary>
      /// Creates a tag and assigns it to:
      ///
      /// * An [Entry][google.cloud.datacatalog.v1.Entry] if the method name is
      ///   `projects.locations.entryGroups.entries.tags.create`.
      /// * Or [EntryGroup][google.cloud.datacatalog.v1.EntryGroup]if the method
      ///   name is `projects.locations.entryGroups.tags.create`.
      ///
      /// Note: The project identified by the `parent` parameter for the [tag]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
      /// and the [tag template]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
      /// used to create the tag must be in the same organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Tag> CreateTagAsync(global::Google.Cloud.DataCatalog.V1.CreateTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a tag and assigns it to:
      ///
      /// * An [Entry][google.cloud.datacatalog.v1.Entry] if the method name is
      ///   `projects.locations.entryGroups.entries.tags.create`.
      /// * Or [EntryGroup][google.cloud.datacatalog.v1.EntryGroup]if the method
      ///   name is `projects.locations.entryGroups.tags.create`.
      ///
      /// Note: The project identified by the `parent` parameter for the [tag]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
      /// and the [tag template]
      /// (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
      /// used to create the tag must be in the same organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Tag> CreateTagAsync(global::Google.Cloud.DataCatalog.V1.CreateTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTag, null, options, request);
      }
      /// <summary>
      /// Updates an existing tag.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Tag UpdateTag(global::Google.Cloud.DataCatalog.V1.UpdateTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing tag.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.Tag UpdateTag(global::Google.Cloud.DataCatalog.V1.UpdateTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTag, null, options, request);
      }
      /// <summary>
      /// Updates an existing tag.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Tag> UpdateTagAsync(global::Google.Cloud.DataCatalog.V1.UpdateTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing tag.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.Tag> UpdateTagAsync(global::Google.Cloud.DataCatalog.V1.UpdateTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTag, null, options, request);
      }
      /// <summary>
      /// Deletes a tag.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTag(global::Google.Cloud.DataCatalog.V1.DeleteTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTag(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a tag.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTag(global::Google.Cloud.DataCatalog.V1.DeleteTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTag, null, options, request);
      }
      /// <summary>
      /// Deletes a tag.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTagAsync(global::Google.Cloud.DataCatalog.V1.DeleteTagRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTagAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a tag.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTagAsync(global::Google.Cloud.DataCatalog.V1.DeleteTagRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTag, null, options, request);
      }
      /// <summary>
      /// Lists tags assigned to an [Entry][google.cloud.datacatalog.v1.Entry].
      /// The [columns][google.cloud.datacatalog.v1.Tag.column] in the response are
      /// lowercased.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.ListTagsResponse ListTags(global::Google.Cloud.DataCatalog.V1.ListTagsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTags(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists tags assigned to an [Entry][google.cloud.datacatalog.v1.Entry].
      /// The [columns][google.cloud.datacatalog.v1.Tag.column] in the response are
      /// lowercased.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.ListTagsResponse ListTags(global::Google.Cloud.DataCatalog.V1.ListTagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTags, null, options, request);
      }
      /// <summary>
      /// Lists tags assigned to an [Entry][google.cloud.datacatalog.v1.Entry].
      /// The [columns][google.cloud.datacatalog.v1.Tag.column] in the response are
      /// lowercased.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.ListTagsResponse> ListTagsAsync(global::Google.Cloud.DataCatalog.V1.ListTagsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTagsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists tags assigned to an [Entry][google.cloud.datacatalog.v1.Entry].
      /// The [columns][google.cloud.datacatalog.v1.Tag.column] in the response are
      /// lowercased.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.ListTagsResponse> ListTagsAsync(global::Google.Cloud.DataCatalog.V1.ListTagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTags, null, options, request);
      }
      /// <summary>
      /// `ReconcileTags` creates or updates a list of tags on the entry.
      /// If the
      /// [ReconcileTagsRequest.force_delete_missing][google.cloud.datacatalog.v1.ReconcileTagsRequest.force_delete_missing]
      /// parameter is set, the operation deletes tags not included in the input tag
      /// list.
      ///
      /// `ReconcileTags` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return [ReconcileTagsMetadata]
      /// [google.cloud.datacatalog.v1.ReconcileTagsMetadata] and
      /// a [ReconcileTagsResponse]
      /// [google.cloud.datacatalog.v1.ReconcileTagsResponse] message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ReconcileTags(global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReconcileTags(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `ReconcileTags` creates or updates a list of tags on the entry.
      /// If the
      /// [ReconcileTagsRequest.force_delete_missing][google.cloud.datacatalog.v1.ReconcileTagsRequest.force_delete_missing]
      /// parameter is set, the operation deletes tags not included in the input tag
      /// list.
      ///
      /// `ReconcileTags` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return [ReconcileTagsMetadata]
      /// [google.cloud.datacatalog.v1.ReconcileTagsMetadata] and
      /// a [ReconcileTagsResponse]
      /// [google.cloud.datacatalog.v1.ReconcileTagsResponse] message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ReconcileTags(global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReconcileTags, null, options, request);
      }
      /// <summary>
      /// `ReconcileTags` creates or updates a list of tags on the entry.
      /// If the
      /// [ReconcileTagsRequest.force_delete_missing][google.cloud.datacatalog.v1.ReconcileTagsRequest.force_delete_missing]
      /// parameter is set, the operation deletes tags not included in the input tag
      /// list.
      ///
      /// `ReconcileTags` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return [ReconcileTagsMetadata]
      /// [google.cloud.datacatalog.v1.ReconcileTagsMetadata] and
      /// a [ReconcileTagsResponse]
      /// [google.cloud.datacatalog.v1.ReconcileTagsResponse] message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ReconcileTagsAsync(global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReconcileTagsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// `ReconcileTags` creates or updates a list of tags on the entry.
      /// If the
      /// [ReconcileTagsRequest.force_delete_missing][google.cloud.datacatalog.v1.ReconcileTagsRequest.force_delete_missing]
      /// parameter is set, the operation deletes tags not included in the input tag
      /// list.
      ///
      /// `ReconcileTags` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return [ReconcileTagsMetadata]
      /// [google.cloud.datacatalog.v1.ReconcileTagsMetadata] and
      /// a [ReconcileTagsResponse]
      /// [google.cloud.datacatalog.v1.ReconcileTagsResponse] message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ReconcileTagsAsync(global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReconcileTags, null, options, request);
      }
      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.StarEntryResponse StarEntry(global::Google.Cloud.DataCatalog.V1.StarEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StarEntry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.StarEntryResponse StarEntry(global::Google.Cloud.DataCatalog.V1.StarEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StarEntry, null, options, request);
      }
      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.StarEntryResponse> StarEntryAsync(global::Google.Cloud.DataCatalog.V1.StarEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StarEntryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.StarEntryResponse> StarEntryAsync(global::Google.Cloud.DataCatalog.V1.StarEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StarEntry, null, options, request);
      }
      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as NOT starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse UnstarEntry(global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnstarEntry(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as NOT starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse UnstarEntry(global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnstarEntry, null, options, request);
      }
      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as NOT starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse> UnstarEntryAsync(global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnstarEntryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Marks an [Entry][google.cloud.datacatalog.v1.Entry] as NOT starred by
      /// the current user. Starring information is private to each user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse> UnstarEntryAsync(global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnstarEntry, null, options, request);
      }
      /// <summary>
      /// Sets an access control policy for a resource. Replaces any existing
      /// policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method sets policies only within Data Catalog and can't be
      /// used to manage policies in BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources synced with the Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets an access control policy for a resource. Replaces any existing
      /// policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method sets policies only within Data Catalog and can't be
      /// used to manage policies in BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources synced with the Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets an access control policy for a resource. Replaces any existing
      /// policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method sets policies only within Data Catalog and can't be
      /// used to manage policies in BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources synced with the Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets an access control policy for a resource. Replaces any existing
      /// policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method sets policies only within Data Catalog and can't be
      /// used to manage policies in BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources synced with the Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for a resource.
      ///
      /// May return:
      ///
      /// * A`NOT_FOUND` error if the resource doesn't exist or you don't have the
      ///   permission to view it.
      /// * An empty policy if the resource exists but doesn't have a set policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method doesn't get policies from Google Cloud Platform
      /// resources ingested into Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for a resource.
      ///
      /// May return:
      ///
      /// * A`NOT_FOUND` error if the resource doesn't exist or you don't have the
      ///   permission to view it.
      /// * An empty policy if the resource exists but doesn't have a set policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method doesn't get policies from Google Cloud Platform
      /// resources ingested into Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for a resource.
      ///
      /// May return:
      ///
      /// * A`NOT_FOUND` error if the resource doesn't exist or you don't have the
      ///   permission to view it.
      /// * An empty policy if the resource exists but doesn't have a set policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method doesn't get policies from Google Cloud Platform
      /// resources ingested into Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for a resource.
      ///
      /// May return:
      ///
      /// * A`NOT_FOUND` error if the resource doesn't exist or you don't have the
      ///   permission to view it.
      /// * An empty policy if the resource exists but doesn't have a set policy.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method doesn't get policies from Google Cloud Platform
      /// resources ingested into Data Catalog.
      ///
      /// To call this method, you must have the following Google IAM permissions:
      ///
      /// - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
      ///   templates.
      /// - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets your permissions on a resource.
      ///
      /// Returns an empty set of permissions if the resource doesn't exist.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method gets policies only within Data Catalog and can't be
      /// used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources ingested into Data Catalog.
      ///
      /// No Google IAM permissions are required to call this method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets your permissions on a resource.
      ///
      /// Returns an empty set of permissions if the resource doesn't exist.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method gets policies only within Data Catalog and can't be
      /// used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources ingested into Data Catalog.
      ///
      /// No Google IAM permissions are required to call this method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Gets your permissions on a resource.
      ///
      /// Returns an empty set of permissions if the resource doesn't exist.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method gets policies only within Data Catalog and can't be
      /// used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources ingested into Data Catalog.
      ///
      /// No Google IAM permissions are required to call this method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets your permissions on a resource.
      ///
      /// Returns an empty set of permissions if the resource doesn't exist.
      ///
      /// Supported resources are:
      ///
      /// - Tag templates
      /// - Entry groups
      ///
      /// Note: This method gets policies only within Data Catalog and can't be
      /// used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
      /// external Google Cloud Platform resources ingested into Data Catalog.
      ///
      /// No Google IAM permissions are required to call this method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Imports entries from a source, such as data previously dumped into a
      /// Cloud Storage bucket, into Data Catalog. Import of entries
      /// is a sync operation that reconciles the state of the third-party system
      /// with the Data Catalog.
      ///
      /// `ImportEntries` accepts source data snapshots of a third-party system.
      /// Snapshot should be delivered as a .wire or base65-encoded .txt file
      /// containing a sequence of Protocol Buffer messages of
      /// [DumpItem][google.cloud.datacatalog.v1.DumpItem] type.
      ///
      /// `ImportEntries` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return
      /// [ImportEntriesMetadata][google.cloud.datacatalog.v1.ImportEntriesMetadata]
      /// and an
      /// [ImportEntriesResponse][google.cloud.datacatalog.v1.ImportEntriesResponse]
      /// message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportEntries(global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportEntries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports entries from a source, such as data previously dumped into a
      /// Cloud Storage bucket, into Data Catalog. Import of entries
      /// is a sync operation that reconciles the state of the third-party system
      /// with the Data Catalog.
      ///
      /// `ImportEntries` accepts source data snapshots of a third-party system.
      /// Snapshot should be delivered as a .wire or base65-encoded .txt file
      /// containing a sequence of Protocol Buffer messages of
      /// [DumpItem][google.cloud.datacatalog.v1.DumpItem] type.
      ///
      /// `ImportEntries` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return
      /// [ImportEntriesMetadata][google.cloud.datacatalog.v1.ImportEntriesMetadata]
      /// and an
      /// [ImportEntriesResponse][google.cloud.datacatalog.v1.ImportEntriesResponse]
      /// message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ImportEntries(global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportEntries, null, options, request);
      }
      /// <summary>
      /// Imports entries from a source, such as data previously dumped into a
      /// Cloud Storage bucket, into Data Catalog. Import of entries
      /// is a sync operation that reconciles the state of the third-party system
      /// with the Data Catalog.
      ///
      /// `ImportEntries` accepts source data snapshots of a third-party system.
      /// Snapshot should be delivered as a .wire or base65-encoded .txt file
      /// containing a sequence of Protocol Buffer messages of
      /// [DumpItem][google.cloud.datacatalog.v1.DumpItem] type.
      ///
      /// `ImportEntries` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return
      /// [ImportEntriesMetadata][google.cloud.datacatalog.v1.ImportEntriesMetadata]
      /// and an
      /// [ImportEntriesResponse][google.cloud.datacatalog.v1.ImportEntriesResponse]
      /// message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportEntriesAsync(global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportEntriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Imports entries from a source, such as data previously dumped into a
      /// Cloud Storage bucket, into Data Catalog. Import of entries
      /// is a sync operation that reconciles the state of the third-party system
      /// with the Data Catalog.
      ///
      /// `ImportEntries` accepts source data snapshots of a third-party system.
      /// Snapshot should be delivered as a .wire or base65-encoded .txt file
      /// containing a sequence of Protocol Buffer messages of
      /// [DumpItem][google.cloud.datacatalog.v1.DumpItem] type.
      ///
      /// `ImportEntries` returns a [long-running operation]
      /// [google.longrunning.Operation] resource that can be queried with
      /// [Operations.GetOperation][google.longrunning.Operations.GetOperation]
      /// to return
      /// [ImportEntriesMetadata][google.cloud.datacatalog.v1.ImportEntriesMetadata]
      /// and an
      /// [ImportEntriesResponse][google.cloud.datacatalog.v1.ImportEntriesResponse]
      /// message.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ImportEntriesAsync(global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportEntries, null, options, request);
      }
      /// <summary>
      /// Sets the configuration related to the migration to Dataplex for an
      /// organization or project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.MigrationConfig SetConfig(global::Google.Cloud.DataCatalog.V1.SetConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the configuration related to the migration to Dataplex for an
      /// organization or project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.MigrationConfig SetConfig(global::Google.Cloud.DataCatalog.V1.SetConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetConfig, null, options, request);
      }
      /// <summary>
      /// Sets the configuration related to the migration to Dataplex for an
      /// organization or project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.MigrationConfig> SetConfigAsync(global::Google.Cloud.DataCatalog.V1.SetConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the configuration related to the migration to Dataplex for an
      /// organization or project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.MigrationConfig> SetConfigAsync(global::Google.Cloud.DataCatalog.V1.SetConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetConfig, null, options, request);
      }
      /// <summary>
      /// Retrieves the configuration related to the migration from Data Catalog to
      /// Dataplex for a specific organization, including all the projects under it
      /// which have a separate configuration set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.OrganizationConfig RetrieveConfig(global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the configuration related to the migration from Data Catalog to
      /// Dataplex for a specific organization, including all the projects under it
      /// which have a separate configuration set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.OrganizationConfig RetrieveConfig(global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RetrieveConfig, null, options, request);
      }
      /// <summary>
      /// Retrieves the configuration related to the migration from Data Catalog to
      /// Dataplex for a specific organization, including all the projects under it
      /// which have a separate configuration set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.OrganizationConfig> RetrieveConfigAsync(global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the configuration related to the migration from Data Catalog to
      /// Dataplex for a specific organization, including all the projects under it
      /// which have a separate configuration set.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.OrganizationConfig> RetrieveConfigAsync(global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RetrieveConfig, null, options, request);
      }
      /// <summary>
      /// Retrieves the effective configuration related to the migration from Data
      /// Catalog to Dataplex for a specific organization or project. If there is no
      /// specific configuration set for the resource, the setting is checked
      /// hierarchicahlly through the ancestors of the resource, starting from the
      /// resource itself.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.MigrationConfig RetrieveEffectiveConfig(global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveEffectiveConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the effective configuration related to the migration from Data
      /// Catalog to Dataplex for a specific organization or project. If there is no
      /// specific configuration set for the resource, the setting is checked
      /// hierarchicahlly through the ancestors of the resource, starting from the
      /// resource itself.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.DataCatalog.V1.MigrationConfig RetrieveEffectiveConfig(global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RetrieveEffectiveConfig, null, options, request);
      }
      /// <summary>
      /// Retrieves the effective configuration related to the migration from Data
      /// Catalog to Dataplex for a specific organization or project. If there is no
      /// specific configuration set for the resource, the setting is checked
      /// hierarchicahlly through the ancestors of the resource, starting from the
      /// resource itself.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.MigrationConfig> RetrieveEffectiveConfigAsync(global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveEffectiveConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the effective configuration related to the migration from Data
      /// Catalog to Dataplex for a specific organization or project. If there is no
      /// specific configuration set for the resource, the setting is checked
      /// hierarchicahlly through the ancestors of the resource, starting from the
      /// resource itself.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.DataCatalog.V1.MigrationConfig> RetrieveEffectiveConfigAsync(global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RetrieveEffectiveConfig, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DataCatalogClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataCatalogClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DataCatalogBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SearchCatalog, serviceImpl.SearchCatalog)
          .AddMethod(__Method_CreateEntryGroup, serviceImpl.CreateEntryGroup)
          .AddMethod(__Method_GetEntryGroup, serviceImpl.GetEntryGroup)
          .AddMethod(__Method_UpdateEntryGroup, serviceImpl.UpdateEntryGroup)
          .AddMethod(__Method_DeleteEntryGroup, serviceImpl.DeleteEntryGroup)
          .AddMethod(__Method_ListEntryGroups, serviceImpl.ListEntryGroups)
          .AddMethod(__Method_CreateEntry, serviceImpl.CreateEntry)
          .AddMethod(__Method_UpdateEntry, serviceImpl.UpdateEntry)
          .AddMethod(__Method_DeleteEntry, serviceImpl.DeleteEntry)
          .AddMethod(__Method_GetEntry, serviceImpl.GetEntry)
          .AddMethod(__Method_LookupEntry, serviceImpl.LookupEntry)
          .AddMethod(__Method_ListEntries, serviceImpl.ListEntries)
          .AddMethod(__Method_ModifyEntryOverview, serviceImpl.ModifyEntryOverview)
          .AddMethod(__Method_ModifyEntryContacts, serviceImpl.ModifyEntryContacts)
          .AddMethod(__Method_CreateTagTemplate, serviceImpl.CreateTagTemplate)
          .AddMethod(__Method_GetTagTemplate, serviceImpl.GetTagTemplate)
          .AddMethod(__Method_UpdateTagTemplate, serviceImpl.UpdateTagTemplate)
          .AddMethod(__Method_DeleteTagTemplate, serviceImpl.DeleteTagTemplate)
          .AddMethod(__Method_CreateTagTemplateField, serviceImpl.CreateTagTemplateField)
          .AddMethod(__Method_UpdateTagTemplateField, serviceImpl.UpdateTagTemplateField)
          .AddMethod(__Method_RenameTagTemplateField, serviceImpl.RenameTagTemplateField)
          .AddMethod(__Method_RenameTagTemplateFieldEnumValue, serviceImpl.RenameTagTemplateFieldEnumValue)
          .AddMethod(__Method_DeleteTagTemplateField, serviceImpl.DeleteTagTemplateField)
          .AddMethod(__Method_CreateTag, serviceImpl.CreateTag)
          .AddMethod(__Method_UpdateTag, serviceImpl.UpdateTag)
          .AddMethod(__Method_DeleteTag, serviceImpl.DeleteTag)
          .AddMethod(__Method_ListTags, serviceImpl.ListTags)
          .AddMethod(__Method_ReconcileTags, serviceImpl.ReconcileTags)
          .AddMethod(__Method_StarEntry, serviceImpl.StarEntry)
          .AddMethod(__Method_UnstarEntry, serviceImpl.UnstarEntry)
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions)
          .AddMethod(__Method_ImportEntries, serviceImpl.ImportEntries)
          .AddMethod(__Method_SetConfig, serviceImpl.SetConfig)
          .AddMethod(__Method_RetrieveConfig, serviceImpl.RetrieveConfig)
          .AddMethod(__Method_RetrieveEffectiveConfig, serviceImpl.RetrieveEffectiveConfig).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DataCatalogBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SearchCatalog, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.SearchCatalogRequest, global::Google.Cloud.DataCatalog.V1.SearchCatalogResponse>(serviceImpl.SearchCatalog));
      serviceBinder.AddMethod(__Method_CreateEntryGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.CreateEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup>(serviceImpl.CreateEntryGroup));
      serviceBinder.AddMethod(__Method_GetEntryGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.GetEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup>(serviceImpl.GetEntryGroup));
      serviceBinder.AddMethod(__Method_UpdateEntryGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.UpdateEntryGroupRequest, global::Google.Cloud.DataCatalog.V1.EntryGroup>(serviceImpl.UpdateEntryGroup));
      serviceBinder.AddMethod(__Method_DeleteEntryGroup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.DeleteEntryGroupRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteEntryGroup));
      serviceBinder.AddMethod(__Method_ListEntryGroups, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.ListEntryGroupsRequest, global::Google.Cloud.DataCatalog.V1.ListEntryGroupsResponse>(serviceImpl.ListEntryGroups));
      serviceBinder.AddMethod(__Method_CreateEntry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.CreateEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry>(serviceImpl.CreateEntry));
      serviceBinder.AddMethod(__Method_UpdateEntry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.UpdateEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry>(serviceImpl.UpdateEntry));
      serviceBinder.AddMethod(__Method_DeleteEntry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.DeleteEntryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteEntry));
      serviceBinder.AddMethod(__Method_GetEntry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.GetEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry>(serviceImpl.GetEntry));
      serviceBinder.AddMethod(__Method_LookupEntry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.LookupEntryRequest, global::Google.Cloud.DataCatalog.V1.Entry>(serviceImpl.LookupEntry));
      serviceBinder.AddMethod(__Method_ListEntries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.ListEntriesRequest, global::Google.Cloud.DataCatalog.V1.ListEntriesResponse>(serviceImpl.ListEntries));
      serviceBinder.AddMethod(__Method_ModifyEntryOverview, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.ModifyEntryOverviewRequest, global::Google.Cloud.DataCatalog.V1.EntryOverview>(serviceImpl.ModifyEntryOverview));
      serviceBinder.AddMethod(__Method_ModifyEntryContacts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.ModifyEntryContactsRequest, global::Google.Cloud.DataCatalog.V1.Contacts>(serviceImpl.ModifyEntryContacts));
      serviceBinder.AddMethod(__Method_CreateTagTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.CreateTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate>(serviceImpl.CreateTagTemplate));
      serviceBinder.AddMethod(__Method_GetTagTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.GetTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate>(serviceImpl.GetTagTemplate));
      serviceBinder.AddMethod(__Method_UpdateTagTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateRequest, global::Google.Cloud.DataCatalog.V1.TagTemplate>(serviceImpl.UpdateTagTemplate));
      serviceBinder.AddMethod(__Method_DeleteTagTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTagTemplate));
      serviceBinder.AddMethod(__Method_CreateTagTemplateField, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.CreateTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField>(serviceImpl.CreateTagTemplateField));
      serviceBinder.AddMethod(__Method_UpdateTagTemplateField, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.UpdateTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField>(serviceImpl.UpdateTagTemplateField));
      serviceBinder.AddMethod(__Method_RenameTagTemplateField, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField>(serviceImpl.RenameTagTemplateField));
      serviceBinder.AddMethod(__Method_RenameTagTemplateFieldEnumValue, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.RenameTagTemplateFieldEnumValueRequest, global::Google.Cloud.DataCatalog.V1.TagTemplateField>(serviceImpl.RenameTagTemplateFieldEnumValue));
      serviceBinder.AddMethod(__Method_DeleteTagTemplateField, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.DeleteTagTemplateFieldRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTagTemplateField));
      serviceBinder.AddMethod(__Method_CreateTag, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.CreateTagRequest, global::Google.Cloud.DataCatalog.V1.Tag>(serviceImpl.CreateTag));
      serviceBinder.AddMethod(__Method_UpdateTag, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.UpdateTagRequest, global::Google.Cloud.DataCatalog.V1.Tag>(serviceImpl.UpdateTag));
      serviceBinder.AddMethod(__Method_DeleteTag, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.DeleteTagRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTag));
      serviceBinder.AddMethod(__Method_ListTags, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.ListTagsRequest, global::Google.Cloud.DataCatalog.V1.ListTagsResponse>(serviceImpl.ListTags));
      serviceBinder.AddMethod(__Method_ReconcileTags, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.ReconcileTagsRequest, global::Google.LongRunning.Operation>(serviceImpl.ReconcileTags));
      serviceBinder.AddMethod(__Method_StarEntry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.StarEntryRequest, global::Google.Cloud.DataCatalog.V1.StarEntryResponse>(serviceImpl.StarEntry));
      serviceBinder.AddMethod(__Method_UnstarEntry, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.UnstarEntryRequest, global::Google.Cloud.DataCatalog.V1.UnstarEntryResponse>(serviceImpl.UnstarEntry));
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
      serviceBinder.AddMethod(__Method_ImportEntries, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.ImportEntriesRequest, global::Google.LongRunning.Operation>(serviceImpl.ImportEntries));
      serviceBinder.AddMethod(__Method_SetConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.SetConfigRequest, global::Google.Cloud.DataCatalog.V1.MigrationConfig>(serviceImpl.SetConfig));
      serviceBinder.AddMethod(__Method_RetrieveConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.RetrieveConfigRequest, global::Google.Cloud.DataCatalog.V1.OrganizationConfig>(serviceImpl.RetrieveConfig));
      serviceBinder.AddMethod(__Method_RetrieveEffectiveConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.DataCatalog.V1.RetrieveEffectiveConfigRequest, global::Google.Cloud.DataCatalog.V1.MigrationConfig>(serviceImpl.RetrieveEffectiveConfig));
    }

  }
}
#endregion
