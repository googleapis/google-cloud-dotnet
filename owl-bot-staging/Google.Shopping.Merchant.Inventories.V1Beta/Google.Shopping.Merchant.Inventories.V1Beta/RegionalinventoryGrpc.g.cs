// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/shopping/merchant/inventories/v1beta/regionalinventory.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Shopping.Merchant.Inventories.V1Beta {
  /// <summary>
  /// Service to manage regional inventory for products. There is also separate
  /// `regions` resource and API to manage regions definitions.
  /// </summary>
  public static partial class RegionalInventoryService
  {
    static readonly string __ServiceName = "google.shopping.merchant.inventories.v1beta.RegionalInventoryService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest> __Marshaller_google_shopping_merchant_inventories_v1beta_ListRegionalInventoriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse> __Marshaller_google_shopping_merchant_inventories_v1beta_ListRegionalInventoriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest> __Marshaller_google_shopping_merchant_inventories_v1beta_InsertRegionalInventoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory> __Marshaller_google_shopping_merchant_inventories_v1beta_RegionalInventory = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest> __Marshaller_google_shopping_merchant_inventories_v1beta_DeleteRegionalInventoryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest, global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse> __Method_ListRegionalInventories = new grpc::Method<global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest, global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRegionalInventories",
        __Marshaller_google_shopping_merchant_inventories_v1beta_ListRegionalInventoriesRequest,
        __Marshaller_google_shopping_merchant_inventories_v1beta_ListRegionalInventoriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest, global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory> __Method_InsertRegionalInventory = new grpc::Method<global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest, global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InsertRegionalInventory",
        __Marshaller_google_shopping_merchant_inventories_v1beta_InsertRegionalInventoryRequest,
        __Marshaller_google_shopping_merchant_inventories_v1beta_RegionalInventory);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteRegionalInventory = new grpc::Method<global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRegionalInventory",
        __Marshaller_google_shopping_merchant_inventories_v1beta_DeleteRegionalInventoryRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalinventoryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RegionalInventoryService</summary>
    [grpc::BindServiceMethod(typeof(RegionalInventoryService), "BindService")]
    public abstract partial class RegionalInventoryServiceBase
    {
      /// <summary>
      /// Lists the `RegionalInventory` resources for the given product in your
      /// merchant account. The response might contain fewer items than specified by
      /// `pageSize`.  If `pageToken` was returned in previous request, it can be
      /// used to obtain additional results.
      ///
      /// `RegionalInventory` resources are listed per product for a given account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse> ListRegionalInventories(global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Inserts a `RegionalInventory` to a given product in your
      /// merchant account.
      ///
      /// Replaces the full `RegionalInventory` resource if an entry with the same
      /// [`region`][google.shopping.merchant.inventories.v1beta.RegionalInventory.region]
      /// already exists for the product.
      ///
      /// It might take up to 30 minutes for the new or updated `RegionalInventory`
      /// resource to appear in products.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory> InsertRegionalInventory(global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the specified `RegionalInventory` resource from the given product
      /// in your merchant account.  It might take up to an hour for the
      /// `RegionalInventory` to be deleted from the specific product.
      /// Once you have received a successful delete response, wait for that
      /// period before attempting a delete again.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRegionalInventory(global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for RegionalInventoryService</summary>
    public partial class RegionalInventoryServiceClient : grpc::ClientBase<RegionalInventoryServiceClient>
    {
      /// <summary>Creates a new client for RegionalInventoryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RegionalInventoryServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for RegionalInventoryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public RegionalInventoryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RegionalInventoryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected RegionalInventoryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists the `RegionalInventory` resources for the given product in your
      /// merchant account. The response might contain fewer items than specified by
      /// `pageSize`.  If `pageToken` was returned in previous request, it can be
      /// used to obtain additional results.
      ///
      /// `RegionalInventory` resources are listed per product for a given account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse ListRegionalInventories(global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRegionalInventories(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the `RegionalInventory` resources for the given product in your
      /// merchant account. The response might contain fewer items than specified by
      /// `pageSize`.  If `pageToken` was returned in previous request, it can be
      /// used to obtain additional results.
      ///
      /// `RegionalInventory` resources are listed per product for a given account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse ListRegionalInventories(global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRegionalInventories, null, options, request);
      }
      /// <summary>
      /// Lists the `RegionalInventory` resources for the given product in your
      /// merchant account. The response might contain fewer items than specified by
      /// `pageSize`.  If `pageToken` was returned in previous request, it can be
      /// used to obtain additional results.
      ///
      /// `RegionalInventory` resources are listed per product for a given account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse> ListRegionalInventoriesAsync(global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRegionalInventoriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the `RegionalInventory` resources for the given product in your
      /// merchant account. The response might contain fewer items than specified by
      /// `pageSize`.  If `pageToken` was returned in previous request, it can be
      /// used to obtain additional results.
      ///
      /// `RegionalInventory` resources are listed per product for a given account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse> ListRegionalInventoriesAsync(global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRegionalInventories, null, options, request);
      }
      /// <summary>
      /// Inserts a `RegionalInventory` to a given product in your
      /// merchant account.
      ///
      /// Replaces the full `RegionalInventory` resource if an entry with the same
      /// [`region`][google.shopping.merchant.inventories.v1beta.RegionalInventory.region]
      /// already exists for the product.
      ///
      /// It might take up to 30 minutes for the new or updated `RegionalInventory`
      /// resource to appear in products.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory InsertRegionalInventory(global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertRegionalInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Inserts a `RegionalInventory` to a given product in your
      /// merchant account.
      ///
      /// Replaces the full `RegionalInventory` resource if an entry with the same
      /// [`region`][google.shopping.merchant.inventories.v1beta.RegionalInventory.region]
      /// already exists for the product.
      ///
      /// It might take up to 30 minutes for the new or updated `RegionalInventory`
      /// resource to appear in products.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory InsertRegionalInventory(global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InsertRegionalInventory, null, options, request);
      }
      /// <summary>
      /// Inserts a `RegionalInventory` to a given product in your
      /// merchant account.
      ///
      /// Replaces the full `RegionalInventory` resource if an entry with the same
      /// [`region`][google.shopping.merchant.inventories.v1beta.RegionalInventory.region]
      /// already exists for the product.
      ///
      /// It might take up to 30 minutes for the new or updated `RegionalInventory`
      /// resource to appear in products.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory> InsertRegionalInventoryAsync(global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InsertRegionalInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Inserts a `RegionalInventory` to a given product in your
      /// merchant account.
      ///
      /// Replaces the full `RegionalInventory` resource if an entry with the same
      /// [`region`][google.shopping.merchant.inventories.v1beta.RegionalInventory.region]
      /// already exists for the product.
      ///
      /// It might take up to 30 minutes for the new or updated `RegionalInventory`
      /// resource to appear in products.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory> InsertRegionalInventoryAsync(global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InsertRegionalInventory, null, options, request);
      }
      /// <summary>
      /// Deletes the specified `RegionalInventory` resource from the given product
      /// in your merchant account.  It might take up to an hour for the
      /// `RegionalInventory` to be deleted from the specific product.
      /// Once you have received a successful delete response, wait for that
      /// period before attempting a delete again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRegionalInventory(global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRegionalInventory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified `RegionalInventory` resource from the given product
      /// in your merchant account.  It might take up to an hour for the
      /// `RegionalInventory` to be deleted from the specific product.
      /// Once you have received a successful delete response, wait for that
      /// period before attempting a delete again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteRegionalInventory(global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRegionalInventory, null, options, request);
      }
      /// <summary>
      /// Deletes the specified `RegionalInventory` resource from the given product
      /// in your merchant account.  It might take up to an hour for the
      /// `RegionalInventory` to be deleted from the specific product.
      /// Once you have received a successful delete response, wait for that
      /// period before attempting a delete again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRegionalInventoryAsync(global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRegionalInventoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified `RegionalInventory` resource from the given product
      /// in your merchant account.  It might take up to an hour for the
      /// `RegionalInventory` to be deleted from the specific product.
      /// Once you have received a successful delete response, wait for that
      /// period before attempting a delete again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteRegionalInventoryAsync(global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRegionalInventory, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override RegionalInventoryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new RegionalInventoryServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(RegionalInventoryServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListRegionalInventories, serviceImpl.ListRegionalInventories)
          .AddMethod(__Method_InsertRegionalInventory, serviceImpl.InsertRegionalInventory)
          .AddMethod(__Method_DeleteRegionalInventory, serviceImpl.DeleteRegionalInventory).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RegionalInventoryServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListRegionalInventories, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesRequest, global::Google.Shopping.Merchant.Inventories.V1Beta.ListRegionalInventoriesResponse>(serviceImpl.ListRegionalInventories));
      serviceBinder.AddMethod(__Method_InsertRegionalInventory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Inventories.V1Beta.InsertRegionalInventoryRequest, global::Google.Shopping.Merchant.Inventories.V1Beta.RegionalInventory>(serviceImpl.InsertRegionalInventory));
      serviceBinder.AddMethod(__Method_DeleteRegionalInventory, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Shopping.Merchant.Inventories.V1Beta.DeleteRegionalInventoryRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteRegionalInventory));
    }

  }
}
#endregion
