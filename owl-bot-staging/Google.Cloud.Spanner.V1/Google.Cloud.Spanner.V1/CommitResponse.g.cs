// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/spanner/v1/commit_response.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Spanner.V1 {

  /// <summary>Holder for reflection information generated from google/spanner/v1/commit_response.proto</summary>
  public static partial class CommitResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for google/spanner/v1/commit_response.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommitResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvc3Bhbm5lci92MS9jb21taXRfcmVzcG9uc2UucHJvdG8SEWdv",
            "b2dsZS5zcGFubmVyLnYxGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGiNnb29nbGUvc3Bhbm5lci92MS90cmFuc2FjdGlvbi5wcm90byKdAgoO",
            "Q29tbWl0UmVzcG9uc2USNAoQY29tbWl0X3RpbWVzdGFtcBgBIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQwoMY29tbWl0X3N0YXRzGAIgASgL",
            "Mi0uZ29vZ2xlLnNwYW5uZXIudjEuQ29tbWl0UmVzcG9uc2UuQ29tbWl0U3Rh",
            "dHMSTgoPcHJlY29tbWl0X3Rva2VuGAQgASgLMjMuZ29vZ2xlLnNwYW5uZXIu",
            "djEuTXVsdGlwbGV4ZWRTZXNzaW9uUHJlY29tbWl0VG9rZW5IABolCgtDb21t",
            "aXRTdGF0cxIWCg5tdXRhdGlvbl9jb3VudBgBIAEoA0IZChdNdWx0aXBsZXhl",
            "ZFNlc3Npb25SZXRyeUK2AQoVY29tLmdvb2dsZS5zcGFubmVyLnYxQhNDb21t",
            "aXRSZXNwb25zZVByb3RvUAFaNWNsb3VkLmdvb2dsZS5jb20vZ28vc3Bhbm5l",
            "ci9hcGl2MS9zcGFubmVycGI7c3Bhbm5lcnBiqgIXR29vZ2xlLkNsb3VkLlNw",
            "YW5uZXIuVjHKAhdHb29nbGVcQ2xvdWRcU3Bhbm5lclxWMeoCGkdvb2dsZTo6",
            "Q2xvdWQ6OlNwYW5uZXI6OlYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Cloud.Spanner.V1.TransactionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.CommitResponse), global::Google.Cloud.Spanner.V1.CommitResponse.Parser, new[]{ "CommitTimestamp", "CommitStats", "PrecommitToken" }, new[]{ "MultiplexedSessionRetry" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.V1.CommitResponse.Types.CommitStats), global::Google.Cloud.Spanner.V1.CommitResponse.Types.CommitStats.Parser, new[]{ "MutationCount" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The response for [Commit][google.spanner.v1.Spanner.Commit].
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CommitResponse : pb::IMessage<CommitResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CommitResponse> _parser = new pb::MessageParser<CommitResponse>(() => new CommitResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CommitResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.V1.CommitResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommitResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommitResponse(CommitResponse other) : this() {
      commitTimestamp_ = other.commitTimestamp_ != null ? other.commitTimestamp_.Clone() : null;
      commitStats_ = other.commitStats_ != null ? other.commitStats_.Clone() : null;
      switch (other.MultiplexedSessionRetryCase) {
        case MultiplexedSessionRetryOneofCase.PrecommitToken:
          PrecommitToken = other.PrecommitToken.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommitResponse Clone() {
      return new CommitResponse(this);
    }

    /// <summary>Field number for the "commit_timestamp" field.</summary>
    public const int CommitTimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp commitTimestamp_;
    /// <summary>
    /// The Cloud Spanner timestamp at which the transaction committed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CommitTimestamp {
      get { return commitTimestamp_; }
      set {
        commitTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "commit_stats" field.</summary>
    public const int CommitStatsFieldNumber = 2;
    private global::Google.Cloud.Spanner.V1.CommitResponse.Types.CommitStats commitStats_;
    /// <summary>
    /// The statistics about this Commit. Not returned by default.
    /// For more information, see
    /// [CommitRequest.return_commit_stats][google.spanner.v1.CommitRequest.return_commit_stats].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Spanner.V1.CommitResponse.Types.CommitStats CommitStats {
      get { return commitStats_; }
      set {
        commitStats_ = value;
      }
    }

    /// <summary>Field number for the "precommit_token" field.</summary>
    public const int PrecommitTokenFieldNumber = 4;
    /// <summary>
    /// If specified, transaction has not committed yet.
    /// Clients must retry the commit with the new precommit token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Spanner.V1.MultiplexedSessionPrecommitToken PrecommitToken {
      get { return multiplexedSessionRetryCase_ == MultiplexedSessionRetryOneofCase.PrecommitToken ? (global::Google.Cloud.Spanner.V1.MultiplexedSessionPrecommitToken) multiplexedSessionRetry_ : null; }
      set {
        multiplexedSessionRetry_ = value;
        multiplexedSessionRetryCase_ = value == null ? MultiplexedSessionRetryOneofCase.None : MultiplexedSessionRetryOneofCase.PrecommitToken;
      }
    }

    private object multiplexedSessionRetry_;
    /// <summary>Enum of possible cases for the "MultiplexedSessionRetry" oneof.</summary>
    public enum MultiplexedSessionRetryOneofCase {
      None = 0,
      PrecommitToken = 4,
    }
    private MultiplexedSessionRetryOneofCase multiplexedSessionRetryCase_ = MultiplexedSessionRetryOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MultiplexedSessionRetryOneofCase MultiplexedSessionRetryCase {
      get { return multiplexedSessionRetryCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMultiplexedSessionRetry() {
      multiplexedSessionRetryCase_ = MultiplexedSessionRetryOneofCase.None;
      multiplexedSessionRetry_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CommitResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CommitResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CommitTimestamp, other.CommitTimestamp)) return false;
      if (!object.Equals(CommitStats, other.CommitStats)) return false;
      if (!object.Equals(PrecommitToken, other.PrecommitToken)) return false;
      if (MultiplexedSessionRetryCase != other.MultiplexedSessionRetryCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (commitTimestamp_ != null) hash ^= CommitTimestamp.GetHashCode();
      if (commitStats_ != null) hash ^= CommitStats.GetHashCode();
      if (multiplexedSessionRetryCase_ == MultiplexedSessionRetryOneofCase.PrecommitToken) hash ^= PrecommitToken.GetHashCode();
      hash ^= (int) multiplexedSessionRetryCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (commitTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CommitTimestamp);
      }
      if (commitStats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CommitStats);
      }
      if (multiplexedSessionRetryCase_ == MultiplexedSessionRetryOneofCase.PrecommitToken) {
        output.WriteRawTag(34);
        output.WriteMessage(PrecommitToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (commitTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CommitTimestamp);
      }
      if (commitStats_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CommitStats);
      }
      if (multiplexedSessionRetryCase_ == MultiplexedSessionRetryOneofCase.PrecommitToken) {
        output.WriteRawTag(34);
        output.WriteMessage(PrecommitToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (commitTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommitTimestamp);
      }
      if (commitStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CommitStats);
      }
      if (multiplexedSessionRetryCase_ == MultiplexedSessionRetryOneofCase.PrecommitToken) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrecommitToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CommitResponse other) {
      if (other == null) {
        return;
      }
      if (other.commitTimestamp_ != null) {
        if (commitTimestamp_ == null) {
          CommitTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CommitTimestamp.MergeFrom(other.CommitTimestamp);
      }
      if (other.commitStats_ != null) {
        if (commitStats_ == null) {
          CommitStats = new global::Google.Cloud.Spanner.V1.CommitResponse.Types.CommitStats();
        }
        CommitStats.MergeFrom(other.CommitStats);
      }
      switch (other.MultiplexedSessionRetryCase) {
        case MultiplexedSessionRetryOneofCase.PrecommitToken:
          if (PrecommitToken == null) {
            PrecommitToken = new global::Google.Cloud.Spanner.V1.MultiplexedSessionPrecommitToken();
          }
          PrecommitToken.MergeFrom(other.PrecommitToken);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (commitTimestamp_ == null) {
              CommitTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CommitTimestamp);
            break;
          }
          case 18: {
            if (commitStats_ == null) {
              CommitStats = new global::Google.Cloud.Spanner.V1.CommitResponse.Types.CommitStats();
            }
            input.ReadMessage(CommitStats);
            break;
          }
          case 34: {
            global::Google.Cloud.Spanner.V1.MultiplexedSessionPrecommitToken subBuilder = new global::Google.Cloud.Spanner.V1.MultiplexedSessionPrecommitToken();
            if (multiplexedSessionRetryCase_ == MultiplexedSessionRetryOneofCase.PrecommitToken) {
              subBuilder.MergeFrom(PrecommitToken);
            }
            input.ReadMessage(subBuilder);
            PrecommitToken = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (commitTimestamp_ == null) {
              CommitTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CommitTimestamp);
            break;
          }
          case 18: {
            if (commitStats_ == null) {
              CommitStats = new global::Google.Cloud.Spanner.V1.CommitResponse.Types.CommitStats();
            }
            input.ReadMessage(CommitStats);
            break;
          }
          case 34: {
            global::Google.Cloud.Spanner.V1.MultiplexedSessionPrecommitToken subBuilder = new global::Google.Cloud.Spanner.V1.MultiplexedSessionPrecommitToken();
            if (multiplexedSessionRetryCase_ == MultiplexedSessionRetryOneofCase.PrecommitToken) {
              subBuilder.MergeFrom(PrecommitToken);
            }
            input.ReadMessage(subBuilder);
            PrecommitToken = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CommitResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Additional statistics about a commit.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class CommitStats : pb::IMessage<CommitStats>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CommitStats> _parser = new pb::MessageParser<CommitStats>(() => new CommitStats());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<CommitStats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Spanner.V1.CommitResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CommitStats() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CommitStats(CommitStats other) : this() {
          mutationCount_ = other.mutationCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CommitStats Clone() {
          return new CommitStats(this);
        }

        /// <summary>Field number for the "mutation_count" field.</summary>
        public const int MutationCountFieldNumber = 1;
        private long mutationCount_;
        /// <summary>
        /// The total number of mutations for the transaction. Knowing the
        /// `mutation_count` value can help you maximize the number of mutations
        /// in a transaction and minimize the number of API round trips. You can
        /// also monitor this value to prevent transactions from exceeding the system
        /// [limit](https://cloud.google.com/spanner/quotas#limits_for_creating_reading_updating_and_deleting_data).
        /// If the number of mutations exceeds the limit, the server returns
        /// [INVALID_ARGUMENT](https://cloud.google.com/spanner/docs/reference/rest/v1/Code#ENUM_VALUES.INVALID_ARGUMENT).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long MutationCount {
          get { return mutationCount_; }
          set {
            mutationCount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as CommitStats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(CommitStats other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MutationCount != other.MutationCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (MutationCount != 0L) hash ^= MutationCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MutationCount != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(MutationCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MutationCount != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(MutationCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (MutationCount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MutationCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(CommitStats other) {
          if (other == null) {
            return;
          }
          if (other.MutationCount != 0L) {
            MutationCount = other.MutationCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MutationCount = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MutationCount = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
