// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/cloudprofiler/v2/profiler.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Profiler.V2 {
  /// <summary>
  /// Manage the collection of continuous profiling data provided by profiling
  /// agents running in the cloud or by an offline provider of profiling data.
  ///
  /// __The APIs listed in this service are intended for use within our profiler
  /// agents only.__
  /// </summary>
  public static partial class ProfilerService
  {
    static readonly string __ServiceName = "google.devtools.cloudprofiler.v2.ProfilerService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Profiler.V2.CreateProfileRequest> __Marshaller_google_devtools_cloudprofiler_v2_CreateProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Profiler.V2.CreateProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Profiler.V2.Profile> __Marshaller_google_devtools_cloudprofiler_v2_Profile = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Profiler.V2.Profile.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest> __Marshaller_google_devtools_cloudprofiler_v2_CreateOfflineProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Profiler.V2.UpdateProfileRequest> __Marshaller_google_devtools_cloudprofiler_v2_UpdateProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Profiler.V2.UpdateProfileRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Profiler.V2.CreateProfileRequest, global::Google.Cloud.Profiler.V2.Profile> __Method_CreateProfile = new grpc::Method<global::Google.Cloud.Profiler.V2.CreateProfileRequest, global::Google.Cloud.Profiler.V2.Profile>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateProfile",
        __Marshaller_google_devtools_cloudprofiler_v2_CreateProfileRequest,
        __Marshaller_google_devtools_cloudprofiler_v2_Profile);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest, global::Google.Cloud.Profiler.V2.Profile> __Method_CreateOfflineProfile = new grpc::Method<global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest, global::Google.Cloud.Profiler.V2.Profile>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateOfflineProfile",
        __Marshaller_google_devtools_cloudprofiler_v2_CreateOfflineProfileRequest,
        __Marshaller_google_devtools_cloudprofiler_v2_Profile);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Profiler.V2.UpdateProfileRequest, global::Google.Cloud.Profiler.V2.Profile> __Method_UpdateProfile = new grpc::Method<global::Google.Cloud.Profiler.V2.UpdateProfileRequest, global::Google.Cloud.Profiler.V2.Profile>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProfile",
        __Marshaller_google_devtools_cloudprofiler_v2_UpdateProfileRequest,
        __Marshaller_google_devtools_cloudprofiler_v2_Profile);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Profiler.V2.ProfilerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ProfilerService</summary>
    [grpc::BindServiceMethod(typeof(ProfilerService), "BindService")]
    public abstract partial class ProfilerServiceBase
    {
      /// <summary>
      /// CreateProfile creates a new profile resource in the online mode.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      ///
      /// The server ensures that the new profiles are created at a constant rate per
      /// deployment, so the creation request may hang for some time until the next
      /// profile session is available.
      ///
      /// The request may fail with ABORTED error if the creation is not available
      /// within ~1m, the response will indicate the duration of the backoff the
      /// client should take before attempting creating a profile again. The backoff
      /// duration is returned in google.rpc.RetryInfo extension on the response
      /// status. To a gRPC client, the extension will be return as a
      /// binary-serialized proto in the trailing metadata item named
      /// "google.rpc.retryinfo-bin".
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Profiler.V2.Profile> CreateProfile(global::Google.Cloud.Profiler.V2.CreateProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// CreateOfflineProfile creates a new profile resource in the offline
      /// mode. The client provides the profile to create along with the profile
      /// bytes, the server records it.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Profiler.V2.Profile> CreateOfflineProfile(global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// UpdateProfile updates the profile bytes and labels on the profile resource
      /// created in the online mode. Updating the bytes for profiles created in the
      /// offline mode is currently not supported: the profile content must be
      /// provided at the time of the profile creation.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Profiler.V2.Profile> UpdateProfile(global::Google.Cloud.Profiler.V2.UpdateProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ProfilerService</summary>
    public partial class ProfilerServiceClient : grpc::ClientBase<ProfilerServiceClient>
    {
      /// <summary>Creates a new client for ProfilerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ProfilerServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ProfilerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ProfilerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ProfilerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ProfilerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// CreateProfile creates a new profile resource in the online mode.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      ///
      /// The server ensures that the new profiles are created at a constant rate per
      /// deployment, so the creation request may hang for some time until the next
      /// profile session is available.
      ///
      /// The request may fail with ABORTED error if the creation is not available
      /// within ~1m, the response will indicate the duration of the backoff the
      /// client should take before attempting creating a profile again. The backoff
      /// duration is returned in google.rpc.RetryInfo extension on the response
      /// status. To a gRPC client, the extension will be return as a
      /// binary-serialized proto in the trailing metadata item named
      /// "google.rpc.retryinfo-bin".
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Profiler.V2.Profile CreateProfile(global::Google.Cloud.Profiler.V2.CreateProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateProfile creates a new profile resource in the online mode.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      ///
      /// The server ensures that the new profiles are created at a constant rate per
      /// deployment, so the creation request may hang for some time until the next
      /// profile session is available.
      ///
      /// The request may fail with ABORTED error if the creation is not available
      /// within ~1m, the response will indicate the duration of the backoff the
      /// client should take before attempting creating a profile again. The backoff
      /// duration is returned in google.rpc.RetryInfo extension on the response
      /// status. To a gRPC client, the extension will be return as a
      /// binary-serialized proto in the trailing metadata item named
      /// "google.rpc.retryinfo-bin".
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Profiler.V2.Profile CreateProfile(global::Google.Cloud.Profiler.V2.CreateProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateProfile, null, options, request);
      }
      /// <summary>
      /// CreateProfile creates a new profile resource in the online mode.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      ///
      /// The server ensures that the new profiles are created at a constant rate per
      /// deployment, so the creation request may hang for some time until the next
      /// profile session is available.
      ///
      /// The request may fail with ABORTED error if the creation is not available
      /// within ~1m, the response will indicate the duration of the backoff the
      /// client should take before attempting creating a profile again. The backoff
      /// duration is returned in google.rpc.RetryInfo extension on the response
      /// status. To a gRPC client, the extension will be return as a
      /// binary-serialized proto in the trailing metadata item named
      /// "google.rpc.retryinfo-bin".
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Profiler.V2.Profile> CreateProfileAsync(global::Google.Cloud.Profiler.V2.CreateProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateProfile creates a new profile resource in the online mode.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      ///
      /// The server ensures that the new profiles are created at a constant rate per
      /// deployment, so the creation request may hang for some time until the next
      /// profile session is available.
      ///
      /// The request may fail with ABORTED error if the creation is not available
      /// within ~1m, the response will indicate the duration of the backoff the
      /// client should take before attempting creating a profile again. The backoff
      /// duration is returned in google.rpc.RetryInfo extension on the response
      /// status. To a gRPC client, the extension will be return as a
      /// binary-serialized proto in the trailing metadata item named
      /// "google.rpc.retryinfo-bin".
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Profiler.V2.Profile> CreateProfileAsync(global::Google.Cloud.Profiler.V2.CreateProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateProfile, null, options, request);
      }
      /// <summary>
      /// CreateOfflineProfile creates a new profile resource in the offline
      /// mode. The client provides the profile to create along with the profile
      /// bytes, the server records it.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Profiler.V2.Profile CreateOfflineProfile(global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOfflineProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateOfflineProfile creates a new profile resource in the offline
      /// mode. The client provides the profile to create along with the profile
      /// bytes, the server records it.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Profiler.V2.Profile CreateOfflineProfile(global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateOfflineProfile, null, options, request);
      }
      /// <summary>
      /// CreateOfflineProfile creates a new profile resource in the offline
      /// mode. The client provides the profile to create along with the profile
      /// bytes, the server records it.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Profiler.V2.Profile> CreateOfflineProfileAsync(global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateOfflineProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// CreateOfflineProfile creates a new profile resource in the offline
      /// mode. The client provides the profile to create along with the profile
      /// bytes, the server records it.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Profiler.V2.Profile> CreateOfflineProfileAsync(global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateOfflineProfile, null, options, request);
      }
      /// <summary>
      /// UpdateProfile updates the profile bytes and labels on the profile resource
      /// created in the online mode. Updating the bytes for profiles created in the
      /// offline mode is currently not supported: the profile content must be
      /// provided at the time of the profile creation.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Profiler.V2.Profile UpdateProfile(global::Google.Cloud.Profiler.V2.UpdateProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateProfile updates the profile bytes and labels on the profile resource
      /// created in the online mode. Updating the bytes for profiles created in the
      /// offline mode is currently not supported: the profile content must be
      /// provided at the time of the profile creation.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Profiler.V2.Profile UpdateProfile(global::Google.Cloud.Profiler.V2.UpdateProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProfile, null, options, request);
      }
      /// <summary>
      /// UpdateProfile updates the profile bytes and labels on the profile resource
      /// created in the online mode. Updating the bytes for profiles created in the
      /// offline mode is currently not supported: the profile content must be
      /// provided at the time of the profile creation.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Profiler.V2.Profile> UpdateProfileAsync(global::Google.Cloud.Profiler.V2.UpdateProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// UpdateProfile updates the profile bytes and labels on the profile resource
      /// created in the online mode. Updating the bytes for profiles created in the
      /// offline mode is currently not supported: the profile content must be
      /// provided at the time of the profile creation.
      ///
      /// _Direct use of this API is discouraged, please use a [supported
      /// profiler
      /// agent](https://cloud.google.com/profiler/docs/about-profiler#profiling_agent)
      /// instead for profile collection._
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Profiler.V2.Profile> UpdateProfileAsync(global::Google.Cloud.Profiler.V2.UpdateProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProfile, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ProfilerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProfilerServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ProfilerServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateProfile, serviceImpl.CreateProfile)
          .AddMethod(__Method_CreateOfflineProfile, serviceImpl.CreateOfflineProfile)
          .AddMethod(__Method_UpdateProfile, serviceImpl.UpdateProfile).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProfilerServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Profiler.V2.CreateProfileRequest, global::Google.Cloud.Profiler.V2.Profile>(serviceImpl.CreateProfile));
      serviceBinder.AddMethod(__Method_CreateOfflineProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Profiler.V2.CreateOfflineProfileRequest, global::Google.Cloud.Profiler.V2.Profile>(serviceImpl.CreateOfflineProfile));
      serviceBinder.AddMethod(__Method_UpdateProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Profiler.V2.UpdateProfileRequest, global::Google.Cloud.Profiler.V2.Profile>(serviceImpl.UpdateProfile));
    }

  }
  /// <summary>
  /// Service allows existing Cloud Profiler customers to export their profile data
  /// out of Google Cloud.
  /// </summary>
  public static partial class ExportService
  {
    static readonly string __ServiceName = "google.devtools.cloudprofiler.v2.ExportService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Profiler.V2.ListProfilesRequest> __Marshaller_google_devtools_cloudprofiler_v2_ListProfilesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Profiler.V2.ListProfilesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Profiler.V2.ListProfilesResponse> __Marshaller_google_devtools_cloudprofiler_v2_ListProfilesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Profiler.V2.ListProfilesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Profiler.V2.ListProfilesRequest, global::Google.Cloud.Profiler.V2.ListProfilesResponse> __Method_ListProfiles = new grpc::Method<global::Google.Cloud.Profiler.V2.ListProfilesRequest, global::Google.Cloud.Profiler.V2.ListProfilesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProfiles",
        __Marshaller_google_devtools_cloudprofiler_v2_ListProfilesRequest,
        __Marshaller_google_devtools_cloudprofiler_v2_ListProfilesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Profiler.V2.ProfilerReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of ExportService</summary>
    [grpc::BindServiceMethod(typeof(ExportService), "BindService")]
    public abstract partial class ExportServiceBase
    {
      /// <summary>
      /// Lists profiles which have been collected so far and for which the caller
      /// has permission to view.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Profiler.V2.ListProfilesResponse> ListProfiles(global::Google.Cloud.Profiler.V2.ListProfilesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ExportService</summary>
    public partial class ExportServiceClient : grpc::ClientBase<ExportServiceClient>
    {
      /// <summary>Creates a new client for ExportService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ExportServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ExportService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ExportServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ExportServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ExportServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists profiles which have been collected so far and for which the caller
      /// has permission to view.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Profiler.V2.ListProfilesResponse ListProfiles(global::Google.Cloud.Profiler.V2.ListProfilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProfiles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists profiles which have been collected so far and for which the caller
      /// has permission to view.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Profiler.V2.ListProfilesResponse ListProfiles(global::Google.Cloud.Profiler.V2.ListProfilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProfiles, null, options, request);
      }
      /// <summary>
      /// Lists profiles which have been collected so far and for which the caller
      /// has permission to view.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Profiler.V2.ListProfilesResponse> ListProfilesAsync(global::Google.Cloud.Profiler.V2.ListProfilesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProfilesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists profiles which have been collected so far and for which the caller
      /// has permission to view.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Profiler.V2.ListProfilesResponse> ListProfilesAsync(global::Google.Cloud.Profiler.V2.ListProfilesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProfiles, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ExportServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ExportServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ExportServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListProfiles, serviceImpl.ListProfiles).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ExportServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListProfiles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Profiler.V2.ListProfilesRequest, global::Google.Cloud.Profiler.V2.ListProfilesResponse>(serviceImpl.ListProfiles));
    }

  }
}
#endregion
