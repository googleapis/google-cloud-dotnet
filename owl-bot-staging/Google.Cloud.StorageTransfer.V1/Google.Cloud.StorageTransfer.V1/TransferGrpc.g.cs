// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/storagetransfer/v1/transfer.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.StorageTransfer.V1 {
  /// <summary>
  /// Storage Transfer Service and its protos.
  /// Transfers data between between Google Cloud Storage buckets or from a data
  /// source external to Google to a Cloud Storage bucket.
  /// </summary>
  public static partial class StorageTransferService
  {
    static readonly string __ServiceName = "google.storagetransfer.v1.StorageTransferService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest> __Marshaller_google_storagetransfer_v1_GetGoogleServiceAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount> __Marshaller_google_storagetransfer_v1_GoogleServiceAccount = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest> __Marshaller_google_storagetransfer_v1_CreateTransferJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.TransferJob> __Marshaller_google_storagetransfer_v1_TransferJob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.TransferJob.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest> __Marshaller_google_storagetransfer_v1_UpdateTransferJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest> __Marshaller_google_storagetransfer_v1_GetTransferJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest> __Marshaller_google_storagetransfer_v1_ListTransferJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse> __Marshaller_google_storagetransfer_v1_ListTransferJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest> __Marshaller_google_storagetransfer_v1_PauseTransferOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest> __Marshaller_google_storagetransfer_v1_ResumeTransferOperationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest> __Marshaller_google_storagetransfer_v1_RunTransferJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest> __Marshaller_google_storagetransfer_v1_DeleteTransferJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest> __Marshaller_google_storagetransfer_v1_CreateAgentPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.AgentPool> __Marshaller_google_storagetransfer_v1_AgentPool = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.AgentPool.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest> __Marshaller_google_storagetransfer_v1_UpdateAgentPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest> __Marshaller_google_storagetransfer_v1_GetAgentPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest> __Marshaller_google_storagetransfer_v1_ListAgentPoolsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse> __Marshaller_google_storagetransfer_v1_ListAgentPoolsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest> __Marshaller_google_storagetransfer_v1_DeleteAgentPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest, global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount> __Method_GetGoogleServiceAccount = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest, global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGoogleServiceAccount",
        __Marshaller_google_storagetransfer_v1_GetGoogleServiceAccountRequest,
        __Marshaller_google_storagetransfer_v1_GoogleServiceAccount);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob> __Method_CreateTransferJob = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTransferJob",
        __Marshaller_google_storagetransfer_v1_CreateTransferJobRequest,
        __Marshaller_google_storagetransfer_v1_TransferJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob> __Method_UpdateTransferJob = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTransferJob",
        __Marshaller_google_storagetransfer_v1_UpdateTransferJobRequest,
        __Marshaller_google_storagetransfer_v1_TransferJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob> __Method_GetTransferJob = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTransferJob",
        __Marshaller_google_storagetransfer_v1_GetTransferJobRequest,
        __Marshaller_google_storagetransfer_v1_TransferJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest, global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse> __Method_ListTransferJobs = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest, global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTransferJobs",
        __Marshaller_google_storagetransfer_v1_ListTransferJobsRequest,
        __Marshaller_google_storagetransfer_v1_ListTransferJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_PauseTransferOperation = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PauseTransferOperation",
        __Marshaller_google_storagetransfer_v1_PauseTransferOperationRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ResumeTransferOperation = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResumeTransferOperation",
        __Marshaller_google_storagetransfer_v1_ResumeTransferOperationRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest, global::Google.LongRunning.Operation> __Method_RunTransferJob = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunTransferJob",
        __Marshaller_google_storagetransfer_v1_RunTransferJobRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteTransferJob = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTransferJob",
        __Marshaller_google_storagetransfer_v1_DeleteTransferJobRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool> __Method_CreateAgentPool = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAgentPool",
        __Marshaller_google_storagetransfer_v1_CreateAgentPoolRequest,
        __Marshaller_google_storagetransfer_v1_AgentPool);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool> __Method_UpdateAgentPool = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAgentPool",
        __Marshaller_google_storagetransfer_v1_UpdateAgentPoolRequest,
        __Marshaller_google_storagetransfer_v1_AgentPool);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool> __Method_GetAgentPool = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAgentPool",
        __Marshaller_google_storagetransfer_v1_GetAgentPoolRequest,
        __Marshaller_google_storagetransfer_v1_AgentPool);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest, global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse> __Method_ListAgentPools = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest, global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAgentPools",
        __Marshaller_google_storagetransfer_v1_ListAgentPoolsRequest,
        __Marshaller_google_storagetransfer_v1_ListAgentPoolsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteAgentPool = new grpc::Method<global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAgentPool",
        __Marshaller_google_storagetransfer_v1_DeleteAgentPoolRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.StorageTransfer.V1.TransferReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of StorageTransferService</summary>
    [grpc::BindServiceMethod(typeof(StorageTransferService), "BindService")]
    public abstract partial class StorageTransferServiceBase
    {
      /// <summary>
      /// Returns the Google service account that is used by Storage Transfer
      /// Service to access buckets in the project where transfers
      /// run or in other projects. Each Google service account is associated
      /// with one Google Cloud project. Users
      /// should add this service account to the Google Cloud Storage bucket
      /// ACLs to grant access to Storage Transfer Service. This service
      /// account is created and owned by Storage Transfer Service and can
      /// only be used by Storage Transfer Service.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount> GetGoogleServiceAccount(global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a transfer job that runs periodically.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.TransferJob> CreateTransferJob(global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a transfer job. Updating a job's transfer spec does not affect
      /// transfer operations that are running already.
      ///
      /// **Note:** The job's [status][google.storagetransfer.v1.TransferJob.status]
      /// field can be modified using this RPC (for example, to set a job's status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED],
      /// [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], or
      /// [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED]).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.TransferJob> UpdateTransferJob(global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a transfer job.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.TransferJob> GetTransferJob(global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists transfer jobs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse> ListTransferJobs(global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Pauses a transfer operation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> PauseTransferOperation(global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resumes a transfer operation that is paused.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ResumeTransferOperation(global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts a new operation for the specified transfer job.
      /// A `TransferJob` has a maximum of one active `TransferOperation`. If this
      /// method is called while a `TransferOperation` is active, an error is
      /// returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RunTransferJob(global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a transfer job. Deleting a transfer job sets its status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferJob(global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates an agent pool resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.AgentPool> CreateAgentPool(global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing agent pool resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.AgentPool> UpdateAgentPool(global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets an agent pool.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.AgentPool> GetAgentPool(global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists agent pools.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse> ListAgentPools(global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an agent pool.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAgentPool(global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for StorageTransferService</summary>
    public partial class StorageTransferServiceClient : grpc::ClientBase<StorageTransferServiceClient>
    {
      /// <summary>Creates a new client for StorageTransferService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public StorageTransferServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for StorageTransferService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public StorageTransferServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected StorageTransferServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected StorageTransferServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the Google service account that is used by Storage Transfer
      /// Service to access buckets in the project where transfers
      /// run or in other projects. Each Google service account is associated
      /// with one Google Cloud project. Users
      /// should add this service account to the Google Cloud Storage bucket
      /// ACLs to grant access to Storage Transfer Service. This service
      /// account is created and owned by Storage Transfer Service and can
      /// only be used by Storage Transfer Service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount GetGoogleServiceAccount(global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGoogleServiceAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the Google service account that is used by Storage Transfer
      /// Service to access buckets in the project where transfers
      /// run or in other projects. Each Google service account is associated
      /// with one Google Cloud project. Users
      /// should add this service account to the Google Cloud Storage bucket
      /// ACLs to grant access to Storage Transfer Service. This service
      /// account is created and owned by Storage Transfer Service and can
      /// only be used by Storage Transfer Service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount GetGoogleServiceAccount(global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGoogleServiceAccount, null, options, request);
      }
      /// <summary>
      /// Returns the Google service account that is used by Storage Transfer
      /// Service to access buckets in the project where transfers
      /// run or in other projects. Each Google service account is associated
      /// with one Google Cloud project. Users
      /// should add this service account to the Google Cloud Storage bucket
      /// ACLs to grant access to Storage Transfer Service. This service
      /// account is created and owned by Storage Transfer Service and can
      /// only be used by Storage Transfer Service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount> GetGoogleServiceAccountAsync(global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGoogleServiceAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the Google service account that is used by Storage Transfer
      /// Service to access buckets in the project where transfers
      /// run or in other projects. Each Google service account is associated
      /// with one Google Cloud project. Users
      /// should add this service account to the Google Cloud Storage bucket
      /// ACLs to grant access to Storage Transfer Service. This service
      /// account is created and owned by Storage Transfer Service and can
      /// only be used by Storage Transfer Service.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount> GetGoogleServiceAccountAsync(global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGoogleServiceAccount, null, options, request);
      }
      /// <summary>
      /// Creates a transfer job that runs periodically.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.TransferJob CreateTransferJob(global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTransferJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a transfer job that runs periodically.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.TransferJob CreateTransferJob(global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTransferJob, null, options, request);
      }
      /// <summary>
      /// Creates a transfer job that runs periodically.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.TransferJob> CreateTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTransferJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a transfer job that runs periodically.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.TransferJob> CreateTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTransferJob, null, options, request);
      }
      /// <summary>
      /// Updates a transfer job. Updating a job's transfer spec does not affect
      /// transfer operations that are running already.
      ///
      /// **Note:** The job's [status][google.storagetransfer.v1.TransferJob.status]
      /// field can be modified using this RPC (for example, to set a job's status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED],
      /// [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], or
      /// [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED]).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.TransferJob UpdateTransferJob(global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTransferJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a transfer job. Updating a job's transfer spec does not affect
      /// transfer operations that are running already.
      ///
      /// **Note:** The job's [status][google.storagetransfer.v1.TransferJob.status]
      /// field can be modified using this RPC (for example, to set a job's status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED],
      /// [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], or
      /// [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED]).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.TransferJob UpdateTransferJob(global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTransferJob, null, options, request);
      }
      /// <summary>
      /// Updates a transfer job. Updating a job's transfer spec does not affect
      /// transfer operations that are running already.
      ///
      /// **Note:** The job's [status][google.storagetransfer.v1.TransferJob.status]
      /// field can be modified using this RPC (for example, to set a job's status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED],
      /// [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], or
      /// [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED]).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.TransferJob> UpdateTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTransferJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a transfer job. Updating a job's transfer spec does not affect
      /// transfer operations that are running already.
      ///
      /// **Note:** The job's [status][google.storagetransfer.v1.TransferJob.status]
      /// field can be modified using this RPC (for example, to set a job's status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED],
      /// [DISABLED][google.storagetransfer.v1.TransferJob.Status.DISABLED], or
      /// [ENABLED][google.storagetransfer.v1.TransferJob.Status.ENABLED]).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.TransferJob> UpdateTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTransferJob, null, options, request);
      }
      /// <summary>
      /// Gets a transfer job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.TransferJob GetTransferJob(global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransferJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a transfer job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.TransferJob GetTransferJob(global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTransferJob, null, options, request);
      }
      /// <summary>
      /// Gets a transfer job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.TransferJob> GetTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTransferJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a transfer job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.TransferJob> GetTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTransferJob, null, options, request);
      }
      /// <summary>
      /// Lists transfer jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse ListTransferJobs(global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists transfer jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse ListTransferJobs(global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTransferJobs, null, options, request);
      }
      /// <summary>
      /// Lists transfer jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse> ListTransferJobsAsync(global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTransferJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists transfer jobs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse> ListTransferJobsAsync(global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTransferJobs, null, options, request);
      }
      /// <summary>
      /// Pauses a transfer operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty PauseTransferOperation(global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseTransferOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses a transfer operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty PauseTransferOperation(global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PauseTransferOperation, null, options, request);
      }
      /// <summary>
      /// Pauses a transfer operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PauseTransferOperationAsync(global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PauseTransferOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Pauses a transfer operation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PauseTransferOperationAsync(global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PauseTransferOperation, null, options, request);
      }
      /// <summary>
      /// Resumes a transfer operation that is paused.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResumeTransferOperation(global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeTransferOperation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes a transfer operation that is paused.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty ResumeTransferOperation(global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResumeTransferOperation, null, options, request);
      }
      /// <summary>
      /// Resumes a transfer operation that is paused.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResumeTransferOperationAsync(global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResumeTransferOperationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resumes a transfer operation that is paused.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ResumeTransferOperationAsync(global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResumeTransferOperation, null, options, request);
      }
      /// <summary>
      /// Starts a new operation for the specified transfer job.
      /// A `TransferJob` has a maximum of one active `TransferOperation`. If this
      /// method is called while a `TransferOperation` is active, an error is
      /// returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunTransferJob(global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunTransferJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a new operation for the specified transfer job.
      /// A `TransferJob` has a maximum of one active `TransferOperation`. If this
      /// method is called while a `TransferOperation` is active, an error is
      /// returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RunTransferJob(global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunTransferJob, null, options, request);
      }
      /// <summary>
      /// Starts a new operation for the specified transfer job.
      /// A `TransferJob` has a maximum of one active `TransferOperation`. If this
      /// method is called while a `TransferOperation` is active, an error is
      /// returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunTransferJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a new operation for the specified transfer job.
      /// A `TransferJob` has a maximum of one active `TransferOperation`. If this
      /// method is called while a `TransferOperation` is active, an error is
      /// returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RunTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunTransferJob, null, options, request);
      }
      /// <summary>
      /// Deletes a transfer job. Deleting a transfer job sets its status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTransferJob(global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTransferJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a transfer job. Deleting a transfer job sets its status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteTransferJob(global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTransferJob, null, options, request);
      }
      /// <summary>
      /// Deletes a transfer job. Deleting a transfer job sets its status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTransferJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a transfer job. Deleting a transfer job sets its status to
      /// [DELETED][google.storagetransfer.v1.TransferJob.Status.DELETED].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteTransferJobAsync(global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTransferJob, null, options, request);
      }
      /// <summary>
      /// Creates an agent pool resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.AgentPool CreateAgentPool(global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAgentPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an agent pool resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.AgentPool CreateAgentPool(global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAgentPool, null, options, request);
      }
      /// <summary>
      /// Creates an agent pool resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.AgentPool> CreateAgentPoolAsync(global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAgentPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an agent pool resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.AgentPool> CreateAgentPoolAsync(global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAgentPool, null, options, request);
      }
      /// <summary>
      /// Updates an existing agent pool resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.AgentPool UpdateAgentPool(global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAgentPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing agent pool resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.AgentPool UpdateAgentPool(global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAgentPool, null, options, request);
      }
      /// <summary>
      /// Updates an existing agent pool resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.AgentPool> UpdateAgentPoolAsync(global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAgentPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing agent pool resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.AgentPool> UpdateAgentPoolAsync(global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAgentPool, null, options, request);
      }
      /// <summary>
      /// Gets an agent pool.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.AgentPool GetAgentPool(global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAgentPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an agent pool.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.AgentPool GetAgentPool(global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAgentPool, null, options, request);
      }
      /// <summary>
      /// Gets an agent pool.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.AgentPool> GetAgentPoolAsync(global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAgentPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets an agent pool.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.AgentPool> GetAgentPoolAsync(global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAgentPool, null, options, request);
      }
      /// <summary>
      /// Lists agent pools.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse ListAgentPools(global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAgentPools(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists agent pools.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse ListAgentPools(global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAgentPools, null, options, request);
      }
      /// <summary>
      /// Lists agent pools.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse> ListAgentPoolsAsync(global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAgentPoolsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists agent pools.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse> ListAgentPoolsAsync(global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAgentPools, null, options, request);
      }
      /// <summary>
      /// Deletes an agent pool.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAgentPool(global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAgentPool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an agent pool.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteAgentPool(global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAgentPool, null, options, request);
      }
      /// <summary>
      /// Deletes an agent pool.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAgentPoolAsync(global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAgentPoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an agent pool.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteAgentPoolAsync(global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAgentPool, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override StorageTransferServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StorageTransferServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(StorageTransferServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetGoogleServiceAccount, serviceImpl.GetGoogleServiceAccount)
          .AddMethod(__Method_CreateTransferJob, serviceImpl.CreateTransferJob)
          .AddMethod(__Method_UpdateTransferJob, serviceImpl.UpdateTransferJob)
          .AddMethod(__Method_GetTransferJob, serviceImpl.GetTransferJob)
          .AddMethod(__Method_ListTransferJobs, serviceImpl.ListTransferJobs)
          .AddMethod(__Method_PauseTransferOperation, serviceImpl.PauseTransferOperation)
          .AddMethod(__Method_ResumeTransferOperation, serviceImpl.ResumeTransferOperation)
          .AddMethod(__Method_RunTransferJob, serviceImpl.RunTransferJob)
          .AddMethod(__Method_DeleteTransferJob, serviceImpl.DeleteTransferJob)
          .AddMethod(__Method_CreateAgentPool, serviceImpl.CreateAgentPool)
          .AddMethod(__Method_UpdateAgentPool, serviceImpl.UpdateAgentPool)
          .AddMethod(__Method_GetAgentPool, serviceImpl.GetAgentPool)
          .AddMethod(__Method_ListAgentPools, serviceImpl.ListAgentPools)
          .AddMethod(__Method_DeleteAgentPool, serviceImpl.DeleteAgentPool).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, StorageTransferServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetGoogleServiceAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.GetGoogleServiceAccountRequest, global::Google.Cloud.StorageTransfer.V1.GoogleServiceAccount>(serviceImpl.GetGoogleServiceAccount));
      serviceBinder.AddMethod(__Method_CreateTransferJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.CreateTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob>(serviceImpl.CreateTransferJob));
      serviceBinder.AddMethod(__Method_UpdateTransferJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.UpdateTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob>(serviceImpl.UpdateTransferJob));
      serviceBinder.AddMethod(__Method_GetTransferJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.GetTransferJobRequest, global::Google.Cloud.StorageTransfer.V1.TransferJob>(serviceImpl.GetTransferJob));
      serviceBinder.AddMethod(__Method_ListTransferJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.ListTransferJobsRequest, global::Google.Cloud.StorageTransfer.V1.ListTransferJobsResponse>(serviceImpl.ListTransferJobs));
      serviceBinder.AddMethod(__Method_PauseTransferOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.PauseTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.PauseTransferOperation));
      serviceBinder.AddMethod(__Method_ResumeTransferOperation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.ResumeTransferOperationRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ResumeTransferOperation));
      serviceBinder.AddMethod(__Method_RunTransferJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.RunTransferJobRequest, global::Google.LongRunning.Operation>(serviceImpl.RunTransferJob));
      serviceBinder.AddMethod(__Method_DeleteTransferJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.DeleteTransferJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteTransferJob));
      serviceBinder.AddMethod(__Method_CreateAgentPool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.CreateAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool>(serviceImpl.CreateAgentPool));
      serviceBinder.AddMethod(__Method_UpdateAgentPool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.UpdateAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool>(serviceImpl.UpdateAgentPool));
      serviceBinder.AddMethod(__Method_GetAgentPool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.GetAgentPoolRequest, global::Google.Cloud.StorageTransfer.V1.AgentPool>(serviceImpl.GetAgentPool));
      serviceBinder.AddMethod(__Method_ListAgentPools, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsRequest, global::Google.Cloud.StorageTransfer.V1.ListAgentPoolsResponse>(serviceImpl.ListAgentPools));
      serviceBinder.AddMethod(__Method_DeleteAgentPool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.StorageTransfer.V1.DeleteAgentPoolRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteAgentPool));
    }

  }
}
#endregion
