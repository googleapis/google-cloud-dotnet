// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/kms/v1/ekm_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Kms.V1 {
  /// <summary>
  /// Google Cloud Key Management EKM Service
  ///
  /// Manages external cryptographic keys and operations using those keys.
  /// Implements a REST model with the following objects:
  /// * [EkmConnection][google.cloud.kms.v1.EkmConnection]
  /// </summary>
  public static partial class EkmService
  {
    static readonly string __ServiceName = "google.cloud.kms.v1.EkmService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest> __Marshaller_google_cloud_kms_v1_ListEkmConnectionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse> __Marshaller_google_cloud_kms_v1_ListEkmConnectionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.GetEkmConnectionRequest> __Marshaller_google_cloud_kms_v1_GetEkmConnectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.GetEkmConnectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.EkmConnection> __Marshaller_google_cloud_kms_v1_EkmConnection = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.EkmConnection.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest> __Marshaller_google_cloud_kms_v1_CreateEkmConnectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest> __Marshaller_google_cloud_kms_v1_UpdateEkmConnectionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.GetEkmConfigRequest> __Marshaller_google_cloud_kms_v1_GetEkmConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.GetEkmConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.EkmConfig> __Marshaller_google_cloud_kms_v1_EkmConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.EkmConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest> __Marshaller_google_cloud_kms_v1_UpdateEkmConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.VerifyConnectivityRequest> __Marshaller_google_cloud_kms_v1_VerifyConnectivityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.VerifyConnectivityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.VerifyConnectivityResponse> __Marshaller_google_cloud_kms_v1_VerifyConnectivityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.VerifyConnectivityResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest, global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse> __Method_ListEkmConnections = new grpc::Method<global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest, global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListEkmConnections",
        __Marshaller_google_cloud_kms_v1_ListEkmConnectionsRequest,
        __Marshaller_google_cloud_kms_v1_ListEkmConnectionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.GetEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection> __Method_GetEkmConnection = new grpc::Method<global::Google.Cloud.Kms.V1.GetEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEkmConnection",
        __Marshaller_google_cloud_kms_v1_GetEkmConnectionRequest,
        __Marshaller_google_cloud_kms_v1_EkmConnection);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection> __Method_CreateEkmConnection = new grpc::Method<global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateEkmConnection",
        __Marshaller_google_cloud_kms_v1_CreateEkmConnectionRequest,
        __Marshaller_google_cloud_kms_v1_EkmConnection);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection> __Method_UpdateEkmConnection = new grpc::Method<global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEkmConnection",
        __Marshaller_google_cloud_kms_v1_UpdateEkmConnectionRequest,
        __Marshaller_google_cloud_kms_v1_EkmConnection);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.GetEkmConfigRequest, global::Google.Cloud.Kms.V1.EkmConfig> __Method_GetEkmConfig = new grpc::Method<global::Google.Cloud.Kms.V1.GetEkmConfigRequest, global::Google.Cloud.Kms.V1.EkmConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEkmConfig",
        __Marshaller_google_cloud_kms_v1_GetEkmConfigRequest,
        __Marshaller_google_cloud_kms_v1_EkmConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest, global::Google.Cloud.Kms.V1.EkmConfig> __Method_UpdateEkmConfig = new grpc::Method<global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest, global::Google.Cloud.Kms.V1.EkmConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateEkmConfig",
        __Marshaller_google_cloud_kms_v1_UpdateEkmConfigRequest,
        __Marshaller_google_cloud_kms_v1_EkmConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.VerifyConnectivityRequest, global::Google.Cloud.Kms.V1.VerifyConnectivityResponse> __Method_VerifyConnectivity = new grpc::Method<global::Google.Cloud.Kms.V1.VerifyConnectivityRequest, global::Google.Cloud.Kms.V1.VerifyConnectivityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyConnectivity",
        __Marshaller_google_cloud_kms_v1_VerifyConnectivityRequest,
        __Marshaller_google_cloud_kms_v1_VerifyConnectivityResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Kms.V1.EkmServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EkmService</summary>
    [grpc::BindServiceMethod(typeof(EkmService), "BindService")]
    public abstract partial class EkmServiceBase
    {
      /// <summary>
      /// Lists [EkmConnections][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse> ListEkmConnections(global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns metadata for a given
      /// [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.EkmConnection> GetEkmConnection(global::Google.Cloud.Kms.V1.GetEkmConnectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new [EkmConnection][google.cloud.kms.v1.EkmConnection] in a given
      /// Project and Location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.EkmConnection> CreateEkmConnection(global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an [EkmConnection][google.cloud.kms.v1.EkmConnection]'s metadata.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.EkmConnection> UpdateEkmConnection(global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.EkmConfig> GetEkmConfig(global::Google.Cloud.Kms.V1.GetEkmConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.EkmConfig> UpdateEkmConfig(global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verifies that Cloud KMS can successfully connect to the external key
      /// manager specified by an [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// If there is an error connecting to the EKM, this method returns a
      /// FAILED_PRECONDITION status containing structured information as described
      /// at https://cloud.google.com/kms/docs/reference/ekm_errors.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.VerifyConnectivityResponse> VerifyConnectivity(global::Google.Cloud.Kms.V1.VerifyConnectivityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EkmService</summary>
    public partial class EkmServiceClient : grpc::ClientBase<EkmServiceClient>
    {
      /// <summary>Creates a new client for EkmService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EkmServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EkmService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EkmServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EkmServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EkmServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Lists [EkmConnections][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse ListEkmConnections(global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEkmConnections(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists [EkmConnections][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse ListEkmConnections(global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListEkmConnections, null, options, request);
      }
      /// <summary>
      /// Lists [EkmConnections][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse> ListEkmConnectionsAsync(global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListEkmConnectionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists [EkmConnections][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse> ListEkmConnectionsAsync(global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListEkmConnections, null, options, request);
      }
      /// <summary>
      /// Returns metadata for a given
      /// [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConnection GetEkmConnection(global::Google.Cloud.Kms.V1.GetEkmConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEkmConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns metadata for a given
      /// [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConnection GetEkmConnection(global::Google.Cloud.Kms.V1.GetEkmConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEkmConnection, null, options, request);
      }
      /// <summary>
      /// Returns metadata for a given
      /// [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConnection> GetEkmConnectionAsync(global::Google.Cloud.Kms.V1.GetEkmConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEkmConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns metadata for a given
      /// [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConnection> GetEkmConnectionAsync(global::Google.Cloud.Kms.V1.GetEkmConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEkmConnection, null, options, request);
      }
      /// <summary>
      /// Creates a new [EkmConnection][google.cloud.kms.v1.EkmConnection] in a given
      /// Project and Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConnection CreateEkmConnection(global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEkmConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new [EkmConnection][google.cloud.kms.v1.EkmConnection] in a given
      /// Project and Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConnection CreateEkmConnection(global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateEkmConnection, null, options, request);
      }
      /// <summary>
      /// Creates a new [EkmConnection][google.cloud.kms.v1.EkmConnection] in a given
      /// Project and Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConnection> CreateEkmConnectionAsync(global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateEkmConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new [EkmConnection][google.cloud.kms.v1.EkmConnection] in a given
      /// Project and Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConnection> CreateEkmConnectionAsync(global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateEkmConnection, null, options, request);
      }
      /// <summary>
      /// Updates an [EkmConnection][google.cloud.kms.v1.EkmConnection]'s metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConnection UpdateEkmConnection(global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEkmConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an [EkmConnection][google.cloud.kms.v1.EkmConnection]'s metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConnection UpdateEkmConnection(global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEkmConnection, null, options, request);
      }
      /// <summary>
      /// Updates an [EkmConnection][google.cloud.kms.v1.EkmConnection]'s metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConnection> UpdateEkmConnectionAsync(global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEkmConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an [EkmConnection][google.cloud.kms.v1.EkmConnection]'s metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConnection> UpdateEkmConnectionAsync(global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEkmConnection, null, options, request);
      }
      /// <summary>
      /// Returns the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConfig GetEkmConfig(global::Google.Cloud.Kms.V1.GetEkmConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEkmConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConfig GetEkmConfig(global::Google.Cloud.Kms.V1.GetEkmConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEkmConfig, null, options, request);
      }
      /// <summary>
      /// Returns the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConfig> GetEkmConfigAsync(global::Google.Cloud.Kms.V1.GetEkmConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEkmConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConfig> GetEkmConfigAsync(global::Google.Cloud.Kms.V1.GetEkmConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEkmConfig, null, options, request);
      }
      /// <summary>
      /// Updates the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConfig UpdateEkmConfig(global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEkmConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.EkmConfig UpdateEkmConfig(global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateEkmConfig, null, options, request);
      }
      /// <summary>
      /// Updates the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConfig> UpdateEkmConfigAsync(global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateEkmConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [EkmConfig][google.cloud.kms.v1.EkmConfig] singleton resource
      /// for a given project and location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.EkmConfig> UpdateEkmConfigAsync(global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateEkmConfig, null, options, request);
      }
      /// <summary>
      /// Verifies that Cloud KMS can successfully connect to the external key
      /// manager specified by an [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// If there is an error connecting to the EKM, this method returns a
      /// FAILED_PRECONDITION status containing structured information as described
      /// at https://cloud.google.com/kms/docs/reference/ekm_errors.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.VerifyConnectivityResponse VerifyConnectivity(global::Google.Cloud.Kms.V1.VerifyConnectivityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyConnectivity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verifies that Cloud KMS can successfully connect to the external key
      /// manager specified by an [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// If there is an error connecting to the EKM, this method returns a
      /// FAILED_PRECONDITION status containing structured information as described
      /// at https://cloud.google.com/kms/docs/reference/ekm_errors.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.VerifyConnectivityResponse VerifyConnectivity(global::Google.Cloud.Kms.V1.VerifyConnectivityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyConnectivity, null, options, request);
      }
      /// <summary>
      /// Verifies that Cloud KMS can successfully connect to the external key
      /// manager specified by an [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// If there is an error connecting to the EKM, this method returns a
      /// FAILED_PRECONDITION status containing structured information as described
      /// at https://cloud.google.com/kms/docs/reference/ekm_errors.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.VerifyConnectivityResponse> VerifyConnectivityAsync(global::Google.Cloud.Kms.V1.VerifyConnectivityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyConnectivityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verifies that Cloud KMS can successfully connect to the external key
      /// manager specified by an [EkmConnection][google.cloud.kms.v1.EkmConnection].
      /// If there is an error connecting to the EKM, this method returns a
      /// FAILED_PRECONDITION status containing structured information as described
      /// at https://cloud.google.com/kms/docs/reference/ekm_errors.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.VerifyConnectivityResponse> VerifyConnectivityAsync(global::Google.Cloud.Kms.V1.VerifyConnectivityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyConnectivity, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override EkmServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EkmServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EkmServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ListEkmConnections, serviceImpl.ListEkmConnections)
          .AddMethod(__Method_GetEkmConnection, serviceImpl.GetEkmConnection)
          .AddMethod(__Method_CreateEkmConnection, serviceImpl.CreateEkmConnection)
          .AddMethod(__Method_UpdateEkmConnection, serviceImpl.UpdateEkmConnection)
          .AddMethod(__Method_GetEkmConfig, serviceImpl.GetEkmConfig)
          .AddMethod(__Method_UpdateEkmConfig, serviceImpl.UpdateEkmConfig)
          .AddMethod(__Method_VerifyConnectivity, serviceImpl.VerifyConnectivity).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EkmServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ListEkmConnections, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.ListEkmConnectionsRequest, global::Google.Cloud.Kms.V1.ListEkmConnectionsResponse>(serviceImpl.ListEkmConnections));
      serviceBinder.AddMethod(__Method_GetEkmConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.GetEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection>(serviceImpl.GetEkmConnection));
      serviceBinder.AddMethod(__Method_CreateEkmConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.CreateEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection>(serviceImpl.CreateEkmConnection));
      serviceBinder.AddMethod(__Method_UpdateEkmConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.UpdateEkmConnectionRequest, global::Google.Cloud.Kms.V1.EkmConnection>(serviceImpl.UpdateEkmConnection));
      serviceBinder.AddMethod(__Method_GetEkmConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.GetEkmConfigRequest, global::Google.Cloud.Kms.V1.EkmConfig>(serviceImpl.GetEkmConfig));
      serviceBinder.AddMethod(__Method_UpdateEkmConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.UpdateEkmConfigRequest, global::Google.Cloud.Kms.V1.EkmConfig>(serviceImpl.UpdateEkmConfig));
      serviceBinder.AddMethod(__Method_VerifyConnectivity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.VerifyConnectivityRequest, global::Google.Cloud.Kms.V1.VerifyConnectivityResponse>(serviceImpl.VerifyConnectivity));
    }

  }
}
#endregion
