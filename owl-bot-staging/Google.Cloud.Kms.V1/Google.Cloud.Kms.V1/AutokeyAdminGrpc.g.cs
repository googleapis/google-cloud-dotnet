// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/kms/v1/autokey_admin.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Kms.V1 {
  /// <summary>
  /// Provides interfaces for managing [Cloud KMS
  /// Autokey](https://cloud.google.com/kms/help/autokey) folder-level
  /// configurations. A configuration is inherited by all descendent projects. A
  /// configuration at one folder overrides any other configurations in its
  /// ancestry. Setting a configuration on a folder is a prerequisite for Cloud KMS
  /// Autokey, so that users working in a descendant project can request
  /// provisioned [CryptoKeys][google.cloud.kms.v1.CryptoKey], ready for Customer
  /// Managed Encryption Key (CMEK) use, on-demand.
  /// </summary>
  public static partial class AutokeyAdmin
  {
    static readonly string __ServiceName = "google.cloud.kms.v1.AutokeyAdmin";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest> __Marshaller_google_cloud_kms_v1_UpdateAutokeyConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.AutokeyConfig> __Marshaller_google_cloud_kms_v1_AutokeyConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.AutokeyConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest> __Marshaller_google_cloud_kms_v1_GetAutokeyConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest> __Marshaller_google_cloud_kms_v1_ShowEffectiveAutokeyConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse> __Marshaller_google_cloud_kms_v1_ShowEffectiveAutokeyConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest, global::Google.Cloud.Kms.V1.AutokeyConfig> __Method_UpdateAutokeyConfig = new grpc::Method<global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest, global::Google.Cloud.Kms.V1.AutokeyConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAutokeyConfig",
        __Marshaller_google_cloud_kms_v1_UpdateAutokeyConfigRequest,
        __Marshaller_google_cloud_kms_v1_AutokeyConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest, global::Google.Cloud.Kms.V1.AutokeyConfig> __Method_GetAutokeyConfig = new grpc::Method<global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest, global::Google.Cloud.Kms.V1.AutokeyConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAutokeyConfig",
        __Marshaller_google_cloud_kms_v1_GetAutokeyConfigRequest,
        __Marshaller_google_cloud_kms_v1_AutokeyConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest, global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse> __Method_ShowEffectiveAutokeyConfig = new grpc::Method<global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest, global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ShowEffectiveAutokeyConfig",
        __Marshaller_google_cloud_kms_v1_ShowEffectiveAutokeyConfigRequest,
        __Marshaller_google_cloud_kms_v1_ShowEffectiveAutokeyConfigResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Kms.V1.AutokeyAdminReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AutokeyAdmin</summary>
    [grpc::BindServiceMethod(typeof(AutokeyAdmin), "BindService")]
    public abstract partial class AutokeyAdminBase
    {
      /// <summary>
      /// Updates the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder. The caller must have both `cloudkms.autokeyConfigs.update`
      /// permission on the parent folder and `cloudkms.cryptoKeys.setIamPolicy`
      /// permission on the provided key project. A
      /// [KeyHandle][google.cloud.kms.v1.KeyHandle] creation in the folder's
      /// descendant projects will use this configuration to determine where to
      /// create the resulting [CryptoKey][google.cloud.kms.v1.CryptoKey].
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.AutokeyConfig> UpdateAutokeyConfig(global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.AutokeyConfig> GetAutokeyConfig(global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the effective Cloud KMS Autokey configuration for a given project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse> ShowEffectiveAutokeyConfig(global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AutokeyAdmin</summary>
    public partial class AutokeyAdminClient : grpc::ClientBase<AutokeyAdminClient>
    {
      /// <summary>Creates a new client for AutokeyAdmin</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AutokeyAdminClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AutokeyAdmin that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AutokeyAdminClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AutokeyAdminClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AutokeyAdminClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Updates the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder. The caller must have both `cloudkms.autokeyConfigs.update`
      /// permission on the parent folder and `cloudkms.cryptoKeys.setIamPolicy`
      /// permission on the provided key project. A
      /// [KeyHandle][google.cloud.kms.v1.KeyHandle] creation in the folder's
      /// descendant projects will use this configuration to determine where to
      /// create the resulting [CryptoKey][google.cloud.kms.v1.CryptoKey].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.AutokeyConfig UpdateAutokeyConfig(global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAutokeyConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder. The caller must have both `cloudkms.autokeyConfigs.update`
      /// permission on the parent folder and `cloudkms.cryptoKeys.setIamPolicy`
      /// permission on the provided key project. A
      /// [KeyHandle][google.cloud.kms.v1.KeyHandle] creation in the folder's
      /// descendant projects will use this configuration to determine where to
      /// create the resulting [CryptoKey][google.cloud.kms.v1.CryptoKey].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.AutokeyConfig UpdateAutokeyConfig(global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAutokeyConfig, null, options, request);
      }
      /// <summary>
      /// Updates the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder. The caller must have both `cloudkms.autokeyConfigs.update`
      /// permission on the parent folder and `cloudkms.cryptoKeys.setIamPolicy`
      /// permission on the provided key project. A
      /// [KeyHandle][google.cloud.kms.v1.KeyHandle] creation in the folder's
      /// descendant projects will use this configuration to determine where to
      /// create the resulting [CryptoKey][google.cloud.kms.v1.CryptoKey].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.AutokeyConfig> UpdateAutokeyConfigAsync(global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAutokeyConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder. The caller must have both `cloudkms.autokeyConfigs.update`
      /// permission on the parent folder and `cloudkms.cryptoKeys.setIamPolicy`
      /// permission on the provided key project. A
      /// [KeyHandle][google.cloud.kms.v1.KeyHandle] creation in the folder's
      /// descendant projects will use this configuration to determine where to
      /// create the resulting [CryptoKey][google.cloud.kms.v1.CryptoKey].
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.AutokeyConfig> UpdateAutokeyConfigAsync(global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAutokeyConfig, null, options, request);
      }
      /// <summary>
      /// Returns the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.AutokeyConfig GetAutokeyConfig(global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAutokeyConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.AutokeyConfig GetAutokeyConfig(global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAutokeyConfig, null, options, request);
      }
      /// <summary>
      /// Returns the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.AutokeyConfig> GetAutokeyConfigAsync(global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAutokeyConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the [AutokeyConfig][google.cloud.kms.v1.AutokeyConfig] for a
      /// folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.AutokeyConfig> GetAutokeyConfigAsync(global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAutokeyConfig, null, options, request);
      }
      /// <summary>
      /// Returns the effective Cloud KMS Autokey configuration for a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse ShowEffectiveAutokeyConfig(global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ShowEffectiveAutokeyConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the effective Cloud KMS Autokey configuration for a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse ShowEffectiveAutokeyConfig(global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ShowEffectiveAutokeyConfig, null, options, request);
      }
      /// <summary>
      /// Returns the effective Cloud KMS Autokey configuration for a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse> ShowEffectiveAutokeyConfigAsync(global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ShowEffectiveAutokeyConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the effective Cloud KMS Autokey configuration for a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse> ShowEffectiveAutokeyConfigAsync(global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ShowEffectiveAutokeyConfig, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AutokeyAdminClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AutokeyAdminClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AutokeyAdminBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_UpdateAutokeyConfig, serviceImpl.UpdateAutokeyConfig)
          .AddMethod(__Method_GetAutokeyConfig, serviceImpl.GetAutokeyConfig)
          .AddMethod(__Method_ShowEffectiveAutokeyConfig, serviceImpl.ShowEffectiveAutokeyConfig).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AutokeyAdminBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_UpdateAutokeyConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.UpdateAutokeyConfigRequest, global::Google.Cloud.Kms.V1.AutokeyConfig>(serviceImpl.UpdateAutokeyConfig));
      serviceBinder.AddMethod(__Method_GetAutokeyConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.GetAutokeyConfigRequest, global::Google.Cloud.Kms.V1.AutokeyConfig>(serviceImpl.GetAutokeyConfig));
      serviceBinder.AddMethod(__Method_ShowEffectiveAutokeyConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigRequest, global::Google.Cloud.Kms.V1.ShowEffectiveAutokeyConfigResponse>(serviceImpl.ShowEffectiveAutokeyConfig));
    }

  }
}
#endregion
