// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/domains/v1beta1/domains.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Domains.V1Beta1 {
  /// <summary>
  /// The Cloud Domains API enables management and configuration of domain names.
  /// </summary>
  public static partial class Domains
  {
    static readonly string __ServiceName = "google.cloud.domains.v1beta1.Domains";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest> __Marshaller_google_cloud_domains_v1beta1_SearchDomainsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse> __Marshaller_google_cloud_domains_v1beta1_SearchDomainsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest> __Marshaller_google_cloud_domains_v1beta1_RetrieveRegisterParametersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse> __Marshaller_google_cloud_domains_v1beta1_RetrieveRegisterParametersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest> __Marshaller_google_cloud_domains_v1beta1_RegisterDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest> __Marshaller_google_cloud_domains_v1beta1_RetrieveTransferParametersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse> __Marshaller_google_cloud_domains_v1beta1_RetrieveTransferParametersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest> __Marshaller_google_cloud_domains_v1beta1_TransferDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest> __Marshaller_google_cloud_domains_v1beta1_ListRegistrationsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse> __Marshaller_google_cloud_domains_v1beta1_ListRegistrationsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest> __Marshaller_google_cloud_domains_v1beta1_GetRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.Registration> __Marshaller_google_cloud_domains_v1beta1_Registration = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.Registration.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest> __Marshaller_google_cloud_domains_v1beta1_UpdateRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest> __Marshaller_google_cloud_domains_v1beta1_ConfigureManagementSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest> __Marshaller_google_cloud_domains_v1beta1_ConfigureDnsSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest> __Marshaller_google_cloud_domains_v1beta1_ConfigureContactSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest> __Marshaller_google_cloud_domains_v1beta1_ExportRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest> __Marshaller_google_cloud_domains_v1beta1_DeleteRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest> __Marshaller_google_cloud_domains_v1beta1_RetrieveAuthorizationCodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> __Marshaller_google_cloud_domains_v1beta1_AuthorizationCode = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.AuthorizationCode.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest> __Marshaller_google_cloud_domains_v1beta1_ResetAuthorizationCodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest, global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse> __Method_SearchDomains = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest, global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchDomains",
        __Marshaller_google_cloud_domains_v1beta1_SearchDomainsRequest,
        __Marshaller_google_cloud_domains_v1beta1_SearchDomainsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest, global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse> __Method_RetrieveRegisterParameters = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest, global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveRegisterParameters",
        __Marshaller_google_cloud_domains_v1beta1_RetrieveRegisterParametersRequest,
        __Marshaller_google_cloud_domains_v1beta1_RetrieveRegisterParametersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest, global::Google.LongRunning.Operation> __Method_RegisterDomain = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterDomain",
        __Marshaller_google_cloud_domains_v1beta1_RegisterDomainRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest, global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse> __Method_RetrieveTransferParameters = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest, global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveTransferParameters",
        __Marshaller_google_cloud_domains_v1beta1_RetrieveTransferParametersRequest,
        __Marshaller_google_cloud_domains_v1beta1_RetrieveTransferParametersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest, global::Google.LongRunning.Operation> __Method_TransferDomain = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TransferDomain",
        __Marshaller_google_cloud_domains_v1beta1_TransferDomainRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest, global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse> __Method_ListRegistrations = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest, global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListRegistrations",
        __Marshaller_google_cloud_domains_v1beta1_ListRegistrationsRequest,
        __Marshaller_google_cloud_domains_v1beta1_ListRegistrationsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest, global::Google.Cloud.Domains.V1Beta1.Registration> __Method_GetRegistration = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest, global::Google.Cloud.Domains.V1Beta1.Registration>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetRegistration",
        __Marshaller_google_cloud_domains_v1beta1_GetRegistrationRequest,
        __Marshaller_google_cloud_domains_v1beta1_Registration);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest, global::Google.LongRunning.Operation> __Method_UpdateRegistration = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRegistration",
        __Marshaller_google_cloud_domains_v1beta1_UpdateRegistrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest, global::Google.LongRunning.Operation> __Method_ConfigureManagementSettings = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureManagementSettings",
        __Marshaller_google_cloud_domains_v1beta1_ConfigureManagementSettingsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest, global::Google.LongRunning.Operation> __Method_ConfigureDnsSettings = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureDnsSettings",
        __Marshaller_google_cloud_domains_v1beta1_ConfigureDnsSettingsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest, global::Google.LongRunning.Operation> __Method_ConfigureContactSettings = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigureContactSettings",
        __Marshaller_google_cloud_domains_v1beta1_ConfigureContactSettingsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest, global::Google.LongRunning.Operation> __Method_ExportRegistration = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExportRegistration",
        __Marshaller_google_cloud_domains_v1beta1_ExportRegistrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest, global::Google.LongRunning.Operation> __Method_DeleteRegistration = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRegistration",
        __Marshaller_google_cloud_domains_v1beta1_DeleteRegistrationRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest, global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> __Method_RetrieveAuthorizationCode = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest, global::Google.Cloud.Domains.V1Beta1.AuthorizationCode>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveAuthorizationCode",
        __Marshaller_google_cloud_domains_v1beta1_RetrieveAuthorizationCodeRequest,
        __Marshaller_google_cloud_domains_v1beta1_AuthorizationCode);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest, global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> __Method_ResetAuthorizationCode = new grpc::Method<global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest, global::Google.Cloud.Domains.V1Beta1.AuthorizationCode>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetAuthorizationCode",
        __Marshaller_google_cloud_domains_v1beta1_ResetAuthorizationCodeRequest,
        __Marshaller_google_cloud_domains_v1beta1_AuthorizationCode);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Domains.V1Beta1.DomainsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Domains</summary>
    [grpc::BindServiceMethod(typeof(Domains), "BindService")]
    public abstract partial class DomainsBase
    {
      /// <summary>
      /// Searches for available domain names similar to the provided query.
      ///
      /// Availability results from this method are approximate; call
      /// `RetrieveRegisterParameters` on a domain before registering to confirm
      /// availability.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse> SearchDomains(global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets parameters needed to register a new domain name, including price and
      /// up-to-date availability. Use the returned values to call `RegisterDomain`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse> RetrieveRegisterParameters(global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Registers a new domain name and creates a corresponding `Registration`
      /// resource.
      ///
      /// Call `RetrieveRegisterParameters` first to check availability of the domain
      /// name and determine parameters like price that are needed to build a call to
      /// this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2
      /// minutes, indicating that the domain was successfully registered. If the
      /// resource ends up in state `REGISTRATION_FAILED`, it indicates that the
      /// domain was not registered successfully, and you can safely delete the
      /// resource and retry registration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RegisterDomain(global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets parameters needed to transfer a domain name from another registrar to
      /// Cloud Domains. For domains managed by Google Domains, transferring to Cloud
      /// Domains is not supported.
      ///
      /// Use the returned values to call `TransferDomain`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse> RetrieveTransferParameters(global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Transfers a domain name from another registrar to Cloud Domains.  For
      /// domains managed by Google Domains, transferring to Cloud Domains is not
      /// supported.
      ///
      /// Before calling this method, go to the domain's current registrar to unlock
      /// the domain for transfer and retrieve the domain's transfer authorization
      /// code. Then call `RetrieveTransferParameters` to confirm that the domain is
      /// unlocked and to get values needed to build a call to this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `TRANSFER_PENDING`. It can take several days to complete the transfer
      /// process. The registrant can often speed up this process by approving the
      /// transfer through the current registrar, either by clicking a link in an
      /// email from the registrar or by visiting the registrar's website.
      ///
      /// A few minutes after transfer approval, the resource transitions to state
      /// `ACTIVE`, indicating that the transfer was successful. If the transfer is
      /// rejected or the request expires without being approved, the resource can
      /// end up in state `TRANSFER_FAILED`. If transfer fails, you can safely delete
      /// the resource and retry the transfer.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> TransferDomain(global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the `Registration` resources in a project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse> ListRegistrations(global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the details of a `Registration` resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Domains.V1Beta1.Registration> GetRegistration(global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates select fields of a `Registration` resource, notably `labels`. To
      /// update other fields, use the appropriate custom update method:
      ///
      /// * To update management settings, see `ConfigureManagementSettings`
      /// * To update DNS configuration, see `ConfigureDnsSettings`
      /// * To update contact information, see `ConfigureContactSettings`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateRegistration(global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a `Registration`'s management settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ConfigureManagementSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a `Registration`'s DNS settings.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ConfigureDnsSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a `Registration`'s contact settings. Some changes require
      /// confirmation by the domain's registrant contact .
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ConfigureContactSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Exports a `Registration` resource, such that it is no longer managed by
      /// Cloud Domains.
      ///
      /// When an active domain is successfully exported, you can continue to use the
      /// domain in [Google Domains](https://domains.google/) until it expires. The
      /// calling user becomes the domain's sole owner in Google Domains, and
      /// permissions for the domain are subsequently managed there. The domain does
      /// not renew automatically unless the new owner sets up billing in Google
      /// Domains.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> ExportRegistration(global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a `Registration` resource.
      ///
      /// This method works on any `Registration` resource using [Subscription or
      /// Commitment billing](/domains/pricing#billing-models), provided that the
      /// resource was created at least 1 day in the past.
      ///
      /// For `Registration` resources using
      /// [Monthly billing](/domains/pricing#billing-models), this method works if:
      ///
      /// * `state` is `EXPORTED` with `expire_time` in the past
      /// * `state` is `REGISTRATION_FAILED`
      /// * `state` is `TRANSFER_FAILED`
      ///
      /// When an active registration is successfully deleted, you can continue to
      /// use the domain in [Google Domains](https://domains.google/) until it
      /// expires. The calling user becomes the domain's sole owner in Google
      /// Domains, and permissions for the domain are subsequently managed there. The
      /// domain does not renew automatically unless the new owner sets up billing in
      /// Google Domains.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteRegistration(global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the authorization code of the `Registration` for the purpose of
      /// transferring the domain to another registrar.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> RetrieveAuthorizationCode(global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resets the authorization code of the `Registration` to a new random string.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> ResetAuthorizationCode(global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Domains</summary>
    public partial class DomainsClient : grpc::ClientBase<DomainsClient>
    {
      /// <summary>Creates a new client for Domains</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DomainsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Domains that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public DomainsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DomainsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected DomainsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Searches for available domain names similar to the provided query.
      ///
      /// Availability results from this method are approximate; call
      /// `RetrieveRegisterParameters` on a domain before registering to confirm
      /// availability.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse SearchDomains(global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchDomains(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches for available domain names similar to the provided query.
      ///
      /// Availability results from this method are approximate; call
      /// `RetrieveRegisterParameters` on a domain before registering to confirm
      /// availability.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse SearchDomains(global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchDomains, null, options, request);
      }
      /// <summary>
      /// Searches for available domain names similar to the provided query.
      ///
      /// Availability results from this method are approximate; call
      /// `RetrieveRegisterParameters` on a domain before registering to confirm
      /// availability.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse> SearchDomainsAsync(global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchDomainsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches for available domain names similar to the provided query.
      ///
      /// Availability results from this method are approximate; call
      /// `RetrieveRegisterParameters` on a domain before registering to confirm
      /// availability.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse> SearchDomainsAsync(global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchDomains, null, options, request);
      }
      /// <summary>
      /// Gets parameters needed to register a new domain name, including price and
      /// up-to-date availability. Use the returned values to call `RegisterDomain`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse RetrieveRegisterParameters(global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveRegisterParameters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets parameters needed to register a new domain name, including price and
      /// up-to-date availability. Use the returned values to call `RegisterDomain`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse RetrieveRegisterParameters(global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RetrieveRegisterParameters, null, options, request);
      }
      /// <summary>
      /// Gets parameters needed to register a new domain name, including price and
      /// up-to-date availability. Use the returned values to call `RegisterDomain`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse> RetrieveRegisterParametersAsync(global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveRegisterParametersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets parameters needed to register a new domain name, including price and
      /// up-to-date availability. Use the returned values to call `RegisterDomain`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse> RetrieveRegisterParametersAsync(global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RetrieveRegisterParameters, null, options, request);
      }
      /// <summary>
      /// Registers a new domain name and creates a corresponding `Registration`
      /// resource.
      ///
      /// Call `RetrieveRegisterParameters` first to check availability of the domain
      /// name and determine parameters like price that are needed to build a call to
      /// this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2
      /// minutes, indicating that the domain was successfully registered. If the
      /// resource ends up in state `REGISTRATION_FAILED`, it indicates that the
      /// domain was not registered successfully, and you can safely delete the
      /// resource and retry registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RegisterDomain(global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Registers a new domain name and creates a corresponding `Registration`
      /// resource.
      ///
      /// Call `RetrieveRegisterParameters` first to check availability of the domain
      /// name and determine parameters like price that are needed to build a call to
      /// this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2
      /// minutes, indicating that the domain was successfully registered. If the
      /// resource ends up in state `REGISTRATION_FAILED`, it indicates that the
      /// domain was not registered successfully, and you can safely delete the
      /// resource and retry registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RegisterDomain(global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterDomain, null, options, request);
      }
      /// <summary>
      /// Registers a new domain name and creates a corresponding `Registration`
      /// resource.
      ///
      /// Call `RetrieveRegisterParameters` first to check availability of the domain
      /// name and determine parameters like price that are needed to build a call to
      /// this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2
      /// minutes, indicating that the domain was successfully registered. If the
      /// resource ends up in state `REGISTRATION_FAILED`, it indicates that the
      /// domain was not registered successfully, and you can safely delete the
      /// resource and retry registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RegisterDomainAsync(global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Registers a new domain name and creates a corresponding `Registration`
      /// resource.
      ///
      /// Call `RetrieveRegisterParameters` first to check availability of the domain
      /// name and determine parameters like price that are needed to build a call to
      /// this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `REGISTRATION_PENDING`, which resolves to `ACTIVE` within 1-2
      /// minutes, indicating that the domain was successfully registered. If the
      /// resource ends up in state `REGISTRATION_FAILED`, it indicates that the
      /// domain was not registered successfully, and you can safely delete the
      /// resource and retry registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RegisterDomainAsync(global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterDomain, null, options, request);
      }
      /// <summary>
      /// Gets parameters needed to transfer a domain name from another registrar to
      /// Cloud Domains. For domains managed by Google Domains, transferring to Cloud
      /// Domains is not supported.
      ///
      /// Use the returned values to call `TransferDomain`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse RetrieveTransferParameters(global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveTransferParameters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets parameters needed to transfer a domain name from another registrar to
      /// Cloud Domains. For domains managed by Google Domains, transferring to Cloud
      /// Domains is not supported.
      ///
      /// Use the returned values to call `TransferDomain`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse RetrieveTransferParameters(global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RetrieveTransferParameters, null, options, request);
      }
      /// <summary>
      /// Gets parameters needed to transfer a domain name from another registrar to
      /// Cloud Domains. For domains managed by Google Domains, transferring to Cloud
      /// Domains is not supported.
      ///
      /// Use the returned values to call `TransferDomain`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse> RetrieveTransferParametersAsync(global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveTransferParametersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets parameters needed to transfer a domain name from another registrar to
      /// Cloud Domains. For domains managed by Google Domains, transferring to Cloud
      /// Domains is not supported.
      ///
      /// Use the returned values to call `TransferDomain`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse> RetrieveTransferParametersAsync(global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RetrieveTransferParameters, null, options, request);
      }
      /// <summary>
      /// Transfers a domain name from another registrar to Cloud Domains.  For
      /// domains managed by Google Domains, transferring to Cloud Domains is not
      /// supported.
      ///
      /// Before calling this method, go to the domain's current registrar to unlock
      /// the domain for transfer and retrieve the domain's transfer authorization
      /// code. Then call `RetrieveTransferParameters` to confirm that the domain is
      /// unlocked and to get values needed to build a call to this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `TRANSFER_PENDING`. It can take several days to complete the transfer
      /// process. The registrant can often speed up this process by approving the
      /// transfer through the current registrar, either by clicking a link in an
      /// email from the registrar or by visiting the registrar's website.
      ///
      /// A few minutes after transfer approval, the resource transitions to state
      /// `ACTIVE`, indicating that the transfer was successful. If the transfer is
      /// rejected or the request expires without being approved, the resource can
      /// end up in state `TRANSFER_FAILED`. If transfer fails, you can safely delete
      /// the resource and retry the transfer.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TransferDomain(global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Transfers a domain name from another registrar to Cloud Domains.  For
      /// domains managed by Google Domains, transferring to Cloud Domains is not
      /// supported.
      ///
      /// Before calling this method, go to the domain's current registrar to unlock
      /// the domain for transfer and retrieve the domain's transfer authorization
      /// code. Then call `RetrieveTransferParameters` to confirm that the domain is
      /// unlocked and to get values needed to build a call to this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `TRANSFER_PENDING`. It can take several days to complete the transfer
      /// process. The registrant can often speed up this process by approving the
      /// transfer through the current registrar, either by clicking a link in an
      /// email from the registrar or by visiting the registrar's website.
      ///
      /// A few minutes after transfer approval, the resource transitions to state
      /// `ACTIVE`, indicating that the transfer was successful. If the transfer is
      /// rejected or the request expires without being approved, the resource can
      /// end up in state `TRANSFER_FAILED`. If transfer fails, you can safely delete
      /// the resource and retry the transfer.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation TransferDomain(global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TransferDomain, null, options, request);
      }
      /// <summary>
      /// Transfers a domain name from another registrar to Cloud Domains.  For
      /// domains managed by Google Domains, transferring to Cloud Domains is not
      /// supported.
      ///
      /// Before calling this method, go to the domain's current registrar to unlock
      /// the domain for transfer and retrieve the domain's transfer authorization
      /// code. Then call `RetrieveTransferParameters` to confirm that the domain is
      /// unlocked and to get values needed to build a call to this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `TRANSFER_PENDING`. It can take several days to complete the transfer
      /// process. The registrant can often speed up this process by approving the
      /// transfer through the current registrar, either by clicking a link in an
      /// email from the registrar or by visiting the registrar's website.
      ///
      /// A few minutes after transfer approval, the resource transitions to state
      /// `ACTIVE`, indicating that the transfer was successful. If the transfer is
      /// rejected or the request expires without being approved, the resource can
      /// end up in state `TRANSFER_FAILED`. If transfer fails, you can safely delete
      /// the resource and retry the transfer.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TransferDomainAsync(global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TransferDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Transfers a domain name from another registrar to Cloud Domains.  For
      /// domains managed by Google Domains, transferring to Cloud Domains is not
      /// supported.
      ///
      /// Before calling this method, go to the domain's current registrar to unlock
      /// the domain for transfer and retrieve the domain's transfer authorization
      /// code. Then call `RetrieveTransferParameters` to confirm that the domain is
      /// unlocked and to get values needed to build a call to this method.
      ///
      /// A successful call creates a `Registration` resource in state
      /// `TRANSFER_PENDING`. It can take several days to complete the transfer
      /// process. The registrant can often speed up this process by approving the
      /// transfer through the current registrar, either by clicking a link in an
      /// email from the registrar or by visiting the registrar's website.
      ///
      /// A few minutes after transfer approval, the resource transitions to state
      /// `ACTIVE`, indicating that the transfer was successful. If the transfer is
      /// rejected or the request expires without being approved, the resource can
      /// end up in state `TRANSFER_FAILED`. If transfer fails, you can safely delete
      /// the resource and retry the transfer.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> TransferDomainAsync(global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TransferDomain, null, options, request);
      }
      /// <summary>
      /// Lists the `Registration` resources in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse ListRegistrations(global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRegistrations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the `Registration` resources in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse ListRegistrations(global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListRegistrations, null, options, request);
      }
      /// <summary>
      /// Lists the `Registration` resources in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse> ListRegistrationsAsync(global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListRegistrationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the `Registration` resources in a project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse> ListRegistrationsAsync(global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListRegistrations, null, options, request);
      }
      /// <summary>
      /// Gets the details of a `Registration` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.Registration GetRegistration(global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a `Registration` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.Registration GetRegistration(global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetRegistration, null, options, request);
      }
      /// <summary>
      /// Gets the details of a `Registration` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.Registration> GetRegistrationAsync(global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the details of a `Registration` resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.Registration> GetRegistrationAsync(global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetRegistration, null, options, request);
      }
      /// <summary>
      /// Updates select fields of a `Registration` resource, notably `labels`. To
      /// update other fields, use the appropriate custom update method:
      ///
      /// * To update management settings, see `ConfigureManagementSettings`
      /// * To update DNS configuration, see `ConfigureDnsSettings`
      /// * To update contact information, see `ConfigureContactSettings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateRegistration(global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates select fields of a `Registration` resource, notably `labels`. To
      /// update other fields, use the appropriate custom update method:
      ///
      /// * To update management settings, see `ConfigureManagementSettings`
      /// * To update DNS configuration, see `ConfigureDnsSettings`
      /// * To update contact information, see `ConfigureContactSettings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateRegistration(global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateRegistration, null, options, request);
      }
      /// <summary>
      /// Updates select fields of a `Registration` resource, notably `labels`. To
      /// update other fields, use the appropriate custom update method:
      ///
      /// * To update management settings, see `ConfigureManagementSettings`
      /// * To update DNS configuration, see `ConfigureDnsSettings`
      /// * To update contact information, see `ConfigureContactSettings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateRegistrationAsync(global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates select fields of a `Registration` resource, notably `labels`. To
      /// update other fields, use the appropriate custom update method:
      ///
      /// * To update management settings, see `ConfigureManagementSettings`
      /// * To update DNS configuration, see `ConfigureDnsSettings`
      /// * To update contact information, see `ConfigureContactSettings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateRegistrationAsync(global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateRegistration, null, options, request);
      }
      /// <summary>
      /// Updates a `Registration`'s management settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ConfigureManagementSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureManagementSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `Registration`'s management settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ConfigureManagementSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureManagementSettings, null, options, request);
      }
      /// <summary>
      /// Updates a `Registration`'s management settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ConfigureManagementSettingsAsync(global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureManagementSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `Registration`'s management settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ConfigureManagementSettingsAsync(global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureManagementSettings, null, options, request);
      }
      /// <summary>
      /// Updates a `Registration`'s DNS settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ConfigureDnsSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDnsSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `Registration`'s DNS settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ConfigureDnsSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureDnsSettings, null, options, request);
      }
      /// <summary>
      /// Updates a `Registration`'s DNS settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ConfigureDnsSettingsAsync(global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureDnsSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `Registration`'s DNS settings.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ConfigureDnsSettingsAsync(global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureDnsSettings, null, options, request);
      }
      /// <summary>
      /// Updates a `Registration`'s contact settings. Some changes require
      /// confirmation by the domain's registrant contact .
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ConfigureContactSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureContactSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `Registration`'s contact settings. Some changes require
      /// confirmation by the domain's registrant contact .
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ConfigureContactSettings(global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigureContactSettings, null, options, request);
      }
      /// <summary>
      /// Updates a `Registration`'s contact settings. Some changes require
      /// confirmation by the domain's registrant contact .
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ConfigureContactSettingsAsync(global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigureContactSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a `Registration`'s contact settings. Some changes require
      /// confirmation by the domain's registrant contact .
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ConfigureContactSettingsAsync(global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigureContactSettings, null, options, request);
      }
      /// <summary>
      /// Exports a `Registration` resource, such that it is no longer managed by
      /// Cloud Domains.
      ///
      /// When an active domain is successfully exported, you can continue to use the
      /// domain in [Google Domains](https://domains.google/) until it expires. The
      /// calling user becomes the domain's sole owner in Google Domains, and
      /// permissions for the domain are subsequently managed there. The domain does
      /// not renew automatically unless the new owner sets up billing in Google
      /// Domains.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportRegistration(global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports a `Registration` resource, such that it is no longer managed by
      /// Cloud Domains.
      ///
      /// When an active domain is successfully exported, you can continue to use the
      /// domain in [Google Domains](https://domains.google/) until it expires. The
      /// calling user becomes the domain's sole owner in Google Domains, and
      /// permissions for the domain are subsequently managed there. The domain does
      /// not renew automatically unless the new owner sets up billing in Google
      /// Domains.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation ExportRegistration(global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ExportRegistration, null, options, request);
      }
      /// <summary>
      /// Exports a `Registration` resource, such that it is no longer managed by
      /// Cloud Domains.
      ///
      /// When an active domain is successfully exported, you can continue to use the
      /// domain in [Google Domains](https://domains.google/) until it expires. The
      /// calling user becomes the domain's sole owner in Google Domains, and
      /// permissions for the domain are subsequently managed there. The domain does
      /// not renew automatically unless the new owner sets up billing in Google
      /// Domains.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportRegistrationAsync(global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ExportRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Exports a `Registration` resource, such that it is no longer managed by
      /// Cloud Domains.
      ///
      /// When an active domain is successfully exported, you can continue to use the
      /// domain in [Google Domains](https://domains.google/) until it expires. The
      /// calling user becomes the domain's sole owner in Google Domains, and
      /// permissions for the domain are subsequently managed there. The domain does
      /// not renew automatically unless the new owner sets up billing in Google
      /// Domains.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> ExportRegistrationAsync(global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ExportRegistration, null, options, request);
      }
      /// <summary>
      /// Deletes a `Registration` resource.
      ///
      /// This method works on any `Registration` resource using [Subscription or
      /// Commitment billing](/domains/pricing#billing-models), provided that the
      /// resource was created at least 1 day in the past.
      ///
      /// For `Registration` resources using
      /// [Monthly billing](/domains/pricing#billing-models), this method works if:
      ///
      /// * `state` is `EXPORTED` with `expire_time` in the past
      /// * `state` is `REGISTRATION_FAILED`
      /// * `state` is `TRANSFER_FAILED`
      ///
      /// When an active registration is successfully deleted, you can continue to
      /// use the domain in [Google Domains](https://domains.google/) until it
      /// expires. The calling user becomes the domain's sole owner in Google
      /// Domains, and permissions for the domain are subsequently managed there. The
      /// domain does not renew automatically unless the new owner sets up billing in
      /// Google Domains.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRegistration(global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `Registration` resource.
      ///
      /// This method works on any `Registration` resource using [Subscription or
      /// Commitment billing](/domains/pricing#billing-models), provided that the
      /// resource was created at least 1 day in the past.
      ///
      /// For `Registration` resources using
      /// [Monthly billing](/domains/pricing#billing-models), this method works if:
      ///
      /// * `state` is `EXPORTED` with `expire_time` in the past
      /// * `state` is `REGISTRATION_FAILED`
      /// * `state` is `TRANSFER_FAILED`
      ///
      /// When an active registration is successfully deleted, you can continue to
      /// use the domain in [Google Domains](https://domains.google/) until it
      /// expires. The calling user becomes the domain's sole owner in Google
      /// Domains, and permissions for the domain are subsequently managed there. The
      /// domain does not renew automatically unless the new owner sets up billing in
      /// Google Domains.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteRegistration(global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteRegistration, null, options, request);
      }
      /// <summary>
      /// Deletes a `Registration` resource.
      ///
      /// This method works on any `Registration` resource using [Subscription or
      /// Commitment billing](/domains/pricing#billing-models), provided that the
      /// resource was created at least 1 day in the past.
      ///
      /// For `Registration` resources using
      /// [Monthly billing](/domains/pricing#billing-models), this method works if:
      ///
      /// * `state` is `EXPORTED` with `expire_time` in the past
      /// * `state` is `REGISTRATION_FAILED`
      /// * `state` is `TRANSFER_FAILED`
      ///
      /// When an active registration is successfully deleted, you can continue to
      /// use the domain in [Google Domains](https://domains.google/) until it
      /// expires. The calling user becomes the domain's sole owner in Google
      /// Domains, and permissions for the domain are subsequently managed there. The
      /// domain does not renew automatically unless the new owner sets up billing in
      /// Google Domains.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteRegistrationAsync(global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a `Registration` resource.
      ///
      /// This method works on any `Registration` resource using [Subscription or
      /// Commitment billing](/domains/pricing#billing-models), provided that the
      /// resource was created at least 1 day in the past.
      ///
      /// For `Registration` resources using
      /// [Monthly billing](/domains/pricing#billing-models), this method works if:
      ///
      /// * `state` is `EXPORTED` with `expire_time` in the past
      /// * `state` is `REGISTRATION_FAILED`
      /// * `state` is `TRANSFER_FAILED`
      ///
      /// When an active registration is successfully deleted, you can continue to
      /// use the domain in [Google Domains](https://domains.google/) until it
      /// expires. The calling user becomes the domain's sole owner in Google
      /// Domains, and permissions for the domain are subsequently managed there. The
      /// domain does not renew automatically unless the new owner sets up billing in
      /// Google Domains.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteRegistrationAsync(global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteRegistration, null, options, request);
      }
      /// <summary>
      /// Gets the authorization code of the `Registration` for the purpose of
      /// transferring the domain to another registrar.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.AuthorizationCode RetrieveAuthorizationCode(global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveAuthorizationCode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the authorization code of the `Registration` for the purpose of
      /// transferring the domain to another registrar.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.AuthorizationCode RetrieveAuthorizationCode(global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RetrieveAuthorizationCode, null, options, request);
      }
      /// <summary>
      /// Gets the authorization code of the `Registration` for the purpose of
      /// transferring the domain to another registrar.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> RetrieveAuthorizationCodeAsync(global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveAuthorizationCodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the authorization code of the `Registration` for the purpose of
      /// transferring the domain to another registrar.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> RetrieveAuthorizationCodeAsync(global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RetrieveAuthorizationCode, null, options, request);
      }
      /// <summary>
      /// Resets the authorization code of the `Registration` to a new random string.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.AuthorizationCode ResetAuthorizationCode(global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetAuthorizationCode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resets the authorization code of the `Registration` to a new random string.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Domains.V1Beta1.AuthorizationCode ResetAuthorizationCode(global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetAuthorizationCode, null, options, request);
      }
      /// <summary>
      /// Resets the authorization code of the `Registration` to a new random string.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> ResetAuthorizationCodeAsync(global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetAuthorizationCodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resets the authorization code of the `Registration` to a new random string.
      ///
      /// You can call this method only after 60 days have elapsed since the initial
      /// domain registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Domains.V1Beta1.AuthorizationCode> ResetAuthorizationCodeAsync(global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetAuthorizationCode, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override DomainsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DomainsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(DomainsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SearchDomains, serviceImpl.SearchDomains)
          .AddMethod(__Method_RetrieveRegisterParameters, serviceImpl.RetrieveRegisterParameters)
          .AddMethod(__Method_RegisterDomain, serviceImpl.RegisterDomain)
          .AddMethod(__Method_RetrieveTransferParameters, serviceImpl.RetrieveTransferParameters)
          .AddMethod(__Method_TransferDomain, serviceImpl.TransferDomain)
          .AddMethod(__Method_ListRegistrations, serviceImpl.ListRegistrations)
          .AddMethod(__Method_GetRegistration, serviceImpl.GetRegistration)
          .AddMethod(__Method_UpdateRegistration, serviceImpl.UpdateRegistration)
          .AddMethod(__Method_ConfigureManagementSettings, serviceImpl.ConfigureManagementSettings)
          .AddMethod(__Method_ConfigureDnsSettings, serviceImpl.ConfigureDnsSettings)
          .AddMethod(__Method_ConfigureContactSettings, serviceImpl.ConfigureContactSettings)
          .AddMethod(__Method_ExportRegistration, serviceImpl.ExportRegistration)
          .AddMethod(__Method_DeleteRegistration, serviceImpl.DeleteRegistration)
          .AddMethod(__Method_RetrieveAuthorizationCode, serviceImpl.RetrieveAuthorizationCode)
          .AddMethod(__Method_ResetAuthorizationCode, serviceImpl.ResetAuthorizationCode).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DomainsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SearchDomains, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.SearchDomainsRequest, global::Google.Cloud.Domains.V1Beta1.SearchDomainsResponse>(serviceImpl.SearchDomains));
      serviceBinder.AddMethod(__Method_RetrieveRegisterParameters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersRequest, global::Google.Cloud.Domains.V1Beta1.RetrieveRegisterParametersResponse>(serviceImpl.RetrieveRegisterParameters));
      serviceBinder.AddMethod(__Method_RegisterDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.RegisterDomainRequest, global::Google.LongRunning.Operation>(serviceImpl.RegisterDomain));
      serviceBinder.AddMethod(__Method_RetrieveTransferParameters, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersRequest, global::Google.Cloud.Domains.V1Beta1.RetrieveTransferParametersResponse>(serviceImpl.RetrieveTransferParameters));
      serviceBinder.AddMethod(__Method_TransferDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.TransferDomainRequest, global::Google.LongRunning.Operation>(serviceImpl.TransferDomain));
      serviceBinder.AddMethod(__Method_ListRegistrations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.ListRegistrationsRequest, global::Google.Cloud.Domains.V1Beta1.ListRegistrationsResponse>(serviceImpl.ListRegistrations));
      serviceBinder.AddMethod(__Method_GetRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.GetRegistrationRequest, global::Google.Cloud.Domains.V1Beta1.Registration>(serviceImpl.GetRegistration));
      serviceBinder.AddMethod(__Method_UpdateRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.UpdateRegistrationRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateRegistration));
      serviceBinder.AddMethod(__Method_ConfigureManagementSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.ConfigureManagementSettingsRequest, global::Google.LongRunning.Operation>(serviceImpl.ConfigureManagementSettings));
      serviceBinder.AddMethod(__Method_ConfigureDnsSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.ConfigureDnsSettingsRequest, global::Google.LongRunning.Operation>(serviceImpl.ConfigureDnsSettings));
      serviceBinder.AddMethod(__Method_ConfigureContactSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.ConfigureContactSettingsRequest, global::Google.LongRunning.Operation>(serviceImpl.ConfigureContactSettings));
      serviceBinder.AddMethod(__Method_ExportRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.ExportRegistrationRequest, global::Google.LongRunning.Operation>(serviceImpl.ExportRegistration));
      serviceBinder.AddMethod(__Method_DeleteRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.DeleteRegistrationRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteRegistration));
      serviceBinder.AddMethod(__Method_RetrieveAuthorizationCode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.RetrieveAuthorizationCodeRequest, global::Google.Cloud.Domains.V1Beta1.AuthorizationCode>(serviceImpl.RetrieveAuthorizationCode));
      serviceBinder.AddMethod(__Method_ResetAuthorizationCode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Domains.V1Beta1.ResetAuthorizationCodeRequest, global::Google.Cloud.Domains.V1Beta1.AuthorizationCode>(serviceImpl.ResetAuthorizationCode));
    }

  }
}
#endregion
