// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1beta1/model_monitoring_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.AIPlatform.V1Beta1 {
  /// <summary>
  /// A service for creating and managing Vertex AI Model moitoring. This includes
  /// `ModelMonitor` resources, `ModelMonitoringJob` resources.
  /// </summary>
  public static partial class ModelMonitoringService
  {
    static readonly string __ServiceName = "google.cloud.aiplatform.v1beta1.ModelMonitoringService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest> __Marshaller_google_cloud_aiplatform_v1beta1_CreateModelMonitorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest> __Marshaller_google_cloud_aiplatform_v1beta1_UpdateModelMonitorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetModelMonitorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor> __Marshaller_google_cloud_aiplatform_v1beta1_ModelMonitor = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelMonitorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelMonitorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest> __Marshaller_google_cloud_aiplatform_v1beta1_DeleteModelMonitorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_CreateModelMonitoringJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> __Marshaller_google_cloud_aiplatform_v1beta1_ModelMonitoringJob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetModelMonitoringJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelMonitoringJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListModelMonitoringJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_DeleteModelMonitoringJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_SearchModelMonitoringStatsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_SearchModelMonitoringStatsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_SearchModelMonitoringAlertsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_SearchModelMonitoringAlertsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest, global::Google.LongRunning.Operation> __Method_CreateModelMonitor = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateModelMonitor",
        __Marshaller_google_cloud_aiplatform_v1beta1_CreateModelMonitorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest, global::Google.LongRunning.Operation> __Method_UpdateModelMonitor = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateModelMonitor",
        __Marshaller_google_cloud_aiplatform_v1beta1_UpdateModelMonitorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor> __Method_GetModelMonitor = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetModelMonitor",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetModelMonitorRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ModelMonitor);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse> __Method_ListModelMonitors = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListModelMonitors",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelMonitorsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelMonitorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest, global::Google.LongRunning.Operation> __Method_DeleteModelMonitor = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteModelMonitor",
        __Marshaller_google_cloud_aiplatform_v1beta1_DeleteModelMonitorRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> __Method_CreateModelMonitoringJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateModelMonitoringJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_CreateModelMonitoringJobRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ModelMonitoringJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> __Method_GetModelMonitoringJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetModelMonitoringJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetModelMonitoringJobRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ModelMonitoringJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse> __Method_ListModelMonitoringJobs = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListModelMonitoringJobs",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelMonitoringJobsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListModelMonitoringJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest, global::Google.LongRunning.Operation> __Method_DeleteModelMonitoringJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteModelMonitoringJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_DeleteModelMonitoringJobRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse> __Method_SearchModelMonitoringStats = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchModelMonitoringStats",
        __Marshaller_google_cloud_aiplatform_v1beta1_SearchModelMonitoringStatsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_SearchModelMonitoringStatsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse> __Method_SearchModelMonitoringAlerts = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchModelMonitoringAlerts",
        __Marshaller_google_cloud_aiplatform_v1beta1_SearchModelMonitoringAlertsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_SearchModelMonitoringAlertsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ModelMonitoringService</summary>
    [grpc::BindServiceMethod(typeof(ModelMonitoringService), "BindService")]
    public abstract partial class ModelMonitoringServiceBase
    {
      /// <summary>
      /// Creates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpdateModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a ModelMonitor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor> GetModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ModelMonitors in a Location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse> ListModelMonitors(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a ModelMonitor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> CreateModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> GetModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists ModelMonitoringJobs.
      /// Callers may choose to read across multiple Monitors as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of modelMonitor id in the
      /// parent. Format
      /// `projects/{project_id}/locations/{location}/moodelMonitors/-/modelMonitoringJobs`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse> ListModelMonitoringJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Searches Model Monitoring Stats generated within a given time window.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse> SearchModelMonitoringStats(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the Model Monitoring alerts.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse> SearchModelMonitoringAlerts(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ModelMonitoringService</summary>
    public partial class ModelMonitoringServiceClient : grpc::ClientBase<ModelMonitoringServiceClient>
    {
      /// <summary>Creates a new client for ModelMonitoringService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ModelMonitoringServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ModelMonitoringService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ModelMonitoringServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ModelMonitoringServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ModelMonitoringServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateModelMonitor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateModelMonitor, null, options, request);
      }
      /// <summary>
      /// Creates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateModelMonitorAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateModelMonitorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateModelMonitorAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateModelMonitor, null, options, request);
      }
      /// <summary>
      /// Updates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateModelMonitor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpdateModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateModelMonitor, null, options, request);
      }
      /// <summary>
      /// Updates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateModelMonitorAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateModelMonitorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpdateModelMonitorAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateModelMonitor, null, options, request);
      }
      /// <summary>
      /// Gets a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor GetModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelMonitor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor GetModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetModelMonitor, null, options, request);
      }
      /// <summary>
      /// Gets a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor> GetModelMonitorAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelMonitorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor> GetModelMonitorAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetModelMonitor, null, options, request);
      }
      /// <summary>
      /// Lists ModelMonitors in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse ListModelMonitors(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelMonitors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ModelMonitors in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse ListModelMonitors(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListModelMonitors, null, options, request);
      }
      /// <summary>
      /// Lists ModelMonitors in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse> ListModelMonitorsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelMonitorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ModelMonitors in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse> ListModelMonitorsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListModelMonitors, null, options, request);
      }
      /// <summary>
      /// Deletes a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteModelMonitor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteModelMonitor(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteModelMonitor, null, options, request);
      }
      /// <summary>
      /// Deletes a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteModelMonitorAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteModelMonitorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ModelMonitor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteModelMonitorAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteModelMonitor, null, options, request);
      }
      /// <summary>
      /// Creates a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob CreateModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateModelMonitoringJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob CreateModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateModelMonitoringJob, null, options, request);
      }
      /// <summary>
      /// Creates a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> CreateModelMonitoringJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateModelMonitoringJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> CreateModelMonitoringJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateModelMonitoringJob, null, options, request);
      }
      /// <summary>
      /// Gets a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob GetModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelMonitoringJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob GetModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetModelMonitoringJob, null, options, request);
      }
      /// <summary>
      /// Gets a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> GetModelMonitoringJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetModelMonitoringJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob> GetModelMonitoringJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetModelMonitoringJob, null, options, request);
      }
      /// <summary>
      /// Lists ModelMonitoringJobs.
      /// Callers may choose to read across multiple Monitors as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of modelMonitor id in the
      /// parent. Format
      /// `projects/{project_id}/locations/{location}/moodelMonitors/-/modelMonitoringJobs`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse ListModelMonitoringJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelMonitoringJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ModelMonitoringJobs.
      /// Callers may choose to read across multiple Monitors as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of modelMonitor id in the
      /// parent. Format
      /// `projects/{project_id}/locations/{location}/moodelMonitors/-/modelMonitoringJobs`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse ListModelMonitoringJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListModelMonitoringJobs, null, options, request);
      }
      /// <summary>
      /// Lists ModelMonitoringJobs.
      /// Callers may choose to read across multiple Monitors as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of modelMonitor id in the
      /// parent. Format
      /// `projects/{project_id}/locations/{location}/moodelMonitors/-/modelMonitoringJobs`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse> ListModelMonitoringJobsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListModelMonitoringJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists ModelMonitoringJobs.
      /// Callers may choose to read across multiple Monitors as per
      /// [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash
      /// character) as a wildcard character instead of modelMonitor id in the
      /// parent. Format
      /// `projects/{project_id}/locations/{location}/moodelMonitors/-/modelMonitoringJobs`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse> ListModelMonitoringJobsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListModelMonitoringJobs, null, options, request);
      }
      /// <summary>
      /// Deletes a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteModelMonitoringJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteModelMonitoringJob(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteModelMonitoringJob, null, options, request);
      }
      /// <summary>
      /// Deletes a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteModelMonitoringJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteModelMonitoringJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ModelMonitoringJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteModelMonitoringJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteModelMonitoringJob, null, options, request);
      }
      /// <summary>
      /// Searches Model Monitoring Stats generated within a given time window.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse SearchModelMonitoringStats(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchModelMonitoringStats(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches Model Monitoring Stats generated within a given time window.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse SearchModelMonitoringStats(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchModelMonitoringStats, null, options, request);
      }
      /// <summary>
      /// Searches Model Monitoring Stats generated within a given time window.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse> SearchModelMonitoringStatsAsync(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchModelMonitoringStatsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Searches Model Monitoring Stats generated within a given time window.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse> SearchModelMonitoringStatsAsync(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchModelMonitoringStats, null, options, request);
      }
      /// <summary>
      /// Returns the Model Monitoring alerts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse SearchModelMonitoringAlerts(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchModelMonitoringAlerts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the Model Monitoring alerts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse SearchModelMonitoringAlerts(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchModelMonitoringAlerts, null, options, request);
      }
      /// <summary>
      /// Returns the Model Monitoring alerts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse> SearchModelMonitoringAlertsAsync(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchModelMonitoringAlertsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the Model Monitoring alerts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse> SearchModelMonitoringAlertsAsync(global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchModelMonitoringAlerts, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ModelMonitoringServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ModelMonitoringServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ModelMonitoringServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateModelMonitor, serviceImpl.CreateModelMonitor)
          .AddMethod(__Method_UpdateModelMonitor, serviceImpl.UpdateModelMonitor)
          .AddMethod(__Method_GetModelMonitor, serviceImpl.GetModelMonitor)
          .AddMethod(__Method_ListModelMonitors, serviceImpl.ListModelMonitors)
          .AddMethod(__Method_DeleteModelMonitor, serviceImpl.DeleteModelMonitor)
          .AddMethod(__Method_CreateModelMonitoringJob, serviceImpl.CreateModelMonitoringJob)
          .AddMethod(__Method_GetModelMonitoringJob, serviceImpl.GetModelMonitoringJob)
          .AddMethod(__Method_ListModelMonitoringJobs, serviceImpl.ListModelMonitoringJobs)
          .AddMethod(__Method_DeleteModelMonitoringJob, serviceImpl.DeleteModelMonitoringJob)
          .AddMethod(__Method_SearchModelMonitoringStats, serviceImpl.SearchModelMonitoringStats)
          .AddMethod(__Method_SearchModelMonitoringAlerts, serviceImpl.SearchModelMonitoringAlerts).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ModelMonitoringServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateModelMonitor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitorRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateModelMonitor));
      serviceBinder.AddMethod(__Method_UpdateModelMonitor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.UpdateModelMonitorRequest, global::Google.LongRunning.Operation>(serviceImpl.UpdateModelMonitor));
      serviceBinder.AddMethod(__Method_GetModelMonitor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitorRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitor>(serviceImpl.GetModelMonitor));
      serviceBinder.AddMethod(__Method_ListModelMonitors, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitorsResponse>(serviceImpl.ListModelMonitors));
      serviceBinder.AddMethod(__Method_DeleteModelMonitor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitorRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteModelMonitor));
      serviceBinder.AddMethod(__Method_CreateModelMonitoringJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.CreateModelMonitoringJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob>(serviceImpl.CreateModelMonitoringJob));
      serviceBinder.AddMethod(__Method_GetModelMonitoringJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetModelMonitoringJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.ModelMonitoringJob>(serviceImpl.GetModelMonitoringJob));
      serviceBinder.AddMethod(__Method_ListModelMonitoringJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListModelMonitoringJobsResponse>(serviceImpl.ListModelMonitoringJobs));
      serviceBinder.AddMethod(__Method_DeleteModelMonitoringJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.DeleteModelMonitoringJobRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteModelMonitoringJob));
      serviceBinder.AddMethod(__Method_SearchModelMonitoringStats, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsRequest, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringStatsResponse>(serviceImpl.SearchModelMonitoringStats));
      serviceBinder.AddMethod(__Method_SearchModelMonitoringAlerts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsRequest, global::Google.Cloud.AIPlatform.V1Beta1.SearchModelMonitoringAlertsResponse>(serviceImpl.SearchModelMonitoringAlerts));
    }

  }
}
#endregion
