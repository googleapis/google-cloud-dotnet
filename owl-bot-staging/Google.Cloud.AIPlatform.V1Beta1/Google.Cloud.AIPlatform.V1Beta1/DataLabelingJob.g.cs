// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1beta1/data_labeling_job.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.AIPlatform.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/cloud/aiplatform/v1beta1/data_labeling_job.proto</summary>
  public static partial class DataLabelingJobReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/aiplatform/v1beta1/data_labeling_job.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataLabelingJobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjdnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJldGExL2RhdGFfbGFiZWxp",
            "bmdfam9iLnByb3RvEh9nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJldGEx",
            "Gh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBp",
            "L3Jlc291cmNlLnByb3RvGjVnb29nbGUvY2xvdWQvYWlwbGF0Zm9ybS92MWJl",
            "dGExL2VuY3J5cHRpb25fc3BlYy5wcm90bxovZ29vZ2xlL2Nsb3VkL2FpcGxh",
            "dGZvcm0vdjFiZXRhMS9qb2Jfc3RhdGUucHJvdG8aHGdvb2dsZS9wcm90b2J1",
            "Zi9zdHJ1Y3QucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJv",
            "dG8aF2dvb2dsZS9ycGMvc3RhdHVzLnByb3RvGhdnb29nbGUvdHlwZS9tb25l",
            "eS5wcm90byL4CAoPRGF0YUxhYmVsaW5nSm9iEhEKBG5hbWUYASABKAlCA+BB",
            "AxIZCgxkaXNwbGF5X25hbWUYAiABKAlCA+BBAhI7CghkYXRhc2V0cxgDIAMo",
            "CUIp4EEC+kEjCiFhaXBsYXRmb3JtLmdvb2dsZWFwaXMuY29tL0RhdGFzZXQS",
            "YQoRYW5ub3RhdGlvbl9sYWJlbHMYDCADKAsyRi5nb29nbGUuY2xvdWQuYWlw",
            "bGF0Zm9ybS52MWJldGExLkRhdGFMYWJlbGluZ0pvYi5Bbm5vdGF0aW9uTGFi",
            "ZWxzRW50cnkSGgoNbGFiZWxlcl9jb3VudBgEIAEoBUID4EECEhwKD2luc3Ry",
            "dWN0aW9uX3VyaRgFIAEoCUID4EECEh4KEWlucHV0c19zY2hlbWFfdXJpGAYg",
            "ASgJQgPgQQISKwoGaW5wdXRzGAcgASgLMhYuZ29vZ2xlLnByb3RvYnVmLlZh",
            "bHVlQgPgQQISPQoFc3RhdGUYCCABKA4yKS5nb29nbGUuY2xvdWQuYWlwbGF0",
            "Zm9ybS52MWJldGExLkpvYlN0YXRlQgPgQQMSHgoRbGFiZWxpbmdfcHJvZ3Jl",
            "c3MYDSABKAVCA+BBAxIuCg1jdXJyZW50X3NwZW5kGA4gASgLMhIuZ29vZ2xl",
            "LnR5cGUuTW9uZXlCA+BBAxI0CgtjcmVhdGVfdGltZRgJIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI0Cgt1cGRhdGVfdGltZRgKIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxImCgVlcnJvchgW",
            "IAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzQgPgQQMSTAoGbGFiZWxzGAsgAygL",
            "MjwuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5EYXRhTGFiZWxp",
            "bmdKb2IuTGFiZWxzRW50cnkSGAoQc3BlY2lhbGlzdF9wb29scxgQIAMoCRJI",
            "Cg9lbmNyeXB0aW9uX3NwZWMYFCABKAsyLy5nb29nbGUuY2xvdWQuYWlwbGF0",
            "Zm9ybS52MWJldGExLkVuY3J5cHRpb25TcGVjElUKFmFjdGl2ZV9sZWFybmlu",
            "Z19jb25maWcYFSABKAsyNS5nb29nbGUuY2xvdWQuYWlwbGF0Zm9ybS52MWJl",
            "dGExLkFjdGl2ZUxlYXJuaW5nQ29uZmlnGjcKFUFubm90YXRpb25MYWJlbHNF",
            "bnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGi0KC0xhYmVs",
            "c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAE6fOpBeQop",
            "YWlwbGF0Zm9ybS5nb29nbGVhcGlzLmNvbS9EYXRhTGFiZWxpbmdKb2ISTHBy",
            "b2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9kYXRhTGFi",
            "ZWxpbmdKb2JzL3tkYXRhX2xhYmVsaW5nX2pvYn0iggIKFEFjdGl2ZUxlYXJu",
            "aW5nQ29uZmlnEh0KE21heF9kYXRhX2l0ZW1fY291bnQYASABKANIABIiChht",
            "YXhfZGF0YV9pdGVtX3BlcmNlbnRhZ2UYAiABKAVIABJECg1zYW1wbGVfY29u",
            "ZmlnGAMgASgLMi0uZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5T",
            "YW1wbGVDb25maWcSSAoPdHJhaW5pbmdfY29uZmlnGAQgASgLMi8uZ29vZ2xl",
            "LmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMS5UcmFpbmluZ0NvbmZpZ0IXChVo",
            "dW1hbl9sYWJlbGluZ19idWRnZXQivQIKDFNhbXBsZUNvbmZpZxIpCh9pbml0",
            "aWFsX2JhdGNoX3NhbXBsZV9wZXJjZW50YWdlGAEgASgFSAASKwohZm9sbG93",
            "aW5nX2JhdGNoX3NhbXBsZV9wZXJjZW50YWdlGAMgASgFSAESVQoPc2FtcGxl",
            "X3N0cmF0ZWd5GAUgASgOMjwuZ29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFi",
            "ZXRhMS5TYW1wbGVDb25maWcuU2FtcGxlU3RyYXRlZ3kiQgoOU2FtcGxlU3Ry",
            "YXRlZ3kSHwobU0FNUExFX1NUUkFURUdZX1VOU1BFQ0lGSUVEEAASDwoLVU5D",
            "RVJUQUlOVFkQAUIbChlpbml0aWFsX2JhdGNoX3NhbXBsZV9zaXplQh0KG2Zv",
            "bGxvd2luZ19iYXRjaF9zYW1wbGVfc2l6ZSI2Cg5UcmFpbmluZ0NvbmZpZxIk",
            "Chx0aW1lb3V0X3RyYWluaW5nX21pbGxpX2hvdXJzGAEgASgDQusBCiNjb20u",
            "Z29vZ2xlLmNsb3VkLmFpcGxhdGZvcm0udjFiZXRhMUIURGF0YUxhYmVsaW5n",
            "Sm9iUHJvdG9QAVpDY2xvdWQuZ29vZ2xlLmNvbS9nby9haXBsYXRmb3JtL2Fw",
            "aXYxYmV0YTEvYWlwbGF0Zm9ybXBiO2FpcGxhdGZvcm1wYqoCH0dvb2dsZS5D",
            "bG91ZC5BSVBsYXRmb3JtLlYxQmV0YTHKAh9Hb29nbGVcQ2xvdWRcQUlQbGF0",
            "Zm9ybVxWMWJldGEx6gIiR29vZ2xlOjpDbG91ZDo6QUlQbGF0Zm9ybTo6VjFi",
            "ZXRhMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.AIPlatform.V1Beta1.EncryptionSpecReflection.Descriptor, global::Google.Cloud.AIPlatform.V1Beta1.JobStateReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, global::Google.Type.MoneyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1Beta1.DataLabelingJob), global::Google.Cloud.AIPlatform.V1Beta1.DataLabelingJob.Parser, new[]{ "Name", "DisplayName", "Datasets", "AnnotationLabels", "LabelerCount", "InstructionUri", "InputsSchemaUri", "Inputs", "State", "LabelingProgress", "CurrentSpend", "CreateTime", "UpdateTime", "Error", "Labels", "SpecialistPools", "EncryptionSpec", "ActiveLearningConfig" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1Beta1.ActiveLearningConfig), global::Google.Cloud.AIPlatform.V1Beta1.ActiveLearningConfig.Parser, new[]{ "MaxDataItemCount", "MaxDataItemPercentage", "SampleConfig", "TrainingConfig" }, new[]{ "HumanLabelingBudget" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig), global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Parser, new[]{ "InitialBatchSamplePercentage", "FollowingBatchSamplePercentage", "SampleStrategy" }, new[]{ "InitialBatchSampleSize", "FollowingBatchSampleSize" }, new[]{ typeof(global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.AIPlatform.V1Beta1.TrainingConfig), global::Google.Cloud.AIPlatform.V1Beta1.TrainingConfig.Parser, new[]{ "TimeoutTrainingMilliHours" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// DataLabelingJob is used to trigger a human labeling job on unlabeled data
  /// from the following Dataset:
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DataLabelingJob : pb::IMessage<DataLabelingJob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataLabelingJob> _parser = new pb::MessageParser<DataLabelingJob>(() => new DataLabelingJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataLabelingJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1Beta1.DataLabelingJobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataLabelingJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataLabelingJob(DataLabelingJob other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      datasets_ = other.datasets_.Clone();
      annotationLabels_ = other.annotationLabels_.Clone();
      labelerCount_ = other.labelerCount_;
      instructionUri_ = other.instructionUri_;
      inputsSchemaUri_ = other.inputsSchemaUri_;
      inputs_ = other.inputs_ != null ? other.inputs_.Clone() : null;
      state_ = other.state_;
      labelingProgress_ = other.labelingProgress_;
      currentSpend_ = other.currentSpend_ != null ? other.currentSpend_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      labels_ = other.labels_.Clone();
      specialistPools_ = other.specialistPools_.Clone();
      encryptionSpec_ = other.encryptionSpec_ != null ? other.encryptionSpec_.Clone() : null;
      activeLearningConfig_ = other.activeLearningConfig_ != null ? other.activeLearningConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataLabelingJob Clone() {
      return new DataLabelingJob(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Resource name of the DataLabelingJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// Required. The user-defined name of the DataLabelingJob.
    /// The name can be up to 128 characters long and can consist of any UTF-8
    /// characters.
    /// Display name of a DataLabelingJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "datasets" field.</summary>
    public const int DatasetsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_datasets_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> datasets_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. Dataset resource names. Right now we only support labeling from a
    /// single Dataset. Format:
    /// `projects/{project}/locations/{location}/datasets/{dataset}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Datasets {
      get { return datasets_; }
    }

    /// <summary>Field number for the "annotation_labels" field.</summary>
    public const int AnnotationLabelsFieldNumber = 12;
    private static readonly pbc::MapField<string, string>.Codec _map_annotationLabels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 98);
    private readonly pbc::MapField<string, string> annotationLabels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Labels to assign to annotations generated by this DataLabelingJob.
    ///
    /// Label keys and values can be no longer than 64 characters
    /// (Unicode codepoints), can only contain lowercase letters, numeric
    /// characters, underscores and dashes. International characters are allowed.
    /// See https://goo.gl/xmQnxf for more information and examples of labels.
    /// System reserved label keys are prefixed with "aiplatform.googleapis.com/"
    /// and are immutable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> AnnotationLabels {
      get { return annotationLabels_; }
    }

    /// <summary>Field number for the "labeler_count" field.</summary>
    public const int LabelerCountFieldNumber = 4;
    private int labelerCount_;
    /// <summary>
    /// Required. Number of labelers to work on each DataItem.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LabelerCount {
      get { return labelerCount_; }
      set {
        labelerCount_ = value;
      }
    }

    /// <summary>Field number for the "instruction_uri" field.</summary>
    public const int InstructionUriFieldNumber = 5;
    private string instructionUri_ = "";
    /// <summary>
    /// Required. The Google Cloud Storage location of the instruction pdf. This
    /// pdf is shared with labelers, and provides detailed description on how to
    /// label DataItems in Datasets.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstructionUri {
      get { return instructionUri_; }
      set {
        instructionUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inputs_schema_uri" field.</summary>
    public const int InputsSchemaUriFieldNumber = 6;
    private string inputsSchemaUri_ = "";
    /// <summary>
    /// Required. Points to a YAML file stored on Google Cloud Storage describing
    /// the config for a specific type of DataLabelingJob. The schema files that
    /// can be used here are found in the
    /// https://storage.googleapis.com/google-cloud-aiplatform bucket in the
    /// /schema/datalabelingjob/inputs/ folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InputsSchemaUri {
      get { return inputsSchemaUri_; }
      set {
        inputsSchemaUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Value inputs_;
    /// <summary>
    /// Required. Input config parameters for the DataLabelingJob.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Value Inputs {
      get { return inputs_; }
      set {
        inputs_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 8;
    private global::Google.Cloud.AIPlatform.V1Beta1.JobState state_ = global::Google.Cloud.AIPlatform.V1Beta1.JobState.Unspecified;
    /// <summary>
    /// Output only. The detailed state of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1Beta1.JobState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "labeling_progress" field.</summary>
    public const int LabelingProgressFieldNumber = 13;
    private int labelingProgress_;
    /// <summary>
    /// Output only. Current labeling job progress percentage scaled in interval
    /// [0, 100], indicating the percentage of DataItems that has been finished.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LabelingProgress {
      get { return labelingProgress_; }
      set {
        labelingProgress_ = value;
      }
    }

    /// <summary>Field number for the "current_spend" field.</summary>
    public const int CurrentSpendFieldNumber = 14;
    private global::Google.Type.Money currentSpend_;
    /// <summary>
    /// Output only. Estimated cost(in US dollars) that the DataLabelingJob has
    /// incurred to date.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.Money CurrentSpend {
      get { return currentSpend_; }
      set {
        currentSpend_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Timestamp when this DataLabelingJob was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. Timestamp when this DataLabelingJob was updated most recently.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 22;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// Output only. DataLabelingJob errors. It is only populated when job's state
    /// is `JOB_STATE_FAILED` or `JOB_STATE_CANCELLED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 90);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The labels with user-defined metadata to organize your DataLabelingJobs.
    ///
    /// Label keys and values can be no longer than 64 characters
    /// (Unicode codepoints), can only contain lowercase letters, numeric
    /// characters, underscores and dashes. International characters are allowed.
    ///
    /// See https://goo.gl/xmQnxf for more information and examples of labels.
    /// System reserved label keys are prefixed with "aiplatform.googleapis.com/"
    /// and are immutable. Following system labels exist for each DataLabelingJob:
    ///
    /// * "aiplatform.googleapis.com/schema": output only, its value is the
    ///   [inputs_schema][google.cloud.aiplatform.v1beta1.DataLabelingJob.inputs_schema_uri]'s
    ///   title.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "specialist_pools" field.</summary>
    public const int SpecialistPoolsFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _repeated_specialistPools_codec
        = pb::FieldCodec.ForString(130);
    private readonly pbc::RepeatedField<string> specialistPools_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The SpecialistPools' resource names associated with this job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SpecialistPools {
      get { return specialistPools_; }
    }

    /// <summary>Field number for the "encryption_spec" field.</summary>
    public const int EncryptionSpecFieldNumber = 20;
    private global::Google.Cloud.AIPlatform.V1Beta1.EncryptionSpec encryptionSpec_;
    /// <summary>
    /// Customer-managed encryption key spec for a DataLabelingJob. If set, this
    /// DataLabelingJob will be secured by this key.
    ///
    /// Note: Annotations created in the DataLabelingJob are associated with
    /// the EncryptionSpec of the Dataset they are exported to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1Beta1.EncryptionSpec EncryptionSpec {
      get { return encryptionSpec_; }
      set {
        encryptionSpec_ = value;
      }
    }

    /// <summary>Field number for the "active_learning_config" field.</summary>
    public const int ActiveLearningConfigFieldNumber = 21;
    private global::Google.Cloud.AIPlatform.V1Beta1.ActiveLearningConfig activeLearningConfig_;
    /// <summary>
    /// Parameters that configure the active learning pipeline. Active learning
    /// will label the data incrementally via several iterations. For every
    /// iteration, it will select a batch of data based on the sampling strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1Beta1.ActiveLearningConfig ActiveLearningConfig {
      get { return activeLearningConfig_; }
      set {
        activeLearningConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataLabelingJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataLabelingJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if(!datasets_.Equals(other.datasets_)) return false;
      if (!AnnotationLabels.Equals(other.AnnotationLabels)) return false;
      if (LabelerCount != other.LabelerCount) return false;
      if (InstructionUri != other.InstructionUri) return false;
      if (InputsSchemaUri != other.InputsSchemaUri) return false;
      if (!object.Equals(Inputs, other.Inputs)) return false;
      if (State != other.State) return false;
      if (LabelingProgress != other.LabelingProgress) return false;
      if (!object.Equals(CurrentSpend, other.CurrentSpend)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if(!specialistPools_.Equals(other.specialistPools_)) return false;
      if (!object.Equals(EncryptionSpec, other.EncryptionSpec)) return false;
      if (!object.Equals(ActiveLearningConfig, other.ActiveLearningConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= datasets_.GetHashCode();
      hash ^= AnnotationLabels.GetHashCode();
      if (LabelerCount != 0) hash ^= LabelerCount.GetHashCode();
      if (InstructionUri.Length != 0) hash ^= InstructionUri.GetHashCode();
      if (InputsSchemaUri.Length != 0) hash ^= InputsSchemaUri.GetHashCode();
      if (inputs_ != null) hash ^= Inputs.GetHashCode();
      if (State != global::Google.Cloud.AIPlatform.V1Beta1.JobState.Unspecified) hash ^= State.GetHashCode();
      if (LabelingProgress != 0) hash ^= LabelingProgress.GetHashCode();
      if (currentSpend_ != null) hash ^= CurrentSpend.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= specialistPools_.GetHashCode();
      if (encryptionSpec_ != null) hash ^= EncryptionSpec.GetHashCode();
      if (activeLearningConfig_ != null) hash ^= ActiveLearningConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      datasets_.WriteTo(output, _repeated_datasets_codec);
      if (LabelerCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LabelerCount);
      }
      if (InstructionUri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstructionUri);
      }
      if (InputsSchemaUri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InputsSchemaUri);
      }
      if (inputs_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Inputs);
      }
      if (State != global::Google.Cloud.AIPlatform.V1Beta1.JobState.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(output, _map_labels_codec);
      annotationLabels_.WriteTo(output, _map_annotationLabels_codec);
      if (LabelingProgress != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(LabelingProgress);
      }
      if (currentSpend_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(CurrentSpend);
      }
      specialistPools_.WriteTo(output, _repeated_specialistPools_codec);
      if (encryptionSpec_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(EncryptionSpec);
      }
      if (activeLearningConfig_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ActiveLearningConfig);
      }
      if (error_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      datasets_.WriteTo(ref output, _repeated_datasets_codec);
      if (LabelerCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LabelerCount);
      }
      if (InstructionUri.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstructionUri);
      }
      if (InputsSchemaUri.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InputsSchemaUri);
      }
      if (inputs_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Inputs);
      }
      if (State != global::Google.Cloud.AIPlatform.V1Beta1.JobState.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateTime);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      annotationLabels_.WriteTo(ref output, _map_annotationLabels_codec);
      if (LabelingProgress != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(LabelingProgress);
      }
      if (currentSpend_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(CurrentSpend);
      }
      specialistPools_.WriteTo(ref output, _repeated_specialistPools_codec);
      if (encryptionSpec_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(EncryptionSpec);
      }
      if (activeLearningConfig_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ActiveLearningConfig);
      }
      if (error_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      size += datasets_.CalculateSize(_repeated_datasets_codec);
      size += annotationLabels_.CalculateSize(_map_annotationLabels_codec);
      if (LabelerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LabelerCount);
      }
      if (InstructionUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstructionUri);
      }
      if (InputsSchemaUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputsSchemaUri);
      }
      if (inputs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inputs);
      }
      if (State != global::Google.Cloud.AIPlatform.V1Beta1.JobState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (LabelingProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LabelingProgress);
      }
      if (currentSpend_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentSpend);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (error_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      size += specialistPools_.CalculateSize(_repeated_specialistPools_codec);
      if (encryptionSpec_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EncryptionSpec);
      }
      if (activeLearningConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ActiveLearningConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataLabelingJob other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      datasets_.Add(other.datasets_);
      annotationLabels_.MergeFrom(other.annotationLabels_);
      if (other.LabelerCount != 0) {
        LabelerCount = other.LabelerCount;
      }
      if (other.InstructionUri.Length != 0) {
        InstructionUri = other.InstructionUri;
      }
      if (other.InputsSchemaUri.Length != 0) {
        InputsSchemaUri = other.InputsSchemaUri;
      }
      if (other.inputs_ != null) {
        if (inputs_ == null) {
          Inputs = new global::Google.Protobuf.WellKnownTypes.Value();
        }
        Inputs.MergeFrom(other.Inputs);
      }
      if (other.State != global::Google.Cloud.AIPlatform.V1Beta1.JobState.Unspecified) {
        State = other.State;
      }
      if (other.LabelingProgress != 0) {
        LabelingProgress = other.LabelingProgress;
      }
      if (other.currentSpend_ != null) {
        if (currentSpend_ == null) {
          CurrentSpend = new global::Google.Type.Money();
        }
        CurrentSpend.MergeFrom(other.CurrentSpend);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
      labels_.MergeFrom(other.labels_);
      specialistPools_.Add(other.specialistPools_);
      if (other.encryptionSpec_ != null) {
        if (encryptionSpec_ == null) {
          EncryptionSpec = new global::Google.Cloud.AIPlatform.V1Beta1.EncryptionSpec();
        }
        EncryptionSpec.MergeFrom(other.EncryptionSpec);
      }
      if (other.activeLearningConfig_ != null) {
        if (activeLearningConfig_ == null) {
          ActiveLearningConfig = new global::Google.Cloud.AIPlatform.V1Beta1.ActiveLearningConfig();
        }
        ActiveLearningConfig.MergeFrom(other.ActiveLearningConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            datasets_.AddEntriesFrom(input, _repeated_datasets_codec);
            break;
          }
          case 32: {
            LabelerCount = input.ReadInt32();
            break;
          }
          case 42: {
            InstructionUri = input.ReadString();
            break;
          }
          case 50: {
            InputsSchemaUri = input.ReadString();
            break;
          }
          case 58: {
            if (inputs_ == null) {
              Inputs = new global::Google.Protobuf.WellKnownTypes.Value();
            }
            input.ReadMessage(Inputs);
            break;
          }
          case 64: {
            State = (global::Google.Cloud.AIPlatform.V1Beta1.JobState) input.ReadEnum();
            break;
          }
          case 74: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 82: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 90: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 98: {
            annotationLabels_.AddEntriesFrom(input, _map_annotationLabels_codec);
            break;
          }
          case 104: {
            LabelingProgress = input.ReadInt32();
            break;
          }
          case 114: {
            if (currentSpend_ == null) {
              CurrentSpend = new global::Google.Type.Money();
            }
            input.ReadMessage(CurrentSpend);
            break;
          }
          case 130: {
            specialistPools_.AddEntriesFrom(input, _repeated_specialistPools_codec);
            break;
          }
          case 162: {
            if (encryptionSpec_ == null) {
              EncryptionSpec = new global::Google.Cloud.AIPlatform.V1Beta1.EncryptionSpec();
            }
            input.ReadMessage(EncryptionSpec);
            break;
          }
          case 170: {
            if (activeLearningConfig_ == null) {
              ActiveLearningConfig = new global::Google.Cloud.AIPlatform.V1Beta1.ActiveLearningConfig();
            }
            input.ReadMessage(ActiveLearningConfig);
            break;
          }
          case 178: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 26: {
            datasets_.AddEntriesFrom(ref input, _repeated_datasets_codec);
            break;
          }
          case 32: {
            LabelerCount = input.ReadInt32();
            break;
          }
          case 42: {
            InstructionUri = input.ReadString();
            break;
          }
          case 50: {
            InputsSchemaUri = input.ReadString();
            break;
          }
          case 58: {
            if (inputs_ == null) {
              Inputs = new global::Google.Protobuf.WellKnownTypes.Value();
            }
            input.ReadMessage(Inputs);
            break;
          }
          case 64: {
            State = (global::Google.Cloud.AIPlatform.V1Beta1.JobState) input.ReadEnum();
            break;
          }
          case 74: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 82: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 90: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 98: {
            annotationLabels_.AddEntriesFrom(ref input, _map_annotationLabels_codec);
            break;
          }
          case 104: {
            LabelingProgress = input.ReadInt32();
            break;
          }
          case 114: {
            if (currentSpend_ == null) {
              CurrentSpend = new global::Google.Type.Money();
            }
            input.ReadMessage(CurrentSpend);
            break;
          }
          case 130: {
            specialistPools_.AddEntriesFrom(ref input, _repeated_specialistPools_codec);
            break;
          }
          case 162: {
            if (encryptionSpec_ == null) {
              EncryptionSpec = new global::Google.Cloud.AIPlatform.V1Beta1.EncryptionSpec();
            }
            input.ReadMessage(EncryptionSpec);
            break;
          }
          case 170: {
            if (activeLearningConfig_ == null) {
              ActiveLearningConfig = new global::Google.Cloud.AIPlatform.V1Beta1.ActiveLearningConfig();
            }
            input.ReadMessage(ActiveLearningConfig);
            break;
          }
          case 178: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Parameters that configure the active learning pipeline. Active learning will
  ///  label the data incrementally by several iterations. For every iteration, it
  ///  will select a batch of data based on the sampling strategy.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ActiveLearningConfig : pb::IMessage<ActiveLearningConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActiveLearningConfig> _parser = new pb::MessageParser<ActiveLearningConfig>(() => new ActiveLearningConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActiveLearningConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1Beta1.DataLabelingJobReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActiveLearningConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActiveLearningConfig(ActiveLearningConfig other) : this() {
      sampleConfig_ = other.sampleConfig_ != null ? other.sampleConfig_.Clone() : null;
      trainingConfig_ = other.trainingConfig_ != null ? other.trainingConfig_.Clone() : null;
      switch (other.HumanLabelingBudgetCase) {
        case HumanLabelingBudgetOneofCase.MaxDataItemCount:
          MaxDataItemCount = other.MaxDataItemCount;
          break;
        case HumanLabelingBudgetOneofCase.MaxDataItemPercentage:
          MaxDataItemPercentage = other.MaxDataItemPercentage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActiveLearningConfig Clone() {
      return new ActiveLearningConfig(this);
    }

    /// <summary>Field number for the "max_data_item_count" field.</summary>
    public const int MaxDataItemCountFieldNumber = 1;
    /// <summary>
    /// Max number of human labeled DataItems.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxDataItemCount {
      get { return HasMaxDataItemCount ? (long) humanLabelingBudget_ : 0L; }
      set {
        humanLabelingBudget_ = value;
        humanLabelingBudgetCase_ = HumanLabelingBudgetOneofCase.MaxDataItemCount;
      }
    }
    /// <summary>Gets whether the "max_data_item_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxDataItemCount {
      get { return humanLabelingBudgetCase_ == HumanLabelingBudgetOneofCase.MaxDataItemCount; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "max_data_item_count" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxDataItemCount() {
      if (HasMaxDataItemCount) {
        ClearHumanLabelingBudget();
      }
    }

    /// <summary>Field number for the "max_data_item_percentage" field.</summary>
    public const int MaxDataItemPercentageFieldNumber = 2;
    /// <summary>
    /// Max percent of total DataItems for human labeling.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxDataItemPercentage {
      get { return HasMaxDataItemPercentage ? (int) humanLabelingBudget_ : 0; }
      set {
        humanLabelingBudget_ = value;
        humanLabelingBudgetCase_ = HumanLabelingBudgetOneofCase.MaxDataItemPercentage;
      }
    }
    /// <summary>Gets whether the "max_data_item_percentage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxDataItemPercentage {
      get { return humanLabelingBudgetCase_ == HumanLabelingBudgetOneofCase.MaxDataItemPercentage; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "max_data_item_percentage" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxDataItemPercentage() {
      if (HasMaxDataItemPercentage) {
        ClearHumanLabelingBudget();
      }
    }

    /// <summary>Field number for the "sample_config" field.</summary>
    public const int SampleConfigFieldNumber = 3;
    private global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig sampleConfig_;
    /// <summary>
    /// Active learning data sampling config. For every active learning labeling
    /// iteration, it will select a batch of data based on the sampling strategy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig SampleConfig {
      get { return sampleConfig_; }
      set {
        sampleConfig_ = value;
      }
    }

    /// <summary>Field number for the "training_config" field.</summary>
    public const int TrainingConfigFieldNumber = 4;
    private global::Google.Cloud.AIPlatform.V1Beta1.TrainingConfig trainingConfig_;
    /// <summary>
    /// CMLE training config. For every active learning labeling iteration, system
    /// will train a machine learning model on CMLE. The trained model will be used
    /// by data sampling algorithm to select DataItems.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1Beta1.TrainingConfig TrainingConfig {
      get { return trainingConfig_; }
      set {
        trainingConfig_ = value;
      }
    }

    private object humanLabelingBudget_;
    /// <summary>Enum of possible cases for the "human_labeling_budget" oneof.</summary>
    public enum HumanLabelingBudgetOneofCase {
      None = 0,
      MaxDataItemCount = 1,
      MaxDataItemPercentage = 2,
    }
    private HumanLabelingBudgetOneofCase humanLabelingBudgetCase_ = HumanLabelingBudgetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HumanLabelingBudgetOneofCase HumanLabelingBudgetCase {
      get { return humanLabelingBudgetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHumanLabelingBudget() {
      humanLabelingBudgetCase_ = HumanLabelingBudgetOneofCase.None;
      humanLabelingBudget_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActiveLearningConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActiveLearningConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxDataItemCount != other.MaxDataItemCount) return false;
      if (MaxDataItemPercentage != other.MaxDataItemPercentage) return false;
      if (!object.Equals(SampleConfig, other.SampleConfig)) return false;
      if (!object.Equals(TrainingConfig, other.TrainingConfig)) return false;
      if (HumanLabelingBudgetCase != other.HumanLabelingBudgetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMaxDataItemCount) hash ^= MaxDataItemCount.GetHashCode();
      if (HasMaxDataItemPercentage) hash ^= MaxDataItemPercentage.GetHashCode();
      if (sampleConfig_ != null) hash ^= SampleConfig.GetHashCode();
      if (trainingConfig_ != null) hash ^= TrainingConfig.GetHashCode();
      hash ^= (int) humanLabelingBudgetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMaxDataItemCount) {
        output.WriteRawTag(8);
        output.WriteInt64(MaxDataItemCount);
      }
      if (HasMaxDataItemPercentage) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxDataItemPercentage);
      }
      if (sampleConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SampleConfig);
      }
      if (trainingConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TrainingConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMaxDataItemCount) {
        output.WriteRawTag(8);
        output.WriteInt64(MaxDataItemCount);
      }
      if (HasMaxDataItemPercentage) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxDataItemPercentage);
      }
      if (sampleConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SampleConfig);
      }
      if (trainingConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TrainingConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMaxDataItemCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxDataItemCount);
      }
      if (HasMaxDataItemPercentage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxDataItemPercentage);
      }
      if (sampleConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SampleConfig);
      }
      if (trainingConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainingConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActiveLearningConfig other) {
      if (other == null) {
        return;
      }
      if (other.sampleConfig_ != null) {
        if (sampleConfig_ == null) {
          SampleConfig = new global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig();
        }
        SampleConfig.MergeFrom(other.SampleConfig);
      }
      if (other.trainingConfig_ != null) {
        if (trainingConfig_ == null) {
          TrainingConfig = new global::Google.Cloud.AIPlatform.V1Beta1.TrainingConfig();
        }
        TrainingConfig.MergeFrom(other.TrainingConfig);
      }
      switch (other.HumanLabelingBudgetCase) {
        case HumanLabelingBudgetOneofCase.MaxDataItemCount:
          MaxDataItemCount = other.MaxDataItemCount;
          break;
        case HumanLabelingBudgetOneofCase.MaxDataItemPercentage:
          MaxDataItemPercentage = other.MaxDataItemPercentage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxDataItemCount = input.ReadInt64();
            break;
          }
          case 16: {
            MaxDataItemPercentage = input.ReadInt32();
            break;
          }
          case 26: {
            if (sampleConfig_ == null) {
              SampleConfig = new global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig();
            }
            input.ReadMessage(SampleConfig);
            break;
          }
          case 34: {
            if (trainingConfig_ == null) {
              TrainingConfig = new global::Google.Cloud.AIPlatform.V1Beta1.TrainingConfig();
            }
            input.ReadMessage(TrainingConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxDataItemCount = input.ReadInt64();
            break;
          }
          case 16: {
            MaxDataItemPercentage = input.ReadInt32();
            break;
          }
          case 26: {
            if (sampleConfig_ == null) {
              SampleConfig = new global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig();
            }
            input.ReadMessage(SampleConfig);
            break;
          }
          case 34: {
            if (trainingConfig_ == null) {
              TrainingConfig = new global::Google.Cloud.AIPlatform.V1Beta1.TrainingConfig();
            }
            input.ReadMessage(TrainingConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Active learning data sampling config. For every active learning labeling
  /// iteration, it will select a batch of data based on the sampling strategy.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SampleConfig : pb::IMessage<SampleConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SampleConfig> _parser = new pb::MessageParser<SampleConfig>(() => new SampleConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SampleConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1Beta1.DataLabelingJobReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SampleConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SampleConfig(SampleConfig other) : this() {
      sampleStrategy_ = other.sampleStrategy_;
      switch (other.InitialBatchSampleSizeCase) {
        case InitialBatchSampleSizeOneofCase.InitialBatchSamplePercentage:
          InitialBatchSamplePercentage = other.InitialBatchSamplePercentage;
          break;
      }

      switch (other.FollowingBatchSampleSizeCase) {
        case FollowingBatchSampleSizeOneofCase.FollowingBatchSamplePercentage:
          FollowingBatchSamplePercentage = other.FollowingBatchSamplePercentage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SampleConfig Clone() {
      return new SampleConfig(this);
    }

    /// <summary>Field number for the "initial_batch_sample_percentage" field.</summary>
    public const int InitialBatchSamplePercentageFieldNumber = 1;
    /// <summary>
    /// The percentage of data needed to be labeled in the first batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int InitialBatchSamplePercentage {
      get { return HasInitialBatchSamplePercentage ? (int) initialBatchSampleSize_ : 0; }
      set {
        initialBatchSampleSize_ = value;
        initialBatchSampleSizeCase_ = InitialBatchSampleSizeOneofCase.InitialBatchSamplePercentage;
      }
    }
    /// <summary>Gets whether the "initial_batch_sample_percentage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInitialBatchSamplePercentage {
      get { return initialBatchSampleSizeCase_ == InitialBatchSampleSizeOneofCase.InitialBatchSamplePercentage; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "initial_batch_sample_percentage" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialBatchSamplePercentage() {
      if (HasInitialBatchSamplePercentage) {
        ClearInitialBatchSampleSize();
      }
    }

    /// <summary>Field number for the "following_batch_sample_percentage" field.</summary>
    public const int FollowingBatchSamplePercentageFieldNumber = 3;
    /// <summary>
    /// The percentage of data needed to be labeled in each following batch
    /// (except the first batch).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FollowingBatchSamplePercentage {
      get { return HasFollowingBatchSamplePercentage ? (int) followingBatchSampleSize_ : 0; }
      set {
        followingBatchSampleSize_ = value;
        followingBatchSampleSizeCase_ = FollowingBatchSampleSizeOneofCase.FollowingBatchSamplePercentage;
      }
    }
    /// <summary>Gets whether the "following_batch_sample_percentage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFollowingBatchSamplePercentage {
      get { return followingBatchSampleSizeCase_ == FollowingBatchSampleSizeOneofCase.FollowingBatchSamplePercentage; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "following_batch_sample_percentage" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFollowingBatchSamplePercentage() {
      if (HasFollowingBatchSamplePercentage) {
        ClearFollowingBatchSampleSize();
      }
    }

    /// <summary>Field number for the "sample_strategy" field.</summary>
    public const int SampleStrategyFieldNumber = 5;
    private global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy sampleStrategy_ = global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy.Unspecified;
    /// <summary>
    /// Field to choose sampling strategy. Sampling strategy will decide which data
    /// should be selected for human labeling in every batch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy SampleStrategy {
      get { return sampleStrategy_; }
      set {
        sampleStrategy_ = value;
      }
    }

    private object initialBatchSampleSize_;
    /// <summary>Enum of possible cases for the "initial_batch_sample_size" oneof.</summary>
    public enum InitialBatchSampleSizeOneofCase {
      None = 0,
      InitialBatchSamplePercentage = 1,
    }
    private InitialBatchSampleSizeOneofCase initialBatchSampleSizeCase_ = InitialBatchSampleSizeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitialBatchSampleSizeOneofCase InitialBatchSampleSizeCase {
      get { return initialBatchSampleSizeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInitialBatchSampleSize() {
      initialBatchSampleSizeCase_ = InitialBatchSampleSizeOneofCase.None;
      initialBatchSampleSize_ = null;
    }

    private object followingBatchSampleSize_;
    /// <summary>Enum of possible cases for the "following_batch_sample_size" oneof.</summary>
    public enum FollowingBatchSampleSizeOneofCase {
      None = 0,
      FollowingBatchSamplePercentage = 3,
    }
    private FollowingBatchSampleSizeOneofCase followingBatchSampleSizeCase_ = FollowingBatchSampleSizeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FollowingBatchSampleSizeOneofCase FollowingBatchSampleSizeCase {
      get { return followingBatchSampleSizeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFollowingBatchSampleSize() {
      followingBatchSampleSizeCase_ = FollowingBatchSampleSizeOneofCase.None;
      followingBatchSampleSize_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SampleConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SampleConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitialBatchSamplePercentage != other.InitialBatchSamplePercentage) return false;
      if (FollowingBatchSamplePercentage != other.FollowingBatchSamplePercentage) return false;
      if (SampleStrategy != other.SampleStrategy) return false;
      if (InitialBatchSampleSizeCase != other.InitialBatchSampleSizeCase) return false;
      if (FollowingBatchSampleSizeCase != other.FollowingBatchSampleSizeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInitialBatchSamplePercentage) hash ^= InitialBatchSamplePercentage.GetHashCode();
      if (HasFollowingBatchSamplePercentage) hash ^= FollowingBatchSamplePercentage.GetHashCode();
      if (SampleStrategy != global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy.Unspecified) hash ^= SampleStrategy.GetHashCode();
      hash ^= (int) initialBatchSampleSizeCase_;
      hash ^= (int) followingBatchSampleSizeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInitialBatchSamplePercentage) {
        output.WriteRawTag(8);
        output.WriteInt32(InitialBatchSamplePercentage);
      }
      if (HasFollowingBatchSamplePercentage) {
        output.WriteRawTag(24);
        output.WriteInt32(FollowingBatchSamplePercentage);
      }
      if (SampleStrategy != global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) SampleStrategy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInitialBatchSamplePercentage) {
        output.WriteRawTag(8);
        output.WriteInt32(InitialBatchSamplePercentage);
      }
      if (HasFollowingBatchSamplePercentage) {
        output.WriteRawTag(24);
        output.WriteInt32(FollowingBatchSamplePercentage);
      }
      if (SampleStrategy != global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) SampleStrategy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInitialBatchSamplePercentage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialBatchSamplePercentage);
      }
      if (HasFollowingBatchSamplePercentage) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FollowingBatchSamplePercentage);
      }
      if (SampleStrategy != global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SampleStrategy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SampleConfig other) {
      if (other == null) {
        return;
      }
      if (other.SampleStrategy != global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy.Unspecified) {
        SampleStrategy = other.SampleStrategy;
      }
      switch (other.InitialBatchSampleSizeCase) {
        case InitialBatchSampleSizeOneofCase.InitialBatchSamplePercentage:
          InitialBatchSamplePercentage = other.InitialBatchSamplePercentage;
          break;
      }

      switch (other.FollowingBatchSampleSizeCase) {
        case FollowingBatchSampleSizeOneofCase.FollowingBatchSamplePercentage:
          FollowingBatchSamplePercentage = other.FollowingBatchSamplePercentage;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InitialBatchSamplePercentage = input.ReadInt32();
            break;
          }
          case 24: {
            FollowingBatchSamplePercentage = input.ReadInt32();
            break;
          }
          case 40: {
            SampleStrategy = (global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InitialBatchSamplePercentage = input.ReadInt32();
            break;
          }
          case 24: {
            FollowingBatchSamplePercentage = input.ReadInt32();
            break;
          }
          case 40: {
            SampleStrategy = (global::Google.Cloud.AIPlatform.V1Beta1.SampleConfig.Types.SampleStrategy) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SampleConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Sample strategy decides which subset of DataItems should be selected for
      /// human labeling in every batch.
      /// </summary>
      public enum SampleStrategy {
        /// <summary>
        /// Default will be treated as UNCERTAINTY.
        /// </summary>
        [pbr::OriginalName("SAMPLE_STRATEGY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Sample the most uncertain data to label.
        /// </summary>
        [pbr::OriginalName("UNCERTAINTY")] Uncertainty = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// CMLE training config. For every active learning labeling iteration, system
  /// will train a machine learning model on CMLE. The trained model will be used
  /// by data sampling algorithm to select DataItems.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TrainingConfig : pb::IMessage<TrainingConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrainingConfig> _parser = new pb::MessageParser<TrainingConfig>(() => new TrainingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrainingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.AIPlatform.V1Beta1.DataLabelingJobReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrainingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrainingConfig(TrainingConfig other) : this() {
      timeoutTrainingMilliHours_ = other.timeoutTrainingMilliHours_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrainingConfig Clone() {
      return new TrainingConfig(this);
    }

    /// <summary>Field number for the "timeout_training_milli_hours" field.</summary>
    public const int TimeoutTrainingMilliHoursFieldNumber = 1;
    private long timeoutTrainingMilliHours_;
    /// <summary>
    /// The timeout hours for the CMLE training job, expressed in milli hours
    /// i.e. 1,000 value in this field means 1 hour.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeoutTrainingMilliHours {
      get { return timeoutTrainingMilliHours_; }
      set {
        timeoutTrainingMilliHours_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrainingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrainingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeoutTrainingMilliHours != other.TimeoutTrainingMilliHours) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeoutTrainingMilliHours != 0L) hash ^= TimeoutTrainingMilliHours.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeoutTrainingMilliHours != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimeoutTrainingMilliHours);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeoutTrainingMilliHours != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TimeoutTrainingMilliHours);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeoutTrainingMilliHours != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeoutTrainingMilliHours);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrainingConfig other) {
      if (other == null) {
        return;
      }
      if (other.TimeoutTrainingMilliHours != 0L) {
        TimeoutTrainingMilliHours = other.TimeoutTrainingMilliHours;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeoutTrainingMilliHours = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TimeoutTrainingMilliHours = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
