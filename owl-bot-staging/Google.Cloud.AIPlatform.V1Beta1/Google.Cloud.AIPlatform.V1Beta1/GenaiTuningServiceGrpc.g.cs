// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1beta1/genai_tuning_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.AIPlatform.V1Beta1 {
  /// <summary>
  /// A service for creating and managing GenAI Tuning Jobs.
  /// </summary>
  public static partial class GenAiTuningService
  {
    static readonly string __ServiceName = "google.cloud.aiplatform.v1beta1.GenAiTuningService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_CreateTuningJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> __Marshaller_google_cloud_aiplatform_v1beta1_TuningJob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.TuningJob.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetTuningJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListTuningJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListTuningJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_CancelTuningJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest> __Marshaller_google_cloud_aiplatform_v1beta1_RebaseTunedModelRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> __Method_CreateTuningJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.TuningJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTuningJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_CreateTuningJobRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_TuningJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> __Method_GetTuningJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.TuningJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTuningJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetTuningJobRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_TuningJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse> __Method_ListTuningJobs = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTuningJobs",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListTuningJobsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListTuningJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_CancelTuningJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelTuningJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_CancelTuningJobRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest, global::Google.LongRunning.Operation> __Method_RebaseTunedModel = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RebaseTunedModel",
        __Marshaller_google_cloud_aiplatform_v1beta1_RebaseTunedModelRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.AIPlatform.V1Beta1.GenaiTuningServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GenAiTuningService</summary>
    [grpc::BindServiceMethod(typeof(GenAiTuningService), "BindService")]
    public abstract partial class GenAiTuningServiceBase
    {
      /// <summary>
      /// Creates a TuningJob. A created TuningJob right away will be attempted to
      /// be run.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> CreateTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a TuningJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> GetTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists TuningJobs in a Location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse> ListTuningJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Cancels a TuningJob.
      /// Starts asynchronous cancellation on the TuningJob. The server makes a best
      /// effort to cancel the job, but success is not guaranteed. Clients can use
      /// [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1beta1.GenAiTuningService.GetTuningJob]
      /// or other methods to check whether the cancellation succeeded or whether the
      /// job completed despite cancellation. On successful cancellation, the
      /// TuningJob is not deleted; instead it becomes a job with a
      /// [TuningJob.error][google.cloud.aiplatform.v1beta1.TuningJob.error] value
      /// with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding
      /// to `Code.CANCELLED`, and
      /// [TuningJob.state][google.cloud.aiplatform.v1beta1.TuningJob.state] is set
      /// to `CANCELLED`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> CancelTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Rebase a TunedModel.
      /// Creates a LongRunningOperation that takes a legacy Tuned GenAI model
      /// Reference and creates a TuningJob based on newly available model.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> RebaseTunedModel(global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for GenAiTuningService</summary>
    public partial class GenAiTuningServiceClient : grpc::ClientBase<GenAiTuningServiceClient>
    {
      /// <summary>Creates a new client for GenAiTuningService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GenAiTuningServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for GenAiTuningService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public GenAiTuningServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GenAiTuningServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected GenAiTuningServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a TuningJob. A created TuningJob right away will be attempted to
      /// be run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.TuningJob CreateTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTuningJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a TuningJob. A created TuningJob right away will be attempted to
      /// be run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.TuningJob CreateTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTuningJob, null, options, request);
      }
      /// <summary>
      /// Creates a TuningJob. A created TuningJob right away will be attempted to
      /// be run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> CreateTuningJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTuningJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a TuningJob. A created TuningJob right away will be attempted to
      /// be run.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> CreateTuningJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTuningJob, null, options, request);
      }
      /// <summary>
      /// Gets a TuningJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.TuningJob GetTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTuningJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a TuningJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.TuningJob GetTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTuningJob, null, options, request);
      }
      /// <summary>
      /// Gets a TuningJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> GetTuningJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTuningJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a TuningJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.TuningJob> GetTuningJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTuningJob, null, options, request);
      }
      /// <summary>
      /// Lists TuningJobs in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse ListTuningJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTuningJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists TuningJobs in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse ListTuningJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTuningJobs, null, options, request);
      }
      /// <summary>
      /// Lists TuningJobs in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse> ListTuningJobsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTuningJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists TuningJobs in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse> ListTuningJobsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTuningJobs, null, options, request);
      }
      /// <summary>
      /// Cancels a TuningJob.
      /// Starts asynchronous cancellation on the TuningJob. The server makes a best
      /// effort to cancel the job, but success is not guaranteed. Clients can use
      /// [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1beta1.GenAiTuningService.GetTuningJob]
      /// or other methods to check whether the cancellation succeeded or whether the
      /// job completed despite cancellation. On successful cancellation, the
      /// TuningJob is not deleted; instead it becomes a job with a
      /// [TuningJob.error][google.cloud.aiplatform.v1beta1.TuningJob.error] value
      /// with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding
      /// to `Code.CANCELLED`, and
      /// [TuningJob.state][google.cloud.aiplatform.v1beta1.TuningJob.state] is set
      /// to `CANCELLED`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelTuningJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels a TuningJob.
      /// Starts asynchronous cancellation on the TuningJob. The server makes a best
      /// effort to cancel the job, but success is not guaranteed. Clients can use
      /// [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1beta1.GenAiTuningService.GetTuningJob]
      /// or other methods to check whether the cancellation succeeded or whether the
      /// job completed despite cancellation. On successful cancellation, the
      /// TuningJob is not deleted; instead it becomes a job with a
      /// [TuningJob.error][google.cloud.aiplatform.v1beta1.TuningJob.error] value
      /// with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding
      /// to `Code.CANCELLED`, and
      /// [TuningJob.state][google.cloud.aiplatform.v1beta1.TuningJob.state] is set
      /// to `CANCELLED`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty CancelTuningJob(global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelTuningJob, null, options, request);
      }
      /// <summary>
      /// Cancels a TuningJob.
      /// Starts asynchronous cancellation on the TuningJob. The server makes a best
      /// effort to cancel the job, but success is not guaranteed. Clients can use
      /// [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1beta1.GenAiTuningService.GetTuningJob]
      /// or other methods to check whether the cancellation succeeded or whether the
      /// job completed despite cancellation. On successful cancellation, the
      /// TuningJob is not deleted; instead it becomes a job with a
      /// [TuningJob.error][google.cloud.aiplatform.v1beta1.TuningJob.error] value
      /// with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding
      /// to `Code.CANCELLED`, and
      /// [TuningJob.state][google.cloud.aiplatform.v1beta1.TuningJob.state] is set
      /// to `CANCELLED`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CancelTuningJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelTuningJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels a TuningJob.
      /// Starts asynchronous cancellation on the TuningJob. The server makes a best
      /// effort to cancel the job, but success is not guaranteed. Clients can use
      /// [GenAiTuningService.GetTuningJob][google.cloud.aiplatform.v1beta1.GenAiTuningService.GetTuningJob]
      /// or other methods to check whether the cancellation succeeded or whether the
      /// job completed despite cancellation. On successful cancellation, the
      /// TuningJob is not deleted; instead it becomes a job with a
      /// [TuningJob.error][google.cloud.aiplatform.v1beta1.TuningJob.error] value
      /// with a [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding
      /// to `Code.CANCELLED`, and
      /// [TuningJob.state][google.cloud.aiplatform.v1beta1.TuningJob.state] is set
      /// to `CANCELLED`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> CancelTuningJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelTuningJob, null, options, request);
      }
      /// <summary>
      /// Rebase a TunedModel.
      /// Creates a LongRunningOperation that takes a legacy Tuned GenAI model
      /// Reference and creates a TuningJob based on newly available model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RebaseTunedModel(global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RebaseTunedModel(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Rebase a TunedModel.
      /// Creates a LongRunningOperation that takes a legacy Tuned GenAI model
      /// Reference and creates a TuningJob based on newly available model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation RebaseTunedModel(global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RebaseTunedModel, null, options, request);
      }
      /// <summary>
      /// Rebase a TunedModel.
      /// Creates a LongRunningOperation that takes a legacy Tuned GenAI model
      /// Reference and creates a TuningJob based on newly available model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RebaseTunedModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RebaseTunedModelAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Rebase a TunedModel.
      /// Creates a LongRunningOperation that takes a legacy Tuned GenAI model
      /// Reference and creates a TuningJob based on newly available model.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> RebaseTunedModelAsync(global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RebaseTunedModel, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override GenAiTuningServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new GenAiTuningServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GenAiTuningServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateTuningJob, serviceImpl.CreateTuningJob)
          .AddMethod(__Method_GetTuningJob, serviceImpl.GetTuningJob)
          .AddMethod(__Method_ListTuningJobs, serviceImpl.ListTuningJobs)
          .AddMethod(__Method_CancelTuningJob, serviceImpl.CancelTuningJob)
          .AddMethod(__Method_RebaseTunedModel, serviceImpl.RebaseTunedModel).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GenAiTuningServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateTuningJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.CreateTuningJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.TuningJob>(serviceImpl.CreateTuningJob));
      serviceBinder.AddMethod(__Method_GetTuningJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetTuningJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.TuningJob>(serviceImpl.GetTuningJob));
      serviceBinder.AddMethod(__Method_ListTuningJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListTuningJobsResponse>(serviceImpl.ListTuningJobs));
      serviceBinder.AddMethod(__Method_CancelTuningJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.CancelTuningJobRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.CancelTuningJob));
      serviceBinder.AddMethod(__Method_RebaseTunedModel, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.RebaseTunedModelRequest, global::Google.LongRunning.Operation>(serviceImpl.RebaseTunedModel));
    }

  }
}
#endregion
