// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/aiplatform/v1beta1/notebook_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.AIPlatform.V1Beta1 {
  /// <summary>
  /// The interface for Vertex Notebook service (a.k.a. Colab on Workbench).
  /// </summary>
  public static partial class NotebookService
  {
    static readonly string __ServiceName = "google.cloud.aiplatform.v1beta1.NotebookService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest> __Marshaller_google_cloud_aiplatform_v1beta1_CreateNotebookRuntimeTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetNotebookRuntimeTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> __Marshaller_google_cloud_aiplatform_v1beta1_NotebookRuntimeTemplate = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookRuntimeTemplatesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookRuntimeTemplatesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest> __Marshaller_google_cloud_aiplatform_v1beta1_DeleteNotebookRuntimeTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest> __Marshaller_google_cloud_aiplatform_v1beta1_UpdateNotebookRuntimeTemplateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest> __Marshaller_google_cloud_aiplatform_v1beta1_AssignNotebookRuntimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetNotebookRuntimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime> __Marshaller_google_cloud_aiplatform_v1beta1_NotebookRuntime = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookRuntimesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookRuntimesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest> __Marshaller_google_cloud_aiplatform_v1beta1_DeleteNotebookRuntimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest> __Marshaller_google_cloud_aiplatform_v1beta1_UpgradeNotebookRuntimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest> __Marshaller_google_cloud_aiplatform_v1beta1_StartNotebookRuntimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest> __Marshaller_google_cloud_aiplatform_v1beta1_StopNotebookRuntimeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_CreateNotebookExecutionJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_GetNotebookExecutionJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob> __Marshaller_google_cloud_aiplatform_v1beta1_NotebookExecutionJob = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest> __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookExecutionJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse> __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookExecutionJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest> __Marshaller_google_cloud_aiplatform_v1beta1_DeleteNotebookExecutionJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest, global::Google.LongRunning.Operation> __Method_CreateNotebookRuntimeTemplate = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNotebookRuntimeTemplate",
        __Marshaller_google_cloud_aiplatform_v1beta1_CreateNotebookRuntimeTemplateRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> __Method_GetNotebookRuntimeTemplate = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotebookRuntimeTemplate",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetNotebookRuntimeTemplateRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_NotebookRuntimeTemplate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse> __Method_ListNotebookRuntimeTemplates = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotebookRuntimeTemplates",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookRuntimeTemplatesRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookRuntimeTemplatesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest, global::Google.LongRunning.Operation> __Method_DeleteNotebookRuntimeTemplate = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNotebookRuntimeTemplate",
        __Marshaller_google_cloud_aiplatform_v1beta1_DeleteNotebookRuntimeTemplateRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> __Method_UpdateNotebookRuntimeTemplate = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNotebookRuntimeTemplate",
        __Marshaller_google_cloud_aiplatform_v1beta1_UpdateNotebookRuntimeTemplateRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_NotebookRuntimeTemplate);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest, global::Google.LongRunning.Operation> __Method_AssignNotebookRuntime = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AssignNotebookRuntime",
        __Marshaller_google_cloud_aiplatform_v1beta1_AssignNotebookRuntimeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime> __Method_GetNotebookRuntime = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotebookRuntime",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetNotebookRuntimeRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_NotebookRuntime);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse> __Method_ListNotebookRuntimes = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotebookRuntimes",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookRuntimesRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookRuntimesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest, global::Google.LongRunning.Operation> __Method_DeleteNotebookRuntime = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNotebookRuntime",
        __Marshaller_google_cloud_aiplatform_v1beta1_DeleteNotebookRuntimeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest, global::Google.LongRunning.Operation> __Method_UpgradeNotebookRuntime = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpgradeNotebookRuntime",
        __Marshaller_google_cloud_aiplatform_v1beta1_UpgradeNotebookRuntimeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest, global::Google.LongRunning.Operation> __Method_StartNotebookRuntime = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartNotebookRuntime",
        __Marshaller_google_cloud_aiplatform_v1beta1_StartNotebookRuntimeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest, global::Google.LongRunning.Operation> __Method_StopNotebookRuntime = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopNotebookRuntime",
        __Marshaller_google_cloud_aiplatform_v1beta1_StopNotebookRuntimeRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest, global::Google.LongRunning.Operation> __Method_CreateNotebookExecutionJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNotebookExecutionJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_CreateNotebookExecutionJobRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob> __Method_GetNotebookExecutionJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotebookExecutionJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_GetNotebookExecutionJobRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_NotebookExecutionJob);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse> __Method_ListNotebookExecutionJobs = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotebookExecutionJobs",
        __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookExecutionJobsRequest,
        __Marshaller_google_cloud_aiplatform_v1beta1_ListNotebookExecutionJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest, global::Google.LongRunning.Operation> __Method_DeleteNotebookExecutionJob = new grpc::Method<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNotebookExecutionJob",
        __Marshaller_google_cloud_aiplatform_v1beta1_DeleteNotebookExecutionJobRequest,
        __Marshaller_google_longrunning_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.AIPlatform.V1Beta1.NotebookServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NotebookService</summary>
    [grpc::BindServiceMethod(typeof(NotebookService), "BindService")]
    public abstract partial class NotebookServiceBase
    {
      /// <summary>
      /// Creates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> GetNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists NotebookRuntimeTemplates in a Location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse> ListNotebookRuntimeTemplates(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> UpdateNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Assigns a NotebookRuntime to a user for a particular Notebook file. This
      /// method will either returns an existing assignment or generates a new one.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> AssignNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime> GetNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists NotebookRuntimes in a Location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse> ListNotebookRuntimes(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Upgrades a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> UpgradeNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StartNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stops a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> StopNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> CreateNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob> GetNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists NotebookExecutionJobs in a Location.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse> ListNotebookExecutionJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> DeleteNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NotebookService</summary>
    public partial class NotebookServiceClient : grpc::ClientBase<NotebookServiceClient>
    {
      /// <summary>Creates a new client for NotebookService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NotebookServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NotebookService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public NotebookServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NotebookServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected NotebookServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotebookRuntimeTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNotebookRuntimeTemplate, null, options, request);
      }
      /// <summary>
      /// Creates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateNotebookRuntimeTemplateAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotebookRuntimeTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateNotebookRuntimeTemplateAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNotebookRuntimeTemplate, null, options, request);
      }
      /// <summary>
      /// Gets a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate GetNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotebookRuntimeTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate GetNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotebookRuntimeTemplate, null, options, request);
      }
      /// <summary>
      /// Gets a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> GetNotebookRuntimeTemplateAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotebookRuntimeTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> GetNotebookRuntimeTemplateAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotebookRuntimeTemplate, null, options, request);
      }
      /// <summary>
      /// Lists NotebookRuntimeTemplates in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse ListNotebookRuntimeTemplates(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotebookRuntimeTemplates(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists NotebookRuntimeTemplates in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse ListNotebookRuntimeTemplates(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotebookRuntimeTemplates, null, options, request);
      }
      /// <summary>
      /// Lists NotebookRuntimeTemplates in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse> ListNotebookRuntimeTemplatesAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotebookRuntimeTemplatesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists NotebookRuntimeTemplates in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse> ListNotebookRuntimeTemplatesAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotebookRuntimeTemplates, null, options, request);
      }
      /// <summary>
      /// Deletes a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotebookRuntimeTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNotebookRuntimeTemplate, null, options, request);
      }
      /// <summary>
      /// Deletes a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNotebookRuntimeTemplateAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotebookRuntimeTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNotebookRuntimeTemplateAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNotebookRuntimeTemplate, null, options, request);
      }
      /// <summary>
      /// Updates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate UpdateNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotebookRuntimeTemplate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate UpdateNotebookRuntimeTemplate(global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNotebookRuntimeTemplate, null, options, request);
      }
      /// <summary>
      /// Updates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> UpdateNotebookRuntimeTemplateAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotebookRuntimeTemplateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a NotebookRuntimeTemplate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate> UpdateNotebookRuntimeTemplateAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNotebookRuntimeTemplate, null, options, request);
      }
      /// <summary>
      /// Assigns a NotebookRuntime to a user for a particular Notebook file. This
      /// method will either returns an existing assignment or generates a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AssignNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AssignNotebookRuntime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Assigns a NotebookRuntime to a user for a particular Notebook file. This
      /// method will either returns an existing assignment or generates a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation AssignNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AssignNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Assigns a NotebookRuntime to a user for a particular Notebook file. This
      /// method will either returns an existing assignment or generates a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AssignNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AssignNotebookRuntimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Assigns a NotebookRuntime to a user for a particular Notebook file. This
      /// method will either returns an existing assignment or generates a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> AssignNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AssignNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Gets a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime GetNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotebookRuntime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime GetNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Gets a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime> GetNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotebookRuntimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime> GetNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Lists NotebookRuntimes in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse ListNotebookRuntimes(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotebookRuntimes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists NotebookRuntimes in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse ListNotebookRuntimes(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotebookRuntimes, null, options, request);
      }
      /// <summary>
      /// Lists NotebookRuntimes in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse> ListNotebookRuntimesAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotebookRuntimesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists NotebookRuntimes in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse> ListNotebookRuntimesAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotebookRuntimes, null, options, request);
      }
      /// <summary>
      /// Deletes a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotebookRuntime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Deletes a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotebookRuntimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Upgrades a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpgradeNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradeNotebookRuntime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upgrades a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation UpgradeNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpgradeNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Upgrades a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpgradeNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpgradeNotebookRuntimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Upgrades a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> UpgradeNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpgradeNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Starts a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartNotebookRuntime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StartNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Starts a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartNotebookRuntimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StartNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Stops a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StopNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopNotebookRuntime(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation StopNotebookRuntime(global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Stops a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StopNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopNotebookRuntimeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops a NotebookRuntime.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> StopNotebookRuntimeAsync(global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopNotebookRuntime, null, options, request);
      }
      /// <summary>
      /// Creates a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotebookExecutionJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation CreateNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNotebookExecutionJob, null, options, request);
      }
      /// <summary>
      /// Creates a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateNotebookExecutionJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotebookExecutionJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> CreateNotebookExecutionJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNotebookExecutionJob, null, options, request);
      }
      /// <summary>
      /// Gets a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob GetNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotebookExecutionJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob GetNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotebookExecutionJob, null, options, request);
      }
      /// <summary>
      /// Gets a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob> GetNotebookExecutionJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotebookExecutionJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob> GetNotebookExecutionJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotebookExecutionJob, null, options, request);
      }
      /// <summary>
      /// Lists NotebookExecutionJobs in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse ListNotebookExecutionJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotebookExecutionJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists NotebookExecutionJobs in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse ListNotebookExecutionJobs(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotebookExecutionJobs, null, options, request);
      }
      /// <summary>
      /// Lists NotebookExecutionJobs in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse> ListNotebookExecutionJobsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotebookExecutionJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists NotebookExecutionJobs in a Location.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse> ListNotebookExecutionJobsAsync(global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotebookExecutionJobs, null, options, request);
      }
      /// <summary>
      /// Deletes a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotebookExecutionJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation DeleteNotebookExecutionJob(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNotebookExecutionJob, null, options, request);
      }
      /// <summary>
      /// Deletes a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNotebookExecutionJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotebookExecutionJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a NotebookExecutionJob.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> DeleteNotebookExecutionJobAsync(global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNotebookExecutionJob, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override NotebookServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NotebookServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(NotebookServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateNotebookRuntimeTemplate, serviceImpl.CreateNotebookRuntimeTemplate)
          .AddMethod(__Method_GetNotebookRuntimeTemplate, serviceImpl.GetNotebookRuntimeTemplate)
          .AddMethod(__Method_ListNotebookRuntimeTemplates, serviceImpl.ListNotebookRuntimeTemplates)
          .AddMethod(__Method_DeleteNotebookRuntimeTemplate, serviceImpl.DeleteNotebookRuntimeTemplate)
          .AddMethod(__Method_UpdateNotebookRuntimeTemplate, serviceImpl.UpdateNotebookRuntimeTemplate)
          .AddMethod(__Method_AssignNotebookRuntime, serviceImpl.AssignNotebookRuntime)
          .AddMethod(__Method_GetNotebookRuntime, serviceImpl.GetNotebookRuntime)
          .AddMethod(__Method_ListNotebookRuntimes, serviceImpl.ListNotebookRuntimes)
          .AddMethod(__Method_DeleteNotebookRuntime, serviceImpl.DeleteNotebookRuntime)
          .AddMethod(__Method_UpgradeNotebookRuntime, serviceImpl.UpgradeNotebookRuntime)
          .AddMethod(__Method_StartNotebookRuntime, serviceImpl.StartNotebookRuntime)
          .AddMethod(__Method_StopNotebookRuntime, serviceImpl.StopNotebookRuntime)
          .AddMethod(__Method_CreateNotebookExecutionJob, serviceImpl.CreateNotebookExecutionJob)
          .AddMethod(__Method_GetNotebookExecutionJob, serviceImpl.GetNotebookExecutionJob)
          .AddMethod(__Method_ListNotebookExecutionJobs, serviceImpl.ListNotebookExecutionJobs)
          .AddMethod(__Method_DeleteNotebookExecutionJob, serviceImpl.DeleteNotebookExecutionJob).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, NotebookServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateNotebookRuntimeTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookRuntimeTemplateRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateNotebookRuntimeTemplate));
      serviceBinder.AddMethod(__Method_GetNotebookRuntimeTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeTemplateRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate>(serviceImpl.GetNotebookRuntimeTemplate));
      serviceBinder.AddMethod(__Method_ListNotebookRuntimeTemplates, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimeTemplatesResponse>(serviceImpl.ListNotebookRuntimeTemplates));
      serviceBinder.AddMethod(__Method_DeleteNotebookRuntimeTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeTemplateRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteNotebookRuntimeTemplate));
      serviceBinder.AddMethod(__Method_UpdateNotebookRuntimeTemplate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.UpdateNotebookRuntimeTemplateRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntimeTemplate>(serviceImpl.UpdateNotebookRuntimeTemplate));
      serviceBinder.AddMethod(__Method_AssignNotebookRuntime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.AssignNotebookRuntimeRequest, global::Google.LongRunning.Operation>(serviceImpl.AssignNotebookRuntime));
      serviceBinder.AddMethod(__Method_GetNotebookRuntime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookRuntimeRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookRuntime>(serviceImpl.GetNotebookRuntime));
      serviceBinder.AddMethod(__Method_ListNotebookRuntimes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookRuntimesResponse>(serviceImpl.ListNotebookRuntimes));
      serviceBinder.AddMethod(__Method_DeleteNotebookRuntime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookRuntimeRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteNotebookRuntime));
      serviceBinder.AddMethod(__Method_UpgradeNotebookRuntime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.UpgradeNotebookRuntimeRequest, global::Google.LongRunning.Operation>(serviceImpl.UpgradeNotebookRuntime));
      serviceBinder.AddMethod(__Method_StartNotebookRuntime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.StartNotebookRuntimeRequest, global::Google.LongRunning.Operation>(serviceImpl.StartNotebookRuntime));
      serviceBinder.AddMethod(__Method_StopNotebookRuntime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.StopNotebookRuntimeRequest, global::Google.LongRunning.Operation>(serviceImpl.StopNotebookRuntime));
      serviceBinder.AddMethod(__Method_CreateNotebookExecutionJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.CreateNotebookExecutionJobRequest, global::Google.LongRunning.Operation>(serviceImpl.CreateNotebookExecutionJob));
      serviceBinder.AddMethod(__Method_GetNotebookExecutionJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.GetNotebookExecutionJobRequest, global::Google.Cloud.AIPlatform.V1Beta1.NotebookExecutionJob>(serviceImpl.GetNotebookExecutionJob));
      serviceBinder.AddMethod(__Method_ListNotebookExecutionJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsRequest, global::Google.Cloud.AIPlatform.V1Beta1.ListNotebookExecutionJobsResponse>(serviceImpl.ListNotebookExecutionJobs));
      serviceBinder.AddMethod(__Method_DeleteNotebookExecutionJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.AIPlatform.V1Beta1.DeleteNotebookExecutionJobRequest, global::Google.LongRunning.Operation>(serviceImpl.DeleteNotebookExecutionJob));
    }

  }
}
#endregion
