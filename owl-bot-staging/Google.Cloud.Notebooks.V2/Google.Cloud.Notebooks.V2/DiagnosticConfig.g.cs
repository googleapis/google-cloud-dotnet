// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/notebooks/v2/diagnostic_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Notebooks.V2 {

  /// <summary>Holder for reflection information generated from google/cloud/notebooks/v2/diagnostic_config.proto</summary>
  public static partial class DiagnosticConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/notebooks/v2/diagnostic_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DiagnosticConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFnb29nbGUvY2xvdWQvbm90ZWJvb2tzL3YyL2RpYWdub3N0aWNfY29uZmln",
            "LnByb3RvEhlnb29nbGUuY2xvdWQubm90ZWJvb2tzLnYyGh9nb29nbGUvYXBp",
            "L2ZpZWxkX2JlaGF2aW9yLnByb3RvIrsBChBEaWFnbm9zdGljQ29uZmlnEhcK",
            "Cmdjc19idWNrZXQYASABKAlCA+BBAhIaCg1yZWxhdGl2ZV9wYXRoGAIgASgJ",
            "QgPgQQESHwoSZW5hYmxlX3JlcGFpcl9mbGFnGAMgASgIQgPgQQESJwoaZW5h",
            "YmxlX3BhY2tldF9jYXB0dXJlX2ZsYWcYBCABKAhCA+BBARIoChtlbmFibGVf",
            "Y29weV9ob21lX2ZpbGVzX2ZsYWcYBSABKAhCA+BBAULMAQodY29tLmdvb2ds",
            "ZS5jbG91ZC5ub3RlYm9va3MudjJCFURpYWdub3N0aWNDb25maWdQcm90b1AB",
            "WjtjbG91ZC5nb29nbGUuY29tL2dvL25vdGVib29rcy9hcGl2Mi9ub3RlYm9v",
            "a3NwYjtub3RlYm9va3NwYqoCGUdvb2dsZS5DbG91ZC5Ob3RlYm9va3MuVjLK",
            "AhlHb29nbGVcQ2xvdWRcTm90ZWJvb2tzXFYy6gIcR29vZ2xlOjpDbG91ZDo6",
            "Tm90ZWJvb2tzOjpWMmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Notebooks.V2.DiagnosticConfig), global::Google.Cloud.Notebooks.V2.DiagnosticConfig.Parser, new[]{ "GcsBucket", "RelativePath", "EnableRepairFlag", "EnablePacketCaptureFlag", "EnableCopyHomeFilesFlag" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Defines flags that are used to run the diagnostic tool
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DiagnosticConfig : pb::IMessage<DiagnosticConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiagnosticConfig> _parser = new pb::MessageParser<DiagnosticConfig>(() => new DiagnosticConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiagnosticConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Notebooks.V2.DiagnosticConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiagnosticConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiagnosticConfig(DiagnosticConfig other) : this() {
      gcsBucket_ = other.gcsBucket_;
      relativePath_ = other.relativePath_;
      enableRepairFlag_ = other.enableRepairFlag_;
      enablePacketCaptureFlag_ = other.enablePacketCaptureFlag_;
      enableCopyHomeFilesFlag_ = other.enableCopyHomeFilesFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiagnosticConfig Clone() {
      return new DiagnosticConfig(this);
    }

    /// <summary>Field number for the "gcs_bucket" field.</summary>
    public const int GcsBucketFieldNumber = 1;
    private string gcsBucket_ = "";
    /// <summary>
    /// Required. User Cloud Storage bucket location (REQUIRED).
    /// Must be formatted with path prefix (`gs://$GCS_BUCKET`).
    ///
    /// Permissions:
    /// User Managed Notebooks:
    /// - storage.buckets.writer: Must be given to the project's service account
    ///   attached to VM.
    /// Google Managed Notebooks:
    /// - storage.buckets.writer: Must be given to the project's service account or
    ///   user credentials attached to VM depending on authentication mode.
    ///
    /// Cloud Storage bucket Log file will be written to
    /// `gs://$GCS_BUCKET/$RELATIVE_PATH/$VM_DATE_$TIME.tar.gz`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GcsBucket {
      get { return gcsBucket_; }
      set {
        gcsBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "relative_path" field.</summary>
    public const int RelativePathFieldNumber = 2;
    private string relativePath_ = "";
    /// <summary>
    /// Optional. Defines the relative storage path in the Cloud Storage bucket
    /// where the diagnostic logs will be written: Default path will be the root
    /// directory of the Cloud Storage bucket
    /// (`gs://$GCS_BUCKET/$DATE_$TIME.tar.gz`) Example of full path where Log file
    /// will be written: `gs://$GCS_BUCKET/$RELATIVE_PATH/`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelativePath {
      get { return relativePath_; }
      set {
        relativePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable_repair_flag" field.</summary>
    public const int EnableRepairFlagFieldNumber = 3;
    private bool enableRepairFlag_;
    /// <summary>
    /// Optional. Enables flag to repair service for instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableRepairFlag {
      get { return enableRepairFlag_; }
      set {
        enableRepairFlag_ = value;
      }
    }

    /// <summary>Field number for the "enable_packet_capture_flag" field.</summary>
    public const int EnablePacketCaptureFlagFieldNumber = 4;
    private bool enablePacketCaptureFlag_;
    /// <summary>
    /// Optional. Enables flag to capture packets from the instance for 30 seconds
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnablePacketCaptureFlag {
      get { return enablePacketCaptureFlag_; }
      set {
        enablePacketCaptureFlag_ = value;
      }
    }

    /// <summary>Field number for the "enable_copy_home_files_flag" field.</summary>
    public const int EnableCopyHomeFilesFlagFieldNumber = 5;
    private bool enableCopyHomeFilesFlag_;
    /// <summary>
    /// Optional. Enables flag to copy all `/home/jupyter` folder contents
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableCopyHomeFilesFlag {
      get { return enableCopyHomeFilesFlag_; }
      set {
        enableCopyHomeFilesFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiagnosticConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiagnosticConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GcsBucket != other.GcsBucket) return false;
      if (RelativePath != other.RelativePath) return false;
      if (EnableRepairFlag != other.EnableRepairFlag) return false;
      if (EnablePacketCaptureFlag != other.EnablePacketCaptureFlag) return false;
      if (EnableCopyHomeFilesFlag != other.EnableCopyHomeFilesFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GcsBucket.Length != 0) hash ^= GcsBucket.GetHashCode();
      if (RelativePath.Length != 0) hash ^= RelativePath.GetHashCode();
      if (EnableRepairFlag != false) hash ^= EnableRepairFlag.GetHashCode();
      if (EnablePacketCaptureFlag != false) hash ^= EnablePacketCaptureFlag.GetHashCode();
      if (EnableCopyHomeFilesFlag != false) hash ^= EnableCopyHomeFilesFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GcsBucket.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GcsBucket);
      }
      if (RelativePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RelativePath);
      }
      if (EnableRepairFlag != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableRepairFlag);
      }
      if (EnablePacketCaptureFlag != false) {
        output.WriteRawTag(32);
        output.WriteBool(EnablePacketCaptureFlag);
      }
      if (EnableCopyHomeFilesFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(EnableCopyHomeFilesFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GcsBucket.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GcsBucket);
      }
      if (RelativePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RelativePath);
      }
      if (EnableRepairFlag != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableRepairFlag);
      }
      if (EnablePacketCaptureFlag != false) {
        output.WriteRawTag(32);
        output.WriteBool(EnablePacketCaptureFlag);
      }
      if (EnableCopyHomeFilesFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(EnableCopyHomeFilesFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GcsBucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcsBucket);
      }
      if (RelativePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelativePath);
      }
      if (EnableRepairFlag != false) {
        size += 1 + 1;
      }
      if (EnablePacketCaptureFlag != false) {
        size += 1 + 1;
      }
      if (EnableCopyHomeFilesFlag != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiagnosticConfig other) {
      if (other == null) {
        return;
      }
      if (other.GcsBucket.Length != 0) {
        GcsBucket = other.GcsBucket;
      }
      if (other.RelativePath.Length != 0) {
        RelativePath = other.RelativePath;
      }
      if (other.EnableRepairFlag != false) {
        EnableRepairFlag = other.EnableRepairFlag;
      }
      if (other.EnablePacketCaptureFlag != false) {
        EnablePacketCaptureFlag = other.EnablePacketCaptureFlag;
      }
      if (other.EnableCopyHomeFilesFlag != false) {
        EnableCopyHomeFilesFlag = other.EnableCopyHomeFilesFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GcsBucket = input.ReadString();
            break;
          }
          case 18: {
            RelativePath = input.ReadString();
            break;
          }
          case 24: {
            EnableRepairFlag = input.ReadBool();
            break;
          }
          case 32: {
            EnablePacketCaptureFlag = input.ReadBool();
            break;
          }
          case 40: {
            EnableCopyHomeFilesFlag = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GcsBucket = input.ReadString();
            break;
          }
          case 18: {
            RelativePath = input.ReadString();
            break;
          }
          case 24: {
            EnableRepairFlag = input.ReadBool();
            break;
          }
          case 32: {
            EnablePacketCaptureFlag = input.ReadBool();
            break;
          }
          case 40: {
            EnableCopyHomeFilesFlag = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
