// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/securitycenter/v2/securitycenter_service.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.SecurityCenter.V2 {
  /// <summary>
  /// V2 APIs for Security Center service.
  /// </summary>
  public static partial class SecurityCenter
  {
    static readonly string __ServiceName = "google.cloud.securitycenter.v2.SecurityCenter";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest> __Marshaller_google_cloud_securitycenter_v2_BatchCreateResourceValueConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse> __Marshaller_google_cloud_securitycenter_v2_BatchCreateResourceValueConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest> __Marshaller_google_cloud_securitycenter_v2_BulkMuteFindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.LongRunning.Operation> __Marshaller_google_longrunning_Operation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.LongRunning.Operation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest> __Marshaller_google_cloud_securitycenter_v2_CreateBigQueryExportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> __Marshaller_google_cloud_securitycenter_v2_BigQueryExport = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.BigQueryExport.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest> __Marshaller_google_cloud_securitycenter_v2_CreateFindingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.Finding> __Marshaller_google_cloud_securitycenter_v2_Finding = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.Finding.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest> __Marshaller_google_cloud_securitycenter_v2_CreateMuteConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.MuteConfig> __Marshaller_google_cloud_securitycenter_v2_MuteConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.MuteConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest> __Marshaller_google_cloud_securitycenter_v2_CreateNotificationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> __Marshaller_google_cloud_securitycenter_v2_NotificationConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.NotificationConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest> __Marshaller_google_cloud_securitycenter_v2_CreateSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.Source> __Marshaller_google_cloud_securitycenter_v2_Source = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.Source.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest> __Marshaller_google_cloud_securitycenter_v2_DeleteBigQueryExportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest> __Marshaller_google_cloud_securitycenter_v2_DeleteMuteConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest> __Marshaller_google_cloud_securitycenter_v2_DeleteNotificationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest> __Marshaller_google_cloud_securitycenter_v2_DeleteResourceValueConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest> __Marshaller_google_cloud_securitycenter_v2_GetBigQueryExportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest> __Marshaller_google_cloud_securitycenter_v2_GetSimulationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.Simulation> __Marshaller_google_cloud_securitycenter_v2_Simulation = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.Simulation.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest> __Marshaller_google_cloud_securitycenter_v2_GetValuedResourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ValuedResource> __Marshaller_google_cloud_securitycenter_v2_ValuedResource = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ValuedResource.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest> __Marshaller_google_cloud_securitycenter_v2_GetMuteConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest> __Marshaller_google_cloud_securitycenter_v2_GetNotificationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest> __Marshaller_google_cloud_securitycenter_v2_GetResourceValueConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> __Marshaller_google_cloud_securitycenter_v2_ResourceValueConfig = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GetSourceRequest> __Marshaller_google_cloud_securitycenter_v2_GetSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GetSourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest> __Marshaller_google_cloud_securitycenter_v2_GroupFindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse> __Marshaller_google_cloud_securitycenter_v2_GroupFindingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest> __Marshaller_google_cloud_securitycenter_v2_ListAttackPathsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse> __Marshaller_google_cloud_securitycenter_v2_ListAttackPathsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest> __Marshaller_google_cloud_securitycenter_v2_ListBigQueryExportsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse> __Marshaller_google_cloud_securitycenter_v2_ListBigQueryExportsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest> __Marshaller_google_cloud_securitycenter_v2_ListFindingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse> __Marshaller_google_cloud_securitycenter_v2_ListFindingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest> __Marshaller_google_cloud_securitycenter_v2_ListMuteConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse> __Marshaller_google_cloud_securitycenter_v2_ListMuteConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest> __Marshaller_google_cloud_securitycenter_v2_ListNotificationConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse> __Marshaller_google_cloud_securitycenter_v2_ListNotificationConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest> __Marshaller_google_cloud_securitycenter_v2_ListResourceValueConfigsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse> __Marshaller_google_cloud_securitycenter_v2_ListResourceValueConfigsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest> __Marshaller_google_cloud_securitycenter_v2_ListSourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse> __Marshaller_google_cloud_securitycenter_v2_ListSourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest> __Marshaller_google_cloud_securitycenter_v2_ListValuedResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse> __Marshaller_google_cloud_securitycenter_v2_ListValuedResourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest> __Marshaller_google_cloud_securitycenter_v2_SetFindingStateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.SetMuteRequest> __Marshaller_google_cloud_securitycenter_v2_SetMuteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.SetMuteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest> __Marshaller_google_cloud_securitycenter_v2_UpdateBigQueryExportRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest> __Marshaller_google_cloud_securitycenter_v2_UpdateExternalSystemRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.ExternalSystem> __Marshaller_google_cloud_securitycenter_v2_ExternalSystem = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.ExternalSystem.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest> __Marshaller_google_cloud_securitycenter_v2_UpdateFindingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest> __Marshaller_google_cloud_securitycenter_v2_UpdateMuteConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest> __Marshaller_google_cloud_securitycenter_v2_UpdateNotificationConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest> __Marshaller_google_cloud_securitycenter_v2_UpdateResourceValueConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest> __Marshaller_google_cloud_securitycenter_v2_UpdateSecurityMarksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.SecurityMarks> __Marshaller_google_cloud_securitycenter_v2_SecurityMarks = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.SecurityMarks.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest> __Marshaller_google_cloud_securitycenter_v2_UpdateSourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest, global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse> __Method_BatchCreateResourceValueConfigs = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest, global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchCreateResourceValueConfigs",
        __Marshaller_google_cloud_securitycenter_v2_BatchCreateResourceValueConfigsRequest,
        __Marshaller_google_cloud_securitycenter_v2_BatchCreateResourceValueConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest, global::Google.LongRunning.Operation> __Method_BulkMuteFindings = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest, global::Google.LongRunning.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkMuteFindings",
        __Marshaller_google_cloud_securitycenter_v2_BulkMuteFindingsRequest,
        __Marshaller_google_longrunning_Operation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport> __Method_CreateBigQueryExport = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBigQueryExport",
        __Marshaller_google_cloud_securitycenter_v2_CreateBigQueryExportRequest,
        __Marshaller_google_cloud_securitycenter_v2_BigQueryExport);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest, global::Google.Cloud.SecurityCenter.V2.Finding> __Method_CreateFinding = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest, global::Google.Cloud.SecurityCenter.V2.Finding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateFinding",
        __Marshaller_google_cloud_securitycenter_v2_CreateFindingRequest,
        __Marshaller_google_cloud_securitycenter_v2_Finding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig> __Method_CreateMuteConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateMuteConfig",
        __Marshaller_google_cloud_securitycenter_v2_CreateMuteConfigRequest,
        __Marshaller_google_cloud_securitycenter_v2_MuteConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig> __Method_CreateNotificationConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateNotificationConfig",
        __Marshaller_google_cloud_securitycenter_v2_CreateNotificationConfigRequest,
        __Marshaller_google_cloud_securitycenter_v2_NotificationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source> __Method_CreateSource = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateSource",
        __Marshaller_google_cloud_securitycenter_v2_CreateSourceRequest,
        __Marshaller_google_cloud_securitycenter_v2_Source);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteBigQueryExport = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBigQueryExport",
        __Marshaller_google_cloud_securitycenter_v2_DeleteBigQueryExportRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteMuteConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteMuteConfig",
        __Marshaller_google_cloud_securitycenter_v2_DeleteMuteConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteNotificationConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteNotificationConfig",
        __Marshaller_google_cloud_securitycenter_v2_DeleteNotificationConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteResourceValueConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteResourceValueConfig",
        __Marshaller_google_cloud_securitycenter_v2_DeleteResourceValueConfigRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport> __Method_GetBigQueryExport = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBigQueryExport",
        __Marshaller_google_cloud_securitycenter_v2_GetBigQueryExportRequest,
        __Marshaller_google_cloud_securitycenter_v2_BigQueryExport);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest, global::Google.Cloud.SecurityCenter.V2.Simulation> __Method_GetSimulation = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest, global::Google.Cloud.SecurityCenter.V2.Simulation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSimulation",
        __Marshaller_google_cloud_securitycenter_v2_GetSimulationRequest,
        __Marshaller_google_cloud_securitycenter_v2_Simulation);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest, global::Google.Cloud.SecurityCenter.V2.ValuedResource> __Method_GetValuedResource = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest, global::Google.Cloud.SecurityCenter.V2.ValuedResource>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetValuedResource",
        __Marshaller_google_cloud_securitycenter_v2_GetValuedResourceRequest,
        __Marshaller_google_cloud_securitycenter_v2_ValuedResource);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig> __Method_GetMuteConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMuteConfig",
        __Marshaller_google_cloud_securitycenter_v2_GetMuteConfigRequest,
        __Marshaller_google_cloud_securitycenter_v2_MuteConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig> __Method_GetNotificationConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotificationConfig",
        __Marshaller_google_cloud_securitycenter_v2_GetNotificationConfigRequest,
        __Marshaller_google_cloud_securitycenter_v2_NotificationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest, global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> __Method_GetResourceValueConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest, global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetResourceValueConfig",
        __Marshaller_google_cloud_securitycenter_v2_GetResourceValueConfigRequest,
        __Marshaller_google_cloud_securitycenter_v2_ResourceValueConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source> __Method_GetSource = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.GetSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSource",
        __Marshaller_google_cloud_securitycenter_v2_GetSourceRequest,
        __Marshaller_google_cloud_securitycenter_v2_Source);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest, global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse> __Method_GroupFindings = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest, global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GroupFindings",
        __Marshaller_google_cloud_securitycenter_v2_GroupFindingsRequest,
        __Marshaller_google_cloud_securitycenter_v2_GroupFindingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest, global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse> __Method_ListAttackPaths = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest, global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAttackPaths",
        __Marshaller_google_cloud_securitycenter_v2_ListAttackPathsRequest,
        __Marshaller_google_cloud_securitycenter_v2_ListAttackPathsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest, global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse> __Method_ListBigQueryExports = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest, global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBigQueryExports",
        __Marshaller_google_cloud_securitycenter_v2_ListBigQueryExportsRequest,
        __Marshaller_google_cloud_securitycenter_v2_ListBigQueryExportsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest, global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse> __Method_ListFindings = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest, global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFindings",
        __Marshaller_google_cloud_securitycenter_v2_ListFindingsRequest,
        __Marshaller_google_cloud_securitycenter_v2_ListFindingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse> __Method_ListMuteConfigs = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMuteConfigs",
        __Marshaller_google_cloud_securitycenter_v2_ListMuteConfigsRequest,
        __Marshaller_google_cloud_securitycenter_v2_ListMuteConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse> __Method_ListNotificationConfigs = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListNotificationConfigs",
        __Marshaller_google_cloud_securitycenter_v2_ListNotificationConfigsRequest,
        __Marshaller_google_cloud_securitycenter_v2_ListNotificationConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse> __Method_ListResourceValueConfigs = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListResourceValueConfigs",
        __Marshaller_google_cloud_securitycenter_v2_ListResourceValueConfigsRequest,
        __Marshaller_google_cloud_securitycenter_v2_ListResourceValueConfigsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest, global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse> __Method_ListSources = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest, global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSources",
        __Marshaller_google_cloud_securitycenter_v2_ListSourcesRequest,
        __Marshaller_google_cloud_securitycenter_v2_ListSourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest, global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse> __Method_ListValuedResources = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest, global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListValuedResources",
        __Marshaller_google_cloud_securitycenter_v2_ListValuedResourcesRequest,
        __Marshaller_google_cloud_securitycenter_v2_ListValuedResourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest, global::Google.Cloud.SecurityCenter.V2.Finding> __Method_SetFindingState = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest, global::Google.Cloud.SecurityCenter.V2.Finding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetFindingState",
        __Marshaller_google_cloud_securitycenter_v2_SetFindingStateRequest,
        __Marshaller_google_cloud_securitycenter_v2_Finding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.SetMuteRequest, global::Google.Cloud.SecurityCenter.V2.Finding> __Method_SetMute = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.SetMuteRequest, global::Google.Cloud.SecurityCenter.V2.Finding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetMute",
        __Marshaller_google_cloud_securitycenter_v2_SetMuteRequest,
        __Marshaller_google_cloud_securitycenter_v2_Finding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport> __Method_UpdateBigQueryExport = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBigQueryExport",
        __Marshaller_google_cloud_securitycenter_v2_UpdateBigQueryExportRequest,
        __Marshaller_google_cloud_securitycenter_v2_BigQueryExport);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest, global::Google.Cloud.SecurityCenter.V2.ExternalSystem> __Method_UpdateExternalSystem = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest, global::Google.Cloud.SecurityCenter.V2.ExternalSystem>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateExternalSystem",
        __Marshaller_google_cloud_securitycenter_v2_UpdateExternalSystemRequest,
        __Marshaller_google_cloud_securitycenter_v2_ExternalSystem);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest, global::Google.Cloud.SecurityCenter.V2.Finding> __Method_UpdateFinding = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest, global::Google.Cloud.SecurityCenter.V2.Finding>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFinding",
        __Marshaller_google_cloud_securitycenter_v2_UpdateFindingRequest,
        __Marshaller_google_cloud_securitycenter_v2_Finding);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig> __Method_UpdateMuteConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMuteConfig",
        __Marshaller_google_cloud_securitycenter_v2_UpdateMuteConfigRequest,
        __Marshaller_google_cloud_securitycenter_v2_MuteConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig> __Method_UpdateNotificationConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNotificationConfig",
        __Marshaller_google_cloud_securitycenter_v2_UpdateNotificationConfigRequest,
        __Marshaller_google_cloud_securitycenter_v2_NotificationConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest, global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> __Method_UpdateResourceValueConfig = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest, global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateResourceValueConfig",
        __Marshaller_google_cloud_securitycenter_v2_UpdateResourceValueConfigRequest,
        __Marshaller_google_cloud_securitycenter_v2_ResourceValueConfig);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest, global::Google.Cloud.SecurityCenter.V2.SecurityMarks> __Method_UpdateSecurityMarks = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest, global::Google.Cloud.SecurityCenter.V2.SecurityMarks>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSecurityMarks",
        __Marshaller_google_cloud_securitycenter_v2_UpdateSecurityMarksRequest,
        __Marshaller_google_cloud_securitycenter_v2_SecurityMarks);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source> __Method_UpdateSource = new grpc::Method<global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSource",
        __Marshaller_google_cloud_securitycenter_v2_UpdateSourceRequest,
        __Marshaller_google_cloud_securitycenter_v2_Source);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.SecurityCenter.V2.SecuritycenterServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SecurityCenter</summary>
    [grpc::BindServiceMethod(typeof(SecurityCenter), "BindService")]
    public abstract partial class SecurityCenterBase
    {
      /// <summary>
      /// Creates a ResourceValueConfig for an organization. Maps user's tags to
      /// difference resource values for use by the attack path simulation.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse> BatchCreateResourceValueConfigs(global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Kicks off an LRO to bulk mute findings for a parent based on a filter. If
      /// no location is specified, findings are muted in global. The parent
      /// can be either an organization, folder, or project. The findings matched by
      /// the filter will be muted after the LRO is done.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.LongRunning.Operation> BulkMuteFindings(global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a BigQuery export.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> CreateBigQueryExport(global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a finding in a location. The corresponding source must exist for
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.Finding> CreateFinding(global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a mute config.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.MuteConfig> CreateMuteConfig(global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> CreateNotificationConfig(global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.Source> CreateSource(global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an existing BigQuery export.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBigQueryExport(global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an existing mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMuteConfig(global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationConfig(global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a BigQuery export.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> GetBigQueryExport(global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the simulation by name or the latest simulation for the given
      /// organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.Simulation> GetSimulation(global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the valued resource by name
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ValuedResource> GetValuedResource(global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.MuteConfig> GetMuteConfig(global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> GetNotificationConfig(global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> GetResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.Source> GetSource(global::Google.Cloud.SecurityCenter.V2.GetSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Filters an organization or source's findings and groups them by their
      /// specified properties in a location. If no location is specified, findings
      /// are assumed to be in global
      ///
      /// To group across all sources provide a `-` as the source id.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/folders/{folder_id}/sources/-/findings`
      /// + `/v2/folders/{folder_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/projects/{project_id}/sources/-/findings`
      /// + `/v2/projects/{project_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse> GroupFindings(global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the attack paths for a set of simulation results or valued resources
      /// and filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse> ListAttackPaths(global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists BigQuery exports. Note that when requesting BigQuery exports at a
      /// given level all exports under that level are also returned e.g. if
      /// requesting BigQuery exports under a folder, then all BigQuery exports
      /// immediately under the folder plus the ones created under the projects
      /// within the folder are returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse> ListBigQueryExports(global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources for a given location provide a `-` as the source
      /// id. If no location is specified, finding are assumed to be in global.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse> ListFindings(global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists mute configs. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse> ListMuteConfigs(global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse> ListNotificationConfigs(global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all ResourceValueConfigs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse> ListResourceValueConfigs(global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse> ListSources(global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the valued resources for a set of simulation results and filter.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse> ListValuedResources(global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the state of a finding. If no location is specified, finding is
      /// assumed to be in global
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.Finding> SetFindingState(global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the mute state of a finding. If no location is specified, finding
      /// is assumed to be in global
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.Finding> SetMute(global::Google.Cloud.SecurityCenter.V2.SetMuteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a BigQuery export.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> UpdateBigQueryExport(global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates external system. This is for a given finding. If no location is
      /// specified, finding is assumed to be in global
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ExternalSystem> UpdateExternalSystem(global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates or updates a finding. If no location is specified, finding is
      /// assumed to be in global. The corresponding source must exist for a finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.Finding> UpdateFinding(global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.MuteConfig> UpdateMuteConfig(global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> UpdateNotificationConfig(global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an existing ResourceValueConfigs with new rules.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> UpdateResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates security marks. For Finding Security marks, if no location is
      /// specified, finding is assumed to be in global. Assets Security Marks can
      /// only be accessed through global endpoint.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.SecurityMarks> UpdateSecurityMarks(global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.SecurityCenter.V2.Source> UpdateSource(global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SecurityCenter</summary>
    public partial class SecurityCenterClient : grpc::ClientBase<SecurityCenterClient>
    {
      /// <summary>Creates a new client for SecurityCenter</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SecurityCenterClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SecurityCenter that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SecurityCenterClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SecurityCenterClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SecurityCenterClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a ResourceValueConfig for an organization. Maps user's tags to
      /// difference resource values for use by the attack path simulation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse BatchCreateResourceValueConfigs(global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateResourceValueConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ResourceValueConfig for an organization. Maps user's tags to
      /// difference resource values for use by the attack path simulation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse BatchCreateResourceValueConfigs(global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchCreateResourceValueConfigs, null, options, request);
      }
      /// <summary>
      /// Creates a ResourceValueConfig for an organization. Maps user's tags to
      /// difference resource values for use by the attack path simulation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse> BatchCreateResourceValueConfigsAsync(global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchCreateResourceValueConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a ResourceValueConfig for an organization. Maps user's tags to
      /// difference resource values for use by the attack path simulation.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse> BatchCreateResourceValueConfigsAsync(global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchCreateResourceValueConfigs, null, options, request);
      }
      /// <summary>
      /// Kicks off an LRO to bulk mute findings for a parent based on a filter. If
      /// no location is specified, findings are muted in global. The parent
      /// can be either an organization, folder, or project. The findings matched by
      /// the filter will be muted after the LRO is done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BulkMuteFindings(global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkMuteFindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Kicks off an LRO to bulk mute findings for a parent based on a filter. If
      /// no location is specified, findings are muted in global. The parent
      /// can be either an organization, folder, or project. The findings matched by
      /// the filter will be muted after the LRO is done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.LongRunning.Operation BulkMuteFindings(global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkMuteFindings, null, options, request);
      }
      /// <summary>
      /// Kicks off an LRO to bulk mute findings for a parent based on a filter. If
      /// no location is specified, findings are muted in global. The parent
      /// can be either an organization, folder, or project. The findings matched by
      /// the filter will be muted after the LRO is done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BulkMuteFindingsAsync(global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkMuteFindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Kicks off an LRO to bulk mute findings for a parent based on a filter. If
      /// no location is specified, findings are muted in global. The parent
      /// can be either an organization, folder, or project. The findings matched by
      /// the filter will be muted after the LRO is done.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.LongRunning.Operation> BulkMuteFindingsAsync(global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkMuteFindings, null, options, request);
      }
      /// <summary>
      /// Creates a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.BigQueryExport CreateBigQueryExport(global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBigQueryExport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.BigQueryExport CreateBigQueryExport(global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBigQueryExport, null, options, request);
      }
      /// <summary>
      /// Creates a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> CreateBigQueryExportAsync(global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBigQueryExportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> CreateBigQueryExportAsync(global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBigQueryExport, null, options, request);
      }
      /// <summary>
      /// Creates a finding in a location. The corresponding source must exist for
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Finding CreateFinding(global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFinding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a finding in a location. The corresponding source must exist for
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Finding CreateFinding(global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateFinding, null, options, request);
      }
      /// <summary>
      /// Creates a finding in a location. The corresponding source must exist for
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Finding> CreateFindingAsync(global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateFindingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a finding in a location. The corresponding source must exist for
      /// finding creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Finding> CreateFindingAsync(global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateFinding, null, options, request);
      }
      /// <summary>
      /// Creates a mute config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.MuteConfig CreateMuteConfig(global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMuteConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a mute config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.MuteConfig CreateMuteConfig(global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateMuteConfig, null, options, request);
      }
      /// <summary>
      /// Creates a mute config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.MuteConfig> CreateMuteConfigAsync(global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateMuteConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a mute config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.MuteConfig> CreateMuteConfigAsync(global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateMuteConfig, null, options, request);
      }
      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.NotificationConfig CreateNotificationConfig(global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotificationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.NotificationConfig CreateNotificationConfig(global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> CreateNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateNotificationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> CreateNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Source CreateSource(global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Source CreateSource(global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateSource, null, options, request);
      }
      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Source> CreateSourceAsync(global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Source> CreateSourceAsync(global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateSource, null, options, request);
      }
      /// <summary>
      /// Deletes an existing BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBigQueryExport(global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBigQueryExport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an existing BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBigQueryExport(global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBigQueryExport, null, options, request);
      }
      /// <summary>
      /// Deletes an existing BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBigQueryExportAsync(global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBigQueryExportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an existing BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBigQueryExportAsync(global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBigQueryExport, null, options, request);
      }
      /// <summary>
      /// Deletes an existing mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteMuteConfig(global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMuteConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an existing mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteMuteConfig(global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteMuteConfig, null, options, request);
      }
      /// <summary>
      /// Deletes an existing mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMuteConfigAsync(global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteMuteConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an existing mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteMuteConfigAsync(global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteMuteConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteNotificationConfig(global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotificationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteNotificationConfig(global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteNotificationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteResourceValueConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteResourceValueConfig, null, options, request);
      }
      /// <summary>
      /// Deletes a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteResourceValueConfigAsync(global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteResourceValueConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteResourceValueConfigAsync(global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteResourceValueConfig, null, options, request);
      }
      /// <summary>
      /// Gets a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.BigQueryExport GetBigQueryExport(global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBigQueryExport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.BigQueryExport GetBigQueryExport(global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBigQueryExport, null, options, request);
      }
      /// <summary>
      /// Gets a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> GetBigQueryExportAsync(global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBigQueryExportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> GetBigQueryExportAsync(global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBigQueryExport, null, options, request);
      }
      /// <summary>
      /// Get the simulation by name or the latest simulation for the given
      /// organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Simulation GetSimulation(global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSimulation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the simulation by name or the latest simulation for the given
      /// organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Simulation GetSimulation(global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSimulation, null, options, request);
      }
      /// <summary>
      /// Get the simulation by name or the latest simulation for the given
      /// organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Simulation> GetSimulationAsync(global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSimulationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the simulation by name or the latest simulation for the given
      /// organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Simulation> GetSimulationAsync(global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSimulation, null, options, request);
      }
      /// <summary>
      /// Get the valued resource by name
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ValuedResource GetValuedResource(global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetValuedResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the valued resource by name
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ValuedResource GetValuedResource(global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetValuedResource, null, options, request);
      }
      /// <summary>
      /// Get the valued resource by name
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ValuedResource> GetValuedResourceAsync(global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetValuedResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the valued resource by name
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ValuedResource> GetValuedResourceAsync(global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetValuedResource, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.MuteConfig GetMuteConfig(global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMuteConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.MuteConfig GetMuteConfig(global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMuteConfig, null, options, request);
      }
      /// <summary>
      /// Gets a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.MuteConfig> GetMuteConfigAsync(global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMuteConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.MuteConfig> GetMuteConfigAsync(global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMuteConfig, null, options, request);
      }
      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.NotificationConfig GetNotificationConfig(global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.NotificationConfig GetNotificationConfig(global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> GetNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a notification config.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> GetNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Gets a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig GetResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceValueConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig GetResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetResourceValueConfig, null, options, request);
      }
      /// <summary>
      /// Gets a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> GetResourceValueConfigAsync(global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetResourceValueConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a ResourceValueConfig.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> GetResourceValueConfigAsync(global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetResourceValueConfig, null, options, request);
      }
      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Source GetSource(global::Google.Cloud.SecurityCenter.V2.GetSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Source GetSource(global::Google.Cloud.SecurityCenter.V2.GetSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSource, null, options, request);
      }
      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Source> GetSourceAsync(global::Google.Cloud.SecurityCenter.V2.GetSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Source> GetSourceAsync(global::Google.Cloud.SecurityCenter.V2.GetSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSource, null, options, request);
      }
      /// <summary>
      /// Filters an organization or source's findings and groups them by their
      /// specified properties in a location. If no location is specified, findings
      /// are assumed to be in global
      ///
      /// To group across all sources provide a `-` as the source id.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/folders/{folder_id}/sources/-/findings`
      /// + `/v2/folders/{folder_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/projects/{project_id}/sources/-/findings`
      /// + `/v2/projects/{project_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse GroupFindings(global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GroupFindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Filters an organization or source's findings and groups them by their
      /// specified properties in a location. If no location is specified, findings
      /// are assumed to be in global
      ///
      /// To group across all sources provide a `-` as the source id.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/folders/{folder_id}/sources/-/findings`
      /// + `/v2/folders/{folder_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/projects/{project_id}/sources/-/findings`
      /// + `/v2/projects/{project_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse GroupFindings(global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GroupFindings, null, options, request);
      }
      /// <summary>
      /// Filters an organization or source's findings and groups them by their
      /// specified properties in a location. If no location is specified, findings
      /// are assumed to be in global
      ///
      /// To group across all sources provide a `-` as the source id.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/folders/{folder_id}/sources/-/findings`
      /// + `/v2/folders/{folder_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/projects/{project_id}/sources/-/findings`
      /// + `/v2/projects/{project_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse> GroupFindingsAsync(global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GroupFindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Filters an organization or source's findings and groups them by their
      /// specified properties in a location. If no location is specified, findings
      /// are assumed to be in global
      ///
      /// To group across all sources provide a `-` as the source id.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/folders/{folder_id}/sources/-/findings`
      /// + `/v2/folders/{folder_id}/sources/-/locations/{location_id}/findings`
      /// + `/v2/projects/{project_id}/sources/-/findings`
      /// + `/v2/projects/{project_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse> GroupFindingsAsync(global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GroupFindings, null, options, request);
      }
      /// <summary>
      /// Lists the attack paths for a set of simulation results or valued resources
      /// and filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse ListAttackPaths(global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAttackPaths(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the attack paths for a set of simulation results or valued resources
      /// and filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse ListAttackPaths(global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAttackPaths, null, options, request);
      }
      /// <summary>
      /// Lists the attack paths for a set of simulation results or valued resources
      /// and filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse> ListAttackPathsAsync(global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAttackPathsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the attack paths for a set of simulation results or valued resources
      /// and filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse> ListAttackPathsAsync(global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAttackPaths, null, options, request);
      }
      /// <summary>
      /// Lists BigQuery exports. Note that when requesting BigQuery exports at a
      /// given level all exports under that level are also returned e.g. if
      /// requesting BigQuery exports under a folder, then all BigQuery exports
      /// immediately under the folder plus the ones created under the projects
      /// within the folder are returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse ListBigQueryExports(global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBigQueryExports(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists BigQuery exports. Note that when requesting BigQuery exports at a
      /// given level all exports under that level are also returned e.g. if
      /// requesting BigQuery exports under a folder, then all BigQuery exports
      /// immediately under the folder plus the ones created under the projects
      /// within the folder are returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse ListBigQueryExports(global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBigQueryExports, null, options, request);
      }
      /// <summary>
      /// Lists BigQuery exports. Note that when requesting BigQuery exports at a
      /// given level all exports under that level are also returned e.g. if
      /// requesting BigQuery exports under a folder, then all BigQuery exports
      /// immediately under the folder plus the ones created under the projects
      /// within the folder are returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse> ListBigQueryExportsAsync(global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBigQueryExportsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists BigQuery exports. Note that when requesting BigQuery exports at a
      /// given level all exports under that level are also returned e.g. if
      /// requesting BigQuery exports under a folder, then all BigQuery exports
      /// immediately under the folder plus the ones created under the projects
      /// within the folder are returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse> ListBigQueryExportsAsync(global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBigQueryExports, null, options, request);
      }
      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources for a given location provide a `-` as the source
      /// id. If no location is specified, finding are assumed to be in global.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse ListFindings(global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFindings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources for a given location provide a `-` as the source
      /// id. If no location is specified, finding are assumed to be in global.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse ListFindings(global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFindings, null, options, request);
      }
      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources for a given location provide a `-` as the source
      /// id. If no location is specified, finding are assumed to be in global.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse> ListFindingsAsync(global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFindingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists an organization or source's findings.
      ///
      /// To list across all sources for a given location provide a `-` as the source
      /// id. If no location is specified, finding are assumed to be in global.
      /// The following list shows some examples:
      ///
      /// + `/v2/organizations/{organization_id}/sources/-/findings`
      /// +
      /// `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse> ListFindingsAsync(global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFindings, null, options, request);
      }
      /// <summary>
      /// Lists mute configs. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse ListMuteConfigs(global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMuteConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists mute configs. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse ListMuteConfigs(global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMuteConfigs, null, options, request);
      }
      /// <summary>
      /// Lists mute configs. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse> ListMuteConfigsAsync(global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMuteConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists mute configs. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse> ListMuteConfigsAsync(global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMuteConfigs, null, options, request);
      }
      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse ListNotificationConfigs(global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotificationConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse ListNotificationConfigs(global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListNotificationConfigs, null, options, request);
      }
      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse> ListNotificationConfigsAsync(global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListNotificationConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists notification configs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse> ListNotificationConfigsAsync(global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListNotificationConfigs, null, options, request);
      }
      /// <summary>
      /// Lists all ResourceValueConfigs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse ListResourceValueConfigs(global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListResourceValueConfigs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all ResourceValueConfigs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse ListResourceValueConfigs(global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListResourceValueConfigs, null, options, request);
      }
      /// <summary>
      /// Lists all ResourceValueConfigs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse> ListResourceValueConfigsAsync(global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListResourceValueConfigsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all ResourceValueConfigs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse> ListResourceValueConfigsAsync(global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListResourceValueConfigs, null, options, request);
      }
      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse ListSources(global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse ListSources(global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSources, null, options, request);
      }
      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse> ListSourcesAsync(global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all sources belonging to an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse> ListSourcesAsync(global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSources, null, options, request);
      }
      /// <summary>
      /// Lists the valued resources for a set of simulation results and filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse ListValuedResources(global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListValuedResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the valued resources for a set of simulation results and filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse ListValuedResources(global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListValuedResources, null, options, request);
      }
      /// <summary>
      /// Lists the valued resources for a set of simulation results and filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse> ListValuedResourcesAsync(global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListValuedResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the valued resources for a set of simulation results and filter.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse> ListValuedResourcesAsync(global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListValuedResources, null, options, request);
      }
      /// <summary>
      /// Updates the state of a finding. If no location is specified, finding is
      /// assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Finding SetFindingState(global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetFindingState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the state of a finding. If no location is specified, finding is
      /// assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Finding SetFindingState(global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetFindingState, null, options, request);
      }
      /// <summary>
      /// Updates the state of a finding. If no location is specified, finding is
      /// assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Finding> SetFindingStateAsync(global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetFindingStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the state of a finding. If no location is specified, finding is
      /// assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Finding> SetFindingStateAsync(global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetFindingState, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy on the specified Source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Updates the mute state of a finding. If no location is specified, finding
      /// is assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Finding SetMute(global::Google.Cloud.SecurityCenter.V2.SetMuteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetMute(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the mute state of a finding. If no location is specified, finding
      /// is assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Finding SetMute(global::Google.Cloud.SecurityCenter.V2.SetMuteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetMute, null, options, request);
      }
      /// <summary>
      /// Updates the mute state of a finding. If no location is specified, finding
      /// is assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Finding> SetMuteAsync(global::Google.Cloud.SecurityCenter.V2.SetMuteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetMuteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the mute state of a finding. If no location is specified, finding
      /// is assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Finding> SetMuteAsync(global::Google.Cloud.SecurityCenter.V2.SetMuteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetMute, null, options, request);
      }
      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the permissions that a caller has on the specified source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Updates a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.BigQueryExport UpdateBigQueryExport(global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBigQueryExport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.BigQueryExport UpdateBigQueryExport(global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBigQueryExport, null, options, request);
      }
      /// <summary>
      /// Updates a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> UpdateBigQueryExportAsync(global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBigQueryExportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a BigQuery export.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.BigQueryExport> UpdateBigQueryExportAsync(global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBigQueryExport, null, options, request);
      }
      /// <summary>
      /// Updates external system. This is for a given finding. If no location is
      /// specified, finding is assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ExternalSystem UpdateExternalSystem(global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExternalSystem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates external system. This is for a given finding. If no location is
      /// specified, finding is assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ExternalSystem UpdateExternalSystem(global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateExternalSystem, null, options, request);
      }
      /// <summary>
      /// Updates external system. This is for a given finding. If no location is
      /// specified, finding is assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ExternalSystem> UpdateExternalSystemAsync(global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateExternalSystemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates external system. This is for a given finding. If no location is
      /// specified, finding is assumed to be in global
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ExternalSystem> UpdateExternalSystemAsync(global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateExternalSystem, null, options, request);
      }
      /// <summary>
      /// Creates or updates a finding. If no location is specified, finding is
      /// assumed to be in global. The corresponding source must exist for a finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Finding UpdateFinding(global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFinding(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or updates a finding. If no location is specified, finding is
      /// assumed to be in global. The corresponding source must exist for a finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Finding UpdateFinding(global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFinding, null, options, request);
      }
      /// <summary>
      /// Creates or updates a finding. If no location is specified, finding is
      /// assumed to be in global. The corresponding source must exist for a finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Finding> UpdateFindingAsync(global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFindingAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates or updates a finding. If no location is specified, finding is
      /// assumed to be in global. The corresponding source must exist for a finding
      /// creation to succeed.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Finding> UpdateFindingAsync(global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFinding, null, options, request);
      }
      /// <summary>
      /// Updates a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.MuteConfig UpdateMuteConfig(global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMuteConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.MuteConfig UpdateMuteConfig(global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMuteConfig, null, options, request);
      }
      /// <summary>
      /// Updates a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.MuteConfig> UpdateMuteConfigAsync(global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMuteConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a mute config. If no location is specified, default is
      /// global.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.MuteConfig> UpdateMuteConfigAsync(global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMuteConfig, null, options, request);
      }
      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.NotificationConfig UpdateNotificationConfig(global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotificationConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.NotificationConfig UpdateNotificationConfig(global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> UpdateNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNotificationConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a notification config. The following update
      /// fields are allowed: description, pubsub_topic, streaming_config.filter
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.NotificationConfig> UpdateNotificationConfigAsync(global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNotificationConfig, null, options, request);
      }
      /// <summary>
      /// Updates an existing ResourceValueConfigs with new rules.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig UpdateResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateResourceValueConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing ResourceValueConfigs with new rules.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig UpdateResourceValueConfig(global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateResourceValueConfig, null, options, request);
      }
      /// <summary>
      /// Updates an existing ResourceValueConfigs with new rules.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> UpdateResourceValueConfigAsync(global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateResourceValueConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an existing ResourceValueConfigs with new rules.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig> UpdateResourceValueConfigAsync(global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateResourceValueConfig, null, options, request);
      }
      /// <summary>
      /// Updates security marks. For Finding Security marks, if no location is
      /// specified, finding is assumed to be in global. Assets Security Marks can
      /// only be accessed through global endpoint.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.SecurityMarks UpdateSecurityMarks(global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSecurityMarks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates security marks. For Finding Security marks, if no location is
      /// specified, finding is assumed to be in global. Assets Security Marks can
      /// only be accessed through global endpoint.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.SecurityMarks UpdateSecurityMarks(global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSecurityMarks, null, options, request);
      }
      /// <summary>
      /// Updates security marks. For Finding Security marks, if no location is
      /// specified, finding is assumed to be in global. Assets Security Marks can
      /// only be accessed through global endpoint.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.SecurityMarks> UpdateSecurityMarksAsync(global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSecurityMarksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates security marks. For Finding Security marks, if no location is
      /// specified, finding is assumed to be in global. Assets Security Marks can
      /// only be accessed through global endpoint.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.SecurityMarks> UpdateSecurityMarksAsync(global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSecurityMarks, null, options, request);
      }
      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Source UpdateSource(global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.SecurityCenter.V2.Source UpdateSource(global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSource, null, options, request);
      }
      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Source> UpdateSourceAsync(global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a source.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.SecurityCenter.V2.Source> UpdateSourceAsync(global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSource, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SecurityCenterClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SecurityCenterClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SecurityCenterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_BatchCreateResourceValueConfigs, serviceImpl.BatchCreateResourceValueConfigs)
          .AddMethod(__Method_BulkMuteFindings, serviceImpl.BulkMuteFindings)
          .AddMethod(__Method_CreateBigQueryExport, serviceImpl.CreateBigQueryExport)
          .AddMethod(__Method_CreateFinding, serviceImpl.CreateFinding)
          .AddMethod(__Method_CreateMuteConfig, serviceImpl.CreateMuteConfig)
          .AddMethod(__Method_CreateNotificationConfig, serviceImpl.CreateNotificationConfig)
          .AddMethod(__Method_CreateSource, serviceImpl.CreateSource)
          .AddMethod(__Method_DeleteBigQueryExport, serviceImpl.DeleteBigQueryExport)
          .AddMethod(__Method_DeleteMuteConfig, serviceImpl.DeleteMuteConfig)
          .AddMethod(__Method_DeleteNotificationConfig, serviceImpl.DeleteNotificationConfig)
          .AddMethod(__Method_DeleteResourceValueConfig, serviceImpl.DeleteResourceValueConfig)
          .AddMethod(__Method_GetBigQueryExport, serviceImpl.GetBigQueryExport)
          .AddMethod(__Method_GetSimulation, serviceImpl.GetSimulation)
          .AddMethod(__Method_GetValuedResource, serviceImpl.GetValuedResource)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_GetMuteConfig, serviceImpl.GetMuteConfig)
          .AddMethod(__Method_GetNotificationConfig, serviceImpl.GetNotificationConfig)
          .AddMethod(__Method_GetResourceValueConfig, serviceImpl.GetResourceValueConfig)
          .AddMethod(__Method_GetSource, serviceImpl.GetSource)
          .AddMethod(__Method_GroupFindings, serviceImpl.GroupFindings)
          .AddMethod(__Method_ListAttackPaths, serviceImpl.ListAttackPaths)
          .AddMethod(__Method_ListBigQueryExports, serviceImpl.ListBigQueryExports)
          .AddMethod(__Method_ListFindings, serviceImpl.ListFindings)
          .AddMethod(__Method_ListMuteConfigs, serviceImpl.ListMuteConfigs)
          .AddMethod(__Method_ListNotificationConfigs, serviceImpl.ListNotificationConfigs)
          .AddMethod(__Method_ListResourceValueConfigs, serviceImpl.ListResourceValueConfigs)
          .AddMethod(__Method_ListSources, serviceImpl.ListSources)
          .AddMethod(__Method_ListValuedResources, serviceImpl.ListValuedResources)
          .AddMethod(__Method_SetFindingState, serviceImpl.SetFindingState)
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_SetMute, serviceImpl.SetMute)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions)
          .AddMethod(__Method_UpdateBigQueryExport, serviceImpl.UpdateBigQueryExport)
          .AddMethod(__Method_UpdateExternalSystem, serviceImpl.UpdateExternalSystem)
          .AddMethod(__Method_UpdateFinding, serviceImpl.UpdateFinding)
          .AddMethod(__Method_UpdateMuteConfig, serviceImpl.UpdateMuteConfig)
          .AddMethod(__Method_UpdateNotificationConfig, serviceImpl.UpdateNotificationConfig)
          .AddMethod(__Method_UpdateResourceValueConfig, serviceImpl.UpdateResourceValueConfig)
          .AddMethod(__Method_UpdateSecurityMarks, serviceImpl.UpdateSecurityMarks)
          .AddMethod(__Method_UpdateSource, serviceImpl.UpdateSource).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SecurityCenterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_BatchCreateResourceValueConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsRequest, global::Google.Cloud.SecurityCenter.V2.BatchCreateResourceValueConfigsResponse>(serviceImpl.BatchCreateResourceValueConfigs));
      serviceBinder.AddMethod(__Method_BulkMuteFindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.BulkMuteFindingsRequest, global::Google.LongRunning.Operation>(serviceImpl.BulkMuteFindings));
      serviceBinder.AddMethod(__Method_CreateBigQueryExport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.CreateBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport>(serviceImpl.CreateBigQueryExport));
      serviceBinder.AddMethod(__Method_CreateFinding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.CreateFindingRequest, global::Google.Cloud.SecurityCenter.V2.Finding>(serviceImpl.CreateFinding));
      serviceBinder.AddMethod(__Method_CreateMuteConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.CreateMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig>(serviceImpl.CreateMuteConfig));
      serviceBinder.AddMethod(__Method_CreateNotificationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.CreateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig>(serviceImpl.CreateNotificationConfig));
      serviceBinder.AddMethod(__Method_CreateSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.CreateSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source>(serviceImpl.CreateSource));
      serviceBinder.AddMethod(__Method_DeleteBigQueryExport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.DeleteBigQueryExportRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteBigQueryExport));
      serviceBinder.AddMethod(__Method_DeleteMuteConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.DeleteMuteConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteMuteConfig));
      serviceBinder.AddMethod(__Method_DeleteNotificationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.DeleteNotificationConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteNotificationConfig));
      serviceBinder.AddMethod(__Method_DeleteResourceValueConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.DeleteResourceValueConfigRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteResourceValueConfig));
      serviceBinder.AddMethod(__Method_GetBigQueryExport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.GetBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport>(serviceImpl.GetBigQueryExport));
      serviceBinder.AddMethod(__Method_GetSimulation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.GetSimulationRequest, global::Google.Cloud.SecurityCenter.V2.Simulation>(serviceImpl.GetSimulation));
      serviceBinder.AddMethod(__Method_GetValuedResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.GetValuedResourceRequest, global::Google.Cloud.SecurityCenter.V2.ValuedResource>(serviceImpl.GetValuedResource));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_GetMuteConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.GetMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig>(serviceImpl.GetMuteConfig));
      serviceBinder.AddMethod(__Method_GetNotificationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.GetNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig>(serviceImpl.GetNotificationConfig));
      serviceBinder.AddMethod(__Method_GetResourceValueConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.GetResourceValueConfigRequest, global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig>(serviceImpl.GetResourceValueConfig));
      serviceBinder.AddMethod(__Method_GetSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.GetSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source>(serviceImpl.GetSource));
      serviceBinder.AddMethod(__Method_GroupFindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.GroupFindingsRequest, global::Google.Cloud.SecurityCenter.V2.GroupFindingsResponse>(serviceImpl.GroupFindings));
      serviceBinder.AddMethod(__Method_ListAttackPaths, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.ListAttackPathsRequest, global::Google.Cloud.SecurityCenter.V2.ListAttackPathsResponse>(serviceImpl.ListAttackPaths));
      serviceBinder.AddMethod(__Method_ListBigQueryExports, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsRequest, global::Google.Cloud.SecurityCenter.V2.ListBigQueryExportsResponse>(serviceImpl.ListBigQueryExports));
      serviceBinder.AddMethod(__Method_ListFindings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.ListFindingsRequest, global::Google.Cloud.SecurityCenter.V2.ListFindingsResponse>(serviceImpl.ListFindings));
      serviceBinder.AddMethod(__Method_ListMuteConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListMuteConfigsResponse>(serviceImpl.ListMuteConfigs));
      serviceBinder.AddMethod(__Method_ListNotificationConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListNotificationConfigsResponse>(serviceImpl.ListNotificationConfigs));
      serviceBinder.AddMethod(__Method_ListResourceValueConfigs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsRequest, global::Google.Cloud.SecurityCenter.V2.ListResourceValueConfigsResponse>(serviceImpl.ListResourceValueConfigs));
      serviceBinder.AddMethod(__Method_ListSources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.ListSourcesRequest, global::Google.Cloud.SecurityCenter.V2.ListSourcesResponse>(serviceImpl.ListSources));
      serviceBinder.AddMethod(__Method_ListValuedResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesRequest, global::Google.Cloud.SecurityCenter.V2.ListValuedResourcesResponse>(serviceImpl.ListValuedResources));
      serviceBinder.AddMethod(__Method_SetFindingState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.SetFindingStateRequest, global::Google.Cloud.SecurityCenter.V2.Finding>(serviceImpl.SetFindingState));
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_SetMute, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.SetMuteRequest, global::Google.Cloud.SecurityCenter.V2.Finding>(serviceImpl.SetMute));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
      serviceBinder.AddMethod(__Method_UpdateBigQueryExport, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.UpdateBigQueryExportRequest, global::Google.Cloud.SecurityCenter.V2.BigQueryExport>(serviceImpl.UpdateBigQueryExport));
      serviceBinder.AddMethod(__Method_UpdateExternalSystem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.UpdateExternalSystemRequest, global::Google.Cloud.SecurityCenter.V2.ExternalSystem>(serviceImpl.UpdateExternalSystem));
      serviceBinder.AddMethod(__Method_UpdateFinding, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.UpdateFindingRequest, global::Google.Cloud.SecurityCenter.V2.Finding>(serviceImpl.UpdateFinding));
      serviceBinder.AddMethod(__Method_UpdateMuteConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.UpdateMuteConfigRequest, global::Google.Cloud.SecurityCenter.V2.MuteConfig>(serviceImpl.UpdateMuteConfig));
      serviceBinder.AddMethod(__Method_UpdateNotificationConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.UpdateNotificationConfigRequest, global::Google.Cloud.SecurityCenter.V2.NotificationConfig>(serviceImpl.UpdateNotificationConfig));
      serviceBinder.AddMethod(__Method_UpdateResourceValueConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.UpdateResourceValueConfigRequest, global::Google.Cloud.SecurityCenter.V2.ResourceValueConfig>(serviceImpl.UpdateResourceValueConfig));
      serviceBinder.AddMethod(__Method_UpdateSecurityMarks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.UpdateSecurityMarksRequest, global::Google.Cloud.SecurityCenter.V2.SecurityMarks>(serviceImpl.UpdateSecurityMarks));
      serviceBinder.AddMethod(__Method_UpdateSource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.SecurityCenter.V2.UpdateSourceRequest, global::Google.Cloud.SecurityCenter.V2.Source>(serviceImpl.UpdateSource));
    }

  }
}
#endregion
