// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/billing/v1/cloud_billing.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Billing.V1 {
  /// <summary>
  /// Retrieves the Google Cloud Console billing accounts and associates them with
  /// projects.
  /// </summary>
  public static partial class CloudBilling
  {
    static readonly string __ServiceName = "google.cloud.billing.v1.CloudBilling";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.GetBillingAccountRequest> __Marshaller_google_cloud_billing_v1_GetBillingAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.GetBillingAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.BillingAccount> __Marshaller_google_cloud_billing_v1_BillingAccount = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.BillingAccount.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.ListBillingAccountsRequest> __Marshaller_google_cloud_billing_v1_ListBillingAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.ListBillingAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.ListBillingAccountsResponse> __Marshaller_google_cloud_billing_v1_ListBillingAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.ListBillingAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest> __Marshaller_google_cloud_billing_v1_UpdateBillingAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.CreateBillingAccountRequest> __Marshaller_google_cloud_billing_v1_CreateBillingAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.CreateBillingAccountRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest> __Marshaller_google_cloud_billing_v1_ListProjectBillingInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse> __Marshaller_google_cloud_billing_v1_ListProjectBillingInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest> __Marshaller_google_cloud_billing_v1_GetProjectBillingInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.ProjectBillingInfo> __Marshaller_google_cloud_billing_v1_ProjectBillingInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.ProjectBillingInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest> __Marshaller_google_cloud_billing_v1_UpdateProjectBillingInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Billing.V1.MoveBillingAccountRequest> __Marshaller_google_cloud_billing_v1_MoveBillingAccountRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Billing.V1.MoveBillingAccountRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Billing.V1.GetBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount> __Method_GetBillingAccount = new grpc::Method<global::Google.Cloud.Billing.V1.GetBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBillingAccount",
        __Marshaller_google_cloud_billing_v1_GetBillingAccountRequest,
        __Marshaller_google_cloud_billing_v1_BillingAccount);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Billing.V1.ListBillingAccountsRequest, global::Google.Cloud.Billing.V1.ListBillingAccountsResponse> __Method_ListBillingAccounts = new grpc::Method<global::Google.Cloud.Billing.V1.ListBillingAccountsRequest, global::Google.Cloud.Billing.V1.ListBillingAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBillingAccounts",
        __Marshaller_google_cloud_billing_v1_ListBillingAccountsRequest,
        __Marshaller_google_cloud_billing_v1_ListBillingAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount> __Method_UpdateBillingAccount = new grpc::Method<global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBillingAccount",
        __Marshaller_google_cloud_billing_v1_UpdateBillingAccountRequest,
        __Marshaller_google_cloud_billing_v1_BillingAccount);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Billing.V1.CreateBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount> __Method_CreateBillingAccount = new grpc::Method<global::Google.Cloud.Billing.V1.CreateBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBillingAccount",
        __Marshaller_google_cloud_billing_v1_CreateBillingAccountRequest,
        __Marshaller_google_cloud_billing_v1_BillingAccount);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse> __Method_ListProjectBillingInfo = new grpc::Method<global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectBillingInfo",
        __Marshaller_google_cloud_billing_v1_ListProjectBillingInfoRequest,
        __Marshaller_google_cloud_billing_v1_ListProjectBillingInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ProjectBillingInfo> __Method_GetProjectBillingInfo = new grpc::Method<global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ProjectBillingInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProjectBillingInfo",
        __Marshaller_google_cloud_billing_v1_GetProjectBillingInfoRequest,
        __Marshaller_google_cloud_billing_v1_ProjectBillingInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ProjectBillingInfo> __Method_UpdateProjectBillingInfo = new grpc::Method<global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ProjectBillingInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProjectBillingInfo",
        __Marshaller_google_cloud_billing_v1_UpdateProjectBillingInfoRequest,
        __Marshaller_google_cloud_billing_v1_ProjectBillingInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Billing.V1.MoveBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount> __Method_MoveBillingAccount = new grpc::Method<global::Google.Cloud.Billing.V1.MoveBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MoveBillingAccount",
        __Marshaller_google_cloud_billing_v1_MoveBillingAccountRequest,
        __Marshaller_google_cloud_billing_v1_BillingAccount);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Billing.V1.CloudBillingReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CloudBilling</summary>
    [grpc::BindServiceMethod(typeof(CloudBilling), "BindService")]
    public abstract partial class CloudBillingBase
    {
      /// <summary>
      /// Gets information about a billing account. The current authenticated user
      /// must be a [viewer of the billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Billing.V1.BillingAccount> GetBillingAccount(global::Google.Cloud.Billing.V1.GetBillingAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the billing accounts that the current authenticated user has
      /// permission to
      /// [view](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Billing.V1.ListBillingAccountsResponse> ListBillingAccounts(global::Google.Cloud.Billing.V1.ListBillingAccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a billing account's fields.
      /// Currently the only field that can be edited is `display_name`.
      /// The current authenticated user must have the `billing.accounts.update`
      /// IAM permission, which is typically given to the
      /// [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
      /// of the billing account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Billing.V1.BillingAccount> UpdateBillingAccount(global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// This method creates [billing
      /// subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts).
      ///
      /// Google Cloud resellers should use the
      /// Channel Services APIs,
      /// [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create)
      /// and
      /// [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create).
      ///
      /// When creating a subaccount, the current authenticated user must have the
      /// `billing.accounts.update` IAM permission on the parent account, which is
      /// typically given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// This method will return an error if the parent account has not been
      /// provisioned for subaccounts.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Billing.V1.BillingAccount> CreateBillingAccount(global::Google.Cloud.Billing.V1.CreateBillingAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists the projects associated with a billing account. The current
      /// authenticated user must have the `billing.resourceAssociations.list` IAM
      /// permission, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse> ListProjectBillingInfo(global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the billing information for a project. The current authenticated user
      /// must have the `resourcemanager.projects.get` permission for the project,
      /// which can be granted by assigning the [Project
      /// Viewer](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
      /// role.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Billing.V1.ProjectBillingInfo> GetProjectBillingInfo(global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets or updates the billing account associated with a project. You specify
      /// the new billing account by setting the `billing_account_name` in the
      /// `ProjectBillingInfo` resource to the resource name of a billing account.
      /// Associating a project with an open billing account enables billing on the
      /// project and allows charges for resource usage. If the project already had a
      /// billing account, this method changes the billing account used for resource
      /// usage charges.
      ///
      /// *Note:* Incurred charges that have not yet been reported in the transaction
      /// history of the Google Cloud Console might be billed to the new billing
      /// account, even if the charge occurred before the new billing account was
      /// assigned to the project.
      ///
      /// The current authenticated user must have ownership privileges for both
      /// the
      /// [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
      /// ) and the [billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      ///
      /// You can disable billing on the project by setting the
      /// `billing_account_name` field to empty. This action disassociates the
      /// current billing account from the project. Any billable activity of your
      /// in-use services will stop, and your application could stop functioning as
      /// expected. Any unbilled charges to date will be billed to the previously
      /// associated account. The current authenticated user must be either an owner
      /// of the project or an owner of the billing account for the project.
      ///
      /// Note that associating a project with a *closed* billing account will have
      /// much the same effect as disabling billing on the project: any paid
      /// resources used by the project will be shut down. Thus, unless you wish to
      /// disable billing, you should always call this method with the name of an
      /// *open* billing account.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Billing.V1.ProjectBillingInfo> UpdateProjectBillingInfo(global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the access control policy for a billing account.
      /// The caller must have the `billing.accounts.getIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sets the access control policy for a billing account. Replaces any existing
      /// policy.
      /// The caller must have the `billing.accounts.setIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Tests the access control policy for a billing account. This method takes
      /// the resource and a set of permissions as input and returns the subset of
      /// the input permissions that the caller is allowed for that resource.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Changes which parent organization a billing account belongs to.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Billing.V1.BillingAccount> MoveBillingAccount(global::Google.Cloud.Billing.V1.MoveBillingAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CloudBilling</summary>
    public partial class CloudBillingClient : grpc::ClientBase<CloudBillingClient>
    {
      /// <summary>Creates a new client for CloudBilling</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudBillingClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CloudBilling that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CloudBillingClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudBillingClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CloudBillingClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Gets information about a billing account. The current authenticated user
      /// must be a [viewer of the billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.BillingAccount GetBillingAccount(global::Google.Cloud.Billing.V1.GetBillingAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBillingAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a billing account. The current authenticated user
      /// must be a [viewer of the billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.BillingAccount GetBillingAccount(global::Google.Cloud.Billing.V1.GetBillingAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBillingAccount, null, options, request);
      }
      /// <summary>
      /// Gets information about a billing account. The current authenticated user
      /// must be a [viewer of the billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.BillingAccount> GetBillingAccountAsync(global::Google.Cloud.Billing.V1.GetBillingAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBillingAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets information about a billing account. The current authenticated user
      /// must be a [viewer of the billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.BillingAccount> GetBillingAccountAsync(global::Google.Cloud.Billing.V1.GetBillingAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBillingAccount, null, options, request);
      }
      /// <summary>
      /// Lists the billing accounts that the current authenticated user has
      /// permission to
      /// [view](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.ListBillingAccountsResponse ListBillingAccounts(global::Google.Cloud.Billing.V1.ListBillingAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBillingAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the billing accounts that the current authenticated user has
      /// permission to
      /// [view](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.ListBillingAccountsResponse ListBillingAccounts(global::Google.Cloud.Billing.V1.ListBillingAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBillingAccounts, null, options, request);
      }
      /// <summary>
      /// Lists the billing accounts that the current authenticated user has
      /// permission to
      /// [view](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.ListBillingAccountsResponse> ListBillingAccountsAsync(global::Google.Cloud.Billing.V1.ListBillingAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBillingAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the billing accounts that the current authenticated user has
      /// permission to
      /// [view](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.ListBillingAccountsResponse> ListBillingAccountsAsync(global::Google.Cloud.Billing.V1.ListBillingAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBillingAccounts, null, options, request);
      }
      /// <summary>
      /// Updates a billing account's fields.
      /// Currently the only field that can be edited is `display_name`.
      /// The current authenticated user must have the `billing.accounts.update`
      /// IAM permission, which is typically given to the
      /// [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
      /// of the billing account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.BillingAccount UpdateBillingAccount(global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBillingAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a billing account's fields.
      /// Currently the only field that can be edited is `display_name`.
      /// The current authenticated user must have the `billing.accounts.update`
      /// IAM permission, which is typically given to the
      /// [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
      /// of the billing account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.BillingAccount UpdateBillingAccount(global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBillingAccount, null, options, request);
      }
      /// <summary>
      /// Updates a billing account's fields.
      /// Currently the only field that can be edited is `display_name`.
      /// The current authenticated user must have the `billing.accounts.update`
      /// IAM permission, which is typically given to the
      /// [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
      /// of the billing account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.BillingAccount> UpdateBillingAccountAsync(global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBillingAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a billing account's fields.
      /// Currently the only field that can be edited is `display_name`.
      /// The current authenticated user must have the `billing.accounts.update`
      /// IAM permission, which is typically given to the
      /// [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
      /// of the billing account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.BillingAccount> UpdateBillingAccountAsync(global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBillingAccount, null, options, request);
      }
      /// <summary>
      /// This method creates [billing
      /// subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts).
      ///
      /// Google Cloud resellers should use the
      /// Channel Services APIs,
      /// [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create)
      /// and
      /// [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create).
      ///
      /// When creating a subaccount, the current authenticated user must have the
      /// `billing.accounts.update` IAM permission on the parent account, which is
      /// typically given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// This method will return an error if the parent account has not been
      /// provisioned for subaccounts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.BillingAccount CreateBillingAccount(global::Google.Cloud.Billing.V1.CreateBillingAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBillingAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method creates [billing
      /// subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts).
      ///
      /// Google Cloud resellers should use the
      /// Channel Services APIs,
      /// [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create)
      /// and
      /// [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create).
      ///
      /// When creating a subaccount, the current authenticated user must have the
      /// `billing.accounts.update` IAM permission on the parent account, which is
      /// typically given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// This method will return an error if the parent account has not been
      /// provisioned for subaccounts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.BillingAccount CreateBillingAccount(global::Google.Cloud.Billing.V1.CreateBillingAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBillingAccount, null, options, request);
      }
      /// <summary>
      /// This method creates [billing
      /// subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts).
      ///
      /// Google Cloud resellers should use the
      /// Channel Services APIs,
      /// [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create)
      /// and
      /// [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create).
      ///
      /// When creating a subaccount, the current authenticated user must have the
      /// `billing.accounts.update` IAM permission on the parent account, which is
      /// typically given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// This method will return an error if the parent account has not been
      /// provisioned for subaccounts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.BillingAccount> CreateBillingAccountAsync(global::Google.Cloud.Billing.V1.CreateBillingAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBillingAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// This method creates [billing
      /// subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts).
      ///
      /// Google Cloud resellers should use the
      /// Channel Services APIs,
      /// [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create)
      /// and
      /// [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create).
      ///
      /// When creating a subaccount, the current authenticated user must have the
      /// `billing.accounts.update` IAM permission on the parent account, which is
      /// typically given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// This method will return an error if the parent account has not been
      /// provisioned for subaccounts.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.BillingAccount> CreateBillingAccountAsync(global::Google.Cloud.Billing.V1.CreateBillingAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBillingAccount, null, options, request);
      }
      /// <summary>
      /// Lists the projects associated with a billing account. The current
      /// authenticated user must have the `billing.resourceAssociations.list` IAM
      /// permission, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse ListProjectBillingInfo(global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectBillingInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the projects associated with a billing account. The current
      /// authenticated user must have the `billing.resourceAssociations.list` IAM
      /// permission, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse ListProjectBillingInfo(global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectBillingInfo, null, options, request);
      }
      /// <summary>
      /// Lists the projects associated with a billing account. The current
      /// authenticated user must have the `billing.resourceAssociations.list` IAM
      /// permission, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse> ListProjectBillingInfoAsync(global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectBillingInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists the projects associated with a billing account. The current
      /// authenticated user must have the `billing.resourceAssociations.list` IAM
      /// permission, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse> ListProjectBillingInfoAsync(global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectBillingInfo, null, options, request);
      }
      /// <summary>
      /// Gets the billing information for a project. The current authenticated user
      /// must have the `resourcemanager.projects.get` permission for the project,
      /// which can be granted by assigning the [Project
      /// Viewer](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
      /// role.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.ProjectBillingInfo GetProjectBillingInfo(global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProjectBillingInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the billing information for a project. The current authenticated user
      /// must have the `resourcemanager.projects.get` permission for the project,
      /// which can be granted by assigning the [Project
      /// Viewer](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
      /// role.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.ProjectBillingInfo GetProjectBillingInfo(global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProjectBillingInfo, null, options, request);
      }
      /// <summary>
      /// Gets the billing information for a project. The current authenticated user
      /// must have the `resourcemanager.projects.get` permission for the project,
      /// which can be granted by assigning the [Project
      /// Viewer](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
      /// role.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.ProjectBillingInfo> GetProjectBillingInfoAsync(global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProjectBillingInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the billing information for a project. The current authenticated user
      /// must have the `resourcemanager.projects.get` permission for the project,
      /// which can be granted by assigning the [Project
      /// Viewer](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
      /// role.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.ProjectBillingInfo> GetProjectBillingInfoAsync(global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProjectBillingInfo, null, options, request);
      }
      /// <summary>
      /// Sets or updates the billing account associated with a project. You specify
      /// the new billing account by setting the `billing_account_name` in the
      /// `ProjectBillingInfo` resource to the resource name of a billing account.
      /// Associating a project with an open billing account enables billing on the
      /// project and allows charges for resource usage. If the project already had a
      /// billing account, this method changes the billing account used for resource
      /// usage charges.
      ///
      /// *Note:* Incurred charges that have not yet been reported in the transaction
      /// history of the Google Cloud Console might be billed to the new billing
      /// account, even if the charge occurred before the new billing account was
      /// assigned to the project.
      ///
      /// The current authenticated user must have ownership privileges for both
      /// the
      /// [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
      /// ) and the [billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      ///
      /// You can disable billing on the project by setting the
      /// `billing_account_name` field to empty. This action disassociates the
      /// current billing account from the project. Any billable activity of your
      /// in-use services will stop, and your application could stop functioning as
      /// expected. Any unbilled charges to date will be billed to the previously
      /// associated account. The current authenticated user must be either an owner
      /// of the project or an owner of the billing account for the project.
      ///
      /// Note that associating a project with a *closed* billing account will have
      /// much the same effect as disabling billing on the project: any paid
      /// resources used by the project will be shut down. Thus, unless you wish to
      /// disable billing, you should always call this method with the name of an
      /// *open* billing account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.ProjectBillingInfo UpdateProjectBillingInfo(global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectBillingInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets or updates the billing account associated with a project. You specify
      /// the new billing account by setting the `billing_account_name` in the
      /// `ProjectBillingInfo` resource to the resource name of a billing account.
      /// Associating a project with an open billing account enables billing on the
      /// project and allows charges for resource usage. If the project already had a
      /// billing account, this method changes the billing account used for resource
      /// usage charges.
      ///
      /// *Note:* Incurred charges that have not yet been reported in the transaction
      /// history of the Google Cloud Console might be billed to the new billing
      /// account, even if the charge occurred before the new billing account was
      /// assigned to the project.
      ///
      /// The current authenticated user must have ownership privileges for both
      /// the
      /// [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
      /// ) and the [billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      ///
      /// You can disable billing on the project by setting the
      /// `billing_account_name` field to empty. This action disassociates the
      /// current billing account from the project. Any billable activity of your
      /// in-use services will stop, and your application could stop functioning as
      /// expected. Any unbilled charges to date will be billed to the previously
      /// associated account. The current authenticated user must be either an owner
      /// of the project or an owner of the billing account for the project.
      ///
      /// Note that associating a project with a *closed* billing account will have
      /// much the same effect as disabling billing on the project: any paid
      /// resources used by the project will be shut down. Thus, unless you wish to
      /// disable billing, you should always call this method with the name of an
      /// *open* billing account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.ProjectBillingInfo UpdateProjectBillingInfo(global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProjectBillingInfo, null, options, request);
      }
      /// <summary>
      /// Sets or updates the billing account associated with a project. You specify
      /// the new billing account by setting the `billing_account_name` in the
      /// `ProjectBillingInfo` resource to the resource name of a billing account.
      /// Associating a project with an open billing account enables billing on the
      /// project and allows charges for resource usage. If the project already had a
      /// billing account, this method changes the billing account used for resource
      /// usage charges.
      ///
      /// *Note:* Incurred charges that have not yet been reported in the transaction
      /// history of the Google Cloud Console might be billed to the new billing
      /// account, even if the charge occurred before the new billing account was
      /// assigned to the project.
      ///
      /// The current authenticated user must have ownership privileges for both
      /// the
      /// [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
      /// ) and the [billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      ///
      /// You can disable billing on the project by setting the
      /// `billing_account_name` field to empty. This action disassociates the
      /// current billing account from the project. Any billable activity of your
      /// in-use services will stop, and your application could stop functioning as
      /// expected. Any unbilled charges to date will be billed to the previously
      /// associated account. The current authenticated user must be either an owner
      /// of the project or an owner of the billing account for the project.
      ///
      /// Note that associating a project with a *closed* billing account will have
      /// much the same effect as disabling billing on the project: any paid
      /// resources used by the project will be shut down. Thus, unless you wish to
      /// disable billing, you should always call this method with the name of an
      /// *open* billing account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.ProjectBillingInfo> UpdateProjectBillingInfoAsync(global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectBillingInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets or updates the billing account associated with a project. You specify
      /// the new billing account by setting the `billing_account_name` in the
      /// `ProjectBillingInfo` resource to the resource name of a billing account.
      /// Associating a project with an open billing account enables billing on the
      /// project and allows charges for resource usage. If the project already had a
      /// billing account, this method changes the billing account used for resource
      /// usage charges.
      ///
      /// *Note:* Incurred charges that have not yet been reported in the transaction
      /// history of the Google Cloud Console might be billed to the new billing
      /// account, even if the charge occurred before the new billing account was
      /// assigned to the project.
      ///
      /// The current authenticated user must have ownership privileges for both
      /// the
      /// [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
      /// ) and the [billing
      /// account](https://cloud.google.com/billing/docs/how-to/billing-access).
      ///
      /// You can disable billing on the project by setting the
      /// `billing_account_name` field to empty. This action disassociates the
      /// current billing account from the project. Any billable activity of your
      /// in-use services will stop, and your application could stop functioning as
      /// expected. Any unbilled charges to date will be billed to the previously
      /// associated account. The current authenticated user must be either an owner
      /// of the project or an owner of the billing account for the project.
      ///
      /// Note that associating a project with a *closed* billing account will have
      /// much the same effect as disabling billing on the project: any paid
      /// resources used by the project will be shut down. Thus, unless you wish to
      /// disable billing, you should always call this method with the name of an
      /// *open* billing account.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.ProjectBillingInfo> UpdateProjectBillingInfoAsync(global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProjectBillingInfo, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for a billing account.
      /// The caller must have the `billing.accounts.getIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for a billing account.
      /// The caller must have the `billing.accounts.getIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the access control policy for a billing account.
      /// The caller must have the `billing.accounts.getIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the access control policy for a billing account.
      /// The caller must have the `billing.accounts.getIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy for a billing account. Replaces any existing
      /// policy.
      /// The caller must have the `billing.accounts.setIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy for a billing account. Replaces any existing
      /// policy.
      /// The caller must have the `billing.accounts.setIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Sets the access control policy for a billing account. Replaces any existing
      /// policy.
      /// The caller must have the `billing.accounts.setIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sets the access control policy for a billing account. Replaces any existing
      /// policy.
      /// The caller must have the `billing.accounts.setIamPolicy` permission on the
      /// account, which is often given to billing account
      /// [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Tests the access control policy for a billing account. This method takes
      /// the resource and a set of permissions as input and returns the subset of
      /// the input permissions that the caller is allowed for that resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Tests the access control policy for a billing account. This method takes
      /// the resource and a set of permissions as input and returns the subset of
      /// the input permissions that the caller is allowed for that resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Tests the access control policy for a billing account. This method takes
      /// the resource and a set of permissions as input and returns the subset of
      /// the input permissions that the caller is allowed for that resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Tests the access control policy for a billing account. This method takes
      /// the resource and a set of permissions as input and returns the subset of
      /// the input permissions that the caller is allowed for that resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Changes which parent organization a billing account belongs to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.BillingAccount MoveBillingAccount(global::Google.Cloud.Billing.V1.MoveBillingAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveBillingAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Changes which parent organization a billing account belongs to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Billing.V1.BillingAccount MoveBillingAccount(global::Google.Cloud.Billing.V1.MoveBillingAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MoveBillingAccount, null, options, request);
      }
      /// <summary>
      /// Changes which parent organization a billing account belongs to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.BillingAccount> MoveBillingAccountAsync(global::Google.Cloud.Billing.V1.MoveBillingAccountRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveBillingAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Changes which parent organization a billing account belongs to.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Billing.V1.BillingAccount> MoveBillingAccountAsync(global::Google.Cloud.Billing.V1.MoveBillingAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MoveBillingAccount, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CloudBillingClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CloudBillingClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CloudBillingBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetBillingAccount, serviceImpl.GetBillingAccount)
          .AddMethod(__Method_ListBillingAccounts, serviceImpl.ListBillingAccounts)
          .AddMethod(__Method_UpdateBillingAccount, serviceImpl.UpdateBillingAccount)
          .AddMethod(__Method_CreateBillingAccount, serviceImpl.CreateBillingAccount)
          .AddMethod(__Method_ListProjectBillingInfo, serviceImpl.ListProjectBillingInfo)
          .AddMethod(__Method_GetProjectBillingInfo, serviceImpl.GetProjectBillingInfo)
          .AddMethod(__Method_UpdateProjectBillingInfo, serviceImpl.UpdateProjectBillingInfo)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions)
          .AddMethod(__Method_MoveBillingAccount, serviceImpl.MoveBillingAccount).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CloudBillingBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetBillingAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Billing.V1.GetBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount>(serviceImpl.GetBillingAccount));
      serviceBinder.AddMethod(__Method_ListBillingAccounts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Billing.V1.ListBillingAccountsRequest, global::Google.Cloud.Billing.V1.ListBillingAccountsResponse>(serviceImpl.ListBillingAccounts));
      serviceBinder.AddMethod(__Method_UpdateBillingAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Billing.V1.UpdateBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount>(serviceImpl.UpdateBillingAccount));
      serviceBinder.AddMethod(__Method_CreateBillingAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Billing.V1.CreateBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount>(serviceImpl.CreateBillingAccount));
      serviceBinder.AddMethod(__Method_ListProjectBillingInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Billing.V1.ListProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ListProjectBillingInfoResponse>(serviceImpl.ListProjectBillingInfo));
      serviceBinder.AddMethod(__Method_GetProjectBillingInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Billing.V1.GetProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ProjectBillingInfo>(serviceImpl.GetProjectBillingInfo));
      serviceBinder.AddMethod(__Method_UpdateProjectBillingInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Billing.V1.UpdateProjectBillingInfoRequest, global::Google.Cloud.Billing.V1.ProjectBillingInfo>(serviceImpl.UpdateProjectBillingInfo));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
      serviceBinder.AddMethod(__Method_MoveBillingAccount, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Billing.V1.MoveBillingAccountRequest, global::Google.Cloud.Billing.V1.BillingAccount>(serviceImpl.MoveBillingAccount));
    }

  }
}
#endregion
