// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/netapp/v1/active_directory.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.NetApp.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/netapp/v1/active_directory.proto</summary>
  public static partial class ActiveDirectoryReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/netapp/v1/active_directory.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ActiveDirectoryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci1nb29nbGUvY2xvdWQvbmV0YXBwL3YxL2FjdGl2ZV9kaXJlY3RvcnkucHJv",
            "dG8SFmdvb2dsZS5jbG91ZC5uZXRhcHAudjEaH2dvb2dsZS9hcGkvZmllbGRf",
            "YmVoYXZpb3IucHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aIGdv",
            "b2dsZS9wcm90b2J1Zi9maWVsZF9tYXNrLnByb3RvGh9nb29nbGUvcHJvdG9i",
            "dWYvdGltZXN0YW1wLnByb3RvIqYBChxMaXN0QWN0aXZlRGlyZWN0b3JpZXNS",
            "ZXF1ZXN0Ej0KBnBhcmVudBgBIAEoCUIt4EEC+kEnEiVuZXRhcHAuZ29vZ2xl",
            "YXBpcy5jb20vQWN0aXZlRGlyZWN0b3J5EhEKCXBhZ2Vfc2l6ZRgCIAEoBRIS",
            "CgpwYWdlX3Rva2VuGAMgASgJEg4KBmZpbHRlchgEIAEoCRIQCghvcmRlcl9i",
            "eRgFIAEoCSKSAQodTGlzdEFjdGl2ZURpcmVjdG9yaWVzUmVzcG9uc2USQwoS",
            "YWN0aXZlX2RpcmVjdG9yaWVzGAEgAygLMicuZ29vZ2xlLmNsb3VkLm5ldGFw",
            "cC52MS5BY3RpdmVEaXJlY3RvcnkSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJ",
            "EhMKC3VucmVhY2hhYmxlGAMgAygJIlgKGUdldEFjdGl2ZURpcmVjdG9yeVJl",
            "cXVlc3QSOwoEbmFtZRgBIAEoCUIt4EEC+kEnCiVuZXRhcHAuZ29vZ2xlYXBp",
            "cy5jb20vQWN0aXZlRGlyZWN0b3J5IscBChxDcmVhdGVBY3RpdmVEaXJlY3Rv",
            "cnlSZXF1ZXN0Ej0KBnBhcmVudBgBIAEoCUIt4EEC+kEnEiVuZXRhcHAuZ29v",
            "Z2xlYXBpcy5jb20vQWN0aXZlRGlyZWN0b3J5EkYKEGFjdGl2ZV9kaXJlY3Rv",
            "cnkYAiABKAsyJy5nb29nbGUuY2xvdWQubmV0YXBwLnYxLkFjdGl2ZURpcmVj",
            "dG9yeUID4EECEiAKE2FjdGl2ZV9kaXJlY3RvcnlfaWQYAyABKAlCA+BBAiKc",
            "AQocVXBkYXRlQWN0aXZlRGlyZWN0b3J5UmVxdWVzdBI0Cgt1cGRhdGVfbWFz",
            "axgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2tCA+BBAhJGChBh",
            "Y3RpdmVfZGlyZWN0b3J5GAIgASgLMicuZ29vZ2xlLmNsb3VkLm5ldGFwcC52",
            "MS5BY3RpdmVEaXJlY3RvcnlCA+BBAiJbChxEZWxldGVBY3RpdmVEaXJlY3Rv",
            "cnlSZXF1ZXN0EjsKBG5hbWUYASABKAlCLeBBAvpBJwolbmV0YXBwLmdvb2ds",
            "ZWFwaXMuY29tL0FjdGl2ZURpcmVjdG9yeSLqBwoPQWN0aXZlRGlyZWN0b3J5",
            "EhEKBG5hbWUYASABKAlCA+BBCBI0CgtjcmVhdGVfdGltZRgCIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxJBCgVzdGF0ZRgDIAEoDjIt",
            "Lmdvb2dsZS5jbG91ZC5uZXRhcHAudjEuQWN0aXZlRGlyZWN0b3J5LlN0YXRl",
            "QgPgQQMSEwoGZG9tYWluGAQgASgJQgPgQQISDAoEc2l0ZRgFIAEoCRIQCgNk",
            "bnMYBiABKAlCA+BBAhIcCg9uZXRfYmlvc19wcmVmaXgYByABKAlCA+BBAhIb",
            "ChNvcmdhbml6YXRpb25hbF91bml0GAggASgJEhYKDmFlc19lbmNyeXB0aW9u",
            "GAkgASgIEhUKCHVzZXJuYW1lGAogASgJQgPgQQISFQoIcGFzc3dvcmQYCyAB",
            "KAlCA+BBAhIdChBiYWNrdXBfb3BlcmF0b3JzGAwgAygJQgPgQQESGwoOYWRt",
            "aW5pc3RyYXRvcnMYFiADKAlCA+BBARIfChJzZWN1cml0eV9vcGVyYXRvcnMY",
            "DSADKAlCA+BBARIUCgxrZGNfaG9zdG5hbWUYDiABKAkSDgoGa2RjX2lwGA8g",
            "ASgJEhsKE25mc191c2Vyc193aXRoX2xkYXAYECABKAgSEwoLZGVzY3JpcHRp",
            "b24YESABKAkSFAoMbGRhcF9zaWduaW5nGBIgASgIEh4KFmVuY3J5cHRfZGNf",
            "Y29ubmVjdGlvbnMYEyABKAgSQwoGbGFiZWxzGBQgAygLMjMuZ29vZ2xlLmNs",
            "b3VkLm5ldGFwcC52MS5BY3RpdmVEaXJlY3RvcnkuTGFiZWxzRW50cnkSGgoN",
            "c3RhdGVfZGV0YWlscxgVIAEoCUID4EEDGi0KC0xhYmVsc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiegoFU3RhdGUSFQoRU1RBVEVf",
            "VU5TUEVDSUZJRUQQABIMCghDUkVBVElORxABEgkKBVJFQURZEAISDAoIVVBE",
            "QVRJTkcQAxIKCgZJTl9VU0UQBBIMCghERUxFVElORxAFEgkKBUVSUk9SEAYS",
            "DgoKRElBR05PU0lORxAHOp0B6kGZAQolbmV0YXBwLmdvb2dsZWFwaXMuY29t",
            "L0FjdGl2ZURpcmVjdG9yeRJMcHJvamVjdHMve3Byb2plY3R9L2xvY2F0aW9u",
            "cy97bG9jYXRpb259L2FjdGl2ZURpcmVjdG9yaWVzL3thY3RpdmVfZGlyZWN0",
            "b3J5fSoRYWN0aXZlRGlyZWN0b3JpZXMyD2FjdGl2ZURpcmVjdG9yeUK2AQoa",
            "Y29tLmdvb2dsZS5jbG91ZC5uZXRhcHAudjFCFEFjdGl2ZURpcmVjdG9yeVBy",
            "b3RvUAFaMmNsb3VkLmdvb2dsZS5jb20vZ28vbmV0YXBwL2FwaXYxL25ldGFw",
            "cHBiO25ldGFwcHBiqgIWR29vZ2xlLkNsb3VkLk5ldEFwcC5WMcoCFkdvb2ds",
            "ZVxDbG91ZFxOZXRBcHBcVjHqAhlHb29nbGU6OkNsb3VkOjpOZXRBcHA6OlYx",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.ListActiveDirectoriesRequest), global::Google.Cloud.NetApp.V1.ListActiveDirectoriesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.ListActiveDirectoriesResponse), global::Google.Cloud.NetApp.V1.ListActiveDirectoriesResponse.Parser, new[]{ "ActiveDirectories", "NextPageToken", "Unreachable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.GetActiveDirectoryRequest), global::Google.Cloud.NetApp.V1.GetActiveDirectoryRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.CreateActiveDirectoryRequest), global::Google.Cloud.NetApp.V1.CreateActiveDirectoryRequest.Parser, new[]{ "Parent", "ActiveDirectory", "ActiveDirectoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.UpdateActiveDirectoryRequest), global::Google.Cloud.NetApp.V1.UpdateActiveDirectoryRequest.Parser, new[]{ "UpdateMask", "ActiveDirectory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.DeleteActiveDirectoryRequest), global::Google.Cloud.NetApp.V1.DeleteActiveDirectoryRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.NetApp.V1.ActiveDirectory), global::Google.Cloud.NetApp.V1.ActiveDirectory.Parser, new[]{ "Name", "CreateTime", "State", "Domain", "Site", "Dns", "NetBiosPrefix", "OrganizationalUnit", "AesEncryption", "Username", "Password", "BackupOperators", "Administrators", "SecurityOperators", "KdcHostname", "KdcIp", "NfsUsersWithLdap", "Description", "LdapSigning", "EncryptDcConnections", "Labels", "StateDetails" }, null, new[]{ typeof(global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// ListActiveDirectoriesRequest for requesting multiple active directories.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListActiveDirectoriesRequest : pb::IMessage<ListActiveDirectoriesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListActiveDirectoriesRequest> _parser = new pb::MessageParser<ListActiveDirectoriesRequest>(() => new ListActiveDirectoriesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListActiveDirectoriesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.ActiveDirectoryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListActiveDirectoriesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListActiveDirectoriesRequest(ListActiveDirectoriesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListActiveDirectoriesRequest Clone() {
      return new ListActiveDirectoriesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Parent value for ListActiveDirectoriesRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// Requested page size. Server may return fewer items than requested.
    /// If unspecified, the server will pick an appropriate default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A token identifying a page of results the server should return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Filtering results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    /// <summary>
    /// Hint for how to order the results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListActiveDirectoriesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListActiveDirectoriesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListActiveDirectoriesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ListActiveDirectoriesResponse contains all the active directories requested.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListActiveDirectoriesResponse : pb::IMessage<ListActiveDirectoriesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListActiveDirectoriesResponse> _parser = new pb::MessageParser<ListActiveDirectoriesResponse>(() => new ListActiveDirectoriesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListActiveDirectoriesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.ActiveDirectoryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListActiveDirectoriesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListActiveDirectoriesResponse(ListActiveDirectoriesResponse other) : this() {
      activeDirectories_ = other.activeDirectories_.Clone();
      nextPageToken_ = other.nextPageToken_;
      unreachable_ = other.unreachable_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListActiveDirectoriesResponse Clone() {
      return new ListActiveDirectoriesResponse(this);
    }

    /// <summary>Field number for the "active_directories" field.</summary>
    public const int ActiveDirectoriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.NetApp.V1.ActiveDirectory> _repeated_activeDirectories_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.NetApp.V1.ActiveDirectory.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.NetApp.V1.ActiveDirectory> activeDirectories_ = new pbc::RepeatedField<global::Google.Cloud.NetApp.V1.ActiveDirectory>();
    /// <summary>
    /// The list of active directories.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.NetApp.V1.ActiveDirectory> ActiveDirectories {
      get { return activeDirectories_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token identifying a page of results the server should return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unreachable" field.</summary>
    public const int UnreachableFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_unreachable_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> unreachable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Locations that could not be reached.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Unreachable {
      get { return unreachable_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListActiveDirectoriesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListActiveDirectoriesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activeDirectories_.Equals(other.activeDirectories_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      if(!unreachable_.Equals(other.unreachable_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activeDirectories_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      hash ^= unreachable_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      activeDirectories_.WriteTo(output, _repeated_activeDirectories_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      activeDirectories_.WriteTo(ref output, _repeated_activeDirectories_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      unreachable_.WriteTo(ref output, _repeated_unreachable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += activeDirectories_.CalculateSize(_repeated_activeDirectories_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      size += unreachable_.CalculateSize(_repeated_unreachable_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListActiveDirectoriesResponse other) {
      if (other == null) {
        return;
      }
      activeDirectories_.Add(other.activeDirectories_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      unreachable_.Add(other.unreachable_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activeDirectories_.AddEntriesFrom(input, _repeated_activeDirectories_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            activeDirectories_.AddEntriesFrom(ref input, _repeated_activeDirectories_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 26: {
            unreachable_.AddEntriesFrom(ref input, _repeated_unreachable_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// GetActiveDirectory for getting a single active directory.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetActiveDirectoryRequest : pb::IMessage<GetActiveDirectoryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetActiveDirectoryRequest> _parser = new pb::MessageParser<GetActiveDirectoryRequest>(() => new GetActiveDirectoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetActiveDirectoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.ActiveDirectoryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetActiveDirectoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetActiveDirectoryRequest(GetActiveDirectoryRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetActiveDirectoryRequest Clone() {
      return new GetActiveDirectoryRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the active directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetActiveDirectoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetActiveDirectoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetActiveDirectoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// CreateActiveDirectoryRequest for creating an active directory.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateActiveDirectoryRequest : pb::IMessage<CreateActiveDirectoryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateActiveDirectoryRequest> _parser = new pb::MessageParser<CreateActiveDirectoryRequest>(() => new CreateActiveDirectoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateActiveDirectoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.ActiveDirectoryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateActiveDirectoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateActiveDirectoryRequest(CreateActiveDirectoryRequest other) : this() {
      parent_ = other.parent_;
      activeDirectory_ = other.activeDirectory_ != null ? other.activeDirectory_.Clone() : null;
      activeDirectoryId_ = other.activeDirectoryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateActiveDirectoryRequest Clone() {
      return new CreateActiveDirectoryRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. Value for parent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active_directory" field.</summary>
    public const int ActiveDirectoryFieldNumber = 2;
    private global::Google.Cloud.NetApp.V1.ActiveDirectory activeDirectory_;
    /// <summary>
    /// Required. Fields of the to be created active directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.ActiveDirectory ActiveDirectory {
      get { return activeDirectory_; }
      set {
        activeDirectory_ = value;
      }
    }

    /// <summary>Field number for the "active_directory_id" field.</summary>
    public const int ActiveDirectoryIdFieldNumber = 3;
    private string activeDirectoryId_ = "";
    /// <summary>
    /// Required. ID of the active directory to create. Must be unique within the
    /// parent resource. Must contain only letters, numbers and hyphen, with the
    /// first character a letter , the last a letter or a number, and a 63
    /// character maximum.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActiveDirectoryId {
      get { return activeDirectoryId_; }
      set {
        activeDirectoryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateActiveDirectoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateActiveDirectoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(ActiveDirectory, other.ActiveDirectory)) return false;
      if (ActiveDirectoryId != other.ActiveDirectoryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (activeDirectory_ != null) hash ^= ActiveDirectory.GetHashCode();
      if (ActiveDirectoryId.Length != 0) hash ^= ActiveDirectoryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (activeDirectory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActiveDirectory);
      }
      if (ActiveDirectoryId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActiveDirectoryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (activeDirectory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActiveDirectory);
      }
      if (ActiveDirectoryId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActiveDirectoryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (activeDirectory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActiveDirectory);
      }
      if (ActiveDirectoryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActiveDirectoryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateActiveDirectoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.activeDirectory_ != null) {
        if (activeDirectory_ == null) {
          ActiveDirectory = new global::Google.Cloud.NetApp.V1.ActiveDirectory();
        }
        ActiveDirectory.MergeFrom(other.ActiveDirectory);
      }
      if (other.ActiveDirectoryId.Length != 0) {
        ActiveDirectoryId = other.ActiveDirectoryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (activeDirectory_ == null) {
              ActiveDirectory = new global::Google.Cloud.NetApp.V1.ActiveDirectory();
            }
            input.ReadMessage(ActiveDirectory);
            break;
          }
          case 26: {
            ActiveDirectoryId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (activeDirectory_ == null) {
              ActiveDirectory = new global::Google.Cloud.NetApp.V1.ActiveDirectory();
            }
            input.ReadMessage(ActiveDirectory);
            break;
          }
          case 26: {
            ActiveDirectoryId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// UpdateActiveDirectoryRequest for updating an active directory.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateActiveDirectoryRequest : pb::IMessage<UpdateActiveDirectoryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateActiveDirectoryRequest> _parser = new pb::MessageParser<UpdateActiveDirectoryRequest>(() => new UpdateActiveDirectoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateActiveDirectoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.ActiveDirectoryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateActiveDirectoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateActiveDirectoryRequest(UpdateActiveDirectoryRequest other) : this() {
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      activeDirectory_ = other.activeDirectory_ != null ? other.activeDirectory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateActiveDirectoryRequest Clone() {
      return new UpdateActiveDirectoryRequest(this);
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Required. Field mask is used to specify the fields to be overwritten in the
    /// Active Directory resource by the update.
    /// The fields specified in the update_mask are relative to the resource, not
    /// the full request. A field will be overwritten if it is in the mask. If the
    /// user does not provide a mask then all fields will be overwritten.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "active_directory" field.</summary>
    public const int ActiveDirectoryFieldNumber = 2;
    private global::Google.Cloud.NetApp.V1.ActiveDirectory activeDirectory_;
    /// <summary>
    /// Required. The volume being updated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.ActiveDirectory ActiveDirectory {
      get { return activeDirectory_; }
      set {
        activeDirectory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateActiveDirectoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateActiveDirectoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (!object.Equals(ActiveDirectory, other.ActiveDirectory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (activeDirectory_ != null) hash ^= ActiveDirectory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (updateMask_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateMask);
      }
      if (activeDirectory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActiveDirectory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (updateMask_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateMask);
      }
      if (activeDirectory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActiveDirectory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (activeDirectory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActiveDirectory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateActiveDirectoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.activeDirectory_ != null) {
        if (activeDirectory_ == null) {
          ActiveDirectory = new global::Google.Cloud.NetApp.V1.ActiveDirectory();
        }
        ActiveDirectory.MergeFrom(other.ActiveDirectory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 18: {
            if (activeDirectory_ == null) {
              ActiveDirectory = new global::Google.Cloud.NetApp.V1.ActiveDirectory();
            }
            input.ReadMessage(ActiveDirectory);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 18: {
            if (activeDirectory_ == null) {
              ActiveDirectory = new global::Google.Cloud.NetApp.V1.ActiveDirectory();
            }
            input.ReadMessage(ActiveDirectory);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// DeleteActiveDirectoryRequest for deleting a single active directory.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteActiveDirectoryRequest : pb::IMessage<DeleteActiveDirectoryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteActiveDirectoryRequest> _parser = new pb::MessageParser<DeleteActiveDirectoryRequest>(() => new DeleteActiveDirectoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteActiveDirectoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.ActiveDirectoryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteActiveDirectoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteActiveDirectoryRequest(DeleteActiveDirectoryRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteActiveDirectoryRequest Clone() {
      return new DeleteActiveDirectoryRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the active directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteActiveDirectoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteActiveDirectoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteActiveDirectoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ActiveDirectory is the public representation of the active directory config.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ActiveDirectory : pb::IMessage<ActiveDirectory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ActiveDirectory> _parser = new pb::MessageParser<ActiveDirectory>(() => new ActiveDirectory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ActiveDirectory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.NetApp.V1.ActiveDirectoryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActiveDirectory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActiveDirectory(ActiveDirectory other) : this() {
      name_ = other.name_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      state_ = other.state_;
      domain_ = other.domain_;
      site_ = other.site_;
      dns_ = other.dns_;
      netBiosPrefix_ = other.netBiosPrefix_;
      organizationalUnit_ = other.organizationalUnit_;
      aesEncryption_ = other.aesEncryption_;
      username_ = other.username_;
      password_ = other.password_;
      backupOperators_ = other.backupOperators_.Clone();
      administrators_ = other.administrators_.Clone();
      securityOperators_ = other.securityOperators_.Clone();
      kdcHostname_ = other.kdcHostname_;
      kdcIp_ = other.kdcIp_;
      nfsUsersWithLdap_ = other.nfsUsersWithLdap_;
      description_ = other.description_;
      ldapSigning_ = other.ldapSigning_;
      encryptDcConnections_ = other.encryptDcConnections_;
      labels_ = other.labels_.Clone();
      stateDetails_ = other.stateDetails_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ActiveDirectory Clone() {
      return new ActiveDirectory(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Identifier. The resource name of the active directory.
    /// Format:
    /// `projects/{project_number}/locations/{location_id}/activeDirectories/{active_directory_id}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Create time of the active directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State state_ = global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State.Unspecified;
    /// <summary>
    /// Output only. The state of the AD.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 4;
    private string domain_ = "";
    /// <summary>
    /// Required. Name of the Active Directory domain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "site" field.</summary>
    public const int SiteFieldNumber = 5;
    private string site_ = "";
    /// <summary>
    /// The Active Directory site the service will limit Domain Controller
    /// discovery too.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Site {
      get { return site_; }
      set {
        site_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dns" field.</summary>
    public const int DnsFieldNumber = 6;
    private string dns_ = "";
    /// <summary>
    /// Required. Comma separated list of DNS server IP addresses for the Active
    /// Directory domain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Dns {
      get { return dns_; }
      set {
        dns_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "net_bios_prefix" field.</summary>
    public const int NetBiosPrefixFieldNumber = 7;
    private string netBiosPrefix_ = "";
    /// <summary>
    /// Required. NetBIOSPrefix is used as a prefix for SMB server name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NetBiosPrefix {
      get { return netBiosPrefix_; }
      set {
        netBiosPrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "organizational_unit" field.</summary>
    public const int OrganizationalUnitFieldNumber = 8;
    private string organizationalUnit_ = "";
    /// <summary>
    /// The Organizational Unit (OU) within the Windows Active Directory the user
    /// belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrganizationalUnit {
      get { return organizationalUnit_; }
      set {
        organizationalUnit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aes_encryption" field.</summary>
    public const int AesEncryptionFieldNumber = 9;
    private bool aesEncryption_;
    /// <summary>
    /// If enabled, AES encryption will be enabled for SMB communication.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AesEncryption {
      get { return aesEncryption_; }
      set {
        aesEncryption_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 10;
    private string username_ = "";
    /// <summary>
    /// Required. Username of the Active Directory domain administrator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 11;
    private string password_ = "";
    /// <summary>
    /// Required. Password of the Active Directory domain administrator.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backup_operators" field.</summary>
    public const int BackupOperatorsFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_backupOperators_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> backupOperators_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Users to be added to the Built-in Backup Operator active
    /// directory group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BackupOperators {
      get { return backupOperators_; }
    }

    /// <summary>Field number for the "administrators" field.</summary>
    public const int AdministratorsFieldNumber = 22;
    private static readonly pb::FieldCodec<string> _repeated_administrators_codec
        = pb::FieldCodec.ForString(178);
    private readonly pbc::RepeatedField<string> administrators_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Users to be added to the Built-in Admininstrators group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Administrators {
      get { return administrators_; }
    }

    /// <summary>Field number for the "security_operators" field.</summary>
    public const int SecurityOperatorsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_securityOperators_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> securityOperators_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Domain users to be given the SeSecurityPrivilege.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SecurityOperators {
      get { return securityOperators_; }
    }

    /// <summary>Field number for the "kdc_hostname" field.</summary>
    public const int KdcHostnameFieldNumber = 14;
    private string kdcHostname_ = "";
    /// <summary>
    /// Name of the active directory machine. This optional parameter is used only
    /// while creating kerberos volume
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KdcHostname {
      get { return kdcHostname_; }
      set {
        kdcHostname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kdc_ip" field.</summary>
    public const int KdcIpFieldNumber = 15;
    private string kdcIp_ = "";
    /// <summary>
    /// KDC server IP address for the active directory machine.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KdcIp {
      get { return kdcIp_; }
      set {
        kdcIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nfs_users_with_ldap" field.</summary>
    public const int NfsUsersWithLdapFieldNumber = 16;
    private bool nfsUsersWithLdap_;
    /// <summary>
    /// If enabled, will allow access to local users and LDAP users. If access is
    /// needed for only LDAP users, it has to be disabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NfsUsersWithLdap {
      get { return nfsUsersWithLdap_; }
      set {
        nfsUsersWithLdap_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 17;
    private string description_ = "";
    /// <summary>
    /// Description of the active directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ldap_signing" field.</summary>
    public const int LdapSigningFieldNumber = 18;
    private bool ldapSigning_;
    /// <summary>
    /// Specifies whether or not the LDAP traffic needs to be signed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LdapSigning {
      get { return ldapSigning_; }
      set {
        ldapSigning_ = value;
      }
    }

    /// <summary>Field number for the "encrypt_dc_connections" field.</summary>
    public const int EncryptDcConnectionsFieldNumber = 19;
    private bool encryptDcConnections_;
    /// <summary>
    /// If enabled, traffic between the SMB server to Domain Controller (DC) will
    /// be encrypted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EncryptDcConnections {
      get { return encryptDcConnections_; }
      set {
        encryptDcConnections_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 20;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 162);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Labels for the active directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "state_details" field.</summary>
    public const int StateDetailsFieldNumber = 21;
    private string stateDetails_ = "";
    /// <summary>
    /// Output only. The state details of the Active Directory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StateDetails {
      get { return stateDetails_; }
      set {
        stateDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ActiveDirectory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ActiveDirectory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (State != other.State) return false;
      if (Domain != other.Domain) return false;
      if (Site != other.Site) return false;
      if (Dns != other.Dns) return false;
      if (NetBiosPrefix != other.NetBiosPrefix) return false;
      if (OrganizationalUnit != other.OrganizationalUnit) return false;
      if (AesEncryption != other.AesEncryption) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if(!backupOperators_.Equals(other.backupOperators_)) return false;
      if(!administrators_.Equals(other.administrators_)) return false;
      if(!securityOperators_.Equals(other.securityOperators_)) return false;
      if (KdcHostname != other.KdcHostname) return false;
      if (KdcIp != other.KdcIp) return false;
      if (NfsUsersWithLdap != other.NfsUsersWithLdap) return false;
      if (Description != other.Description) return false;
      if (LdapSigning != other.LdapSigning) return false;
      if (EncryptDcConnections != other.EncryptDcConnections) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (StateDetails != other.StateDetails) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (State != global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (Site.Length != 0) hash ^= Site.GetHashCode();
      if (Dns.Length != 0) hash ^= Dns.GetHashCode();
      if (NetBiosPrefix.Length != 0) hash ^= NetBiosPrefix.GetHashCode();
      if (OrganizationalUnit.Length != 0) hash ^= OrganizationalUnit.GetHashCode();
      if (AesEncryption != false) hash ^= AesEncryption.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      hash ^= backupOperators_.GetHashCode();
      hash ^= administrators_.GetHashCode();
      hash ^= securityOperators_.GetHashCode();
      if (KdcHostname.Length != 0) hash ^= KdcHostname.GetHashCode();
      if (KdcIp.Length != 0) hash ^= KdcIp.GetHashCode();
      if (NfsUsersWithLdap != false) hash ^= NfsUsersWithLdap.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (LdapSigning != false) hash ^= LdapSigning.GetHashCode();
      if (EncryptDcConnections != false) hash ^= EncryptDcConnections.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (StateDetails.Length != 0) hash ^= StateDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (State != global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Domain);
      }
      if (Site.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Site);
      }
      if (Dns.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Dns);
      }
      if (NetBiosPrefix.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NetBiosPrefix);
      }
      if (OrganizationalUnit.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OrganizationalUnit);
      }
      if (AesEncryption != false) {
        output.WriteRawTag(72);
        output.WriteBool(AesEncryption);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Password);
      }
      backupOperators_.WriteTo(output, _repeated_backupOperators_codec);
      securityOperators_.WriteTo(output, _repeated_securityOperators_codec);
      if (KdcHostname.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(KdcHostname);
      }
      if (KdcIp.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(KdcIp);
      }
      if (NfsUsersWithLdap != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(NfsUsersWithLdap);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Description);
      }
      if (LdapSigning != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(LdapSigning);
      }
      if (EncryptDcConnections != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(EncryptDcConnections);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (StateDetails.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(StateDetails);
      }
      administrators_.WriteTo(output, _repeated_administrators_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (State != global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (Domain.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Domain);
      }
      if (Site.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Site);
      }
      if (Dns.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Dns);
      }
      if (NetBiosPrefix.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NetBiosPrefix);
      }
      if (OrganizationalUnit.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OrganizationalUnit);
      }
      if (AesEncryption != false) {
        output.WriteRawTag(72);
        output.WriteBool(AesEncryption);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Password);
      }
      backupOperators_.WriteTo(ref output, _repeated_backupOperators_codec);
      securityOperators_.WriteTo(ref output, _repeated_securityOperators_codec);
      if (KdcHostname.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(KdcHostname);
      }
      if (KdcIp.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(KdcIp);
      }
      if (NfsUsersWithLdap != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(NfsUsersWithLdap);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Description);
      }
      if (LdapSigning != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(LdapSigning);
      }
      if (EncryptDcConnections != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(EncryptDcConnections);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (StateDetails.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(StateDetails);
      }
      administrators_.WriteTo(ref output, _repeated_administrators_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (State != global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (Site.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Site);
      }
      if (Dns.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dns);
      }
      if (NetBiosPrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetBiosPrefix);
      }
      if (OrganizationalUnit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizationalUnit);
      }
      if (AesEncryption != false) {
        size += 1 + 1;
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      size += backupOperators_.CalculateSize(_repeated_backupOperators_codec);
      size += administrators_.CalculateSize(_repeated_administrators_codec);
      size += securityOperators_.CalculateSize(_repeated_securityOperators_codec);
      if (KdcHostname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KdcHostname);
      }
      if (KdcIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KdcIp);
      }
      if (NfsUsersWithLdap != false) {
        size += 2 + 1;
      }
      if (Description.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (LdapSigning != false) {
        size += 2 + 1;
      }
      if (EncryptDcConnections != false) {
        size += 2 + 1;
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (StateDetails.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StateDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ActiveDirectory other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.State != global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.Site.Length != 0) {
        Site = other.Site;
      }
      if (other.Dns.Length != 0) {
        Dns = other.Dns;
      }
      if (other.NetBiosPrefix.Length != 0) {
        NetBiosPrefix = other.NetBiosPrefix;
      }
      if (other.OrganizationalUnit.Length != 0) {
        OrganizationalUnit = other.OrganizationalUnit;
      }
      if (other.AesEncryption != false) {
        AesEncryption = other.AesEncryption;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      backupOperators_.Add(other.backupOperators_);
      administrators_.Add(other.administrators_);
      securityOperators_.Add(other.securityOperators_);
      if (other.KdcHostname.Length != 0) {
        KdcHostname = other.KdcHostname;
      }
      if (other.KdcIp.Length != 0) {
        KdcIp = other.KdcIp;
      }
      if (other.NfsUsersWithLdap != false) {
        NfsUsersWithLdap = other.NfsUsersWithLdap;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.LdapSigning != false) {
        LdapSigning = other.LdapSigning;
      }
      if (other.EncryptDcConnections != false) {
        EncryptDcConnections = other.EncryptDcConnections;
      }
      labels_.MergeFrom(other.labels_);
      if (other.StateDetails.Length != 0) {
        StateDetails = other.StateDetails;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 24: {
            State = (global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            Domain = input.ReadString();
            break;
          }
          case 42: {
            Site = input.ReadString();
            break;
          }
          case 50: {
            Dns = input.ReadString();
            break;
          }
          case 58: {
            NetBiosPrefix = input.ReadString();
            break;
          }
          case 66: {
            OrganizationalUnit = input.ReadString();
            break;
          }
          case 72: {
            AesEncryption = input.ReadBool();
            break;
          }
          case 82: {
            Username = input.ReadString();
            break;
          }
          case 90: {
            Password = input.ReadString();
            break;
          }
          case 98: {
            backupOperators_.AddEntriesFrom(input, _repeated_backupOperators_codec);
            break;
          }
          case 106: {
            securityOperators_.AddEntriesFrom(input, _repeated_securityOperators_codec);
            break;
          }
          case 114: {
            KdcHostname = input.ReadString();
            break;
          }
          case 122: {
            KdcIp = input.ReadString();
            break;
          }
          case 128: {
            NfsUsersWithLdap = input.ReadBool();
            break;
          }
          case 138: {
            Description = input.ReadString();
            break;
          }
          case 144: {
            LdapSigning = input.ReadBool();
            break;
          }
          case 152: {
            EncryptDcConnections = input.ReadBool();
            break;
          }
          case 162: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 170: {
            StateDetails = input.ReadString();
            break;
          }
          case 178: {
            administrators_.AddEntriesFrom(input, _repeated_administrators_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 24: {
            State = (global::Google.Cloud.NetApp.V1.ActiveDirectory.Types.State) input.ReadEnum();
            break;
          }
          case 34: {
            Domain = input.ReadString();
            break;
          }
          case 42: {
            Site = input.ReadString();
            break;
          }
          case 50: {
            Dns = input.ReadString();
            break;
          }
          case 58: {
            NetBiosPrefix = input.ReadString();
            break;
          }
          case 66: {
            OrganizationalUnit = input.ReadString();
            break;
          }
          case 72: {
            AesEncryption = input.ReadBool();
            break;
          }
          case 82: {
            Username = input.ReadString();
            break;
          }
          case 90: {
            Password = input.ReadString();
            break;
          }
          case 98: {
            backupOperators_.AddEntriesFrom(ref input, _repeated_backupOperators_codec);
            break;
          }
          case 106: {
            securityOperators_.AddEntriesFrom(ref input, _repeated_securityOperators_codec);
            break;
          }
          case 114: {
            KdcHostname = input.ReadString();
            break;
          }
          case 122: {
            KdcIp = input.ReadString();
            break;
          }
          case 128: {
            NfsUsersWithLdap = input.ReadBool();
            break;
          }
          case 138: {
            Description = input.ReadString();
            break;
          }
          case 144: {
            LdapSigning = input.ReadBool();
            break;
          }
          case 152: {
            EncryptDcConnections = input.ReadBool();
            break;
          }
          case 162: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 170: {
            StateDetails = input.ReadString();
            break;
          }
          case 178: {
            administrators_.AddEntriesFrom(ref input, _repeated_administrators_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ActiveDirectory message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The Active Directory States
      /// </summary>
      public enum State {
        /// <summary>
        /// Unspecified Active Directory State
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Active Directory State is Creating
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// Active Directory State is Ready
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 2,
        /// <summary>
        /// Active Directory State is Updating
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 3,
        /// <summary>
        /// Active Directory State is In use
        /// </summary>
        [pbr::OriginalName("IN_USE")] InUse = 4,
        /// <summary>
        /// Active Directory State is Deleting
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 5,
        /// <summary>
        /// Active Directory State is Error
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 6,
        /// <summary>
        /// Active Directory State is Diagnosing.
        /// </summary>
        [pbr::OriginalName("DIAGNOSING")] Diagnosing = 7,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
