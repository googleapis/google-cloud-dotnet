// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/dataflow/v1beta3/jobs.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Dataflow.V1Beta3 {
  /// <summary>
  /// Provides a method to create and modify Google Cloud Dataflow jobs.
  /// A Job is a multi-stage computation graph run by the Cloud Dataflow service.
  /// </summary>
  public static partial class JobsV1Beta3
  {
    static readonly string __ServiceName = "google.dataflow.v1beta3.JobsV1Beta3";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest> __Marshaller_google_dataflow_v1beta3_CreateJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.Job> __Marshaller_google_dataflow_v1beta3_Job = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.Job.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest> __Marshaller_google_dataflow_v1beta3_GetJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest> __Marshaller_google_dataflow_v1beta3_UpdateJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest> __Marshaller_google_dataflow_v1beta3_ListJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> __Marshaller_google_dataflow_v1beta3_ListJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest> __Marshaller_google_dataflow_v1beta3_CheckActiveJobsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse> __Marshaller_google_dataflow_v1beta3_CheckActiveJobsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest> __Marshaller_google_dataflow_v1beta3_SnapshotJobRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Dataflow.V1Beta3.Snapshot> __Marshaller_google_dataflow_v1beta3_Snapshot = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Dataflow.V1Beta3.Snapshot.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job> __Method_CreateJob = new grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateJob",
        __Marshaller_google_dataflow_v1beta3_CreateJobRequest,
        __Marshaller_google_dataflow_v1beta3_Job);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job> __Method_GetJob = new grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetJob",
        __Marshaller_google_dataflow_v1beta3_GetJobRequest,
        __Marshaller_google_dataflow_v1beta3_Job);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job> __Method_UpdateJob = new grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateJob",
        __Marshaller_google_dataflow_v1beta3_UpdateJobRequest,
        __Marshaller_google_dataflow_v1beta3_Job);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> __Method_ListJobs = new grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListJobs",
        __Marshaller_google_dataflow_v1beta3_ListJobsRequest,
        __Marshaller_google_dataflow_v1beta3_ListJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> __Method_AggregatedListJobs = new grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AggregatedListJobs",
        __Marshaller_google_dataflow_v1beta3_ListJobsRequest,
        __Marshaller_google_dataflow_v1beta3_ListJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse> __Method_CheckActiveJobs = new grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckActiveJobs",
        __Marshaller_google_dataflow_v1beta3_CheckActiveJobsRequest,
        __Marshaller_google_dataflow_v1beta3_CheckActiveJobsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Snapshot> __Method_SnapshotJob = new grpc::Method<global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Snapshot>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SnapshotJob",
        __Marshaller_google_dataflow_v1beta3_SnapshotJobRequest,
        __Marshaller_google_dataflow_v1beta3_Snapshot);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Dataflow.V1Beta3.JobsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of JobsV1Beta3</summary>
    [grpc::BindServiceMethod(typeof(JobsV1Beta3), "BindService")]
    public abstract partial class JobsV1Beta3Base
    {
      /// <summary>
      /// Creates a Cloud Dataflow job.
      ///
      /// To create a job, we recommend using `projects.locations.jobs.create` with a
      /// [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.create` is not recommended, as your job will always start
      /// in `us-central1`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dataflow.V1Beta3.Job> CreateJob(global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the state of the specified Cloud Dataflow job.
      ///
      /// To get the state of a job, we recommend using `projects.locations.jobs.get`
      /// with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.get` is not recommended, as you can only get the state of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dataflow.V1Beta3.Job> GetJob(global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the state of an existing Cloud Dataflow job.
      ///
      /// To update the state of an existing job, we recommend using
      /// `projects.locations.jobs.update` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.update` is not recommended, as you can only update the state
      /// of jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dataflow.V1Beta3.Job> UpdateJob(global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List the jobs of a project.
      ///
      /// To list the jobs of a project in a region, we recommend using
      /// `projects.locations.jobs.list` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
      /// list the all jobs across all regions, use `projects.jobs.aggregated`. Using
      /// `projects.jobs.list` is not recommended, as you can only get the list of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> ListJobs(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List the jobs of a project across all regions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> AggregatedListJobs(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Check for existence of active jobs in the given project across all regions.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse> CheckActiveJobs(global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Snapshot the state of a streaming job.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Dataflow.V1Beta3.Snapshot> SnapshotJob(global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for JobsV1Beta3</summary>
    public partial class JobsV1Beta3Client : grpc::ClientBase<JobsV1Beta3Client>
    {
      /// <summary>Creates a new client for JobsV1Beta3</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public JobsV1Beta3Client(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for JobsV1Beta3 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public JobsV1Beta3Client(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected JobsV1Beta3Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected JobsV1Beta3Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Creates a Cloud Dataflow job.
      ///
      /// To create a job, we recommend using `projects.locations.jobs.create` with a
      /// [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.create` is not recommended, as your job will always start
      /// in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.Job CreateJob(global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Cloud Dataflow job.
      ///
      /// To create a job, we recommend using `projects.locations.jobs.create` with a
      /// [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.create` is not recommended, as your job will always start
      /// in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.Job CreateJob(global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateJob, null, options, request);
      }
      /// <summary>
      /// Creates a Cloud Dataflow job.
      ///
      /// To create a job, we recommend using `projects.locations.jobs.create` with a
      /// [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.create` is not recommended, as your job will always start
      /// in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.Job> CreateJobAsync(global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a Cloud Dataflow job.
      ///
      /// To create a job, we recommend using `projects.locations.jobs.create` with a
      /// [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.create` is not recommended, as your job will always start
      /// in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.Job> CreateJobAsync(global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateJob, null, options, request);
      }
      /// <summary>
      /// Gets the state of the specified Cloud Dataflow job.
      ///
      /// To get the state of a job, we recommend using `projects.locations.jobs.get`
      /// with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.get` is not recommended, as you can only get the state of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.Job GetJob(global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the state of the specified Cloud Dataflow job.
      ///
      /// To get the state of a job, we recommend using `projects.locations.jobs.get`
      /// with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.get` is not recommended, as you can only get the state of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.Job GetJob(global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetJob, null, options, request);
      }
      /// <summary>
      /// Gets the state of the specified Cloud Dataflow job.
      ///
      /// To get the state of a job, we recommend using `projects.locations.jobs.get`
      /// with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.get` is not recommended, as you can only get the state of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.Job> GetJobAsync(global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the state of the specified Cloud Dataflow job.
      ///
      /// To get the state of a job, we recommend using `projects.locations.jobs.get`
      /// with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.get` is not recommended, as you can only get the state of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.Job> GetJobAsync(global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetJob, null, options, request);
      }
      /// <summary>
      /// Updates the state of an existing Cloud Dataflow job.
      ///
      /// To update the state of an existing job, we recommend using
      /// `projects.locations.jobs.update` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.update` is not recommended, as you can only update the state
      /// of jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.Job UpdateJob(global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the state of an existing Cloud Dataflow job.
      ///
      /// To update the state of an existing job, we recommend using
      /// `projects.locations.jobs.update` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.update` is not recommended, as you can only update the state
      /// of jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.Job UpdateJob(global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateJob, null, options, request);
      }
      /// <summary>
      /// Updates the state of an existing Cloud Dataflow job.
      ///
      /// To update the state of an existing job, we recommend using
      /// `projects.locations.jobs.update` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.update` is not recommended, as you can only update the state
      /// of jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.Job> UpdateJobAsync(global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the state of an existing Cloud Dataflow job.
      ///
      /// To update the state of an existing job, we recommend using
      /// `projects.locations.jobs.update` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). Using
      /// `projects.jobs.update` is not recommended, as you can only update the state
      /// of jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.Job> UpdateJobAsync(global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateJob, null, options, request);
      }
      /// <summary>
      /// List the jobs of a project.
      ///
      /// To list the jobs of a project in a region, we recommend using
      /// `projects.locations.jobs.list` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
      /// list the all jobs across all regions, use `projects.jobs.aggregated`. Using
      /// `projects.jobs.list` is not recommended, as you can only get the list of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse ListJobs(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List the jobs of a project.
      ///
      /// To list the jobs of a project in a region, we recommend using
      /// `projects.locations.jobs.list` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
      /// list the all jobs across all regions, use `projects.jobs.aggregated`. Using
      /// `projects.jobs.list` is not recommended, as you can only get the list of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse ListJobs(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListJobs, null, options, request);
      }
      /// <summary>
      /// List the jobs of a project.
      ///
      /// To list the jobs of a project in a region, we recommend using
      /// `projects.locations.jobs.list` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
      /// list the all jobs across all regions, use `projects.jobs.aggregated`. Using
      /// `projects.jobs.list` is not recommended, as you can only get the list of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> ListJobsAsync(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List the jobs of a project.
      ///
      /// To list the jobs of a project in a region, we recommend using
      /// `projects.locations.jobs.list` with a [regional endpoint]
      /// (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints). To
      /// list the all jobs across all regions, use `projects.jobs.aggregated`. Using
      /// `projects.jobs.list` is not recommended, as you can only get the list of
      /// jobs that are running in `us-central1`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> ListJobsAsync(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListJobs, null, options, request);
      }
      /// <summary>
      /// List the jobs of a project across all regions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse AggregatedListJobs(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AggregatedListJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List the jobs of a project across all regions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse AggregatedListJobs(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AggregatedListJobs, null, options, request);
      }
      /// <summary>
      /// List the jobs of a project across all regions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> AggregatedListJobsAsync(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AggregatedListJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List the jobs of a project across all regions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse> AggregatedListJobsAsync(global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AggregatedListJobs, null, options, request);
      }
      /// <summary>
      /// Check for existence of active jobs in the given project across all regions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse CheckActiveJobs(global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckActiveJobs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Check for existence of active jobs in the given project across all regions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse CheckActiveJobs(global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckActiveJobs, null, options, request);
      }
      /// <summary>
      /// Check for existence of active jobs in the given project across all regions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse> CheckActiveJobsAsync(global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckActiveJobsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Check for existence of active jobs in the given project across all regions.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse> CheckActiveJobsAsync(global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckActiveJobs, null, options, request);
      }
      /// <summary>
      /// Snapshot the state of a streaming job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.Snapshot SnapshotJob(global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SnapshotJob(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Snapshot the state of a streaming job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Dataflow.V1Beta3.Snapshot SnapshotJob(global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SnapshotJob, null, options, request);
      }
      /// <summary>
      /// Snapshot the state of a streaming job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.Snapshot> SnapshotJobAsync(global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SnapshotJobAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Snapshot the state of a streaming job.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Dataflow.V1Beta3.Snapshot> SnapshotJobAsync(global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SnapshotJob, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override JobsV1Beta3Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new JobsV1Beta3Client(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(JobsV1Beta3Base serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateJob, serviceImpl.CreateJob)
          .AddMethod(__Method_GetJob, serviceImpl.GetJob)
          .AddMethod(__Method_UpdateJob, serviceImpl.UpdateJob)
          .AddMethod(__Method_ListJobs, serviceImpl.ListJobs)
          .AddMethod(__Method_AggregatedListJobs, serviceImpl.AggregatedListJobs)
          .AddMethod(__Method_CheckActiveJobs, serviceImpl.CheckActiveJobs)
          .AddMethod(__Method_SnapshotJob, serviceImpl.SnapshotJob).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, JobsV1Beta3Base serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dataflow.V1Beta3.CreateJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job>(serviceImpl.CreateJob));
      serviceBinder.AddMethod(__Method_GetJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dataflow.V1Beta3.GetJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job>(serviceImpl.GetJob));
      serviceBinder.AddMethod(__Method_UpdateJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dataflow.V1Beta3.UpdateJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Job>(serviceImpl.UpdateJob));
      serviceBinder.AddMethod(__Method_ListJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse>(serviceImpl.ListJobs));
      serviceBinder.AddMethod(__Method_AggregatedListJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dataflow.V1Beta3.ListJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.ListJobsResponse>(serviceImpl.AggregatedListJobs));
      serviceBinder.AddMethod(__Method_CheckActiveJobs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsRequest, global::Google.Cloud.Dataflow.V1Beta3.CheckActiveJobsResponse>(serviceImpl.CheckActiveJobs));
      serviceBinder.AddMethod(__Method_SnapshotJob, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Dataflow.V1Beta3.SnapshotJobRequest, global::Google.Cloud.Dataflow.V1Beta3.Snapshot>(serviceImpl.SnapshotJob));
    }

  }
}
#endregion
