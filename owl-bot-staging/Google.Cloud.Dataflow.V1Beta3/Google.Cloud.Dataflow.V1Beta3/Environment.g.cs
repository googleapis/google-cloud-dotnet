// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/dataflow/v1beta3/environment.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Dataflow.V1Beta3 {

  /// <summary>Holder for reflection information generated from google/dataflow/v1beta3/environment.proto</summary>
  public static partial class EnvironmentReflection {

    #region Descriptor
    /// <summary>File descriptor for google/dataflow/v1beta3/environment.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnvironmentReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvZGF0YWZsb3cvdjFiZXRhMy9lbnZpcm9ubWVudC5wcm90bxIX",
            "Z29vZ2xlLmRhdGFmbG93LnYxYmV0YTMaH2dvb2dsZS9hcGkvZmllbGRfYmVo",
            "YXZpb3IucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aHGdvb2ds",
            "ZS9wcm90b2J1Zi9zdHJ1Y3QucHJvdG8izwUKC0Vudmlyb25tZW50EhsKE3Rl",
            "bXBfc3RvcmFnZV9wcmVmaXgYASABKAkSIwobY2x1c3Rlcl9tYW5hZ2VyX2Fw",
            "aV9zZXJ2aWNlGAIgASgJEhMKC2V4cGVyaW1lbnRzGAMgAygJEhcKD3NlcnZp",
            "Y2Vfb3B0aW9ucxgQIAMoCRIcChRzZXJ2aWNlX2ttc19rZXlfbmFtZRgMIAEo",
            "CRI5Cgx3b3JrZXJfcG9vbHMYBCADKAsyIy5nb29nbGUuZGF0YWZsb3cudjFi",
            "ZXRhMy5Xb3JrZXJQb29sEisKCnVzZXJfYWdlbnQYBSABKAsyFy5nb29nbGUu",
            "cHJvdG9idWYuU3RydWN0EigKB3ZlcnNpb24YBiABKAsyFy5nb29nbGUucHJv",
            "dG9idWYuU3RydWN0Eg8KB2RhdGFzZXQYByABKAkSNQoUc2RrX3BpcGVsaW5l",
            "X29wdGlvbnMYCCABKAsyFy5nb29nbGUucHJvdG9idWYuU3RydWN0EjIKFGlu",
            "dGVybmFsX2V4cGVyaW1lbnRzGAkgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFu",
            "eRIdChVzZXJ2aWNlX2FjY291bnRfZW1haWwYCiABKAkSWgodZmxleF9yZXNv",
            "dXJjZV9zY2hlZHVsaW5nX2dvYWwYCyABKA4yMy5nb29nbGUuZGF0YWZsb3cu",
            "djFiZXRhMy5GbGV4UmVzb3VyY2VTY2hlZHVsaW5nR29hbBIVCg13b3JrZXJf",
            "cmVnaW9uGA0gASgJEhMKC3dvcmtlcl96b25lGA4gASgJEj8KDHNodWZmbGVf",
            "bW9kZRgPIAEoDjIkLmdvb2dsZS5kYXRhZmxvdy52MWJldGEzLlNodWZmbGVN",
            "b2RlQgPgQQMSPAoNZGVidWdfb3B0aW9ucxgRIAEoCzIlLmdvb2dsZS5kYXRh",
            "Zmxvdy52MWJldGEzLkRlYnVnT3B0aW9ucyIpCgdQYWNrYWdlEgwKBG5hbWUY",
            "ASABKAkSEAoIbG9jYXRpb24YAiABKAkiPwoERGlzaxIPCgdzaXplX2diGAEg",
            "ASgFEhEKCWRpc2tfdHlwZRgCIAEoCRITCgttb3VudF9wb2ludBgDIAEoCSKh",
            "AQoOV29ya2VyU2V0dGluZ3MSEAoIYmFzZV91cmwYASABKAkSGQoRcmVwb3J0",
            "aW5nX2VuYWJsZWQYAiABKAgSFAoMc2VydmljZV9wYXRoGAMgASgJEhwKFHNo",
            "dWZmbGVfc2VydmljZV9wYXRoGAQgASgJEhEKCXdvcmtlcl9pZBgFIAEoCRIb",
            "ChN0ZW1wX3N0b3JhZ2VfcHJlZml4GAYgASgJIqQEChJUYXNrUnVubmVyU2V0",
            "dGluZ3MSEQoJdGFza191c2VyGAEgASgJEhIKCnRhc2tfZ3JvdXAYAiABKAkS",
            "FAoMb2F1dGhfc2NvcGVzGAMgAygJEhAKCGJhc2VfdXJsGAQgASgJEhwKFGRh",
            "dGFmbG93X2FwaV92ZXJzaW9uGAUgASgJEkkKGHBhcmFsbGVsX3dvcmtlcl9z",
            "ZXR0aW5ncxgGIAEoCzInLmdvb2dsZS5kYXRhZmxvdy52MWJldGEzLldvcmtl",
            "clNldHRpbmdzEhUKDWJhc2VfdGFza19kaXIYByABKAkSHQoVY29udGludWVf",
            "b25fZXhjZXB0aW9uGAggASgIEhwKFGxvZ190b19zZXJpYWxjb25zb2xlGAkg",
            "ASgIEhcKD2Fsc29sb2d0b3N0ZGVychgKIAEoCBIbChNsb2dfdXBsb2FkX2xv",
            "Y2F0aW9uGAsgASgJEg8KB2xvZ19kaXIYDCABKAkSGwoTdGVtcF9zdG9yYWdl",
            "X3ByZWZpeBgNIAEoCRIXCg9oYXJuZXNzX2NvbW1hbmQYDiABKAkSGgoSd29y",
            "a2Zsb3dfZmlsZV9uYW1lGA8gASgJEh4KFmNvbW1hbmRsaW5lc19maWxlX25h",
            "bWUYECABKAkSDQoFdm1faWQYESABKAkSFQoNbGFuZ3VhZ2VfaGludBgSIAEo",
            "CRIjChtzdHJlYW1pbmdfd29ya2VyX21haW5fY2xhc3MYEyABKAkicAoTQXV0",
            "b3NjYWxpbmdTZXR0aW5ncxJACglhbGdvcml0aG0YASABKA4yLS5nb29nbGUu",
            "ZGF0YWZsb3cudjFiZXRhMy5BdXRvc2NhbGluZ0FsZ29yaXRobRIXCg9tYXhf",
            "bnVtX3dvcmtlcnMYAiABKAUiiAEKGFNka0hhcm5lc3NDb250YWluZXJJbWFn",
            "ZRIXCg9jb250YWluZXJfaW1hZ2UYASABKAkSJQoddXNlX3NpbmdsZV9jb3Jl",
            "X3Blcl9jb250YWluZXIYAiABKAgSFgoOZW52aXJvbm1lbnRfaWQYAyABKAkS",
            "FAoMY2FwYWJpbGl0aWVzGAQgAygJIvIHCgpXb3JrZXJQb29sEgwKBGtpbmQY",
            "ASABKAkSEwoLbnVtX3dvcmtlcnMYAiABKAUSMgoIcGFja2FnZXMYAyADKAsy",
            "IC5nb29nbGUuZGF0YWZsb3cudjFiZXRhMy5QYWNrYWdlEkcKE2RlZmF1bHRf",
            "cGFja2FnZV9zZXQYBCABKA4yKi5nb29nbGUuZGF0YWZsb3cudjFiZXRhMy5E",
            "ZWZhdWx0UGFja2FnZVNldBIUCgxtYWNoaW5lX3R5cGUYBSABKAkSQAoPdGVh",
            "cmRvd25fcG9saWN5GAYgASgOMicuZ29vZ2xlLmRhdGFmbG93LnYxYmV0YTMu",
            "VGVhcmRvd25Qb2xpY3kSFAoMZGlza19zaXplX2diGAcgASgFEhEKCWRpc2tf",
            "dHlwZRgQIAEoCRIZChFkaXNrX3NvdXJjZV9pbWFnZRgIIAEoCRIMCgR6b25l",
            "GAkgASgJEkgKE3Rhc2tydW5uZXJfc2V0dGluZ3MYCiABKAsyKy5nb29nbGUu",
            "ZGF0YWZsb3cudjFiZXRhMy5UYXNrUnVubmVyU2V0dGluZ3MSGwoTb25faG9z",
            "dF9tYWludGVuYW5jZRgLIAEoCRIxCgpkYXRhX2Rpc2tzGAwgAygLMh0uZ29v",
            "Z2xlLmRhdGFmbG93LnYxYmV0YTMuRGlzaxJDCghtZXRhZGF0YRgNIAMoCzIx",
            "Lmdvb2dsZS5kYXRhZmxvdy52MWJldGEzLldvcmtlclBvb2wuTWV0YWRhdGFF",
            "bnRyeRJKChRhdXRvc2NhbGluZ19zZXR0aW5ncxgOIAEoCzIsLmdvb2dsZS5k",
            "YXRhZmxvdy52MWJldGEzLkF1dG9zY2FsaW5nU2V0dGluZ3MSJwoJcG9vbF9h",
            "cmdzGA8gASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIPCgduZXR3b3JrGBEg",
            "ASgJEhIKCnN1Ym5ldHdvcmsYEyABKAkSJgoed29ya2VyX2hhcm5lc3NfY29u",
            "dGFpbmVyX2ltYWdlGBIgASgJEh4KFm51bV90aHJlYWRzX3Blcl93b3JrZXIY",
            "FCABKAUSTwoQaXBfY29uZmlndXJhdGlvbhgVIAEoDjI1Lmdvb2dsZS5kYXRh",
            "Zmxvdy52MWJldGEzLldvcmtlcklQQWRkcmVzc0NvbmZpZ3VyYXRpb24SVwoc",
            "c2RrX2hhcm5lc3NfY29udGFpbmVyX2ltYWdlcxgWIAMoCzIxLmdvb2dsZS5k",
            "YXRhZmxvdy52MWJldGEzLlNka0hhcm5lc3NDb250YWluZXJJbWFnZRovCg1N",
            "ZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi",
            "LgoMRGVidWdPcHRpb25zEh4KFmVuYWJsZV9ob3Rfa2V5X2xvZ2dpbmcYASAB",
            "KAgqSwoHSm9iVHlwZRIUChBKT0JfVFlQRV9VTktOT1dOEAASEgoOSk9CX1RZ",
            "UEVfQkFUQ0gQARIWChJKT0JfVFlQRV9TVFJFQU1JTkcQAiprChpGbGV4UmVz",
            "b3VyY2VTY2hlZHVsaW5nR29hbBIWChJGTEVYUlNfVU5TUEVDSUZJRUQQABIa",
            "ChZGTEVYUlNfU1BFRURfT1BUSU1JWkVEEAESGQoVRkxFWFJTX0NPU1RfT1BU",
            "SU1JWkVEEAIqbwoOVGVhcmRvd25Qb2xpY3kSGwoXVEVBUkRPV05fUE9MSUNZ",
            "X1VOS05PV04QABITCg9URUFSRE9XTl9BTFdBWVMQARIXChNURUFSRE9XTl9P",
            "Tl9TVUNDRVNTEAISEgoOVEVBUkRPV05fTkVWRVIQAyqQAQoRRGVmYXVsdFBh",
            "Y2thZ2VTZXQSHwobREVGQVVMVF9QQUNLQUdFX1NFVF9VTktOT1dOEAASHAoY",
            "REVGQVVMVF9QQUNLQUdFX1NFVF9OT05FEAESHAoYREVGQVVMVF9QQUNLQUdF",
            "X1NFVF9KQVZBEAISHgoaREVGQVVMVF9QQUNLQUdFX1NFVF9QWVRIT04QAyp6",
            "ChRBdXRvc2NhbGluZ0FsZ29yaXRobRIhCh1BVVRPU0NBTElOR19BTEdPUklU",
            "SE1fVU5LTk9XThAAEh4KGkFVVE9TQ0FMSU5HX0FMR09SSVRITV9OT05FEAES",
            "HwobQVVUT1NDQUxJTkdfQUxHT1JJVEhNX0JBU0lDEAIqZgocV29ya2VySVBB",
            "ZGRyZXNzQ29uZmlndXJhdGlvbhIZChVXT1JLRVJfSVBfVU5TUEVDSUZJRUQQ",
            "ABIUChBXT1JLRVJfSVBfUFVCTElDEAESFQoRV09SS0VSX0lQX1BSSVZBVEUQ",
            "AipMCgtTaHVmZmxlTW9kZRIcChhTSFVGRkxFX01PREVfVU5TUEVDSUZJRUQQ",
            "ABIMCghWTV9CQVNFRBABEhEKDVNFUlZJQ0VfQkFTRUQQAkLTAQobY29tLmdv",
            "b2dsZS5kYXRhZmxvdy52MWJldGEzQhBFbnZpcm9ubWVudFByb3RvUAFaPWNs",
            "b3VkLmdvb2dsZS5jb20vZ28vZGF0YWZsb3cvYXBpdjFiZXRhMy9kYXRhZmxv",
            "d3BiO2RhdGFmbG93cGKqAh1Hb29nbGUuQ2xvdWQuRGF0YWZsb3cuVjFCZXRh",
            "M8oCHUdvb2dsZVxDbG91ZFxEYXRhZmxvd1xWMWJldGEz6gIgR29vZ2xlOjpD",
            "bG91ZDo6RGF0YWZsb3c6OlYxYmV0YTNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Dataflow.V1Beta3.JobType), typeof(global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal), typeof(global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy), typeof(global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet), typeof(global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm), typeof(global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration), typeof(global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.Environment), global::Google.Cloud.Dataflow.V1Beta3.Environment.Parser, new[]{ "TempStoragePrefix", "ClusterManagerApiService", "Experiments", "ServiceOptions", "ServiceKmsKeyName", "WorkerPools", "UserAgent", "Version", "Dataset", "SdkPipelineOptions", "InternalExperiments", "ServiceAccountEmail", "FlexResourceSchedulingGoal", "WorkerRegion", "WorkerZone", "ShuffleMode", "DebugOptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.Package), global::Google.Cloud.Dataflow.V1Beta3.Package.Parser, new[]{ "Name", "Location" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.Disk), global::Google.Cloud.Dataflow.V1Beta3.Disk.Parser, new[]{ "SizeGb", "DiskType", "MountPoint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.WorkerSettings), global::Google.Cloud.Dataflow.V1Beta3.WorkerSettings.Parser, new[]{ "BaseUrl", "ReportingEnabled", "ServicePath", "ShuffleServicePath", "WorkerId", "TempStoragePrefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.TaskRunnerSettings), global::Google.Cloud.Dataflow.V1Beta3.TaskRunnerSettings.Parser, new[]{ "TaskUser", "TaskGroup", "OauthScopes", "BaseUrl", "DataflowApiVersion", "ParallelWorkerSettings", "BaseTaskDir", "ContinueOnException", "LogToSerialconsole", "Alsologtostderr", "LogUploadLocation", "LogDir", "TempStoragePrefix", "HarnessCommand", "WorkflowFileName", "CommandlinesFileName", "VmId", "LanguageHint", "StreamingWorkerMainClass" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.AutoscalingSettings), global::Google.Cloud.Dataflow.V1Beta3.AutoscalingSettings.Parser, new[]{ "Algorithm", "MaxNumWorkers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.SdkHarnessContainerImage), global::Google.Cloud.Dataflow.V1Beta3.SdkHarnessContainerImage.Parser, new[]{ "ContainerImage", "UseSingleCorePerContainer", "EnvironmentId", "Capabilities" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.WorkerPool), global::Google.Cloud.Dataflow.V1Beta3.WorkerPool.Parser, new[]{ "Kind", "NumWorkers", "Packages", "DefaultPackageSet", "MachineType", "TeardownPolicy", "DiskSizeGb", "DiskType", "DiskSourceImage", "Zone", "TaskrunnerSettings", "OnHostMaintenance", "DataDisks", "Metadata", "AutoscalingSettings", "PoolArgs", "Network", "Subnetwork", "WorkerHarnessContainerImage", "NumThreadsPerWorker", "IpConfiguration", "SdkHarnessContainerImages" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Dataflow.V1Beta3.DebugOptions), global::Google.Cloud.Dataflow.V1Beta3.DebugOptions.Parser, new[]{ "EnableHotKeyLogging" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Specifies the processing model used by a
  /// [google.dataflow.v1beta3.Job], which determines the way the Job is
  /// managed by the Cloud Dataflow service (how workers are scheduled, how
  /// inputs are sharded, etc).
  /// </summary>
  public enum JobType {
    /// <summary>
    /// The type of the job is unspecified, or unknown.
    /// </summary>
    [pbr::OriginalName("JOB_TYPE_UNKNOWN")] Unknown = 0,
    /// <summary>
    /// A batch job with a well-defined end point: data is read, data is
    /// processed, data is written, and the job is done.
    /// </summary>
    [pbr::OriginalName("JOB_TYPE_BATCH")] Batch = 1,
    /// <summary>
    /// A continuously streaming job with no end: data is read,
    /// processed, and written continuously.
    /// </summary>
    [pbr::OriginalName("JOB_TYPE_STREAMING")] Streaming = 2,
  }

  /// <summary>
  /// Specifies the resource to optimize for in Flexible Resource Scheduling.
  /// </summary>
  public enum FlexResourceSchedulingGoal {
    /// <summary>
    /// Run in the default mode.
    /// </summary>
    [pbr::OriginalName("FLEXRS_UNSPECIFIED")] FlexrsUnspecified = 0,
    /// <summary>
    /// Optimize for lower execution time.
    /// </summary>
    [pbr::OriginalName("FLEXRS_SPEED_OPTIMIZED")] FlexrsSpeedOptimized = 1,
    /// <summary>
    /// Optimize for lower cost.
    /// </summary>
    [pbr::OriginalName("FLEXRS_COST_OPTIMIZED")] FlexrsCostOptimized = 2,
  }

  /// <summary>
  /// Specifies what happens to a resource when a Cloud Dataflow
  /// [google.dataflow.v1beta3.Job][google.dataflow.v1beta3.Job] has completed.
  /// </summary>
  public enum TeardownPolicy {
    /// <summary>
    /// The teardown policy isn't specified, or is unknown.
    /// </summary>
    [pbr::OriginalName("TEARDOWN_POLICY_UNKNOWN")] Unknown = 0,
    /// <summary>
    /// Always teardown the resource.
    /// </summary>
    [pbr::OriginalName("TEARDOWN_ALWAYS")] TeardownAlways = 1,
    /// <summary>
    /// Teardown the resource on success. This is useful for debugging
    /// failures.
    /// </summary>
    [pbr::OriginalName("TEARDOWN_ON_SUCCESS")] TeardownOnSuccess = 2,
    /// <summary>
    /// Never teardown the resource. This is useful for debugging and
    /// development.
    /// </summary>
    [pbr::OriginalName("TEARDOWN_NEVER")] TeardownNever = 3,
  }

  /// <summary>
  /// The default set of packages to be staged on a pool of workers.
  /// </summary>
  public enum DefaultPackageSet {
    /// <summary>
    /// The default set of packages to stage is unknown, or unspecified.
    /// </summary>
    [pbr::OriginalName("DEFAULT_PACKAGE_SET_UNKNOWN")] Unknown = 0,
    /// <summary>
    /// Indicates that no packages should be staged at the worker unless
    /// explicitly specified by the job.
    /// </summary>
    [pbr::OriginalName("DEFAULT_PACKAGE_SET_NONE")] None = 1,
    /// <summary>
    /// Stage packages typically useful to workers written in Java.
    /// </summary>
    [pbr::OriginalName("DEFAULT_PACKAGE_SET_JAVA")] Java = 2,
    /// <summary>
    /// Stage packages typically useful to workers written in Python.
    /// </summary>
    [pbr::OriginalName("DEFAULT_PACKAGE_SET_PYTHON")] Python = 3,
  }

  /// <summary>
  /// Specifies the algorithm used to determine the number of worker
  /// processes to run at any given point in time, based on the amount of
  /// data left to process, the number of workers, and how quickly
  /// existing workers are processing data.
  /// </summary>
  public enum AutoscalingAlgorithm {
    /// <summary>
    /// The algorithm is unknown, or unspecified.
    /// </summary>
    [pbr::OriginalName("AUTOSCALING_ALGORITHM_UNKNOWN")] Unknown = 0,
    /// <summary>
    /// Disable autoscaling.
    /// </summary>
    [pbr::OriginalName("AUTOSCALING_ALGORITHM_NONE")] None = 1,
    /// <summary>
    /// Increase worker count over time to reduce job execution time.
    /// </summary>
    [pbr::OriginalName("AUTOSCALING_ALGORITHM_BASIC")] Basic = 2,
  }

  /// <summary>
  /// Specifies how IP addresses should be allocated to the worker machines.
  /// </summary>
  public enum WorkerIPAddressConfiguration {
    /// <summary>
    /// The configuration is unknown, or unspecified.
    /// </summary>
    [pbr::OriginalName("WORKER_IP_UNSPECIFIED")] WorkerIpUnspecified = 0,
    /// <summary>
    /// Workers should have public IP addresses.
    /// </summary>
    [pbr::OriginalName("WORKER_IP_PUBLIC")] WorkerIpPublic = 1,
    /// <summary>
    /// Workers should have private IP addresses.
    /// </summary>
    [pbr::OriginalName("WORKER_IP_PRIVATE")] WorkerIpPrivate = 2,
  }

  /// <summary>
  /// Specifies the shuffle mode used by a
  /// [google.dataflow.v1beta3.Job], which determines the approach data is shuffled
  /// during processing. More details in:
  /// https://cloud.google.com/dataflow/docs/guides/deploying-a-pipeline#dataflow-shuffle
  /// </summary>
  public enum ShuffleMode {
    /// <summary>
    /// Shuffle mode information is not available.
    /// </summary>
    [pbr::OriginalName("SHUFFLE_MODE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Shuffle is done on the worker VMs.
    /// </summary>
    [pbr::OriginalName("VM_BASED")] VmBased = 1,
    /// <summary>
    /// Shuffle is done on the service side.
    /// </summary>
    [pbr::OriginalName("SERVICE_BASED")] ServiceBased = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Describes the environment in which a Dataflow Job runs.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Environment : pb::IMessage<Environment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Environment> _parser = new pb::MessageParser<Environment>(() => new Environment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Environment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Environment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Environment(Environment other) : this() {
      tempStoragePrefix_ = other.tempStoragePrefix_;
      clusterManagerApiService_ = other.clusterManagerApiService_;
      experiments_ = other.experiments_.Clone();
      serviceOptions_ = other.serviceOptions_.Clone();
      serviceKmsKeyName_ = other.serviceKmsKeyName_;
      workerPools_ = other.workerPools_.Clone();
      userAgent_ = other.userAgent_ != null ? other.userAgent_.Clone() : null;
      version_ = other.version_ != null ? other.version_.Clone() : null;
      dataset_ = other.dataset_;
      sdkPipelineOptions_ = other.sdkPipelineOptions_ != null ? other.sdkPipelineOptions_.Clone() : null;
      internalExperiments_ = other.internalExperiments_ != null ? other.internalExperiments_.Clone() : null;
      serviceAccountEmail_ = other.serviceAccountEmail_;
      flexResourceSchedulingGoal_ = other.flexResourceSchedulingGoal_;
      workerRegion_ = other.workerRegion_;
      workerZone_ = other.workerZone_;
      shuffleMode_ = other.shuffleMode_;
      debugOptions_ = other.debugOptions_ != null ? other.debugOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Environment Clone() {
      return new Environment(this);
    }

    /// <summary>Field number for the "temp_storage_prefix" field.</summary>
    public const int TempStoragePrefixFieldNumber = 1;
    private string tempStoragePrefix_ = "";
    /// <summary>
    /// The prefix of the resources the system should use for temporary
    /// storage.  The system will append the suffix "/temp-{JOBNAME} to
    /// this resource prefix, where {JOBNAME} is the value of the
    /// job_name field.  The resulting bucket and object prefix is used
    /// as the prefix of the resources used to store temporary data
    /// needed during the job execution.  NOTE: This will override the
    /// value in taskrunner_settings.
    /// The supported resource type is:
    ///
    /// Google Cloud Storage:
    ///
    ///   storage.googleapis.com/{bucket}/{object}
    ///   bucket.storage.googleapis.com/{object}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TempStoragePrefix {
      get { return tempStoragePrefix_; }
      set {
        tempStoragePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_manager_api_service" field.</summary>
    public const int ClusterManagerApiServiceFieldNumber = 2;
    private string clusterManagerApiService_ = "";
    /// <summary>
    /// The type of cluster manager API to use.  If unknown or
    /// unspecified, the service will attempt to choose a reasonable
    /// default.  This should be in the form of the API service name,
    /// e.g. "compute.googleapis.com".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClusterManagerApiService {
      get { return clusterManagerApiService_; }
      set {
        clusterManagerApiService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "experiments" field.</summary>
    public const int ExperimentsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_experiments_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> experiments_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of experiments to enable. This field should be used for SDK
    /// related experiments and not for service related experiments. The proper
    /// field for service related experiments is service_options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Experiments {
      get { return experiments_; }
    }

    /// <summary>Field number for the "service_options" field.</summary>
    public const int ServiceOptionsFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _repeated_serviceOptions_codec
        = pb::FieldCodec.ForString(130);
    private readonly pbc::RepeatedField<string> serviceOptions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of service options to enable. This field should be used for
    /// service related experiments only. These experiments, when graduating to GA,
    /// should be replaced by dedicated fields or become default (i.e. always on).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ServiceOptions {
      get { return serviceOptions_; }
    }

    /// <summary>Field number for the "service_kms_key_name" field.</summary>
    public const int ServiceKmsKeyNameFieldNumber = 12;
    private string serviceKmsKeyName_ = "";
    /// <summary>
    /// If set, contains the Cloud KMS key identifier used to encrypt data
    /// at rest, AKA a Customer Managed Encryption Key (CMEK).
    ///
    /// Format:
    ///   projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceKmsKeyName {
      get { return serviceKmsKeyName_; }
      set {
        serviceKmsKeyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worker_pools" field.</summary>
    public const int WorkerPoolsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataflow.V1Beta3.WorkerPool> _repeated_workerPools_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Dataflow.V1Beta3.WorkerPool.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.WorkerPool> workerPools_ = new pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.WorkerPool>();
    /// <summary>
    /// The worker pools. At least one "harness" worker pool must be
    /// specified in order for the job to have workers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.WorkerPool> WorkerPools {
      get { return workerPools_; }
    }

    /// <summary>Field number for the "user_agent" field.</summary>
    public const int UserAgentFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Struct userAgent_;
    /// <summary>
    /// A description of the process that generated the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Struct UserAgent {
      get { return userAgent_; }
      set {
        userAgent_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Struct version_;
    /// <summary>
    /// A structure describing which components and their versions of the service
    /// are required in order to run the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Struct Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "dataset" field.</summary>
    public const int DatasetFieldNumber = 7;
    private string dataset_ = "";
    /// <summary>
    /// The dataset for the current project where various workflow
    /// related tables are stored.
    ///
    /// The supported resource type is:
    ///
    /// Google BigQuery:
    ///   bigquery.googleapis.com/{dataset}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Dataset {
      get { return dataset_; }
      set {
        dataset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sdk_pipeline_options" field.</summary>
    public const int SdkPipelineOptionsFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Struct sdkPipelineOptions_;
    /// <summary>
    /// The Cloud Dataflow SDK pipeline options specified by the user. These
    /// options are passed through the service and are used to recreate the
    /// SDK pipeline options on the worker in a language agnostic and platform
    /// independent way.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Struct SdkPipelineOptions {
      get { return sdkPipelineOptions_; }
      set {
        sdkPipelineOptions_ = value;
      }
    }

    /// <summary>Field number for the "internal_experiments" field.</summary>
    public const int InternalExperimentsFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Any internalExperiments_;
    /// <summary>
    /// Experimental settings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any InternalExperiments {
      get { return internalExperiments_; }
      set {
        internalExperiments_ = value;
      }
    }

    /// <summary>Field number for the "service_account_email" field.</summary>
    public const int ServiceAccountEmailFieldNumber = 10;
    private string serviceAccountEmail_ = "";
    /// <summary>
    /// Identity to run virtual machines as. Defaults to the default account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceAccountEmail {
      get { return serviceAccountEmail_; }
      set {
        serviceAccountEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flex_resource_scheduling_goal" field.</summary>
    public const int FlexResourceSchedulingGoalFieldNumber = 11;
    private global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal flexResourceSchedulingGoal_ = global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal.FlexrsUnspecified;
    /// <summary>
    /// Which Flexible Resource Scheduling mode to run in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal FlexResourceSchedulingGoal {
      get { return flexResourceSchedulingGoal_; }
      set {
        flexResourceSchedulingGoal_ = value;
      }
    }

    /// <summary>Field number for the "worker_region" field.</summary>
    public const int WorkerRegionFieldNumber = 13;
    private string workerRegion_ = "";
    /// <summary>
    /// The Compute Engine region
    /// (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in
    /// which worker processing should occur, e.g. "us-west1". Mutually exclusive
    /// with worker_zone. If neither worker_region nor worker_zone is specified,
    /// default to the control plane's region.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WorkerRegion {
      get { return workerRegion_; }
      set {
        workerRegion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worker_zone" field.</summary>
    public const int WorkerZoneFieldNumber = 14;
    private string workerZone_ = "";
    /// <summary>
    /// The Compute Engine zone
    /// (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in
    /// which worker processing should occur, e.g. "us-west1-a". Mutually exclusive
    /// with worker_region. If neither worker_region nor worker_zone is specified,
    /// a zone in the control plane's region is chosen based on available capacity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WorkerZone {
      get { return workerZone_; }
      set {
        workerZone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shuffle_mode" field.</summary>
    public const int ShuffleModeFieldNumber = 15;
    private global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode shuffleMode_ = global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode.Unspecified;
    /// <summary>
    /// Output only. The shuffle mode used for the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode ShuffleMode {
      get { return shuffleMode_; }
      set {
        shuffleMode_ = value;
      }
    }

    /// <summary>Field number for the "debug_options" field.</summary>
    public const int DebugOptionsFieldNumber = 17;
    private global::Google.Cloud.Dataflow.V1Beta3.DebugOptions debugOptions_;
    /// <summary>
    /// Any debugging options to be supplied to the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.DebugOptions DebugOptions {
      get { return debugOptions_; }
      set {
        debugOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Environment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Environment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TempStoragePrefix != other.TempStoragePrefix) return false;
      if (ClusterManagerApiService != other.ClusterManagerApiService) return false;
      if(!experiments_.Equals(other.experiments_)) return false;
      if(!serviceOptions_.Equals(other.serviceOptions_)) return false;
      if (ServiceKmsKeyName != other.ServiceKmsKeyName) return false;
      if(!workerPools_.Equals(other.workerPools_)) return false;
      if (!object.Equals(UserAgent, other.UserAgent)) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if (Dataset != other.Dataset) return false;
      if (!object.Equals(SdkPipelineOptions, other.SdkPipelineOptions)) return false;
      if (!object.Equals(InternalExperiments, other.InternalExperiments)) return false;
      if (ServiceAccountEmail != other.ServiceAccountEmail) return false;
      if (FlexResourceSchedulingGoal != other.FlexResourceSchedulingGoal) return false;
      if (WorkerRegion != other.WorkerRegion) return false;
      if (WorkerZone != other.WorkerZone) return false;
      if (ShuffleMode != other.ShuffleMode) return false;
      if (!object.Equals(DebugOptions, other.DebugOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TempStoragePrefix.Length != 0) hash ^= TempStoragePrefix.GetHashCode();
      if (ClusterManagerApiService.Length != 0) hash ^= ClusterManagerApiService.GetHashCode();
      hash ^= experiments_.GetHashCode();
      hash ^= serviceOptions_.GetHashCode();
      if (ServiceKmsKeyName.Length != 0) hash ^= ServiceKmsKeyName.GetHashCode();
      hash ^= workerPools_.GetHashCode();
      if (userAgent_ != null) hash ^= UserAgent.GetHashCode();
      if (version_ != null) hash ^= Version.GetHashCode();
      if (Dataset.Length != 0) hash ^= Dataset.GetHashCode();
      if (sdkPipelineOptions_ != null) hash ^= SdkPipelineOptions.GetHashCode();
      if (internalExperiments_ != null) hash ^= InternalExperiments.GetHashCode();
      if (ServiceAccountEmail.Length != 0) hash ^= ServiceAccountEmail.GetHashCode();
      if (FlexResourceSchedulingGoal != global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal.FlexrsUnspecified) hash ^= FlexResourceSchedulingGoal.GetHashCode();
      if (WorkerRegion.Length != 0) hash ^= WorkerRegion.GetHashCode();
      if (WorkerZone.Length != 0) hash ^= WorkerZone.GetHashCode();
      if (ShuffleMode != global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode.Unspecified) hash ^= ShuffleMode.GetHashCode();
      if (debugOptions_ != null) hash ^= DebugOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TempStoragePrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TempStoragePrefix);
      }
      if (ClusterManagerApiService.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterManagerApiService);
      }
      experiments_.WriteTo(output, _repeated_experiments_codec);
      workerPools_.WriteTo(output, _repeated_workerPools_codec);
      if (userAgent_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserAgent);
      }
      if (version_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Version);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Dataset);
      }
      if (sdkPipelineOptions_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SdkPipelineOptions);
      }
      if (internalExperiments_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(InternalExperiments);
      }
      if (ServiceAccountEmail.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ServiceAccountEmail);
      }
      if (FlexResourceSchedulingGoal != global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal.FlexrsUnspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) FlexResourceSchedulingGoal);
      }
      if (ServiceKmsKeyName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ServiceKmsKeyName);
      }
      if (WorkerRegion.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(WorkerRegion);
      }
      if (WorkerZone.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(WorkerZone);
      }
      if (ShuffleMode != global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ShuffleMode);
      }
      serviceOptions_.WriteTo(output, _repeated_serviceOptions_codec);
      if (debugOptions_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(DebugOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TempStoragePrefix.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TempStoragePrefix);
      }
      if (ClusterManagerApiService.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterManagerApiService);
      }
      experiments_.WriteTo(ref output, _repeated_experiments_codec);
      workerPools_.WriteTo(ref output, _repeated_workerPools_codec);
      if (userAgent_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UserAgent);
      }
      if (version_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Version);
      }
      if (Dataset.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Dataset);
      }
      if (sdkPipelineOptions_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(SdkPipelineOptions);
      }
      if (internalExperiments_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(InternalExperiments);
      }
      if (ServiceAccountEmail.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ServiceAccountEmail);
      }
      if (FlexResourceSchedulingGoal != global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal.FlexrsUnspecified) {
        output.WriteRawTag(88);
        output.WriteEnum((int) FlexResourceSchedulingGoal);
      }
      if (ServiceKmsKeyName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ServiceKmsKeyName);
      }
      if (WorkerRegion.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(WorkerRegion);
      }
      if (WorkerZone.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(WorkerZone);
      }
      if (ShuffleMode != global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ShuffleMode);
      }
      serviceOptions_.WriteTo(ref output, _repeated_serviceOptions_codec);
      if (debugOptions_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(DebugOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TempStoragePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TempStoragePrefix);
      }
      if (ClusterManagerApiService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterManagerApiService);
      }
      size += experiments_.CalculateSize(_repeated_experiments_codec);
      size += serviceOptions_.CalculateSize(_repeated_serviceOptions_codec);
      if (ServiceKmsKeyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceKmsKeyName);
      }
      size += workerPools_.CalculateSize(_repeated_workerPools_codec);
      if (userAgent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAgent);
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (Dataset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dataset);
      }
      if (sdkPipelineOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SdkPipelineOptions);
      }
      if (internalExperiments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InternalExperiments);
      }
      if (ServiceAccountEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccountEmail);
      }
      if (FlexResourceSchedulingGoal != global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal.FlexrsUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FlexResourceSchedulingGoal);
      }
      if (WorkerRegion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerRegion);
      }
      if (WorkerZone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerZone);
      }
      if (ShuffleMode != global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShuffleMode);
      }
      if (debugOptions_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DebugOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Environment other) {
      if (other == null) {
        return;
      }
      if (other.TempStoragePrefix.Length != 0) {
        TempStoragePrefix = other.TempStoragePrefix;
      }
      if (other.ClusterManagerApiService.Length != 0) {
        ClusterManagerApiService = other.ClusterManagerApiService;
      }
      experiments_.Add(other.experiments_);
      serviceOptions_.Add(other.serviceOptions_);
      if (other.ServiceKmsKeyName.Length != 0) {
        ServiceKmsKeyName = other.ServiceKmsKeyName;
      }
      workerPools_.Add(other.workerPools_);
      if (other.userAgent_ != null) {
        if (userAgent_ == null) {
          UserAgent = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        UserAgent.MergeFrom(other.UserAgent);
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.Dataset.Length != 0) {
        Dataset = other.Dataset;
      }
      if (other.sdkPipelineOptions_ != null) {
        if (sdkPipelineOptions_ == null) {
          SdkPipelineOptions = new global::Google.Protobuf.WellKnownTypes.Struct();
        }
        SdkPipelineOptions.MergeFrom(other.SdkPipelineOptions);
      }
      if (other.internalExperiments_ != null) {
        if (internalExperiments_ == null) {
          InternalExperiments = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        InternalExperiments.MergeFrom(other.InternalExperiments);
      }
      if (other.ServiceAccountEmail.Length != 0) {
        ServiceAccountEmail = other.ServiceAccountEmail;
      }
      if (other.FlexResourceSchedulingGoal != global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal.FlexrsUnspecified) {
        FlexResourceSchedulingGoal = other.FlexResourceSchedulingGoal;
      }
      if (other.WorkerRegion.Length != 0) {
        WorkerRegion = other.WorkerRegion;
      }
      if (other.WorkerZone.Length != 0) {
        WorkerZone = other.WorkerZone;
      }
      if (other.ShuffleMode != global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode.Unspecified) {
        ShuffleMode = other.ShuffleMode;
      }
      if (other.debugOptions_ != null) {
        if (debugOptions_ == null) {
          DebugOptions = new global::Google.Cloud.Dataflow.V1Beta3.DebugOptions();
        }
        DebugOptions.MergeFrom(other.DebugOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TempStoragePrefix = input.ReadString();
            break;
          }
          case 18: {
            ClusterManagerApiService = input.ReadString();
            break;
          }
          case 26: {
            experiments_.AddEntriesFrom(input, _repeated_experiments_codec);
            break;
          }
          case 34: {
            workerPools_.AddEntriesFrom(input, _repeated_workerPools_codec);
            break;
          }
          case 42: {
            if (userAgent_ == null) {
              UserAgent = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(UserAgent);
            break;
          }
          case 50: {
            if (version_ == null) {
              Version = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Version);
            break;
          }
          case 58: {
            Dataset = input.ReadString();
            break;
          }
          case 66: {
            if (sdkPipelineOptions_ == null) {
              SdkPipelineOptions = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(SdkPipelineOptions);
            break;
          }
          case 74: {
            if (internalExperiments_ == null) {
              InternalExperiments = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(InternalExperiments);
            break;
          }
          case 82: {
            ServiceAccountEmail = input.ReadString();
            break;
          }
          case 88: {
            FlexResourceSchedulingGoal = (global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal) input.ReadEnum();
            break;
          }
          case 98: {
            ServiceKmsKeyName = input.ReadString();
            break;
          }
          case 106: {
            WorkerRegion = input.ReadString();
            break;
          }
          case 114: {
            WorkerZone = input.ReadString();
            break;
          }
          case 120: {
            ShuffleMode = (global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode) input.ReadEnum();
            break;
          }
          case 130: {
            serviceOptions_.AddEntriesFrom(input, _repeated_serviceOptions_codec);
            break;
          }
          case 138: {
            if (debugOptions_ == null) {
              DebugOptions = new global::Google.Cloud.Dataflow.V1Beta3.DebugOptions();
            }
            input.ReadMessage(DebugOptions);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TempStoragePrefix = input.ReadString();
            break;
          }
          case 18: {
            ClusterManagerApiService = input.ReadString();
            break;
          }
          case 26: {
            experiments_.AddEntriesFrom(ref input, _repeated_experiments_codec);
            break;
          }
          case 34: {
            workerPools_.AddEntriesFrom(ref input, _repeated_workerPools_codec);
            break;
          }
          case 42: {
            if (userAgent_ == null) {
              UserAgent = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(UserAgent);
            break;
          }
          case 50: {
            if (version_ == null) {
              Version = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(Version);
            break;
          }
          case 58: {
            Dataset = input.ReadString();
            break;
          }
          case 66: {
            if (sdkPipelineOptions_ == null) {
              SdkPipelineOptions = new global::Google.Protobuf.WellKnownTypes.Struct();
            }
            input.ReadMessage(SdkPipelineOptions);
            break;
          }
          case 74: {
            if (internalExperiments_ == null) {
              InternalExperiments = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(InternalExperiments);
            break;
          }
          case 82: {
            ServiceAccountEmail = input.ReadString();
            break;
          }
          case 88: {
            FlexResourceSchedulingGoal = (global::Google.Cloud.Dataflow.V1Beta3.FlexResourceSchedulingGoal) input.ReadEnum();
            break;
          }
          case 98: {
            ServiceKmsKeyName = input.ReadString();
            break;
          }
          case 106: {
            WorkerRegion = input.ReadString();
            break;
          }
          case 114: {
            WorkerZone = input.ReadString();
            break;
          }
          case 120: {
            ShuffleMode = (global::Google.Cloud.Dataflow.V1Beta3.ShuffleMode) input.ReadEnum();
            break;
          }
          case 130: {
            serviceOptions_.AddEntriesFrom(ref input, _repeated_serviceOptions_codec);
            break;
          }
          case 138: {
            if (debugOptions_ == null) {
              DebugOptions = new global::Google.Cloud.Dataflow.V1Beta3.DebugOptions();
            }
            input.ReadMessage(DebugOptions);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The packages that must be installed in order for a worker to run the
  /// steps of the Cloud Dataflow job that will be assigned to its worker
  /// pool.
  ///
  /// This is the mechanism by which the Cloud Dataflow SDK causes code to
  /// be loaded onto the workers. For example, the Cloud Dataflow Java SDK
  /// might use this to install jars containing the user's code and all of the
  /// various dependencies (libraries, data files, etc.) required in order
  /// for that code to run.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Package : pb::IMessage<Package>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Package> _parser = new pb::MessageParser<Package>(() => new Package());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Package> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Package() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Package(Package other) : this() {
      name_ = other.name_;
      location_ = other.location_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Package Clone() {
      return new Package(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private string location_ = "";
    /// <summary>
    /// The resource to read the package from. The supported resource type is:
    ///
    /// Google Cloud Storage:
    ///
    ///   storage.googleapis.com/{bucket}
    ///   bucket.storage.googleapis.com/
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Package);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Package other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Location != other.Location) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Location);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Package other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Location = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Location = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes the data disk used by a workflow job.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Disk : pb::IMessage<Disk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Disk> _parser = new pb::MessageParser<Disk>(() => new Disk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Disk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Disk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Disk(Disk other) : this() {
      sizeGb_ = other.sizeGb_;
      diskType_ = other.diskType_;
      mountPoint_ = other.mountPoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Disk Clone() {
      return new Disk(this);
    }

    /// <summary>Field number for the "size_gb" field.</summary>
    public const int SizeGbFieldNumber = 1;
    private int sizeGb_;
    /// <summary>
    /// Size of disk in GB.  If zero or unspecified, the service will
    /// attempt to choose a reasonable default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SizeGb {
      get { return sizeGb_; }
      set {
        sizeGb_ = value;
      }
    }

    /// <summary>Field number for the "disk_type" field.</summary>
    public const int DiskTypeFieldNumber = 2;
    private string diskType_ = "";
    /// <summary>
    /// Disk storage type, as defined by Google Compute Engine.  This
    /// must be a disk type appropriate to the project and zone in which
    /// the workers will run.  If unknown or unspecified, the service
    /// will attempt to choose a reasonable default.
    ///
    /// For example, the standard persistent disk type is a resource name
    /// typically ending in "pd-standard".  If SSD persistent disks are
    /// available, the resource name typically ends with "pd-ssd".  The
    /// actual valid values are defined the Google Compute Engine API,
    /// not by the Cloud Dataflow API; consult the Google Compute Engine
    /// documentation for more information about determining the set of
    /// available disk types for a particular project and zone.
    ///
    /// Google Compute Engine Disk types are local to a particular
    /// project in a particular zone, and so the resource name will
    /// typically look something like this:
    ///
    /// compute.googleapis.com/projects/project-id/zones/zone/diskTypes/pd-standard
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DiskType {
      get { return diskType_; }
      set {
        diskType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mount_point" field.</summary>
    public const int MountPointFieldNumber = 3;
    private string mountPoint_ = "";
    /// <summary>
    /// Directory in a VM where disk is mounted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MountPoint {
      get { return mountPoint_; }
      set {
        mountPoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Disk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Disk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SizeGb != other.SizeGb) return false;
      if (DiskType != other.DiskType) return false;
      if (MountPoint != other.MountPoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SizeGb != 0) hash ^= SizeGb.GetHashCode();
      if (DiskType.Length != 0) hash ^= DiskType.GetHashCode();
      if (MountPoint.Length != 0) hash ^= MountPoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SizeGb != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SizeGb);
      }
      if (DiskType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DiskType);
      }
      if (MountPoint.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MountPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SizeGb != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SizeGb);
      }
      if (DiskType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DiskType);
      }
      if (MountPoint.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MountPoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SizeGb);
      }
      if (DiskType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiskType);
      }
      if (MountPoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MountPoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Disk other) {
      if (other == null) {
        return;
      }
      if (other.SizeGb != 0) {
        SizeGb = other.SizeGb;
      }
      if (other.DiskType.Length != 0) {
        DiskType = other.DiskType;
      }
      if (other.MountPoint.Length != 0) {
        MountPoint = other.MountPoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SizeGb = input.ReadInt32();
            break;
          }
          case 18: {
            DiskType = input.ReadString();
            break;
          }
          case 26: {
            MountPoint = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SizeGb = input.ReadInt32();
            break;
          }
          case 18: {
            DiskType = input.ReadString();
            break;
          }
          case 26: {
            MountPoint = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides data to pass through to the worker harness.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WorkerSettings : pb::IMessage<WorkerSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorkerSettings> _parser = new pb::MessageParser<WorkerSettings>(() => new WorkerSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WorkerSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkerSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkerSettings(WorkerSettings other) : this() {
      baseUrl_ = other.baseUrl_;
      reportingEnabled_ = other.reportingEnabled_;
      servicePath_ = other.servicePath_;
      shuffleServicePath_ = other.shuffleServicePath_;
      workerId_ = other.workerId_;
      tempStoragePrefix_ = other.tempStoragePrefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkerSettings Clone() {
      return new WorkerSettings(this);
    }

    /// <summary>Field number for the "base_url" field.</summary>
    public const int BaseUrlFieldNumber = 1;
    private string baseUrl_ = "";
    /// <summary>
    /// The base URL for accessing Google Cloud APIs.
    ///
    /// When workers access Google Cloud APIs, they logically do so via
    /// relative URLs.  If this field is specified, it supplies the base
    /// URL to use for resolving these relative URLs.  The normative
    /// algorithm used is defined by RFC 1808, "Relative Uniform Resource
    /// Locators".
    ///
    /// If not specified, the default value is "http://www.googleapis.com/"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseUrl {
      get { return baseUrl_; }
      set {
        baseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reporting_enabled" field.</summary>
    public const int ReportingEnabledFieldNumber = 2;
    private bool reportingEnabled_;
    /// <summary>
    /// Whether to send work progress updates to the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ReportingEnabled {
      get { return reportingEnabled_; }
      set {
        reportingEnabled_ = value;
      }
    }

    /// <summary>Field number for the "service_path" field.</summary>
    public const int ServicePathFieldNumber = 3;
    private string servicePath_ = "";
    /// <summary>
    /// The Cloud Dataflow service path relative to the root URL, for example,
    /// "dataflow/v1b3/projects".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServicePath {
      get { return servicePath_; }
      set {
        servicePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shuffle_service_path" field.</summary>
    public const int ShuffleServicePathFieldNumber = 4;
    private string shuffleServicePath_ = "";
    /// <summary>
    /// The Shuffle service path relative to the root URL, for example,
    /// "shuffle/v1beta1".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ShuffleServicePath {
      get { return shuffleServicePath_; }
      set {
        shuffleServicePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worker_id" field.</summary>
    public const int WorkerIdFieldNumber = 5;
    private string workerId_ = "";
    /// <summary>
    /// The ID of the worker running this pipeline.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WorkerId {
      get { return workerId_; }
      set {
        workerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "temp_storage_prefix" field.</summary>
    public const int TempStoragePrefixFieldNumber = 6;
    private string tempStoragePrefix_ = "";
    /// <summary>
    /// The prefix of the resources the system should use for temporary
    /// storage.
    ///
    /// The supported resource type is:
    ///
    /// Google Cloud Storage:
    ///
    ///   storage.googleapis.com/{bucket}/{object}
    ///   bucket.storage.googleapis.com/{object}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TempStoragePrefix {
      get { return tempStoragePrefix_; }
      set {
        tempStoragePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WorkerSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WorkerSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseUrl != other.BaseUrl) return false;
      if (ReportingEnabled != other.ReportingEnabled) return false;
      if (ServicePath != other.ServicePath) return false;
      if (ShuffleServicePath != other.ShuffleServicePath) return false;
      if (WorkerId != other.WorkerId) return false;
      if (TempStoragePrefix != other.TempStoragePrefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseUrl.Length != 0) hash ^= BaseUrl.GetHashCode();
      if (ReportingEnabled != false) hash ^= ReportingEnabled.GetHashCode();
      if (ServicePath.Length != 0) hash ^= ServicePath.GetHashCode();
      if (ShuffleServicePath.Length != 0) hash ^= ShuffleServicePath.GetHashCode();
      if (WorkerId.Length != 0) hash ^= WorkerId.GetHashCode();
      if (TempStoragePrefix.Length != 0) hash ^= TempStoragePrefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BaseUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BaseUrl);
      }
      if (ReportingEnabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(ReportingEnabled);
      }
      if (ServicePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServicePath);
      }
      if (ShuffleServicePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShuffleServicePath);
      }
      if (WorkerId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(WorkerId);
      }
      if (TempStoragePrefix.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TempStoragePrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BaseUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BaseUrl);
      }
      if (ReportingEnabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(ReportingEnabled);
      }
      if (ServicePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServicePath);
      }
      if (ShuffleServicePath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ShuffleServicePath);
      }
      if (WorkerId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(WorkerId);
      }
      if (TempStoragePrefix.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TempStoragePrefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BaseUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseUrl);
      }
      if (ReportingEnabled != false) {
        size += 1 + 1;
      }
      if (ServicePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicePath);
      }
      if (ShuffleServicePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShuffleServicePath);
      }
      if (WorkerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerId);
      }
      if (TempStoragePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TempStoragePrefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WorkerSettings other) {
      if (other == null) {
        return;
      }
      if (other.BaseUrl.Length != 0) {
        BaseUrl = other.BaseUrl;
      }
      if (other.ReportingEnabled != false) {
        ReportingEnabled = other.ReportingEnabled;
      }
      if (other.ServicePath.Length != 0) {
        ServicePath = other.ServicePath;
      }
      if (other.ShuffleServicePath.Length != 0) {
        ShuffleServicePath = other.ShuffleServicePath;
      }
      if (other.WorkerId.Length != 0) {
        WorkerId = other.WorkerId;
      }
      if (other.TempStoragePrefix.Length != 0) {
        TempStoragePrefix = other.TempStoragePrefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BaseUrl = input.ReadString();
            break;
          }
          case 16: {
            ReportingEnabled = input.ReadBool();
            break;
          }
          case 26: {
            ServicePath = input.ReadString();
            break;
          }
          case 34: {
            ShuffleServicePath = input.ReadString();
            break;
          }
          case 42: {
            WorkerId = input.ReadString();
            break;
          }
          case 50: {
            TempStoragePrefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BaseUrl = input.ReadString();
            break;
          }
          case 16: {
            ReportingEnabled = input.ReadBool();
            break;
          }
          case 26: {
            ServicePath = input.ReadString();
            break;
          }
          case 34: {
            ShuffleServicePath = input.ReadString();
            break;
          }
          case 42: {
            WorkerId = input.ReadString();
            break;
          }
          case 50: {
            TempStoragePrefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Taskrunner configuration settings.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TaskRunnerSettings : pb::IMessage<TaskRunnerSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskRunnerSettings> _parser = new pb::MessageParser<TaskRunnerSettings>(() => new TaskRunnerSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskRunnerSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunnerSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunnerSettings(TaskRunnerSettings other) : this() {
      taskUser_ = other.taskUser_;
      taskGroup_ = other.taskGroup_;
      oauthScopes_ = other.oauthScopes_.Clone();
      baseUrl_ = other.baseUrl_;
      dataflowApiVersion_ = other.dataflowApiVersion_;
      parallelWorkerSettings_ = other.parallelWorkerSettings_ != null ? other.parallelWorkerSettings_.Clone() : null;
      baseTaskDir_ = other.baseTaskDir_;
      continueOnException_ = other.continueOnException_;
      logToSerialconsole_ = other.logToSerialconsole_;
      alsologtostderr_ = other.alsologtostderr_;
      logUploadLocation_ = other.logUploadLocation_;
      logDir_ = other.logDir_;
      tempStoragePrefix_ = other.tempStoragePrefix_;
      harnessCommand_ = other.harnessCommand_;
      workflowFileName_ = other.workflowFileName_;
      commandlinesFileName_ = other.commandlinesFileName_;
      vmId_ = other.vmId_;
      languageHint_ = other.languageHint_;
      streamingWorkerMainClass_ = other.streamingWorkerMainClass_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunnerSettings Clone() {
      return new TaskRunnerSettings(this);
    }

    /// <summary>Field number for the "task_user" field.</summary>
    public const int TaskUserFieldNumber = 1;
    private string taskUser_ = "";
    /// <summary>
    /// The UNIX user ID on the worker VM to use for tasks launched by
    /// taskrunner; e.g. "root".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskUser {
      get { return taskUser_; }
      set {
        taskUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_group" field.</summary>
    public const int TaskGroupFieldNumber = 2;
    private string taskGroup_ = "";
    /// <summary>
    /// The UNIX group ID on the worker VM to use for tasks launched by
    /// taskrunner; e.g. "wheel".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskGroup {
      get { return taskGroup_; }
      set {
        taskGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oauth_scopes" field.</summary>
    public const int OauthScopesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_oauthScopes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> oauthScopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The OAuth2 scopes to be requested by the taskrunner in order to
    /// access the Cloud Dataflow API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> OauthScopes {
      get { return oauthScopes_; }
    }

    /// <summary>Field number for the "base_url" field.</summary>
    public const int BaseUrlFieldNumber = 4;
    private string baseUrl_ = "";
    /// <summary>
    /// The base URL for the taskrunner to use when accessing Google Cloud APIs.
    ///
    /// When workers access Google Cloud APIs, they logically do so via
    /// relative URLs.  If this field is specified, it supplies the base
    /// URL to use for resolving these relative URLs.  The normative
    /// algorithm used is defined by RFC 1808, "Relative Uniform Resource
    /// Locators".
    ///
    /// If not specified, the default value is "http://www.googleapis.com/"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseUrl {
      get { return baseUrl_; }
      set {
        baseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dataflow_api_version" field.</summary>
    public const int DataflowApiVersionFieldNumber = 5;
    private string dataflowApiVersion_ = "";
    /// <summary>
    /// The API version of endpoint, e.g. "v1b3"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataflowApiVersion {
      get { return dataflowApiVersion_; }
      set {
        dataflowApiVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parallel_worker_settings" field.</summary>
    public const int ParallelWorkerSettingsFieldNumber = 6;
    private global::Google.Cloud.Dataflow.V1Beta3.WorkerSettings parallelWorkerSettings_;
    /// <summary>
    /// The settings to pass to the parallel worker harness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.WorkerSettings ParallelWorkerSettings {
      get { return parallelWorkerSettings_; }
      set {
        parallelWorkerSettings_ = value;
      }
    }

    /// <summary>Field number for the "base_task_dir" field.</summary>
    public const int BaseTaskDirFieldNumber = 7;
    private string baseTaskDir_ = "";
    /// <summary>
    /// The location on the worker for task-specific subdirectories.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseTaskDir {
      get { return baseTaskDir_; }
      set {
        baseTaskDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "continue_on_exception" field.</summary>
    public const int ContinueOnExceptionFieldNumber = 8;
    private bool continueOnException_;
    /// <summary>
    /// Whether to continue taskrunner if an exception is hit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ContinueOnException {
      get { return continueOnException_; }
      set {
        continueOnException_ = value;
      }
    }

    /// <summary>Field number for the "log_to_serialconsole" field.</summary>
    public const int LogToSerialconsoleFieldNumber = 9;
    private bool logToSerialconsole_;
    /// <summary>
    /// Whether to send taskrunner log info to Google Compute Engine VM serial
    /// console.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LogToSerialconsole {
      get { return logToSerialconsole_; }
      set {
        logToSerialconsole_ = value;
      }
    }

    /// <summary>Field number for the "alsologtostderr" field.</summary>
    public const int AlsologtostderrFieldNumber = 10;
    private bool alsologtostderr_;
    /// <summary>
    /// Whether to also send taskrunner log info to stderr.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Alsologtostderr {
      get { return alsologtostderr_; }
      set {
        alsologtostderr_ = value;
      }
    }

    /// <summary>Field number for the "log_upload_location" field.</summary>
    public const int LogUploadLocationFieldNumber = 11;
    private string logUploadLocation_ = "";
    /// <summary>
    /// Indicates where to put logs.  If this is not specified, the logs
    /// will not be uploaded.
    ///
    /// The supported resource type is:
    ///
    /// Google Cloud Storage:
    ///   storage.googleapis.com/{bucket}/{object}
    ///   bucket.storage.googleapis.com/{object}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogUploadLocation {
      get { return logUploadLocation_; }
      set {
        logUploadLocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log_dir" field.</summary>
    public const int LogDirFieldNumber = 12;
    private string logDir_ = "";
    /// <summary>
    /// The directory on the VM to store logs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogDir {
      get { return logDir_; }
      set {
        logDir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "temp_storage_prefix" field.</summary>
    public const int TempStoragePrefixFieldNumber = 13;
    private string tempStoragePrefix_ = "";
    /// <summary>
    /// The prefix of the resources the taskrunner should use for
    /// temporary storage.
    ///
    /// The supported resource type is:
    ///
    /// Google Cloud Storage:
    ///   storage.googleapis.com/{bucket}/{object}
    ///   bucket.storage.googleapis.com/{object}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TempStoragePrefix {
      get { return tempStoragePrefix_; }
      set {
        tempStoragePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "harness_command" field.</summary>
    public const int HarnessCommandFieldNumber = 14;
    private string harnessCommand_ = "";
    /// <summary>
    /// The command to launch the worker harness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HarnessCommand {
      get { return harnessCommand_; }
      set {
        harnessCommand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "workflow_file_name" field.</summary>
    public const int WorkflowFileNameFieldNumber = 15;
    private string workflowFileName_ = "";
    /// <summary>
    /// The file to store the workflow in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WorkflowFileName {
      get { return workflowFileName_; }
      set {
        workflowFileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commandlines_file_name" field.</summary>
    public const int CommandlinesFileNameFieldNumber = 16;
    private string commandlinesFileName_ = "";
    /// <summary>
    /// The file to store preprocessing commands in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CommandlinesFileName {
      get { return commandlinesFileName_; }
      set {
        commandlinesFileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vm_id" field.</summary>
    public const int VmIdFieldNumber = 17;
    private string vmId_ = "";
    /// <summary>
    /// The ID string of the VM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VmId {
      get { return vmId_; }
      set {
        vmId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language_hint" field.</summary>
    public const int LanguageHintFieldNumber = 18;
    private string languageHint_ = "";
    /// <summary>
    /// The suggested backend language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LanguageHint {
      get { return languageHint_; }
      set {
        languageHint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "streaming_worker_main_class" field.</summary>
    public const int StreamingWorkerMainClassFieldNumber = 19;
    private string streamingWorkerMainClass_ = "";
    /// <summary>
    /// The streaming worker main class name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamingWorkerMainClass {
      get { return streamingWorkerMainClass_; }
      set {
        streamingWorkerMainClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskRunnerSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskRunnerSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskUser != other.TaskUser) return false;
      if (TaskGroup != other.TaskGroup) return false;
      if(!oauthScopes_.Equals(other.oauthScopes_)) return false;
      if (BaseUrl != other.BaseUrl) return false;
      if (DataflowApiVersion != other.DataflowApiVersion) return false;
      if (!object.Equals(ParallelWorkerSettings, other.ParallelWorkerSettings)) return false;
      if (BaseTaskDir != other.BaseTaskDir) return false;
      if (ContinueOnException != other.ContinueOnException) return false;
      if (LogToSerialconsole != other.LogToSerialconsole) return false;
      if (Alsologtostderr != other.Alsologtostderr) return false;
      if (LogUploadLocation != other.LogUploadLocation) return false;
      if (LogDir != other.LogDir) return false;
      if (TempStoragePrefix != other.TempStoragePrefix) return false;
      if (HarnessCommand != other.HarnessCommand) return false;
      if (WorkflowFileName != other.WorkflowFileName) return false;
      if (CommandlinesFileName != other.CommandlinesFileName) return false;
      if (VmId != other.VmId) return false;
      if (LanguageHint != other.LanguageHint) return false;
      if (StreamingWorkerMainClass != other.StreamingWorkerMainClass) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskUser.Length != 0) hash ^= TaskUser.GetHashCode();
      if (TaskGroup.Length != 0) hash ^= TaskGroup.GetHashCode();
      hash ^= oauthScopes_.GetHashCode();
      if (BaseUrl.Length != 0) hash ^= BaseUrl.GetHashCode();
      if (DataflowApiVersion.Length != 0) hash ^= DataflowApiVersion.GetHashCode();
      if (parallelWorkerSettings_ != null) hash ^= ParallelWorkerSettings.GetHashCode();
      if (BaseTaskDir.Length != 0) hash ^= BaseTaskDir.GetHashCode();
      if (ContinueOnException != false) hash ^= ContinueOnException.GetHashCode();
      if (LogToSerialconsole != false) hash ^= LogToSerialconsole.GetHashCode();
      if (Alsologtostderr != false) hash ^= Alsologtostderr.GetHashCode();
      if (LogUploadLocation.Length != 0) hash ^= LogUploadLocation.GetHashCode();
      if (LogDir.Length != 0) hash ^= LogDir.GetHashCode();
      if (TempStoragePrefix.Length != 0) hash ^= TempStoragePrefix.GetHashCode();
      if (HarnessCommand.Length != 0) hash ^= HarnessCommand.GetHashCode();
      if (WorkflowFileName.Length != 0) hash ^= WorkflowFileName.GetHashCode();
      if (CommandlinesFileName.Length != 0) hash ^= CommandlinesFileName.GetHashCode();
      if (VmId.Length != 0) hash ^= VmId.GetHashCode();
      if (LanguageHint.Length != 0) hash ^= LanguageHint.GetHashCode();
      if (StreamingWorkerMainClass.Length != 0) hash ^= StreamingWorkerMainClass.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskUser.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskUser);
      }
      if (TaskGroup.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskGroup);
      }
      oauthScopes_.WriteTo(output, _repeated_oauthScopes_codec);
      if (BaseUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BaseUrl);
      }
      if (DataflowApiVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DataflowApiVersion);
      }
      if (parallelWorkerSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParallelWorkerSettings);
      }
      if (BaseTaskDir.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(BaseTaskDir);
      }
      if (ContinueOnException != false) {
        output.WriteRawTag(64);
        output.WriteBool(ContinueOnException);
      }
      if (LogToSerialconsole != false) {
        output.WriteRawTag(72);
        output.WriteBool(LogToSerialconsole);
      }
      if (Alsologtostderr != false) {
        output.WriteRawTag(80);
        output.WriteBool(Alsologtostderr);
      }
      if (LogUploadLocation.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LogUploadLocation);
      }
      if (LogDir.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LogDir);
      }
      if (TempStoragePrefix.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TempStoragePrefix);
      }
      if (HarnessCommand.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(HarnessCommand);
      }
      if (WorkflowFileName.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(WorkflowFileName);
      }
      if (CommandlinesFileName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CommandlinesFileName);
      }
      if (VmId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(VmId);
      }
      if (LanguageHint.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(LanguageHint);
      }
      if (StreamingWorkerMainClass.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(StreamingWorkerMainClass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskUser.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskUser);
      }
      if (TaskGroup.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskGroup);
      }
      oauthScopes_.WriteTo(ref output, _repeated_oauthScopes_codec);
      if (BaseUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BaseUrl);
      }
      if (DataflowApiVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DataflowApiVersion);
      }
      if (parallelWorkerSettings_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParallelWorkerSettings);
      }
      if (BaseTaskDir.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(BaseTaskDir);
      }
      if (ContinueOnException != false) {
        output.WriteRawTag(64);
        output.WriteBool(ContinueOnException);
      }
      if (LogToSerialconsole != false) {
        output.WriteRawTag(72);
        output.WriteBool(LogToSerialconsole);
      }
      if (Alsologtostderr != false) {
        output.WriteRawTag(80);
        output.WriteBool(Alsologtostderr);
      }
      if (LogUploadLocation.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LogUploadLocation);
      }
      if (LogDir.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LogDir);
      }
      if (TempStoragePrefix.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TempStoragePrefix);
      }
      if (HarnessCommand.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(HarnessCommand);
      }
      if (WorkflowFileName.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(WorkflowFileName);
      }
      if (CommandlinesFileName.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CommandlinesFileName);
      }
      if (VmId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(VmId);
      }
      if (LanguageHint.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(LanguageHint);
      }
      if (StreamingWorkerMainClass.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(StreamingWorkerMainClass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TaskUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskUser);
      }
      if (TaskGroup.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskGroup);
      }
      size += oauthScopes_.CalculateSize(_repeated_oauthScopes_codec);
      if (BaseUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseUrl);
      }
      if (DataflowApiVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataflowApiVersion);
      }
      if (parallelWorkerSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParallelWorkerSettings);
      }
      if (BaseTaskDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseTaskDir);
      }
      if (ContinueOnException != false) {
        size += 1 + 1;
      }
      if (LogToSerialconsole != false) {
        size += 1 + 1;
      }
      if (Alsologtostderr != false) {
        size += 1 + 1;
      }
      if (LogUploadLocation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogUploadLocation);
      }
      if (LogDir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogDir);
      }
      if (TempStoragePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TempStoragePrefix);
      }
      if (HarnessCommand.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HarnessCommand);
      }
      if (WorkflowFileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowFileName);
      }
      if (CommandlinesFileName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CommandlinesFileName);
      }
      if (VmId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(VmId);
      }
      if (LanguageHint.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LanguageHint);
      }
      if (StreamingWorkerMainClass.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StreamingWorkerMainClass);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskRunnerSettings other) {
      if (other == null) {
        return;
      }
      if (other.TaskUser.Length != 0) {
        TaskUser = other.TaskUser;
      }
      if (other.TaskGroup.Length != 0) {
        TaskGroup = other.TaskGroup;
      }
      oauthScopes_.Add(other.oauthScopes_);
      if (other.BaseUrl.Length != 0) {
        BaseUrl = other.BaseUrl;
      }
      if (other.DataflowApiVersion.Length != 0) {
        DataflowApiVersion = other.DataflowApiVersion;
      }
      if (other.parallelWorkerSettings_ != null) {
        if (parallelWorkerSettings_ == null) {
          ParallelWorkerSettings = new global::Google.Cloud.Dataflow.V1Beta3.WorkerSettings();
        }
        ParallelWorkerSettings.MergeFrom(other.ParallelWorkerSettings);
      }
      if (other.BaseTaskDir.Length != 0) {
        BaseTaskDir = other.BaseTaskDir;
      }
      if (other.ContinueOnException != false) {
        ContinueOnException = other.ContinueOnException;
      }
      if (other.LogToSerialconsole != false) {
        LogToSerialconsole = other.LogToSerialconsole;
      }
      if (other.Alsologtostderr != false) {
        Alsologtostderr = other.Alsologtostderr;
      }
      if (other.LogUploadLocation.Length != 0) {
        LogUploadLocation = other.LogUploadLocation;
      }
      if (other.LogDir.Length != 0) {
        LogDir = other.LogDir;
      }
      if (other.TempStoragePrefix.Length != 0) {
        TempStoragePrefix = other.TempStoragePrefix;
      }
      if (other.HarnessCommand.Length != 0) {
        HarnessCommand = other.HarnessCommand;
      }
      if (other.WorkflowFileName.Length != 0) {
        WorkflowFileName = other.WorkflowFileName;
      }
      if (other.CommandlinesFileName.Length != 0) {
        CommandlinesFileName = other.CommandlinesFileName;
      }
      if (other.VmId.Length != 0) {
        VmId = other.VmId;
      }
      if (other.LanguageHint.Length != 0) {
        LanguageHint = other.LanguageHint;
      }
      if (other.StreamingWorkerMainClass.Length != 0) {
        StreamingWorkerMainClass = other.StreamingWorkerMainClass;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskUser = input.ReadString();
            break;
          }
          case 18: {
            TaskGroup = input.ReadString();
            break;
          }
          case 26: {
            oauthScopes_.AddEntriesFrom(input, _repeated_oauthScopes_codec);
            break;
          }
          case 34: {
            BaseUrl = input.ReadString();
            break;
          }
          case 42: {
            DataflowApiVersion = input.ReadString();
            break;
          }
          case 50: {
            if (parallelWorkerSettings_ == null) {
              ParallelWorkerSettings = new global::Google.Cloud.Dataflow.V1Beta3.WorkerSettings();
            }
            input.ReadMessage(ParallelWorkerSettings);
            break;
          }
          case 58: {
            BaseTaskDir = input.ReadString();
            break;
          }
          case 64: {
            ContinueOnException = input.ReadBool();
            break;
          }
          case 72: {
            LogToSerialconsole = input.ReadBool();
            break;
          }
          case 80: {
            Alsologtostderr = input.ReadBool();
            break;
          }
          case 90: {
            LogUploadLocation = input.ReadString();
            break;
          }
          case 98: {
            LogDir = input.ReadString();
            break;
          }
          case 106: {
            TempStoragePrefix = input.ReadString();
            break;
          }
          case 114: {
            HarnessCommand = input.ReadString();
            break;
          }
          case 122: {
            WorkflowFileName = input.ReadString();
            break;
          }
          case 130: {
            CommandlinesFileName = input.ReadString();
            break;
          }
          case 138: {
            VmId = input.ReadString();
            break;
          }
          case 146: {
            LanguageHint = input.ReadString();
            break;
          }
          case 154: {
            StreamingWorkerMainClass = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TaskUser = input.ReadString();
            break;
          }
          case 18: {
            TaskGroup = input.ReadString();
            break;
          }
          case 26: {
            oauthScopes_.AddEntriesFrom(ref input, _repeated_oauthScopes_codec);
            break;
          }
          case 34: {
            BaseUrl = input.ReadString();
            break;
          }
          case 42: {
            DataflowApiVersion = input.ReadString();
            break;
          }
          case 50: {
            if (parallelWorkerSettings_ == null) {
              ParallelWorkerSettings = new global::Google.Cloud.Dataflow.V1Beta3.WorkerSettings();
            }
            input.ReadMessage(ParallelWorkerSettings);
            break;
          }
          case 58: {
            BaseTaskDir = input.ReadString();
            break;
          }
          case 64: {
            ContinueOnException = input.ReadBool();
            break;
          }
          case 72: {
            LogToSerialconsole = input.ReadBool();
            break;
          }
          case 80: {
            Alsologtostderr = input.ReadBool();
            break;
          }
          case 90: {
            LogUploadLocation = input.ReadString();
            break;
          }
          case 98: {
            LogDir = input.ReadString();
            break;
          }
          case 106: {
            TempStoragePrefix = input.ReadString();
            break;
          }
          case 114: {
            HarnessCommand = input.ReadString();
            break;
          }
          case 122: {
            WorkflowFileName = input.ReadString();
            break;
          }
          case 130: {
            CommandlinesFileName = input.ReadString();
            break;
          }
          case 138: {
            VmId = input.ReadString();
            break;
          }
          case 146: {
            LanguageHint = input.ReadString();
            break;
          }
          case 154: {
            StreamingWorkerMainClass = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Settings for WorkerPool autoscaling.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AutoscalingSettings : pb::IMessage<AutoscalingSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoscalingSettings> _parser = new pb::MessageParser<AutoscalingSettings>(() => new AutoscalingSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AutoscalingSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoscalingSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoscalingSettings(AutoscalingSettings other) : this() {
      algorithm_ = other.algorithm_;
      maxNumWorkers_ = other.maxNumWorkers_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoscalingSettings Clone() {
      return new AutoscalingSettings(this);
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 1;
    private global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm algorithm_ = global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm.Unknown;
    /// <summary>
    /// The algorithm to use for autoscaling.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = value;
      }
    }

    /// <summary>Field number for the "max_num_workers" field.</summary>
    public const int MaxNumWorkersFieldNumber = 2;
    private int maxNumWorkers_;
    /// <summary>
    /// The maximum number of workers to cap scaling at.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxNumWorkers {
      get { return maxNumWorkers_; }
      set {
        maxNumWorkers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AutoscalingSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AutoscalingSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Algorithm != other.Algorithm) return false;
      if (MaxNumWorkers != other.MaxNumWorkers) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Algorithm != global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm.Unknown) hash ^= Algorithm.GetHashCode();
      if (MaxNumWorkers != 0) hash ^= MaxNumWorkers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Algorithm != global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Algorithm);
      }
      if (MaxNumWorkers != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxNumWorkers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Algorithm != global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Algorithm);
      }
      if (MaxNumWorkers != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxNumWorkers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Algorithm != global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Algorithm);
      }
      if (MaxNumWorkers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNumWorkers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AutoscalingSettings other) {
      if (other == null) {
        return;
      }
      if (other.Algorithm != global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm.Unknown) {
        Algorithm = other.Algorithm;
      }
      if (other.MaxNumWorkers != 0) {
        MaxNumWorkers = other.MaxNumWorkers;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Algorithm = (global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm) input.ReadEnum();
            break;
          }
          case 16: {
            MaxNumWorkers = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Algorithm = (global::Google.Cloud.Dataflow.V1Beta3.AutoscalingAlgorithm) input.ReadEnum();
            break;
          }
          case 16: {
            MaxNumWorkers = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines a SDK harness container for executing Dataflow pipelines.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SdkHarnessContainerImage : pb::IMessage<SdkHarnessContainerImage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SdkHarnessContainerImage> _parser = new pb::MessageParser<SdkHarnessContainerImage>(() => new SdkHarnessContainerImage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SdkHarnessContainerImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SdkHarnessContainerImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SdkHarnessContainerImage(SdkHarnessContainerImage other) : this() {
      containerImage_ = other.containerImage_;
      useSingleCorePerContainer_ = other.useSingleCorePerContainer_;
      environmentId_ = other.environmentId_;
      capabilities_ = other.capabilities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SdkHarnessContainerImage Clone() {
      return new SdkHarnessContainerImage(this);
    }

    /// <summary>Field number for the "container_image" field.</summary>
    public const int ContainerImageFieldNumber = 1;
    private string containerImage_ = "";
    /// <summary>
    /// A docker container image that resides in Google Container Registry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ContainerImage {
      get { return containerImage_; }
      set {
        containerImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use_single_core_per_container" field.</summary>
    public const int UseSingleCorePerContainerFieldNumber = 2;
    private bool useSingleCorePerContainer_;
    /// <summary>
    /// If true, recommends the Dataflow service to use only one core per SDK
    /// container instance with this image. If false (or unset) recommends using
    /// more than one core per SDK container instance with this image for
    /// efficiency. Note that Dataflow service may choose to override this property
    /// if needed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseSingleCorePerContainer {
      get { return useSingleCorePerContainer_; }
      set {
        useSingleCorePerContainer_ = value;
      }
    }

    /// <summary>Field number for the "environment_id" field.</summary>
    public const int EnvironmentIdFieldNumber = 3;
    private string environmentId_ = "";
    /// <summary>
    /// Environment ID for the Beam runner API proto Environment that corresponds
    /// to the current SDK Harness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnvironmentId {
      get { return environmentId_; }
      set {
        environmentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "capabilities" field.</summary>
    public const int CapabilitiesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_capabilities_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> capabilities_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The set of capabilities enumerated in the above Environment proto. See also
    /// https://github.com/apache/beam/blob/master/model/pipeline/src/main/proto/beam_runner_api.proto
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Capabilities {
      get { return capabilities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SdkHarnessContainerImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SdkHarnessContainerImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContainerImage != other.ContainerImage) return false;
      if (UseSingleCorePerContainer != other.UseSingleCorePerContainer) return false;
      if (EnvironmentId != other.EnvironmentId) return false;
      if(!capabilities_.Equals(other.capabilities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ContainerImage.Length != 0) hash ^= ContainerImage.GetHashCode();
      if (UseSingleCorePerContainer != false) hash ^= UseSingleCorePerContainer.GetHashCode();
      if (EnvironmentId.Length != 0) hash ^= EnvironmentId.GetHashCode();
      hash ^= capabilities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContainerImage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContainerImage);
      }
      if (UseSingleCorePerContainer != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseSingleCorePerContainer);
      }
      if (EnvironmentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EnvironmentId);
      }
      capabilities_.WriteTo(output, _repeated_capabilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContainerImage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContainerImage);
      }
      if (UseSingleCorePerContainer != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseSingleCorePerContainer);
      }
      if (EnvironmentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EnvironmentId);
      }
      capabilities_.WriteTo(ref output, _repeated_capabilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ContainerImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContainerImage);
      }
      if (UseSingleCorePerContainer != false) {
        size += 1 + 1;
      }
      if (EnvironmentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnvironmentId);
      }
      size += capabilities_.CalculateSize(_repeated_capabilities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SdkHarnessContainerImage other) {
      if (other == null) {
        return;
      }
      if (other.ContainerImage.Length != 0) {
        ContainerImage = other.ContainerImage;
      }
      if (other.UseSingleCorePerContainer != false) {
        UseSingleCorePerContainer = other.UseSingleCorePerContainer;
      }
      if (other.EnvironmentId.Length != 0) {
        EnvironmentId = other.EnvironmentId;
      }
      capabilities_.Add(other.capabilities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContainerImage = input.ReadString();
            break;
          }
          case 16: {
            UseSingleCorePerContainer = input.ReadBool();
            break;
          }
          case 26: {
            EnvironmentId = input.ReadString();
            break;
          }
          case 34: {
            capabilities_.AddEntriesFrom(input, _repeated_capabilities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ContainerImage = input.ReadString();
            break;
          }
          case 16: {
            UseSingleCorePerContainer = input.ReadBool();
            break;
          }
          case 26: {
            EnvironmentId = input.ReadString();
            break;
          }
          case 34: {
            capabilities_.AddEntriesFrom(ref input, _repeated_capabilities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes one particular pool of Cloud Dataflow workers to be
  /// instantiated by the Cloud Dataflow service in order to perform the
  /// computations required by a job.  Note that a workflow job may use
  /// multiple pools, in order to match the various computational
  /// requirements of the various stages of the job.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WorkerPool : pb::IMessage<WorkerPool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorkerPool> _parser = new pb::MessageParser<WorkerPool>(() => new WorkerPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WorkerPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkerPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkerPool(WorkerPool other) : this() {
      kind_ = other.kind_;
      numWorkers_ = other.numWorkers_;
      packages_ = other.packages_.Clone();
      defaultPackageSet_ = other.defaultPackageSet_;
      machineType_ = other.machineType_;
      teardownPolicy_ = other.teardownPolicy_;
      diskSizeGb_ = other.diskSizeGb_;
      diskType_ = other.diskType_;
      diskSourceImage_ = other.diskSourceImage_;
      zone_ = other.zone_;
      taskrunnerSettings_ = other.taskrunnerSettings_ != null ? other.taskrunnerSettings_.Clone() : null;
      onHostMaintenance_ = other.onHostMaintenance_;
      dataDisks_ = other.dataDisks_.Clone();
      metadata_ = other.metadata_.Clone();
      autoscalingSettings_ = other.autoscalingSettings_ != null ? other.autoscalingSettings_.Clone() : null;
      poolArgs_ = other.poolArgs_ != null ? other.poolArgs_.Clone() : null;
      network_ = other.network_;
      subnetwork_ = other.subnetwork_;
      workerHarnessContainerImage_ = other.workerHarnessContainerImage_;
      numThreadsPerWorker_ = other.numThreadsPerWorker_;
      ipConfiguration_ = other.ipConfiguration_;
      sdkHarnessContainerImages_ = other.sdkHarnessContainerImages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkerPool Clone() {
      return new WorkerPool(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private string kind_ = "";
    /// <summary>
    /// The kind of the worker pool; currently only `harness` and `shuffle`
    /// are supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_workers" field.</summary>
    public const int NumWorkersFieldNumber = 2;
    private int numWorkers_;
    /// <summary>
    /// Number of Google Compute Engine workers in this pool needed to
    /// execute the job.  If zero or unspecified, the service will
    /// attempt to choose a reasonable default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumWorkers {
      get { return numWorkers_; }
      set {
        numWorkers_ = value;
      }
    }

    /// <summary>Field number for the "packages" field.</summary>
    public const int PackagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataflow.V1Beta3.Package> _repeated_packages_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Dataflow.V1Beta3.Package.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.Package> packages_ = new pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.Package>();
    /// <summary>
    /// Packages to be installed on workers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.Package> Packages {
      get { return packages_; }
    }

    /// <summary>Field number for the "default_package_set" field.</summary>
    public const int DefaultPackageSetFieldNumber = 4;
    private global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet defaultPackageSet_ = global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet.Unknown;
    /// <summary>
    /// The default package set to install.  This allows the service to
    /// select a default set of packages which are useful to worker
    /// harnesses written in a particular language.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet DefaultPackageSet {
      get { return defaultPackageSet_; }
      set {
        defaultPackageSet_ = value;
      }
    }

    /// <summary>Field number for the "machine_type" field.</summary>
    public const int MachineTypeFieldNumber = 5;
    private string machineType_ = "";
    /// <summary>
    /// Machine type (e.g. "n1-standard-1").  If empty or unspecified, the
    /// service will attempt to choose a reasonable default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MachineType {
      get { return machineType_; }
      set {
        machineType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "teardown_policy" field.</summary>
    public const int TeardownPolicyFieldNumber = 6;
    private global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy teardownPolicy_ = global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy.Unknown;
    /// <summary>
    /// Sets the policy for determining when to turndown worker pool.
    /// Allowed values are: `TEARDOWN_ALWAYS`, `TEARDOWN_ON_SUCCESS`, and
    /// `TEARDOWN_NEVER`.
    /// `TEARDOWN_ALWAYS` means workers are always torn down regardless of whether
    /// the job succeeds. `TEARDOWN_ON_SUCCESS` means workers are torn down
    /// if the job succeeds. `TEARDOWN_NEVER` means the workers are never torn
    /// down.
    ///
    /// If the workers are not torn down by the service, they will
    /// continue to run and use Google Compute Engine VM resources in the
    /// user's project until they are explicitly terminated by the user.
    /// Because of this, Google recommends using the `TEARDOWN_ALWAYS`
    /// policy except for small, manually supervised test jobs.
    ///
    /// If unknown or unspecified, the service will attempt to choose a reasonable
    /// default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy TeardownPolicy {
      get { return teardownPolicy_; }
      set {
        teardownPolicy_ = value;
      }
    }

    /// <summary>Field number for the "disk_size_gb" field.</summary>
    public const int DiskSizeGbFieldNumber = 7;
    private int diskSizeGb_;
    /// <summary>
    /// Size of root disk for VMs, in GB.  If zero or unspecified, the service will
    /// attempt to choose a reasonable default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DiskSizeGb {
      get { return diskSizeGb_; }
      set {
        diskSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "disk_type" field.</summary>
    public const int DiskTypeFieldNumber = 16;
    private string diskType_ = "";
    /// <summary>
    /// Type of root disk for VMs.  If empty or unspecified, the service will
    /// attempt to choose a reasonable default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DiskType {
      get { return diskType_; }
      set {
        diskType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disk_source_image" field.</summary>
    public const int DiskSourceImageFieldNumber = 8;
    private string diskSourceImage_ = "";
    /// <summary>
    /// Fully qualified source image for disks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DiskSourceImage {
      get { return diskSourceImage_; }
      set {
        diskSourceImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 9;
    private string zone_ = "";
    /// <summary>
    /// Zone to run the worker pools in.  If empty or unspecified, the service
    /// will attempt to choose a reasonable default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskrunner_settings" field.</summary>
    public const int TaskrunnerSettingsFieldNumber = 10;
    private global::Google.Cloud.Dataflow.V1Beta3.TaskRunnerSettings taskrunnerSettings_;
    /// <summary>
    /// Settings passed through to Google Compute Engine workers when
    /// using the standard Dataflow task runner.  Users should ignore
    /// this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.TaskRunnerSettings TaskrunnerSettings {
      get { return taskrunnerSettings_; }
      set {
        taskrunnerSettings_ = value;
      }
    }

    /// <summary>Field number for the "on_host_maintenance" field.</summary>
    public const int OnHostMaintenanceFieldNumber = 11;
    private string onHostMaintenance_ = "";
    /// <summary>
    /// The action to take on host maintenance, as defined by the Google
    /// Compute Engine API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OnHostMaintenance {
      get { return onHostMaintenance_; }
      set {
        onHostMaintenance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_disks" field.</summary>
    public const int DataDisksFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataflow.V1Beta3.Disk> _repeated_dataDisks_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Cloud.Dataflow.V1Beta3.Disk.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.Disk> dataDisks_ = new pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.Disk>();
    /// <summary>
    /// Data disks that are used by a VM in this workflow.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.Disk> DataDisks {
      get { return dataDisks_; }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 13;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 106);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Metadata to set on the Google Compute Engine VMs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "autoscaling_settings" field.</summary>
    public const int AutoscalingSettingsFieldNumber = 14;
    private global::Google.Cloud.Dataflow.V1Beta3.AutoscalingSettings autoscalingSettings_;
    /// <summary>
    /// Settings for autoscaling of this WorkerPool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.AutoscalingSettings AutoscalingSettings {
      get { return autoscalingSettings_; }
      set {
        autoscalingSettings_ = value;
      }
    }

    /// <summary>Field number for the "pool_args" field.</summary>
    public const int PoolArgsFieldNumber = 15;
    private global::Google.Protobuf.WellKnownTypes.Any poolArgs_;
    /// <summary>
    /// Extra arguments for this worker pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Any PoolArgs {
      get { return poolArgs_; }
      set {
        poolArgs_ = value;
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 17;
    private string network_ = "";
    /// <summary>
    /// Network to which VMs will be assigned.  If empty or unspecified,
    /// the service will use the network "default".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnetwork" field.</summary>
    public const int SubnetworkFieldNumber = 19;
    private string subnetwork_ = "";
    /// <summary>
    /// Subnetwork to which VMs will be assigned, if desired.  Expected to be of
    /// the form "regions/REGION/subnetworks/SUBNETWORK".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Subnetwork {
      get { return subnetwork_; }
      set {
        subnetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "worker_harness_container_image" field.</summary>
    public const int WorkerHarnessContainerImageFieldNumber = 18;
    private string workerHarnessContainerImage_ = "";
    /// <summary>
    /// Required. Docker container image that executes the Cloud Dataflow worker
    /// harness, residing in Google Container Registry.
    ///
    /// Deprecated for the Fn API path. Use sdk_harness_container_images instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WorkerHarnessContainerImage {
      get { return workerHarnessContainerImage_; }
      set {
        workerHarnessContainerImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "num_threads_per_worker" field.</summary>
    public const int NumThreadsPerWorkerFieldNumber = 20;
    private int numThreadsPerWorker_;
    /// <summary>
    /// The number of threads per worker harness. If empty or unspecified, the
    /// service will choose a number of threads (according to the number of cores
    /// on the selected machine type for batch, or 1 by convention for streaming).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumThreadsPerWorker {
      get { return numThreadsPerWorker_; }
      set {
        numThreadsPerWorker_ = value;
      }
    }

    /// <summary>Field number for the "ip_configuration" field.</summary>
    public const int IpConfigurationFieldNumber = 21;
    private global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration ipConfiguration_ = global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration.WorkerIpUnspecified;
    /// <summary>
    /// Configuration for VM IPs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration IpConfiguration {
      get { return ipConfiguration_; }
      set {
        ipConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "sdk_harness_container_images" field.</summary>
    public const int SdkHarnessContainerImagesFieldNumber = 22;
    private static readonly pb::FieldCodec<global::Google.Cloud.Dataflow.V1Beta3.SdkHarnessContainerImage> _repeated_sdkHarnessContainerImages_codec
        = pb::FieldCodec.ForMessage(178, global::Google.Cloud.Dataflow.V1Beta3.SdkHarnessContainerImage.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.SdkHarnessContainerImage> sdkHarnessContainerImages_ = new pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.SdkHarnessContainerImage>();
    /// <summary>
    /// Set of SDK harness containers needed to execute this pipeline. This will
    /// only be set in the Fn API path. For non-cross-language pipelines this
    /// should have only one entry. Cross-language pipelines will have two or more
    /// entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Dataflow.V1Beta3.SdkHarnessContainerImage> SdkHarnessContainerImages {
      get { return sdkHarnessContainerImages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WorkerPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WorkerPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      if (NumWorkers != other.NumWorkers) return false;
      if(!packages_.Equals(other.packages_)) return false;
      if (DefaultPackageSet != other.DefaultPackageSet) return false;
      if (MachineType != other.MachineType) return false;
      if (TeardownPolicy != other.TeardownPolicy) return false;
      if (DiskSizeGb != other.DiskSizeGb) return false;
      if (DiskType != other.DiskType) return false;
      if (DiskSourceImage != other.DiskSourceImage) return false;
      if (Zone != other.Zone) return false;
      if (!object.Equals(TaskrunnerSettings, other.TaskrunnerSettings)) return false;
      if (OnHostMaintenance != other.OnHostMaintenance) return false;
      if(!dataDisks_.Equals(other.dataDisks_)) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (!object.Equals(AutoscalingSettings, other.AutoscalingSettings)) return false;
      if (!object.Equals(PoolArgs, other.PoolArgs)) return false;
      if (Network != other.Network) return false;
      if (Subnetwork != other.Subnetwork) return false;
      if (WorkerHarnessContainerImage != other.WorkerHarnessContainerImage) return false;
      if (NumThreadsPerWorker != other.NumThreadsPerWorker) return false;
      if (IpConfiguration != other.IpConfiguration) return false;
      if(!sdkHarnessContainerImages_.Equals(other.sdkHarnessContainerImages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      if (NumWorkers != 0) hash ^= NumWorkers.GetHashCode();
      hash ^= packages_.GetHashCode();
      if (DefaultPackageSet != global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet.Unknown) hash ^= DefaultPackageSet.GetHashCode();
      if (MachineType.Length != 0) hash ^= MachineType.GetHashCode();
      if (TeardownPolicy != global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy.Unknown) hash ^= TeardownPolicy.GetHashCode();
      if (DiskSizeGb != 0) hash ^= DiskSizeGb.GetHashCode();
      if (DiskType.Length != 0) hash ^= DiskType.GetHashCode();
      if (DiskSourceImage.Length != 0) hash ^= DiskSourceImage.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (taskrunnerSettings_ != null) hash ^= TaskrunnerSettings.GetHashCode();
      if (OnHostMaintenance.Length != 0) hash ^= OnHostMaintenance.GetHashCode();
      hash ^= dataDisks_.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (autoscalingSettings_ != null) hash ^= AutoscalingSettings.GetHashCode();
      if (poolArgs_ != null) hash ^= PoolArgs.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (Subnetwork.Length != 0) hash ^= Subnetwork.GetHashCode();
      if (WorkerHarnessContainerImage.Length != 0) hash ^= WorkerHarnessContainerImage.GetHashCode();
      if (NumThreadsPerWorker != 0) hash ^= NumThreadsPerWorker.GetHashCode();
      if (IpConfiguration != global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration.WorkerIpUnspecified) hash ^= IpConfiguration.GetHashCode();
      hash ^= sdkHarnessContainerImages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (NumWorkers != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumWorkers);
      }
      packages_.WriteTo(output, _repeated_packages_codec);
      if (DefaultPackageSet != global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) DefaultPackageSet);
      }
      if (MachineType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MachineType);
      }
      if (TeardownPolicy != global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) TeardownPolicy);
      }
      if (DiskSizeGb != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DiskSizeGb);
      }
      if (DiskSourceImage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DiskSourceImage);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Zone);
      }
      if (taskrunnerSettings_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TaskrunnerSettings);
      }
      if (OnHostMaintenance.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OnHostMaintenance);
      }
      dataDisks_.WriteTo(output, _repeated_dataDisks_codec);
      metadata_.WriteTo(output, _map_metadata_codec);
      if (autoscalingSettings_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AutoscalingSettings);
      }
      if (poolArgs_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(PoolArgs);
      }
      if (DiskType.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(DiskType);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Network);
      }
      if (WorkerHarnessContainerImage.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(WorkerHarnessContainerImage);
      }
      if (Subnetwork.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Subnetwork);
      }
      if (NumThreadsPerWorker != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(NumThreadsPerWorker);
      }
      if (IpConfiguration != global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration.WorkerIpUnspecified) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) IpConfiguration);
      }
      sdkHarnessContainerImages_.WriteTo(output, _repeated_sdkHarnessContainerImages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (NumWorkers != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NumWorkers);
      }
      packages_.WriteTo(ref output, _repeated_packages_codec);
      if (DefaultPackageSet != global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) DefaultPackageSet);
      }
      if (MachineType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MachineType);
      }
      if (TeardownPolicy != global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) TeardownPolicy);
      }
      if (DiskSizeGb != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DiskSizeGb);
      }
      if (DiskSourceImage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DiskSourceImage);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Zone);
      }
      if (taskrunnerSettings_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TaskrunnerSettings);
      }
      if (OnHostMaintenance.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(OnHostMaintenance);
      }
      dataDisks_.WriteTo(ref output, _repeated_dataDisks_codec);
      metadata_.WriteTo(ref output, _map_metadata_codec);
      if (autoscalingSettings_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AutoscalingSettings);
      }
      if (poolArgs_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(PoolArgs);
      }
      if (DiskType.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(DiskType);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Network);
      }
      if (WorkerHarnessContainerImage.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(WorkerHarnessContainerImage);
      }
      if (Subnetwork.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Subnetwork);
      }
      if (NumThreadsPerWorker != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(NumThreadsPerWorker);
      }
      if (IpConfiguration != global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration.WorkerIpUnspecified) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) IpConfiguration);
      }
      sdkHarnessContainerImages_.WriteTo(ref output, _repeated_sdkHarnessContainerImages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      if (NumWorkers != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumWorkers);
      }
      size += packages_.CalculateSize(_repeated_packages_codec);
      if (DefaultPackageSet != global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultPackageSet);
      }
      if (MachineType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineType);
      }
      if (TeardownPolicy != global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TeardownPolicy);
      }
      if (DiskSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DiskSizeGb);
      }
      if (DiskType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DiskType);
      }
      if (DiskSourceImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiskSourceImage);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (taskrunnerSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskrunnerSettings);
      }
      if (OnHostMaintenance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OnHostMaintenance);
      }
      size += dataDisks_.CalculateSize(_repeated_dataDisks_codec);
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (autoscalingSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoscalingSettings);
      }
      if (poolArgs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolArgs);
      }
      if (Network.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (Subnetwork.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Subnetwork);
      }
      if (WorkerHarnessContainerImage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WorkerHarnessContainerImage);
      }
      if (NumThreadsPerWorker != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NumThreadsPerWorker);
      }
      if (IpConfiguration != global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration.WorkerIpUnspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) IpConfiguration);
      }
      size += sdkHarnessContainerImages_.CalculateSize(_repeated_sdkHarnessContainerImages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WorkerPool other) {
      if (other == null) {
        return;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      if (other.NumWorkers != 0) {
        NumWorkers = other.NumWorkers;
      }
      packages_.Add(other.packages_);
      if (other.DefaultPackageSet != global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet.Unknown) {
        DefaultPackageSet = other.DefaultPackageSet;
      }
      if (other.MachineType.Length != 0) {
        MachineType = other.MachineType;
      }
      if (other.TeardownPolicy != global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy.Unknown) {
        TeardownPolicy = other.TeardownPolicy;
      }
      if (other.DiskSizeGb != 0) {
        DiskSizeGb = other.DiskSizeGb;
      }
      if (other.DiskType.Length != 0) {
        DiskType = other.DiskType;
      }
      if (other.DiskSourceImage.Length != 0) {
        DiskSourceImage = other.DiskSourceImage;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.taskrunnerSettings_ != null) {
        if (taskrunnerSettings_ == null) {
          TaskrunnerSettings = new global::Google.Cloud.Dataflow.V1Beta3.TaskRunnerSettings();
        }
        TaskrunnerSettings.MergeFrom(other.TaskrunnerSettings);
      }
      if (other.OnHostMaintenance.Length != 0) {
        OnHostMaintenance = other.OnHostMaintenance;
      }
      dataDisks_.Add(other.dataDisks_);
      metadata_.MergeFrom(other.metadata_);
      if (other.autoscalingSettings_ != null) {
        if (autoscalingSettings_ == null) {
          AutoscalingSettings = new global::Google.Cloud.Dataflow.V1Beta3.AutoscalingSettings();
        }
        AutoscalingSettings.MergeFrom(other.AutoscalingSettings);
      }
      if (other.poolArgs_ != null) {
        if (poolArgs_ == null) {
          PoolArgs = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        PoolArgs.MergeFrom(other.PoolArgs);
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.Subnetwork.Length != 0) {
        Subnetwork = other.Subnetwork;
      }
      if (other.WorkerHarnessContainerImage.Length != 0) {
        WorkerHarnessContainerImage = other.WorkerHarnessContainerImage;
      }
      if (other.NumThreadsPerWorker != 0) {
        NumThreadsPerWorker = other.NumThreadsPerWorker;
      }
      if (other.IpConfiguration != global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration.WorkerIpUnspecified) {
        IpConfiguration = other.IpConfiguration;
      }
      sdkHarnessContainerImages_.Add(other.sdkHarnessContainerImages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 16: {
            NumWorkers = input.ReadInt32();
            break;
          }
          case 26: {
            packages_.AddEntriesFrom(input, _repeated_packages_codec);
            break;
          }
          case 32: {
            DefaultPackageSet = (global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet) input.ReadEnum();
            break;
          }
          case 42: {
            MachineType = input.ReadString();
            break;
          }
          case 48: {
            TeardownPolicy = (global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy) input.ReadEnum();
            break;
          }
          case 56: {
            DiskSizeGb = input.ReadInt32();
            break;
          }
          case 66: {
            DiskSourceImage = input.ReadString();
            break;
          }
          case 74: {
            Zone = input.ReadString();
            break;
          }
          case 82: {
            if (taskrunnerSettings_ == null) {
              TaskrunnerSettings = new global::Google.Cloud.Dataflow.V1Beta3.TaskRunnerSettings();
            }
            input.ReadMessage(TaskrunnerSettings);
            break;
          }
          case 90: {
            OnHostMaintenance = input.ReadString();
            break;
          }
          case 98: {
            dataDisks_.AddEntriesFrom(input, _repeated_dataDisks_codec);
            break;
          }
          case 106: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 114: {
            if (autoscalingSettings_ == null) {
              AutoscalingSettings = new global::Google.Cloud.Dataflow.V1Beta3.AutoscalingSettings();
            }
            input.ReadMessage(AutoscalingSettings);
            break;
          }
          case 122: {
            if (poolArgs_ == null) {
              PoolArgs = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PoolArgs);
            break;
          }
          case 130: {
            DiskType = input.ReadString();
            break;
          }
          case 138: {
            Network = input.ReadString();
            break;
          }
          case 146: {
            WorkerHarnessContainerImage = input.ReadString();
            break;
          }
          case 154: {
            Subnetwork = input.ReadString();
            break;
          }
          case 160: {
            NumThreadsPerWorker = input.ReadInt32();
            break;
          }
          case 168: {
            IpConfiguration = (global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration) input.ReadEnum();
            break;
          }
          case 178: {
            sdkHarnessContainerImages_.AddEntriesFrom(input, _repeated_sdkHarnessContainerImages_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 16: {
            NumWorkers = input.ReadInt32();
            break;
          }
          case 26: {
            packages_.AddEntriesFrom(ref input, _repeated_packages_codec);
            break;
          }
          case 32: {
            DefaultPackageSet = (global::Google.Cloud.Dataflow.V1Beta3.DefaultPackageSet) input.ReadEnum();
            break;
          }
          case 42: {
            MachineType = input.ReadString();
            break;
          }
          case 48: {
            TeardownPolicy = (global::Google.Cloud.Dataflow.V1Beta3.TeardownPolicy) input.ReadEnum();
            break;
          }
          case 56: {
            DiskSizeGb = input.ReadInt32();
            break;
          }
          case 66: {
            DiskSourceImage = input.ReadString();
            break;
          }
          case 74: {
            Zone = input.ReadString();
            break;
          }
          case 82: {
            if (taskrunnerSettings_ == null) {
              TaskrunnerSettings = new global::Google.Cloud.Dataflow.V1Beta3.TaskRunnerSettings();
            }
            input.ReadMessage(TaskrunnerSettings);
            break;
          }
          case 90: {
            OnHostMaintenance = input.ReadString();
            break;
          }
          case 98: {
            dataDisks_.AddEntriesFrom(ref input, _repeated_dataDisks_codec);
            break;
          }
          case 106: {
            metadata_.AddEntriesFrom(ref input, _map_metadata_codec);
            break;
          }
          case 114: {
            if (autoscalingSettings_ == null) {
              AutoscalingSettings = new global::Google.Cloud.Dataflow.V1Beta3.AutoscalingSettings();
            }
            input.ReadMessage(AutoscalingSettings);
            break;
          }
          case 122: {
            if (poolArgs_ == null) {
              PoolArgs = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(PoolArgs);
            break;
          }
          case 130: {
            DiskType = input.ReadString();
            break;
          }
          case 138: {
            Network = input.ReadString();
            break;
          }
          case 146: {
            WorkerHarnessContainerImage = input.ReadString();
            break;
          }
          case 154: {
            Subnetwork = input.ReadString();
            break;
          }
          case 160: {
            NumThreadsPerWorker = input.ReadInt32();
            break;
          }
          case 168: {
            IpConfiguration = (global::Google.Cloud.Dataflow.V1Beta3.WorkerIPAddressConfiguration) input.ReadEnum();
            break;
          }
          case 178: {
            sdkHarnessContainerImages_.AddEntriesFrom(ref input, _repeated_sdkHarnessContainerImages_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes any options that have an effect on the debugging of pipelines.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DebugOptions : pb::IMessage<DebugOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DebugOptions> _parser = new pb::MessageParser<DebugOptions>(() => new DebugOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DebugOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Dataflow.V1Beta3.EnvironmentReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugOptions(DebugOptions other) : this() {
      enableHotKeyLogging_ = other.enableHotKeyLogging_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DebugOptions Clone() {
      return new DebugOptions(this);
    }

    /// <summary>Field number for the "enable_hot_key_logging" field.</summary>
    public const int EnableHotKeyLoggingFieldNumber = 1;
    private bool enableHotKeyLogging_;
    /// <summary>
    /// When true, enables the logging of the literal hot key to the user's Cloud
    /// Logging.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableHotKeyLogging {
      get { return enableHotKeyLogging_; }
      set {
        enableHotKeyLogging_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DebugOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DebugOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableHotKeyLogging != other.EnableHotKeyLogging) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableHotKeyLogging != false) hash ^= EnableHotKeyLogging.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EnableHotKeyLogging != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableHotKeyLogging);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EnableHotKeyLogging != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableHotKeyLogging);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EnableHotKeyLogging != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DebugOptions other) {
      if (other == null) {
        return;
      }
      if (other.EnableHotKeyLogging != false) {
        EnableHotKeyLogging = other.EnableHotKeyLogging;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableHotKeyLogging = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EnableHotKeyLogging = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
