// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/firestore/v1/bloom_filter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Firestore.V1 {

  /// <summary>Holder for reflection information generated from google/firestore/v1/bloom_filter.proto</summary>
  public static partial class BloomFilterReflection {

    #region Descriptor
    /// <summary>File descriptor for google/firestore/v1/bloom_filter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BloomFilterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZnb29nbGUvZmlyZXN0b3JlL3YxL2Jsb29tX2ZpbHRlci5wcm90bxITZ29v",
            "Z2xlLmZpcmVzdG9yZS52MSIuCgtCaXRTZXF1ZW5jZRIOCgZiaXRtYXAYASAB",
            "KAwSDwoHcGFkZGluZxgCIAEoBSJRCgtCbG9vbUZpbHRlchIuCgRiaXRzGAEg",
            "ASgLMiAuZ29vZ2xlLmZpcmVzdG9yZS52MS5CaXRTZXF1ZW5jZRISCgpoYXNo",
            "X2NvdW50GAIgASgFQsgBChdjb20uZ29vZ2xlLmZpcmVzdG9yZS52MUIQQmxv",
            "b21GaWx0ZXJQcm90b1ABWjtjbG91ZC5nb29nbGUuY29tL2dvL2ZpcmVzdG9y",
            "ZS9hcGl2MS9maXJlc3RvcmVwYjtmaXJlc3RvcmVwYqICBEdDRlOqAhlHb29n",
            "bGUuQ2xvdWQuRmlyZXN0b3JlLlYxygIZR29vZ2xlXENsb3VkXEZpcmVzdG9y",
            "ZVxWMeoCHEdvb2dsZTo6Q2xvdWQ6OkZpcmVzdG9yZTo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.V1.BitSequence), global::Google.Cloud.Firestore.V1.BitSequence.Parser, new[]{ "Bitmap", "Padding" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.V1.BloomFilter), global::Google.Cloud.Firestore.V1.BloomFilter.Parser, new[]{ "Bits", "HashCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A sequence of bits, encoded in a byte array.
  ///
  /// Each byte in the `bitmap` byte array stores 8 bits of the sequence. The only
  /// exception is the last byte, which may store 8 _or fewer_ bits. The `padding`
  /// defines the number of bits of the last byte to be ignored as "padding". The
  /// values of these "padding" bits are unspecified and must be ignored.
  ///
  /// To retrieve the first bit, bit 0, calculate: `(bitmap[0] &amp; 0x01) != 0`.
  /// To retrieve the second bit, bit 1, calculate: `(bitmap[0] &amp; 0x02) != 0`.
  /// To retrieve the third bit, bit 2, calculate: `(bitmap[0] &amp; 0x04) != 0`.
  /// To retrieve the fourth bit, bit 3, calculate: `(bitmap[0] &amp; 0x08) != 0`.
  /// To retrieve bit n, calculate: `(bitmap[n / 8] &amp; (0x01 &lt;&lt; (n % 8))) != 0`.
  ///
  /// The "size" of a `BitSequence` (the number of bits it contains) is calculated
  /// by this formula: `(bitmap.length * 8) - padding`.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BitSequence : pb::IMessage<BitSequence>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BitSequence> _parser = new pb::MessageParser<BitSequence>(() => new BitSequence());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BitSequence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.V1.BloomFilterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BitSequence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BitSequence(BitSequence other) : this() {
      bitmap_ = other.bitmap_;
      padding_ = other.padding_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BitSequence Clone() {
      return new BitSequence(this);
    }

    /// <summary>Field number for the "bitmap" field.</summary>
    public const int BitmapFieldNumber = 1;
    private pb::ByteString bitmap_ = pb::ByteString.Empty;
    /// <summary>
    /// The bytes that encode the bit sequence.
    /// May have a length of zero.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bitmap {
      get { return bitmap_; }
      set {
        bitmap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "padding" field.</summary>
    public const int PaddingFieldNumber = 2;
    private int padding_;
    /// <summary>
    /// The number of bits of the last byte in `bitmap` to ignore as "padding".
    /// If the length of `bitmap` is zero, then this value must be `0`.
    /// Otherwise, this value must be between 0 and 7, inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Padding {
      get { return padding_; }
      set {
        padding_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BitSequence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BitSequence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bitmap != other.Bitmap) return false;
      if (Padding != other.Padding) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Bitmap.Length != 0) hash ^= Bitmap.GetHashCode();
      if (Padding != 0) hash ^= Padding.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Bitmap.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Bitmap);
      }
      if (Padding != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Padding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Bitmap.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Bitmap);
      }
      if (Padding != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Padding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Bitmap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bitmap);
      }
      if (Padding != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Padding);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BitSequence other) {
      if (other == null) {
        return;
      }
      if (other.Bitmap.Length != 0) {
        Bitmap = other.Bitmap;
      }
      if (other.Padding != 0) {
        Padding = other.Padding;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bitmap = input.ReadBytes();
            break;
          }
          case 16: {
            Padding = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bitmap = input.ReadBytes();
            break;
          }
          case 16: {
            Padding = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A bloom filter (https://en.wikipedia.org/wiki/Bloom_filter).
  ///
  /// The bloom filter hashes the entries with MD5 and treats the resulting 128-bit
  /// hash as 2 distinct 64-bit hash values, interpreted as unsigned integers
  /// using 2's complement encoding.
  ///
  /// These two hash values, named `h1` and `h2`, are then used to compute the
  /// `hash_count` hash values using the formula, starting at `i=0`:
  ///
  ///     h(i) = h1 + (i * h2)
  ///
  /// These resulting values are then taken modulo the number of bits in the bloom
  /// filter to get the bits of the bloom filter to test for the given entry.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BloomFilter : pb::IMessage<BloomFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BloomFilter> _parser = new pb::MessageParser<BloomFilter>(() => new BloomFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BloomFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.V1.BloomFilterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BloomFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BloomFilter(BloomFilter other) : this() {
      bits_ = other.bits_ != null ? other.bits_.Clone() : null;
      hashCount_ = other.hashCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BloomFilter Clone() {
      return new BloomFilter(this);
    }

    /// <summary>Field number for the "bits" field.</summary>
    public const int BitsFieldNumber = 1;
    private global::Google.Cloud.Firestore.V1.BitSequence bits_;
    /// <summary>
    /// The bloom filter data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Firestore.V1.BitSequence Bits {
      get { return bits_; }
      set {
        bits_ = value;
      }
    }

    /// <summary>Field number for the "hash_count" field.</summary>
    public const int HashCountFieldNumber = 2;
    private int hashCount_;
    /// <summary>
    /// The number of hashes used by the algorithm.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int HashCount {
      get { return hashCount_; }
      set {
        hashCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BloomFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BloomFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bits, other.Bits)) return false;
      if (HashCount != other.HashCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (bits_ != null) hash ^= Bits.GetHashCode();
      if (HashCount != 0) hash ^= HashCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (bits_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bits);
      }
      if (HashCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HashCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (bits_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bits);
      }
      if (HashCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HashCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (bits_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bits);
      }
      if (HashCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HashCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BloomFilter other) {
      if (other == null) {
        return;
      }
      if (other.bits_ != null) {
        if (bits_ == null) {
          Bits = new global::Google.Cloud.Firestore.V1.BitSequence();
        }
        Bits.MergeFrom(other.Bits);
      }
      if (other.HashCount != 0) {
        HashCount = other.HashCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bits_ == null) {
              Bits = new global::Google.Cloud.Firestore.V1.BitSequence();
            }
            input.ReadMessage(Bits);
            break;
          }
          case 16: {
            HashCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (bits_ == null) {
              Bits = new global::Google.Cloud.Firestore.V1.BitSequence();
            }
            input.ReadMessage(Bits);
            break;
          }
          case 16: {
            HashCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
