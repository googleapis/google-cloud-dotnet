// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/batch/v1alpha/job.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Batch.V1Alpha {

  /// <summary>Holder for reflection information generated from google/cloud/batch/v1alpha/job.proto</summary>
  public static partial class JobReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/batch/v1alpha/job.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static JobReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRnb29nbGUvY2xvdWQvYmF0Y2gvdjFhbHBoYS9qb2IucHJvdG8SGmdvb2ds",
            "ZS5jbG91ZC5iYXRjaC52MWFscGhhGh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2",
            "aW9yLnByb3RvGhlnb29nbGUvYXBpL3Jlc291cmNlLnByb3RvGiVnb29nbGUv",
            "Y2xvdWQvYmF0Y2gvdjFhbHBoYS90YXNrLnByb3RvGh5nb29nbGUvcHJvdG9i",
            "dWYvZHVyYXRpb24ucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAu",
            "cHJvdG8i0wcKA0pvYhIRCgRuYW1lGAEgASgJQgPgQQMSEAoDdWlkGAIgASgJ",
            "QgPgQQMSEAoIcHJpb3JpdHkYAyABKAMSPwoLdGFza19ncm91cHMYBCADKAsy",
            "JS5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5UYXNrR3JvdXBCA+BBAhJL",
            "ChFzY2hlZHVsaW5nX3BvbGljeRgFIAEoDjIwLmdvb2dsZS5jbG91ZC5iYXRj",
            "aC52MWFscGhhLkpvYi5TY2hlZHVsaW5nUG9saWN5Ej8KDGRlcGVuZGVuY2ll",
            "cxgGIAMoCzIpLmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLkpvYkRlcGVu",
            "ZGVuY3kSRwoRYWxsb2NhdGlvbl9wb2xpY3kYByABKAsyLC5nb29nbGUuY2xv",
            "dWQuYmF0Y2gudjFhbHBoYS5BbGxvY2F0aW9uUG9saWN5EjsKBmxhYmVscxgI",
            "IAMoCzIrLmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLkpvYi5MYWJlbHNF",
            "bnRyeRI6CgZzdGF0dXMYCSABKAsyJS5nb29nbGUuY2xvdWQuYmF0Y2gudjFh",
            "bHBoYS5Kb2JTdGF0dXNCA+BBAxJFCgxub3RpZmljYXRpb24YCiABKAsyKy5n",
            "b29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5Kb2JOb3RpZmljYXRpb25CAhgB",
            "EjQKC2NyZWF0ZV90aW1lGAsgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcEID4EEDEjQKC3VwZGF0ZV90aW1lGAwgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcEID4EEDEjsKC2xvZ3NfcG9saWN5GA0gASgLMiYuZ29v",
            "Z2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuTG9nc1BvbGljeRJCCg1ub3RpZmlj",
            "YXRpb25zGA4gAygLMisuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuSm9i",
            "Tm90aWZpY2F0aW9uGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCToCOAEiTgoQU2NoZWR1bGluZ1BvbGljeRIhCh1TQ0hFRFVM",
            "SU5HX1BPTElDWV9VTlNQRUNJRklFRBAAEhcKE0FTX1NPT05fQVNfUE9TU0lC",
            "TEUQATpR6kFOChhiYXRjaC5nb29nbGVhcGlzLmNvbS9Kb2ISMnByb2plY3Rz",
            "L3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9qb2JzL3tqb2J9ItcC",
            "CgpMb2dzUG9saWN5EkcKC2Rlc3RpbmF0aW9uGAEgASgOMjIuZ29vZ2xlLmNs",
            "b3VkLmJhdGNoLnYxYWxwaGEuTG9nc1BvbGljeS5EZXN0aW5hdGlvbhIRCgls",
            "b2dzX3BhdGgYAiABKAkSXAoUY2xvdWRfbG9nZ2luZ19vcHRpb24YAyABKAsy",
            "OS5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5Mb2dzUG9saWN5LkNsb3Vk",
            "TG9nZ2luZ09wdGlvbkID4EEBGkYKEkNsb3VkTG9nZ2luZ09wdGlvbhIwCiN1",
            "c2VfZ2VuZXJpY190YXNrX21vbml0b3JlZF9yZXNvdXJjZRgBIAEoCEID4EEB",
            "IkcKC0Rlc3RpbmF0aW9uEhsKF0RFU1RJTkFUSU9OX1VOU1BFQ0lGSUVEEAAS",
            "EQoNQ0xPVURfTE9HR0lORxABEggKBFBBVEgQAiL5AQoNSm9iRGVwZW5kZW5j",
            "eRJDCgVpdGVtcxgBIAMoCzI0Lmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhh",
            "LkpvYkRlcGVuZGVuY3kuSXRlbXNFbnRyeRpcCgpJdGVtc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRI9CgV2YWx1ZRgCIAEoDjIuLmdvb2dsZS5jbG91ZC5iYXRjaC52",
            "MWFscGhhLkpvYkRlcGVuZGVuY3kuVHlwZToCOAEiRQoEVHlwZRIUChBUWVBF",
            "X1VOU1BFQ0lGSUVEEAASDQoJU1VDQ0VFREVEEAESCgoGRkFJTEVEEAISDAoI",
            "RklOSVNIRUQQAyKZCAoJSm9iU3RhdHVzEjoKBXN0YXRlGAEgASgOMisuZ29v",
            "Z2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuSm9iU3RhdHVzLlN0YXRlEj4KDXN0",
            "YXR1c19ldmVudHMYAiADKAsyJy5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBo",
            "YS5TdGF0dXNFdmVudBJKCgt0YXNrX2dyb3VwcxgEIAMoCzI1Lmdvb2dsZS5j",
            "bG91ZC5iYXRjaC52MWFscGhhLkpvYlN0YXR1cy5UYXNrR3JvdXBzRW50cnkS",
            "LwoMcnVuX2R1cmF0aW9uGAUgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0",
            "aW9uEkEKDnJlc291cmNlX3VzYWdlGAYgASgLMikuZ29vZ2xlLmNsb3VkLmJh",
            "dGNoLnYxYWxwaGEuUmVzb3VyY2VVc2FnZRrbAQoOSW5zdGFuY2VTdGF0dXMS",
            "FAoMbWFjaGluZV90eXBlGAEgASgJEloKEnByb3Zpc2lvbmluZ19tb2RlbBgC",
            "IAEoDjI+Lmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLkFsbG9jYXRpb25Q",
            "b2xpY3kuUHJvdmlzaW9uaW5nTW9kZWwSEQoJdGFza19wYWNrGAMgASgDEkQK",
            "CWJvb3RfZGlzaxgEIAEoCzIxLmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhh",
            "LkFsbG9jYXRpb25Qb2xpY3kuRGlzaxrcAQoPVGFza0dyb3VwU3RhdHVzElEK",
            "BmNvdW50cxgBIAMoCzJBLmdvb2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLkpv",
            "YlN0YXR1cy5UYXNrR3JvdXBTdGF0dXMuQ291bnRzRW50cnkSRwoJaW5zdGFu",
            "Y2VzGAIgAygLMjQuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuSm9iU3Rh",
            "dHVzLkluc3RhbmNlU3RhdHVzGi0KC0NvdW50c0VudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoAzoCOAEaaAoPVGFza0dyb3Vwc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRJECgV2YWx1ZRgCIAEoCzI1Lmdvb2dsZS5jbG91ZC5iYXRjaC52",
            "MWFscGhhLkpvYlN0YXR1cy5UYXNrR3JvdXBTdGF0dXM6AjgBIqgBCgVTdGF0",
            "ZRIVChFTVEFURV9VTlNQRUNJRklFRBAAEgoKBlFVRVVFRBABEg0KCVNDSEVE",
            "VUxFRBACEgsKB1JVTk5JTkcQAxINCglTVUNDRUVERUQQBBIKCgZGQUlMRUQQ",
            "BRIYChRERUxFVElPTl9JTl9QUk9HUkVTUxAGEhwKGENBTkNFTExBVElPTl9J",
            "Tl9QUk9HUkVTUxAHEg0KCUNBTkNFTExFRBAIIiMKDVJlc291cmNlVXNhZ2US",
            "EgoKY29yZV9ob3VycxgBIAEoASKQAwoPSm9iTm90aWZpY2F0aW9uEhQKDHB1",
            "YnN1Yl90b3BpYxgBIAEoCRJECgdtZXNzYWdlGAIgASgLMjMuZ29vZ2xlLmNs",
            "b3VkLmJhdGNoLnYxYWxwaGEuSm9iTm90aWZpY2F0aW9uLk1lc3NhZ2Ua0wEK",
            "B01lc3NhZ2USPgoEdHlwZRgBIAEoDjIwLmdvb2dsZS5jbG91ZC5iYXRjaC52",
            "MWFscGhhLkpvYk5vdGlmaWNhdGlvbi5UeXBlEkIKDW5ld19qb2Jfc3RhdGUY",
            "AiABKA4yKy5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5Kb2JTdGF0dXMu",
            "U3RhdGUSRAoObmV3X3Rhc2tfc3RhdGUYAyABKA4yLC5nb29nbGUuY2xvdWQu",
            "YmF0Y2gudjFhbHBoYS5UYXNrU3RhdHVzLlN0YXRlIksKBFR5cGUSFAoQVFlQ",
            "RV9VTlNQRUNJRklFRBAAEhUKEUpPQl9TVEFURV9DSEFOR0VEEAESFgoSVEFT",
            "S19TVEFURV9DSEFOR0VEEAIi9hEKEEFsbG9jYXRpb25Qb2xpY3kSTQoIbG9j",
            "YXRpb24YASABKAsyOy5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5BbGxv",
            "Y2F0aW9uUG9saWN5LkxvY2F0aW9uUG9saWN5ElEKCGluc3RhbmNlGAIgASgL",
            "MjsuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuQWxsb2NhdGlvblBvbGlj",
            "eS5JbnN0YW5jZVBvbGljeUICGAESWAoJaW5zdGFuY2VzGAggAygLMkUuZ29v",
            "Z2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuQWxsb2NhdGlvblBvbGljeS5JbnN0",
            "YW5jZVBvbGljeU9yVGVtcGxhdGUSHgoSaW5zdGFuY2VfdGVtcGxhdGVzGAMg",
            "AygJQgIYARJfChNwcm92aXNpb25pbmdfbW9kZWxzGAQgAygOMj4uZ29vZ2xl",
            "LmNsb3VkLmJhdGNoLnYxYWxwaGEuQWxsb2NhdGlvblBvbGljeS5Qcm92aXNp",
            "b25pbmdNb2RlbEICGAESIQoVc2VydmljZV9hY2NvdW50X2VtYWlsGAUgASgJ",
            "QgIYARJDCg9zZXJ2aWNlX2FjY291bnQYCSABKAsyKi5nb29nbGUuY2xvdWQu",
            "YmF0Y2gudjFhbHBoYS5TZXJ2aWNlQWNjb3VudBJICgZsYWJlbHMYBiADKAsy",
            "OC5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5BbGxvY2F0aW9uUG9saWN5",
            "LkxhYmVsc0VudHJ5EksKB25ldHdvcmsYByABKAsyOi5nb29nbGUuY2xvdWQu",
            "YmF0Y2gudjFhbHBoYS5BbGxvY2F0aW9uUG9saWN5Lk5ldHdvcmtQb2xpY3kS",
            "TwoJcGxhY2VtZW50GAogASgLMjwuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxw",
            "aGEuQWxsb2NhdGlvblBvbGljeS5QbGFjZW1lbnRQb2xpY3kSEQoEdGFncxgL",
            "IAMoCUID4EEBGkUKDkxvY2F0aW9uUG9saWN5EhkKEWFsbG93ZWRfbG9jYXRp",
            "b25zGAEgAygJEhgKEGRlbmllZF9sb2NhdGlvbnMYAiADKAkacQoERGlzaxIP",
            "CgVpbWFnZRgEIAEoCUgAEhIKCHNuYXBzaG90GAUgASgJSAASDAoEdHlwZRgB",
            "IAEoCRIPCgdzaXplX2diGAIgASgDEhYKDmRpc2tfaW50ZXJmYWNlGAYgASgJ",
            "Qg0KC2RhdGFfc291cmNlGo8BCgxBdHRhY2hlZERpc2sSRQoIbmV3X2Rpc2sY",
            "ASABKAsyMS5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5BbGxvY2F0aW9u",
            "UG9saWN5LkRpc2tIABIXCg1leGlzdGluZ19kaXNrGAIgASgJSAASEwoLZGV2",
            "aWNlX25hbWUYAyABKAlCCgoIYXR0YWNoZWQaaAoLQWNjZWxlcmF0b3ISDAoE",
            "dHlwZRgBIAEoCRINCgVjb3VudBgCIAEoAxIfChNpbnN0YWxsX2dwdV9kcml2",
            "ZXJzGAMgASgIQgIYARIbCg5kcml2ZXJfdmVyc2lvbhgEIAEoCUID4EEBGrkD",
            "Cg5JbnN0YW5jZVBvbGljeRIhChVhbGxvd2VkX21hY2hpbmVfdHlwZXMYASAD",
            "KAlCAhgBEhQKDG1hY2hpbmVfdHlwZRgCIAEoCRIYChBtaW5fY3B1X3BsYXRm",
            "b3JtGAMgASgJEloKEnByb3Zpc2lvbmluZ19tb2RlbBgEIAEoDjI+Lmdvb2ds",
            "ZS5jbG91ZC5iYXRjaC52MWFscGhhLkFsbG9jYXRpb25Qb2xpY3kuUHJvdmlz",
            "aW9uaW5nTW9kZWwSTgoMYWNjZWxlcmF0b3JzGAUgAygLMjguZ29vZ2xlLmNs",
            "b3VkLmJhdGNoLnYxYWxwaGEuQWxsb2NhdGlvblBvbGljeS5BY2NlbGVyYXRv",
            "chJECglib290X2Rpc2sYCCABKAsyMS5nb29nbGUuY2xvdWQuYmF0Y2gudjFh",
            "bHBoYS5BbGxvY2F0aW9uUG9saWN5LkRpc2sSSAoFZGlza3MYBiADKAsyOS5n",
            "b29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5BbGxvY2F0aW9uUG9saWN5LkF0",
            "dGFjaGVkRGlzaxIYCgtyZXNlcnZhdGlvbhgHIAEoCUID4EEBGvsBChhJbnN0",
            "YW5jZVBvbGljeU9yVGVtcGxhdGUSTQoGcG9saWN5GAEgASgLMjsuZ29vZ2xl",
            "LmNsb3VkLmJhdGNoLnYxYWxwaGEuQWxsb2NhdGlvblBvbGljeS5JbnN0YW5j",
            "ZVBvbGljeUgAEhsKEWluc3RhbmNlX3RlbXBsYXRlGAIgASgJSAASGwoTaW5z",
            "dGFsbF9ncHVfZHJpdmVycxgDIAEoCBIeChFpbnN0YWxsX29wc19hZ2VudBgE",
            "IAEoCEID4EEBEiMKFmJsb2NrX3Byb2plY3Rfc3NoX2tleXMYBSABKAhCA+BB",
            "AUIRCg9wb2xpY3lfdGVtcGxhdGUaVwoQTmV0d29ya0ludGVyZmFjZRIPCgdu",
            "ZXR3b3JrGAEgASgJEhIKCnN1Ym5ldHdvcmsYAiABKAkSHgoWbm9fZXh0ZXJu",
            "YWxfaXBfYWRkcmVzcxgDIAEoCBpqCg1OZXR3b3JrUG9saWN5ElkKEm5ldHdv",
            "cmtfaW50ZXJmYWNlcxgBIAMoCzI9Lmdvb2dsZS5jbG91ZC5iYXRjaC52MWFs",
            "cGhhLkFsbG9jYXRpb25Qb2xpY3kuTmV0d29ya0ludGVyZmFjZRo8Cg9QbGFj",
            "ZW1lbnRQb2xpY3kSEwoLY29sbG9jYXRpb24YASABKAkSFAoMbWF4X2Rpc3Rh",
            "bmNlGAIgASgDGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEiYAoRUHJvdmlzaW9uaW5nTW9kZWwSIgoeUFJPVklTSU9O",
            "SU5HX01PREVMX1VOU1BFQ0lGSUVEEAASDAoIU1RBTkRBUkQQARIICgRTUE9U",
            "EAISDwoLUFJFRU1QVElCTEUQAyLfBgoJVGFza0dyb3VwEhEKBG5hbWUYASAB",
            "KAlCA+BBAxI8Cgl0YXNrX3NwZWMYAyABKAsyJC5nb29nbGUuY2xvdWQuYmF0",
            "Y2gudjFhbHBoYS5UYXNrU3BlY0ID4EECEhIKCnRhc2tfY291bnQYBCABKAMS",
            "EwoLcGFyYWxsZWxpc20YBSABKAMSUQoRc2NoZWR1bGluZ19wb2xpY3kYBiAB",
            "KA4yNi5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5UYXNrR3JvdXAuU2No",
            "ZWR1bGluZ1BvbGljeRJHChFhbGxvY2F0aW9uX3BvbGljeRgHIAEoCzIsLmdv",
            "b2dsZS5jbG91ZC5iYXRjaC52MWFscGhhLkFsbG9jYXRpb25Qb2xpY3kSQQoG",
            "bGFiZWxzGAggAygLMjEuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuVGFz",
            "a0dyb3VwLkxhYmVsc0VudHJ5EkIKEXRhc2tfZW52aXJvbm1lbnRzGAkgAygL",
            "MicuZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuRW52aXJvbm1lbnQSGwoT",
            "dGFza19jb3VudF9wZXJfbm9kZRgKIAEoAxIaChJyZXF1aXJlX2hvc3RzX2Zp",
            "bGUYCyABKAgSFgoOcGVybWlzc2l2ZV9zc2gYDCABKAgSHAoPcnVuX2FzX25v",
            "bl9yb290GA4gASgIQgPgQQESSAoPc2VydmljZV9hY2NvdW50GA8gASgLMiou",
            "Z29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuU2VydmljZUFjY291bnRCA+BB",
            "ARotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIlwKEFNjaGVkdWxpbmdQb2xpY3kSIQodU0NIRURVTElOR19QT0xJQ1lf",
            "VU5TUEVDSUZJRUQQABIXChNBU19TT09OX0FTX1BPU1NJQkxFEAESDAoISU5f",
            "T1JERVIQAjpv6kFsCh5iYXRjaC5nb29nbGVhcGlzLmNvbS9UYXNrR3JvdXAS",
            "SnByb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9qb2Jz",
            "L3tqb2J9L3Rhc2tHcm91cHMve3Rhc2tfZ3JvdXB9Ii8KDlNlcnZpY2VBY2Nv",
            "dW50Eg0KBWVtYWlsGAEgASgJEg4KBnNjb3BlcxgCIAMoCULCAQoeY29tLmdv",
            "b2dsZS5jbG91ZC5iYXRjaC52MWFscGhhQghKb2JQcm90b1ABWjRjbG91ZC5n",
            "b29nbGUuY29tL2dvL2JhdGNoL2FwaXYxYWxwaGEvYmF0Y2hwYjtiYXRjaHBi",
            "ogIDR0NCqgIaR29vZ2xlLkNsb3VkLkJhdGNoLlYxQWxwaGHKAhpHb29nbGVc",
            "Q2xvdWRcQmF0Y2hcVjFhbHBoYeoCHUdvb2dsZTo6Q2xvdWQ6OkJhdGNoOjpW",
            "MWFscGhhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Batch.V1Alpha.TaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.Job), global::Google.Cloud.Batch.V1Alpha.Job.Parser, new[]{ "Name", "Uid", "Priority", "TaskGroups", "SchedulingPolicy", "Dependencies", "AllocationPolicy", "Labels", "Status", "Notification", "CreateTime", "UpdateTime", "LogsPolicy", "Notifications" }, null, new[]{ typeof(global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.LogsPolicy), global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Parser, new[]{ "Destination", "LogsPath", "CloudLoggingOption" }, null, new[]{ typeof(global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.CloudLoggingOption), global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.CloudLoggingOption.Parser, new[]{ "UseGenericTaskMonitoredResource" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.JobDependency), global::Google.Cloud.Batch.V1Alpha.JobDependency.Parser, new[]{ "Items" }, null, new[]{ typeof(global::Google.Cloud.Batch.V1Alpha.JobDependency.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.JobStatus), global::Google.Cloud.Batch.V1Alpha.JobStatus.Parser, new[]{ "State", "StatusEvents", "TaskGroups", "RunDuration", "ResourceUsage" }, null, new[]{ typeof(global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.InstanceStatus), global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.InstanceStatus.Parser, new[]{ "MachineType", "ProvisioningModel", "TaskPack", "BootDisk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.TaskGroupStatus), global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.TaskGroupStatus.Parser, new[]{ "Counts", "Instances" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.ResourceUsage), global::Google.Cloud.Batch.V1Alpha.ResourceUsage.Parser, new[]{ "CoreHours" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.JobNotification), global::Google.Cloud.Batch.V1Alpha.JobNotification.Parser, new[]{ "PubsubTopic", "Message" }, null, new[]{ typeof(global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Message), global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Message.Parser, new[]{ "Type", "NewJobState", "NewTaskState" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Parser, new[]{ "Location", "Instance", "Instances", "InstanceTemplates", "ProvisioningModels", "ServiceAccountEmail", "ServiceAccount", "Labels", "Network", "Placement", "Tags" }, null, new[]{ typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.LocationPolicy), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.LocationPolicy.Parser, new[]{ "AllowedLocations", "DeniedLocations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk.Parser, new[]{ "Image", "Snapshot", "Type", "SizeGb", "DiskInterface" }, new[]{ "DataSource" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.AttachedDisk), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.AttachedDisk.Parser, new[]{ "NewDisk", "ExistingDisk", "DeviceName" }, new[]{ "Attached" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Accelerator), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Accelerator.Parser, new[]{ "Type", "Count", "InstallGpuDrivers", "DriverVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy.Parser, new[]{ "AllowedMachineTypes", "MachineType", "MinCpuPlatform", "ProvisioningModel", "Accelerators", "BootDisk", "Disks", "Reservation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicyOrTemplate), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicyOrTemplate.Parser, new[]{ "Policy", "InstanceTemplate", "InstallGpuDrivers", "InstallOpsAgent", "BlockProjectSshKeys" }, new[]{ "PolicyTemplate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkInterface), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkInterface.Parser, new[]{ "Network", "Subnetwork", "NoExternalIpAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkPolicy), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkPolicy.Parser, new[]{ "NetworkInterfaces" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.PlacementPolicy), global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.PlacementPolicy.Parser, new[]{ "Collocation", "MaxDistance" }, null, null, null, null),
            null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.TaskGroup), global::Google.Cloud.Batch.V1Alpha.TaskGroup.Parser, new[]{ "Name", "TaskSpec", "TaskCount", "Parallelism", "SchedulingPolicy", "AllocationPolicy", "Labels", "TaskEnvironments", "TaskCountPerNode", "RequireHostsFile", "PermissiveSsh", "RunAsNonRoot", "ServiceAccount" }, null, new[]{ typeof(global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.ServiceAccount), global::Google.Cloud.Batch.V1Alpha.ServiceAccount.Parser, new[]{ "Email", "Scopes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The Cloud Batch Job description.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Job : pb::IMessage<Job>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Job> _parser = new pb::MessageParser<Job>(() => new Job());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Job> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Job() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Job(Job other) : this() {
      name_ = other.name_;
      uid_ = other.uid_;
      priority_ = other.priority_;
      taskGroups_ = other.taskGroups_.Clone();
      schedulingPolicy_ = other.schedulingPolicy_;
      dependencies_ = other.dependencies_.Clone();
      allocationPolicy_ = other.allocationPolicy_ != null ? other.allocationPolicy_.Clone() : null;
      labels_ = other.labels_.Clone();
      status_ = other.status_ != null ? other.status_.Clone() : null;
      notification_ = other.notification_ != null ? other.notification_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      logsPolicy_ = other.logsPolicy_ != null ? other.logsPolicy_.Clone() : null;
      notifications_ = other.notifications_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Job Clone() {
      return new Job(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. Job name.
    /// For example: "projects/123456/locations/us-central1/jobs/job01".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 2;
    private string uid_ = "";
    /// <summary>
    /// Output only. A system generated unique ID for the Job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Uid {
      get { return uid_; }
      set {
        uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private long priority_;
    /// <summary>
    /// Priority of the Job.
    /// The valid value range is [0, 100). Default value is 0.
    /// Higher value indicates higher priority.
    /// A job with higher priority value is more likely to run earlier if all other
    /// requirements are satisfied.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "task_groups" field.</summary>
    public const int TaskGroupsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.TaskGroup> _repeated_taskGroups_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Batch.V1Alpha.TaskGroup.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.TaskGroup> taskGroups_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.TaskGroup>();
    /// <summary>
    /// Required. TaskGroups in the Job. Only one TaskGroup is supported now.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.TaskGroup> TaskGroups {
      get { return taskGroups_; }
    }

    /// <summary>Field number for the "scheduling_policy" field.</summary>
    public const int SchedulingPolicyFieldNumber = 5;
    private global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy schedulingPolicy_ = global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy.Unspecified;
    /// <summary>
    /// Scheduling policy for TaskGroups in the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy SchedulingPolicy {
      get { return schedulingPolicy_; }
      set {
        schedulingPolicy_ = value;
      }
    }

    /// <summary>Field number for the "dependencies" field.</summary>
    public const int DependenciesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.JobDependency> _repeated_dependencies_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Cloud.Batch.V1Alpha.JobDependency.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobDependency> dependencies_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobDependency>();
    /// <summary>
    /// At least one of the dependencies must be satisfied before the Job is
    /// scheduled to run.
    /// Only one JobDependency is supported now.
    /// Not yet implemented.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobDependency> Dependencies {
      get { return dependencies_; }
    }

    /// <summary>Field number for the "allocation_policy" field.</summary>
    public const int AllocationPolicyFieldNumber = 7;
    private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy allocationPolicy_;
    /// <summary>
    /// Compute resource allocation for all TaskGroups in the Job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy AllocationPolicy {
      get { return allocationPolicy_; }
      set {
        allocationPolicy_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom labels to apply to the job and any Cloud Logging
    /// [LogEntry](https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry)
    /// that it generates.
    ///
    /// Use labels to group and describe the resources they are applied to. Batch
    /// automatically applies predefined labels and supports multiple `labels`
    /// fields for each job, which each let you apply custom labels to various
    /// resources. Label names that start with "goog-" or "google-" are
    /// reserved for predefined labels. For more information about labels with
    /// Batch, see
    /// [Organize resources using
    /// labels](https://cloud.google.com/batch/docs/organize-resources-using-labels).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 9;
    private global::Google.Cloud.Batch.V1Alpha.JobStatus status_;
    /// <summary>
    /// Output only. Job status. It is read only for users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.JobStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "notification" field.</summary>
    public const int NotificationFieldNumber = 10;
    private global::Google.Cloud.Batch.V1Alpha.JobNotification notification_;
    /// <summary>
    /// Deprecated: please use notifications instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.JobNotification Notification {
      get { return notification_; }
      set {
        notification_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. When the Job was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The last time the Job was updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "logs_policy" field.</summary>
    public const int LogsPolicyFieldNumber = 13;
    private global::Google.Cloud.Batch.V1Alpha.LogsPolicy logsPolicy_;
    /// <summary>
    /// Log preservation policy for the Job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.LogsPolicy LogsPolicy {
      get { return logsPolicy_; }
      set {
        logsPolicy_ = value;
      }
    }

    /// <summary>Field number for the "notifications" field.</summary>
    public const int NotificationsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.JobNotification> _repeated_notifications_codec
        = pb::FieldCodec.ForMessage(114, global::Google.Cloud.Batch.V1Alpha.JobNotification.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobNotification> notifications_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobNotification>();
    /// <summary>
    /// Notification configurations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobNotification> Notifications {
      get { return notifications_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Job);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Job other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Uid != other.Uid) return false;
      if (Priority != other.Priority) return false;
      if(!taskGroups_.Equals(other.taskGroups_)) return false;
      if (SchedulingPolicy != other.SchedulingPolicy) return false;
      if(!dependencies_.Equals(other.dependencies_)) return false;
      if (!object.Equals(AllocationPolicy, other.AllocationPolicy)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Notification, other.Notification)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (!object.Equals(LogsPolicy, other.LogsPolicy)) return false;
      if(!notifications_.Equals(other.notifications_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Uid.Length != 0) hash ^= Uid.GetHashCode();
      if (Priority != 0L) hash ^= Priority.GetHashCode();
      hash ^= taskGroups_.GetHashCode();
      if (SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy.Unspecified) hash ^= SchedulingPolicy.GetHashCode();
      hash ^= dependencies_.GetHashCode();
      if (allocationPolicy_ != null) hash ^= AllocationPolicy.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (notification_ != null) hash ^= Notification.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (logsPolicy_ != null) hash ^= LogsPolicy.GetHashCode();
      hash ^= notifications_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (Priority != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Priority);
      }
      taskGroups_.WriteTo(output, _repeated_taskGroups_codec);
      if (SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) SchedulingPolicy);
      }
      dependencies_.WriteTo(output, _repeated_dependencies_codec);
      if (allocationPolicy_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AllocationPolicy);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (status_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Status);
      }
      if (notification_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Notification);
      }
      if (createTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(UpdateTime);
      }
      if (logsPolicy_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LogsPolicy);
      }
      notifications_.WriteTo(output, _repeated_notifications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uid);
      }
      if (Priority != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Priority);
      }
      taskGroups_.WriteTo(ref output, _repeated_taskGroups_codec);
      if (SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) SchedulingPolicy);
      }
      dependencies_.WriteTo(ref output, _repeated_dependencies_codec);
      if (allocationPolicy_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AllocationPolicy);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (status_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Status);
      }
      if (notification_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Notification);
      }
      if (createTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(UpdateTime);
      }
      if (logsPolicy_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LogsPolicy);
      }
      notifications_.WriteTo(ref output, _repeated_notifications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Uid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
      }
      if (Priority != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Priority);
      }
      size += taskGroups_.CalculateSize(_repeated_taskGroups_codec);
      if (SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SchedulingPolicy);
      }
      size += dependencies_.CalculateSize(_repeated_dependencies_codec);
      if (allocationPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllocationPolicy);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (notification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Notification);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (logsPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogsPolicy);
      }
      size += notifications_.CalculateSize(_repeated_notifications_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Job other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Uid.Length != 0) {
        Uid = other.Uid;
      }
      if (other.Priority != 0L) {
        Priority = other.Priority;
      }
      taskGroups_.Add(other.taskGroups_);
      if (other.SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy.Unspecified) {
        SchedulingPolicy = other.SchedulingPolicy;
      }
      dependencies_.Add(other.dependencies_);
      if (other.allocationPolicy_ != null) {
        if (allocationPolicy_ == null) {
          AllocationPolicy = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy();
        }
        AllocationPolicy.MergeFrom(other.AllocationPolicy);
      }
      labels_.MergeFrom(other.labels_);
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Google.Cloud.Batch.V1Alpha.JobStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.notification_ != null) {
        if (notification_ == null) {
          Notification = new global::Google.Cloud.Batch.V1Alpha.JobNotification();
        }
        Notification.MergeFrom(other.Notification);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.logsPolicy_ != null) {
        if (logsPolicy_ == null) {
          LogsPolicy = new global::Google.Cloud.Batch.V1Alpha.LogsPolicy();
        }
        LogsPolicy.MergeFrom(other.LogsPolicy);
      }
      notifications_.Add(other.notifications_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 24: {
            Priority = input.ReadInt64();
            break;
          }
          case 34: {
            taskGroups_.AddEntriesFrom(input, _repeated_taskGroups_codec);
            break;
          }
          case 40: {
            SchedulingPolicy = (global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy) input.ReadEnum();
            break;
          }
          case 50: {
            dependencies_.AddEntriesFrom(input, _repeated_dependencies_codec);
            break;
          }
          case 58: {
            if (allocationPolicy_ == null) {
              AllocationPolicy = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy();
            }
            input.ReadMessage(AllocationPolicy);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 74: {
            if (status_ == null) {
              Status = new global::Google.Cloud.Batch.V1Alpha.JobStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 82: {
            if (notification_ == null) {
              Notification = new global::Google.Cloud.Batch.V1Alpha.JobNotification();
            }
            input.ReadMessage(Notification);
            break;
          }
          case 90: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 98: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 106: {
            if (logsPolicy_ == null) {
              LogsPolicy = new global::Google.Cloud.Batch.V1Alpha.LogsPolicy();
            }
            input.ReadMessage(LogsPolicy);
            break;
          }
          case 114: {
            notifications_.AddEntriesFrom(input, _repeated_notifications_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uid = input.ReadString();
            break;
          }
          case 24: {
            Priority = input.ReadInt64();
            break;
          }
          case 34: {
            taskGroups_.AddEntriesFrom(ref input, _repeated_taskGroups_codec);
            break;
          }
          case 40: {
            SchedulingPolicy = (global::Google.Cloud.Batch.V1Alpha.Job.Types.SchedulingPolicy) input.ReadEnum();
            break;
          }
          case 50: {
            dependencies_.AddEntriesFrom(ref input, _repeated_dependencies_codec);
            break;
          }
          case 58: {
            if (allocationPolicy_ == null) {
              AllocationPolicy = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy();
            }
            input.ReadMessage(AllocationPolicy);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 74: {
            if (status_ == null) {
              Status = new global::Google.Cloud.Batch.V1Alpha.JobStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 82: {
            if (notification_ == null) {
              Notification = new global::Google.Cloud.Batch.V1Alpha.JobNotification();
            }
            input.ReadMessage(Notification);
            break;
          }
          case 90: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 98: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 106: {
            if (logsPolicy_ == null) {
              LogsPolicy = new global::Google.Cloud.Batch.V1Alpha.LogsPolicy();
            }
            input.ReadMessage(LogsPolicy);
            break;
          }
          case 114: {
            notifications_.AddEntriesFrom(ref input, _repeated_notifications_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Job message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The order that TaskGroups are scheduled relative to each other.
      ///
      /// Not yet implemented.
      /// </summary>
      public enum SchedulingPolicy {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("SCHEDULING_POLICY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Run all TaskGroups as soon as possible.
        /// </summary>
        [pbr::OriginalName("AS_SOON_AS_POSSIBLE")] AsSoonAsPossible = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// LogsPolicy describes if and how a job's logs are preserved. Logs include
  /// information that is automatically written by the Batch service agent and any
  /// information that you configured the job's runnables to write to the `stdout`
  /// or `stderr` streams.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LogsPolicy : pb::IMessage<LogsPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogsPolicy> _parser = new pb::MessageParser<LogsPolicy>(() => new LogsPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogsPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogsPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogsPolicy(LogsPolicy other) : this() {
      destination_ = other.destination_;
      logsPath_ = other.logsPath_;
      cloudLoggingOption_ = other.cloudLoggingOption_ != null ? other.cloudLoggingOption_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogsPolicy Clone() {
      return new LogsPolicy(this);
    }

    /// <summary>Field number for the "destination" field.</summary>
    public const int DestinationFieldNumber = 1;
    private global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination destination_ = global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination.Unspecified;
    /// <summary>
    /// If and where logs should be saved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination Destination {
      get { return destination_; }
      set {
        destination_ = value;
      }
    }

    /// <summary>Field number for the "logs_path" field.</summary>
    public const int LogsPathFieldNumber = 2;
    private string logsPath_ = "";
    /// <summary>
    /// When `destination` is set to `PATH`, you must set this field to the path
    /// where you want logs to be saved. This path can point to a local directory
    /// on the VM or (if congifured) a directory under the mount path of any
    /// Cloud Storage bucket, network file system (NFS), or writable persistent
    /// disk that is mounted to the job. For example, if the job has a bucket with
    /// `mountPath` set to `/mnt/disks/my-bucket`, you can write logs to the
    /// root directory of the `remotePath` of that bucket by setting this field to
    /// `/mnt/disks/my-bucket/`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogsPath {
      get { return logsPath_; }
      set {
        logsPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cloud_logging_option" field.</summary>
    public const int CloudLoggingOptionFieldNumber = 3;
    private global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.CloudLoggingOption cloudLoggingOption_;
    /// <summary>
    /// Optional. When `destination` is set to `CLOUD_LOGGING`, you can optionally
    /// set this field to configure additional settings for Cloud Logging.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.CloudLoggingOption CloudLoggingOption {
      get { return cloudLoggingOption_; }
      set {
        cloudLoggingOption_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogsPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogsPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Destination != other.Destination) return false;
      if (LogsPath != other.LogsPath) return false;
      if (!object.Equals(CloudLoggingOption, other.CloudLoggingOption)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Destination != global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination.Unspecified) hash ^= Destination.GetHashCode();
      if (LogsPath.Length != 0) hash ^= LogsPath.GetHashCode();
      if (cloudLoggingOption_ != null) hash ^= CloudLoggingOption.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Destination != global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Destination);
      }
      if (LogsPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LogsPath);
      }
      if (cloudLoggingOption_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CloudLoggingOption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Destination != global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Destination);
      }
      if (LogsPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LogsPath);
      }
      if (cloudLoggingOption_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CloudLoggingOption);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Destination != global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Destination);
      }
      if (LogsPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogsPath);
      }
      if (cloudLoggingOption_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudLoggingOption);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogsPolicy other) {
      if (other == null) {
        return;
      }
      if (other.Destination != global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination.Unspecified) {
        Destination = other.Destination;
      }
      if (other.LogsPath.Length != 0) {
        LogsPath = other.LogsPath;
      }
      if (other.cloudLoggingOption_ != null) {
        if (cloudLoggingOption_ == null) {
          CloudLoggingOption = new global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.CloudLoggingOption();
        }
        CloudLoggingOption.MergeFrom(other.CloudLoggingOption);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Destination = (global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination) input.ReadEnum();
            break;
          }
          case 18: {
            LogsPath = input.ReadString();
            break;
          }
          case 26: {
            if (cloudLoggingOption_ == null) {
              CloudLoggingOption = new global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.CloudLoggingOption();
            }
            input.ReadMessage(CloudLoggingOption);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Destination = (global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.Destination) input.ReadEnum();
            break;
          }
          case 18: {
            LogsPath = input.ReadString();
            break;
          }
          case 26: {
            if (cloudLoggingOption_ == null) {
              CloudLoggingOption = new global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Types.CloudLoggingOption();
            }
            input.ReadMessage(CloudLoggingOption);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LogsPolicy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The destination (if any) for logs.
      /// </summary>
      public enum Destination {
        /// <summary>
        /// (Default) Logs are not preserved.
        /// </summary>
        [pbr::OriginalName("DESTINATION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Logs are streamed to Cloud Logging. Optionally, you can configure
        /// additional settings in the `cloudLoggingOption` field.
        /// </summary>
        [pbr::OriginalName("CLOUD_LOGGING")] CloudLogging = 1,
        /// <summary>
        /// Logs are saved to the file path specified in the `logsPath` field.
        /// </summary>
        [pbr::OriginalName("PATH")] Path = 2,
      }

      /// <summary>
      /// `CloudLoggingOption` contains additional settings for Cloud Logging logs
      /// generated by Batch job.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class CloudLoggingOption : pb::IMessage<CloudLoggingOption>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CloudLoggingOption> _parser = new pb::MessageParser<CloudLoggingOption>(() => new CloudLoggingOption());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<CloudLoggingOption> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.LogsPolicy.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CloudLoggingOption() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CloudLoggingOption(CloudLoggingOption other) : this() {
          useGenericTaskMonitoredResource_ = other.useGenericTaskMonitoredResource_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public CloudLoggingOption Clone() {
          return new CloudLoggingOption(this);
        }

        /// <summary>Field number for the "use_generic_task_monitored_resource" field.</summary>
        public const int UseGenericTaskMonitoredResourceFieldNumber = 1;
        private bool useGenericTaskMonitoredResource_;
        /// <summary>
        /// Optional. Set this field to `true` to change the [monitored resource
        /// type](https://cloud.google.com/monitoring/api/resources) for
        /// Cloud Logging logs generated by this Batch job from
        /// the
        /// [`batch.googleapis.com/Job`](https://cloud.google.com/monitoring/api/resources#tag_batch.googleapis.com/Job)
        /// type to the formerly used
        /// [`generic_task`](https://cloud.google.com/monitoring/api/resources#tag_generic_task)
        /// type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool UseGenericTaskMonitoredResource {
          get { return useGenericTaskMonitoredResource_; }
          set {
            useGenericTaskMonitoredResource_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as CloudLoggingOption);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(CloudLoggingOption other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UseGenericTaskMonitoredResource != other.UseGenericTaskMonitoredResource) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (UseGenericTaskMonitoredResource != false) hash ^= UseGenericTaskMonitoredResource.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UseGenericTaskMonitoredResource != false) {
            output.WriteRawTag(8);
            output.WriteBool(UseGenericTaskMonitoredResource);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UseGenericTaskMonitoredResource != false) {
            output.WriteRawTag(8);
            output.WriteBool(UseGenericTaskMonitoredResource);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (UseGenericTaskMonitoredResource != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(CloudLoggingOption other) {
          if (other == null) {
            return;
          }
          if (other.UseGenericTaskMonitoredResource != false) {
            UseGenericTaskMonitoredResource = other.UseGenericTaskMonitoredResource;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UseGenericTaskMonitoredResource = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                UseGenericTaskMonitoredResource = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// JobDependency describes the state of other Jobs that the start of this Job
  /// depends on.
  /// All dependent Jobs must have been submitted in the same region.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class JobDependency : pb::IMessage<JobDependency>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JobDependency> _parser = new pb::MessageParser<JobDependency>(() => new JobDependency());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JobDependency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobDependency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobDependency(JobDependency other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobDependency Clone() {
      return new JobDependency(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobDependency.Types.Type>.Codec _map_items_codec
        = new pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobDependency.Types.Type>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::Google.Cloud.Batch.V1Alpha.JobDependency.Types.Type) x, global::Google.Cloud.Batch.V1Alpha.JobDependency.Types.Type.Unspecified), 10);
    private readonly pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobDependency.Types.Type> items_ = new pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobDependency.Types.Type>();
    /// <summary>
    /// Each item maps a Job name to a Type.
    /// All items must be satisfied for the JobDependency to be satisfied (the AND
    /// operation).
    /// Once a condition for one item becomes true, it won't go back to false
    /// even the dependent Job state changes again.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobDependency.Types.Type> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JobDependency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JobDependency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Items.Equals(other.Items)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Items.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _map_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _map_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_map_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JobDependency other) {
      if (other == null) {
        return;
      }
      items_.MergeFrom(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _map_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _map_items_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the JobDependency message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Dependency type.
      /// </summary>
      public enum Type {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The dependent Job has succeeded.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 1,
        /// <summary>
        /// The dependent Job has failed.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 2,
        /// <summary>
        /// SUCCEEDED or FAILED.
        /// </summary>
        [pbr::OriginalName("FINISHED")] Finished = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Job status.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class JobStatus : pb::IMessage<JobStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JobStatus> _parser = new pb::MessageParser<JobStatus>(() => new JobStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JobStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobStatus(JobStatus other) : this() {
      state_ = other.state_;
      statusEvents_ = other.statusEvents_.Clone();
      taskGroups_ = other.taskGroups_.Clone();
      runDuration_ = other.runDuration_ != null ? other.runDuration_.Clone() : null;
      resourceUsage_ = other.resourceUsage_ != null ? other.resourceUsage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobStatus Clone() {
      return new JobStatus(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State state_ = global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified;
    /// <summary>
    /// Job state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "status_events" field.</summary>
    public const int StatusEventsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.StatusEvent> _repeated_statusEvents_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Batch.V1Alpha.StatusEvent.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.StatusEvent> statusEvents_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.StatusEvent>();
    /// <summary>
    /// Job status events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.StatusEvent> StatusEvents {
      get { return statusEvents_; }
    }

    /// <summary>Field number for the "task_groups" field.</summary>
    public const int TaskGroupsFieldNumber = 4;
    private static readonly pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.TaskGroupStatus>.Codec _map_taskGroups_codec
        = new pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.TaskGroupStatus>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.TaskGroupStatus.Parser), 34);
    private readonly pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.TaskGroupStatus> taskGroups_ = new pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.TaskGroupStatus>();
    /// <summary>
    /// Aggregated task status for each TaskGroup in the Job.
    /// The map key is TaskGroup ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.TaskGroupStatus> TaskGroups {
      get { return taskGroups_; }
    }

    /// <summary>Field number for the "run_duration" field.</summary>
    public const int RunDurationFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration runDuration_;
    /// <summary>
    /// The duration of time that the Job spent in status RUNNING.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Duration RunDuration {
      get { return runDuration_; }
      set {
        runDuration_ = value;
      }
    }

    /// <summary>Field number for the "resource_usage" field.</summary>
    public const int ResourceUsageFieldNumber = 6;
    private global::Google.Cloud.Batch.V1Alpha.ResourceUsage resourceUsage_;
    /// <summary>
    /// The resource usage of the job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.ResourceUsage ResourceUsage {
      get { return resourceUsage_; }
      set {
        resourceUsage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JobStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JobStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if(!statusEvents_.Equals(other.statusEvents_)) return false;
      if (!TaskGroups.Equals(other.TaskGroups)) return false;
      if (!object.Equals(RunDuration, other.RunDuration)) return false;
      if (!object.Equals(ResourceUsage, other.ResourceUsage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (State != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) hash ^= State.GetHashCode();
      hash ^= statusEvents_.GetHashCode();
      hash ^= TaskGroups.GetHashCode();
      if (runDuration_ != null) hash ^= RunDuration.GetHashCode();
      if (resourceUsage_ != null) hash ^= ResourceUsage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (State != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      statusEvents_.WriteTo(output, _repeated_statusEvents_codec);
      taskGroups_.WriteTo(output, _map_taskGroups_codec);
      if (runDuration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RunDuration);
      }
      if (resourceUsage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ResourceUsage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (State != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      statusEvents_.WriteTo(ref output, _repeated_statusEvents_codec);
      taskGroups_.WriteTo(ref output, _map_taskGroups_codec);
      if (runDuration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(RunDuration);
      }
      if (resourceUsage_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ResourceUsage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (State != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += statusEvents_.CalculateSize(_repeated_statusEvents_codec);
      size += taskGroups_.CalculateSize(_map_taskGroups_codec);
      if (runDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunDuration);
      }
      if (resourceUsage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResourceUsage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JobStatus other) {
      if (other == null) {
        return;
      }
      if (other.State != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) {
        State = other.State;
      }
      statusEvents_.Add(other.statusEvents_);
      taskGroups_.MergeFrom(other.taskGroups_);
      if (other.runDuration_ != null) {
        if (runDuration_ == null) {
          RunDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        RunDuration.MergeFrom(other.RunDuration);
      }
      if (other.resourceUsage_ != null) {
        if (resourceUsage_ == null) {
          ResourceUsage = new global::Google.Cloud.Batch.V1Alpha.ResourceUsage();
        }
        ResourceUsage.MergeFrom(other.ResourceUsage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State) input.ReadEnum();
            break;
          }
          case 18: {
            statusEvents_.AddEntriesFrom(input, _repeated_statusEvents_codec);
            break;
          }
          case 34: {
            taskGroups_.AddEntriesFrom(input, _map_taskGroups_codec);
            break;
          }
          case 42: {
            if (runDuration_ == null) {
              RunDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(RunDuration);
            break;
          }
          case 50: {
            if (resourceUsage_ == null) {
              ResourceUsage = new global::Google.Cloud.Batch.V1Alpha.ResourceUsage();
            }
            input.ReadMessage(ResourceUsage);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            State = (global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State) input.ReadEnum();
            break;
          }
          case 18: {
            statusEvents_.AddEntriesFrom(ref input, _repeated_statusEvents_codec);
            break;
          }
          case 34: {
            taskGroups_.AddEntriesFrom(ref input, _map_taskGroups_codec);
            break;
          }
          case 42: {
            if (runDuration_ == null) {
              RunDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(RunDuration);
            break;
          }
          case 50: {
            if (resourceUsage_ == null) {
              ResourceUsage = new global::Google.Cloud.Batch.V1Alpha.ResourceUsage();
            }
            input.ReadMessage(ResourceUsage);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the JobStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Valid Job states.
      /// </summary>
      public enum State {
        /// <summary>
        /// Job state unspecified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Job is admitted (validated and persisted) and waiting for resources.
        /// </summary>
        [pbr::OriginalName("QUEUED")] Queued = 1,
        /// <summary>
        /// Job is scheduled to run as soon as resource allocation is ready.
        /// The resource allocation may happen at a later time but with a high
        /// chance to succeed.
        /// </summary>
        [pbr::OriginalName("SCHEDULED")] Scheduled = 2,
        /// <summary>
        /// Resource allocation has been successful. At least one Task in the Job is
        /// RUNNING.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 3,
        /// <summary>
        /// All Tasks in the Job have finished successfully.
        /// </summary>
        [pbr::OriginalName("SUCCEEDED")] Succeeded = 4,
        /// <summary>
        /// At least one Task in the Job has failed.
        /// </summary>
        [pbr::OriginalName("FAILED")] Failed = 5,
        /// <summary>
        /// The Job will be deleted, but has not been deleted yet. Typically this is
        /// because resources used by the Job are still being cleaned up.
        /// </summary>
        [pbr::OriginalName("DELETION_IN_PROGRESS")] DeletionInProgress = 6,
        /// <summary>
        /// The Job cancellation is in progress, this is because the resources used
        /// by the Job are still being cleaned up.
        /// </summary>
        [pbr::OriginalName("CANCELLATION_IN_PROGRESS")] CancellationInProgress = 7,
        /// <summary>
        /// The Job has been cancelled, the task executions were stopped and the
        /// resources were cleaned up.
        /// </summary>
        [pbr::OriginalName("CANCELLED")] Cancelled = 8,
      }

      /// <summary>
      /// VM instance status.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class InstanceStatus : pb::IMessage<InstanceStatus>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InstanceStatus> _parser = new pb::MessageParser<InstanceStatus>(() => new InstanceStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<InstanceStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.JobStatus.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstanceStatus() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstanceStatus(InstanceStatus other) : this() {
          machineType_ = other.machineType_;
          provisioningModel_ = other.provisioningModel_;
          taskPack_ = other.taskPack_;
          bootDisk_ = other.bootDisk_ != null ? other.bootDisk_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstanceStatus Clone() {
          return new InstanceStatus(this);
        }

        /// <summary>Field number for the "machine_type" field.</summary>
        public const int MachineTypeFieldNumber = 1;
        private string machineType_ = "";
        /// <summary>
        /// The Compute Engine machine type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MachineType {
          get { return machineType_; }
          set {
            machineType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "provisioning_model" field.</summary>
        public const int ProvisioningModelFieldNumber = 2;
        private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel provisioningModel_ = global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified;
        /// <summary>
        /// The VM instance provisioning model.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel ProvisioningModel {
          get { return provisioningModel_; }
          set {
            provisioningModel_ = value;
          }
        }

        /// <summary>Field number for the "task_pack" field.</summary>
        public const int TaskPackFieldNumber = 3;
        private long taskPack_;
        /// <summary>
        /// The max number of tasks can be assigned to this instance type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long TaskPack {
          get { return taskPack_; }
          set {
            taskPack_ = value;
          }
        }

        /// <summary>Field number for the "boot_disk" field.</summary>
        public const int BootDiskFieldNumber = 4;
        private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk bootDisk_;
        /// <summary>
        /// The VM boot disk.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk BootDisk {
          get { return bootDisk_; }
          set {
            bootDisk_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as InstanceStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(InstanceStatus other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MachineType != other.MachineType) return false;
          if (ProvisioningModel != other.ProvisioningModel) return false;
          if (TaskPack != other.TaskPack) return false;
          if (!object.Equals(BootDisk, other.BootDisk)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (MachineType.Length != 0) hash ^= MachineType.GetHashCode();
          if (ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) hash ^= ProvisioningModel.GetHashCode();
          if (TaskPack != 0L) hash ^= TaskPack.GetHashCode();
          if (bootDisk_ != null) hash ^= BootDisk.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MachineType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MachineType);
          }
          if (ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ProvisioningModel);
          }
          if (TaskPack != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TaskPack);
          }
          if (bootDisk_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(BootDisk);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MachineType.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MachineType);
          }
          if (ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ProvisioningModel);
          }
          if (TaskPack != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(TaskPack);
          }
          if (bootDisk_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(BootDisk);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (MachineType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineType);
          }
          if (ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProvisioningModel);
          }
          if (TaskPack != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TaskPack);
          }
          if (bootDisk_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BootDisk);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(InstanceStatus other) {
          if (other == null) {
            return;
          }
          if (other.MachineType.Length != 0) {
            MachineType = other.MachineType;
          }
          if (other.ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) {
            ProvisioningModel = other.ProvisioningModel;
          }
          if (other.TaskPack != 0L) {
            TaskPack = other.TaskPack;
          }
          if (other.bootDisk_ != null) {
            if (bootDisk_ == null) {
              BootDisk = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
            }
            BootDisk.MergeFrom(other.BootDisk);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MachineType = input.ReadString();
                break;
              }
              case 16: {
                ProvisioningModel = (global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel) input.ReadEnum();
                break;
              }
              case 24: {
                TaskPack = input.ReadInt64();
                break;
              }
              case 34: {
                if (bootDisk_ == null) {
                  BootDisk = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
                }
                input.ReadMessage(BootDisk);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MachineType = input.ReadString();
                break;
              }
              case 16: {
                ProvisioningModel = (global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel) input.ReadEnum();
                break;
              }
              case 24: {
                TaskPack = input.ReadInt64();
                break;
              }
              case 34: {
                if (bootDisk_ == null) {
                  BootDisk = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
                }
                input.ReadMessage(BootDisk);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Aggregated task status for a TaskGroup.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TaskGroupStatus : pb::IMessage<TaskGroupStatus>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TaskGroupStatus> _parser = new pb::MessageParser<TaskGroupStatus>(() => new TaskGroupStatus());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TaskGroupStatus> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.JobStatus.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TaskGroupStatus() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TaskGroupStatus(TaskGroupStatus other) : this() {
          counts_ = other.counts_.Clone();
          instances_ = other.instances_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TaskGroupStatus Clone() {
          return new TaskGroupStatus(this);
        }

        /// <summary>Field number for the "counts" field.</summary>
        public const int CountsFieldNumber = 1;
        private static readonly pbc::MapField<string, long>.Codec _map_counts_codec
            = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 10);
        private readonly pbc::MapField<string, long> counts_ = new pbc::MapField<string, long>();
        /// <summary>
        /// Count of task in each state in the TaskGroup.
        /// The map key is task state name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::MapField<string, long> Counts {
          get { return counts_; }
        }

        /// <summary>Field number for the "instances" field.</summary>
        public const int InstancesFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.InstanceStatus> _repeated_instances_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.InstanceStatus.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.InstanceStatus> instances_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.InstanceStatus>();
        /// <summary>
        /// Status of instances allocated for the TaskGroup.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.InstanceStatus> Instances {
          get { return instances_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TaskGroupStatus);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TaskGroupStatus other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!Counts.Equals(other.Counts)) return false;
          if(!instances_.Equals(other.instances_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= Counts.GetHashCode();
          hash ^= instances_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          counts_.WriteTo(output, _map_counts_codec);
          instances_.WriteTo(output, _repeated_instances_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          counts_.WriteTo(ref output, _map_counts_codec);
          instances_.WriteTo(ref output, _repeated_instances_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += counts_.CalculateSize(_map_counts_codec);
          size += instances_.CalculateSize(_repeated_instances_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TaskGroupStatus other) {
          if (other == null) {
            return;
          }
          counts_.MergeFrom(other.counts_);
          instances_.Add(other.instances_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                counts_.AddEntriesFrom(input, _map_counts_codec);
                break;
              }
              case 18: {
                instances_.AddEntriesFrom(input, _repeated_instances_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                counts_.AddEntriesFrom(ref input, _map_counts_codec);
                break;
              }
              case 18: {
                instances_.AddEntriesFrom(ref input, _repeated_instances_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// ResourceUsage describes the resource usage of the job.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ResourceUsage : pb::IMessage<ResourceUsage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResourceUsage> _parser = new pb::MessageParser<ResourceUsage>(() => new ResourceUsage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResourceUsage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceUsage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceUsage(ResourceUsage other) : this() {
      coreHours_ = other.coreHours_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceUsage Clone() {
      return new ResourceUsage(this);
    }

    /// <summary>Field number for the "core_hours" field.</summary>
    public const int CoreHoursFieldNumber = 1;
    private double coreHours_;
    /// <summary>
    /// The CPU core hours that the job consumes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double CoreHours {
      get { return coreHours_; }
      set {
        coreHours_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResourceUsage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResourceUsage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CoreHours, other.CoreHours)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CoreHours != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CoreHours);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CoreHours != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(CoreHours);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CoreHours != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(CoreHours);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CoreHours != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResourceUsage other) {
      if (other == null) {
        return;
      }
      if (other.CoreHours != 0D) {
        CoreHours = other.CoreHours;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            CoreHours = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            CoreHours = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Notification configurations.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class JobNotification : pb::IMessage<JobNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JobNotification> _parser = new pb::MessageParser<JobNotification>(() => new JobNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JobNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobNotification(JobNotification other) : this() {
      pubsubTopic_ = other.pubsubTopic_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JobNotification Clone() {
      return new JobNotification(this);
    }

    /// <summary>Field number for the "pubsub_topic" field.</summary>
    public const int PubsubTopicFieldNumber = 1;
    private string pubsubTopic_ = "";
    /// <summary>
    /// The Pub/Sub topic where notifications for the job, like state
    /// changes, will be published. If undefined, no Pub/Sub notifications
    /// are sent for this job.
    ///
    /// Specify the topic using the following format:
    /// `projects/{project}/topics/{topic}`.
    /// Notably, if you want to specify a Pub/Sub topic that is in a
    /// different project than the job, your administrator must grant your
    /// project's Batch service agent permission to publish to that topic.
    ///
    /// For more information about configuring Pub/Sub notifications for
    /// a job, see
    /// https://cloud.google.com/batch/docs/enable-notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PubsubTopic {
      get { return pubsubTopic_; }
      set {
        pubsubTopic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Message message_;
    /// <summary>
    /// The attribute requirements of messages to be sent to this Pub/Sub topic.
    /// Without this field, no message will be sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JobNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JobNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PubsubTopic != other.PubsubTopic) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PubsubTopic.Length != 0) hash ^= PubsubTopic.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PubsubTopic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PubsubTopic);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PubsubTopic.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PubsubTopic);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PubsubTopic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PubsubTopic);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JobNotification other) {
      if (other == null) {
        return;
      }
      if (other.PubsubTopic.Length != 0) {
        PubsubTopic = other.PubsubTopic;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Message();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PubsubTopic = input.ReadString();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PubsubTopic = input.ReadString();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Message();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the JobNotification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The message type.
      /// </summary>
      public enum Type {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Notify users that the job state has changed.
        /// </summary>
        [pbr::OriginalName("JOB_STATE_CHANGED")] JobStateChanged = 1,
        /// <summary>
        /// Notify users that the task state has changed.
        /// </summary>
        [pbr::OriginalName("TASK_STATE_CHANGED")] TaskStateChanged = 2,
      }

      /// <summary>
      /// Message details.
      /// Describe the conditions under which messages will be sent.
      /// If no attribute is defined, no message will be sent by default.
      /// One message should specify either the job or the task level attributes,
      /// but not both. For example,
      /// job level: JOB_STATE_CHANGED and/or a specified new_job_state;
      /// task level: TASK_STATE_CHANGED and/or a specified new_task_state.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Message : pb::IMessage<Message>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Message> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.JobNotification.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Message() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Message(Message other) : this() {
          type_ = other.type_;
          newJobState_ = other.newJobState_;
          newTaskState_ = other.newTaskState_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Message Clone() {
          return new Message(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type type_ = global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type.Unspecified;
        /// <summary>
        /// The message type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "new_job_state" field.</summary>
        public const int NewJobStateFieldNumber = 2;
        private global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State newJobState_ = global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified;
        /// <summary>
        /// The new job state.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State NewJobState {
          get { return newJobState_; }
          set {
            newJobState_ = value;
          }
        }

        /// <summary>Field number for the "new_task_state" field.</summary>
        public const int NewTaskStateFieldNumber = 3;
        private global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State newTaskState_ = global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State.Unspecified;
        /// <summary>
        /// The new task state.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State NewTaskState {
          get { return newTaskState_; }
          set {
            newTaskState_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Message);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Message other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (NewJobState != other.NewJobState) return false;
          if (NewTaskState != other.NewTaskState) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type.Unspecified) hash ^= Type.GetHashCode();
          if (NewJobState != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) hash ^= NewJobState.GetHashCode();
          if (NewTaskState != global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State.Unspecified) hash ^= NewTaskState.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type != global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (NewJobState != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) NewJobState);
          }
          if (NewTaskState != global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) NewTaskState);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type != global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type.Unspecified) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (NewJobState != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) {
            output.WriteRawTag(16);
            output.WriteEnum((int) NewJobState);
          }
          if (NewTaskState != global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State.Unspecified) {
            output.WriteRawTag(24);
            output.WriteEnum((int) NewTaskState);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Type != global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (NewJobState != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NewJobState);
          }
          if (NewTaskState != global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NewTaskState);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Message other) {
          if (other == null) {
            return;
          }
          if (other.Type != global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type.Unspecified) {
            Type = other.Type;
          }
          if (other.NewJobState != global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State.Unspecified) {
            NewJobState = other.NewJobState;
          }
          if (other.NewTaskState != global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State.Unspecified) {
            NewTaskState = other.NewTaskState;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Type = (global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type) input.ReadEnum();
                break;
              }
              case 16: {
                NewJobState = (global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State) input.ReadEnum();
                break;
              }
              case 24: {
                NewTaskState = (global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Type = (global::Google.Cloud.Batch.V1Alpha.JobNotification.Types.Type) input.ReadEnum();
                break;
              }
              case 16: {
                NewJobState = (global::Google.Cloud.Batch.V1Alpha.JobStatus.Types.State) input.ReadEnum();
                break;
              }
              case 24: {
                NewTaskState = (global::Google.Cloud.Batch.V1Alpha.TaskStatus.Types.State) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A Job's resource allocation policy describes when, where, and how compute
  /// resources should be allocated for the Job.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AllocationPolicy : pb::IMessage<AllocationPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AllocationPolicy> _parser = new pb::MessageParser<AllocationPolicy>(() => new AllocationPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AllocationPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationPolicy(AllocationPolicy other) : this() {
      location_ = other.location_ != null ? other.location_.Clone() : null;
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      instances_ = other.instances_.Clone();
      instanceTemplates_ = other.instanceTemplates_.Clone();
      provisioningModels_ = other.provisioningModels_.Clone();
      serviceAccountEmail_ = other.serviceAccountEmail_;
      serviceAccount_ = other.serviceAccount_ != null ? other.serviceAccount_.Clone() : null;
      labels_ = other.labels_.Clone();
      network_ = other.network_ != null ? other.network_.Clone() : null;
      placement_ = other.placement_ != null ? other.placement_.Clone() : null;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AllocationPolicy Clone() {
      return new AllocationPolicy(this);
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 1;
    private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.LocationPolicy location_;
    /// <summary>
    /// Location where compute resources should be allocated for the Job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.LocationPolicy Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 2;
    private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy instance_;
    /// <summary>
    /// Deprecated: please use instances[0].policy instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    /// <summary>Field number for the "instances" field.</summary>
    public const int InstancesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicyOrTemplate> _repeated_instances_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicyOrTemplate.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicyOrTemplate> instances_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicyOrTemplate>();
    /// <summary>
    /// Describe instances that can be created by this AllocationPolicy.
    /// Only instances[0] is supported now.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicyOrTemplate> Instances {
      get { return instances_; }
    }

    /// <summary>Field number for the "instance_templates" field.</summary>
    public const int InstanceTemplatesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_instanceTemplates_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> instanceTemplates_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Deprecated: please use instances[0].template instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> InstanceTemplates {
      get { return instanceTemplates_; }
    }

    /// <summary>Field number for the "provisioning_models" field.</summary>
    public const int ProvisioningModelsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel> _repeated_provisioningModels_codec
        = pb::FieldCodec.ForEnum(34, x => (int) x, x => (global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel) x);
    private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel> provisioningModels_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel>();
    /// <summary>
    /// Deprecated: please use instances[0].policy.provisioning_model instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel> ProvisioningModels {
      get { return provisioningModels_; }
    }

    /// <summary>Field number for the "service_account_email" field.</summary>
    public const int ServiceAccountEmailFieldNumber = 5;
    private string serviceAccountEmail_ = "";
    /// <summary>
    /// Deprecated: please use service_account instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceAccountEmail {
      get { return serviceAccountEmail_; }
      set {
        serviceAccountEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_account" field.</summary>
    public const int ServiceAccountFieldNumber = 9;
    private global::Google.Cloud.Batch.V1Alpha.ServiceAccount serviceAccount_;
    /// <summary>
    /// Defines the service account for Batch-created VMs. If omitted, the [default
    /// Compute Engine service
    /// account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account)
    /// is used. Must match the service account specified in any used instance
    /// template configured in the Batch job.
    ///
    /// Includes the following fields:
    ///  * email: The service account's email address. If not set, the default
    ///  Compute Engine service account is used.
    ///  * scopes: Additional OAuth scopes to grant the service account, beyond the
    ///  default cloud-platform scope. (list of strings)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.ServiceAccount ServiceAccount {
      get { return serviceAccount_; }
      set {
        serviceAccount_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom labels to apply to the job and all the Compute Engine resources
    /// that both are created by this allocation policy and support labels.
    ///
    /// Use labels to group and describe the resources they are applied to. Batch
    /// automatically applies predefined labels and supports multiple `labels`
    /// fields for each job, which each let you apply custom labels to various
    /// resources. Label names that start with "goog-" or "google-" are
    /// reserved for predefined labels. For more information about labels with
    /// Batch, see
    /// [Organize resources using
    /// labels](https://cloud.google.com/batch/docs/organize-resources-using-labels).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 7;
    private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkPolicy network_;
    /// <summary>
    /// The network policy.
    ///
    /// If you define an instance template in the `InstancePolicyOrTemplate` field,
    /// Batch will use the network settings in the instance template instead of
    /// this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkPolicy Network {
      get { return network_; }
      set {
        network_ = value;
      }
    }

    /// <summary>Field number for the "placement" field.</summary>
    public const int PlacementFieldNumber = 10;
    private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.PlacementPolicy placement_;
    /// <summary>
    /// The placement policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.PlacementPolicy Placement {
      get { return placement_; }
      set {
        placement_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. Tags applied to the VM instances.
    ///
    /// The tags identify valid sources or targets for network firewalls.
    /// Each tag must be 1-63 characters long, and comply with
    /// [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AllocationPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AllocationPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(Instance, other.Instance)) return false;
      if(!instances_.Equals(other.instances_)) return false;
      if(!instanceTemplates_.Equals(other.instanceTemplates_)) return false;
      if(!provisioningModels_.Equals(other.provisioningModels_)) return false;
      if (ServiceAccountEmail != other.ServiceAccountEmail) return false;
      if (!object.Equals(ServiceAccount, other.ServiceAccount)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(Network, other.Network)) return false;
      if (!object.Equals(Placement, other.Placement)) return false;
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (location_ != null) hash ^= Location.GetHashCode();
      if (instance_ != null) hash ^= Instance.GetHashCode();
      hash ^= instances_.GetHashCode();
      hash ^= instanceTemplates_.GetHashCode();
      hash ^= provisioningModels_.GetHashCode();
      if (ServiceAccountEmail.Length != 0) hash ^= ServiceAccountEmail.GetHashCode();
      if (serviceAccount_ != null) hash ^= ServiceAccount.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (network_ != null) hash ^= Network.GetHashCode();
      if (placement_ != null) hash ^= Placement.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (location_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Location);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      instanceTemplates_.WriteTo(output, _repeated_instanceTemplates_codec);
      provisioningModels_.WriteTo(output, _repeated_provisioningModels_codec);
      if (ServiceAccountEmail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServiceAccountEmail);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (network_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Network);
      }
      instances_.WriteTo(output, _repeated_instances_codec);
      if (serviceAccount_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ServiceAccount);
      }
      if (placement_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Placement);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (location_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Location);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      instanceTemplates_.WriteTo(ref output, _repeated_instanceTemplates_codec);
      provisioningModels_.WriteTo(ref output, _repeated_provisioningModels_codec);
      if (ServiceAccountEmail.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ServiceAccountEmail);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      if (network_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Network);
      }
      instances_.WriteTo(ref output, _repeated_instances_codec);
      if (serviceAccount_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ServiceAccount);
      }
      if (placement_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Placement);
      }
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      size += instances_.CalculateSize(_repeated_instances_codec);
      size += instanceTemplates_.CalculateSize(_repeated_instanceTemplates_codec);
      size += provisioningModels_.CalculateSize(_repeated_provisioningModels_codec);
      if (ServiceAccountEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccountEmail);
      }
      if (serviceAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServiceAccount);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (network_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Network);
      }
      if (placement_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Placement);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AllocationPolicy other) {
      if (other == null) {
        return;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.LocationPolicy();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy();
        }
        Instance.MergeFrom(other.Instance);
      }
      instances_.Add(other.instances_);
      instanceTemplates_.Add(other.instanceTemplates_);
      provisioningModels_.Add(other.provisioningModels_);
      if (other.ServiceAccountEmail.Length != 0) {
        ServiceAccountEmail = other.ServiceAccountEmail;
      }
      if (other.serviceAccount_ != null) {
        if (serviceAccount_ == null) {
          ServiceAccount = new global::Google.Cloud.Batch.V1Alpha.ServiceAccount();
        }
        ServiceAccount.MergeFrom(other.ServiceAccount);
      }
      labels_.MergeFrom(other.labels_);
      if (other.network_ != null) {
        if (network_ == null) {
          Network = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkPolicy();
        }
        Network.MergeFrom(other.Network);
      }
      if (other.placement_ != null) {
        if (placement_ == null) {
          Placement = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.PlacementPolicy();
        }
        Placement.MergeFrom(other.Placement);
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (location_ == null) {
              Location = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.LocationPolicy();
            }
            input.ReadMessage(Location);
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 26: {
            instanceTemplates_.AddEntriesFrom(input, _repeated_instanceTemplates_codec);
            break;
          }
          case 34:
          case 32: {
            provisioningModels_.AddEntriesFrom(input, _repeated_provisioningModels_codec);
            break;
          }
          case 42: {
            ServiceAccountEmail = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 58: {
            if (network_ == null) {
              Network = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkPolicy();
            }
            input.ReadMessage(Network);
            break;
          }
          case 66: {
            instances_.AddEntriesFrom(input, _repeated_instances_codec);
            break;
          }
          case 74: {
            if (serviceAccount_ == null) {
              ServiceAccount = new global::Google.Cloud.Batch.V1Alpha.ServiceAccount();
            }
            input.ReadMessage(ServiceAccount);
            break;
          }
          case 82: {
            if (placement_ == null) {
              Placement = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.PlacementPolicy();
            }
            input.ReadMessage(Placement);
            break;
          }
          case 90: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (location_ == null) {
              Location = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.LocationPolicy();
            }
            input.ReadMessage(Location);
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 26: {
            instanceTemplates_.AddEntriesFrom(ref input, _repeated_instanceTemplates_codec);
            break;
          }
          case 34:
          case 32: {
            provisioningModels_.AddEntriesFrom(ref input, _repeated_provisioningModels_codec);
            break;
          }
          case 42: {
            ServiceAccountEmail = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 58: {
            if (network_ == null) {
              Network = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkPolicy();
            }
            input.ReadMessage(Network);
            break;
          }
          case 66: {
            instances_.AddEntriesFrom(ref input, _repeated_instances_codec);
            break;
          }
          case 74: {
            if (serviceAccount_ == null) {
              ServiceAccount = new global::Google.Cloud.Batch.V1Alpha.ServiceAccount();
            }
            input.ReadMessage(ServiceAccount);
            break;
          }
          case 82: {
            if (placement_ == null) {
              Placement = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.PlacementPolicy();
            }
            input.ReadMessage(Placement);
            break;
          }
          case 90: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AllocationPolicy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Compute Engine VM instance provisioning model.
      /// </summary>
      public enum ProvisioningModel {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("PROVISIONING_MODEL_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Standard VM.
        /// </summary>
        [pbr::OriginalName("STANDARD")] Standard = 1,
        /// <summary>
        /// SPOT VM.
        /// </summary>
        [pbr::OriginalName("SPOT")] Spot = 2,
        /// <summary>
        /// Preemptible VM (PVM).
        ///
        /// Above SPOT VM is the preferable model for preemptible VM instances: the
        /// old preemptible VM model (indicated by this field) is the older model,
        /// and has been migrated to use the SPOT model as the underlying technology.
        /// This old model will still be supported.
        /// </summary>
        [pbr::OriginalName("PREEMPTIBLE")] Preemptible = 3,
      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class LocationPolicy : pb::IMessage<LocationPolicy>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LocationPolicy> _parser = new pb::MessageParser<LocationPolicy>(() => new LocationPolicy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<LocationPolicy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LocationPolicy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LocationPolicy(LocationPolicy other) : this() {
          allowedLocations_ = other.allowedLocations_.Clone();
          deniedLocations_ = other.deniedLocations_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public LocationPolicy Clone() {
          return new LocationPolicy(this);
        }

        /// <summary>Field number for the "allowed_locations" field.</summary>
        public const int AllowedLocationsFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_allowedLocations_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> allowedLocations_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of allowed location names represented by internal URLs.
        ///
        /// Each location can be a region or a zone.
        /// Only one region or multiple zones in one region is supported now.
        /// For example,
        /// ["regions/us-central1"] allow VMs in any zones in region us-central1.
        /// ["zones/us-central1-a", "zones/us-central1-c"] only allow VMs
        /// in zones us-central1-a and us-central1-c.
        ///
        /// Mixing locations from different regions would cause errors.
        /// For example,
        /// ["regions/us-central1", "zones/us-central1-a", "zones/us-central1-b",
        /// "zones/us-west1-a"] contains locations from two distinct regions:
        /// us-central1 and us-west1. This combination will trigger an error.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> AllowedLocations {
          get { return allowedLocations_; }
        }

        /// <summary>Field number for the "denied_locations" field.</summary>
        public const int DeniedLocationsFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_deniedLocations_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> deniedLocations_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// A list of denied location names.
        ///
        /// Not yet implemented.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> DeniedLocations {
          get { return deniedLocations_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as LocationPolicy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(LocationPolicy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!allowedLocations_.Equals(other.allowedLocations_)) return false;
          if(!deniedLocations_.Equals(other.deniedLocations_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= allowedLocations_.GetHashCode();
          hash ^= deniedLocations_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          allowedLocations_.WriteTo(output, _repeated_allowedLocations_codec);
          deniedLocations_.WriteTo(output, _repeated_deniedLocations_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          allowedLocations_.WriteTo(ref output, _repeated_allowedLocations_codec);
          deniedLocations_.WriteTo(ref output, _repeated_deniedLocations_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += allowedLocations_.CalculateSize(_repeated_allowedLocations_codec);
          size += deniedLocations_.CalculateSize(_repeated_deniedLocations_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(LocationPolicy other) {
          if (other == null) {
            return;
          }
          allowedLocations_.Add(other.allowedLocations_);
          deniedLocations_.Add(other.deniedLocations_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                allowedLocations_.AddEntriesFrom(input, _repeated_allowedLocations_codec);
                break;
              }
              case 18: {
                deniedLocations_.AddEntriesFrom(input, _repeated_deniedLocations_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                allowedLocations_.AddEntriesFrom(ref input, _repeated_allowedLocations_codec);
                break;
              }
              case 18: {
                deniedLocations_.AddEntriesFrom(ref input, _repeated_deniedLocations_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A new persistent disk or a local ssd.
      /// A VM can only have one local SSD setting but multiple local SSD partitions.
      /// See https://cloud.google.com/compute/docs/disks#pdspecs and
      /// https://cloud.google.com/compute/docs/disks#localssds.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Disk : pb::IMessage<Disk>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Disk> _parser = new pb::MessageParser<Disk>(() => new Disk());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Disk> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Disk() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Disk(Disk other) : this() {
          type_ = other.type_;
          sizeGb_ = other.sizeGb_;
          diskInterface_ = other.diskInterface_;
          switch (other.DataSourceCase) {
            case DataSourceOneofCase.Image:
              Image = other.Image;
              break;
            case DataSourceOneofCase.Snapshot:
              Snapshot = other.Snapshot;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Disk Clone() {
          return new Disk(this);
        }

        /// <summary>Field number for the "image" field.</summary>
        public const int ImageFieldNumber = 4;
        /// <summary>
        /// URL for a VM image to use as the data source for this disk.
        /// For example, the following are all valid URLs:
        ///
        /// * Specify the image by its family name:
        /// projects/{project}/global/images/family/{image_family}
        /// * Specify the image version:
        /// projects/{project}/global/images/{image_version}
        ///
        /// You can also use Batch customized image in short names.
        /// The following image values are supported for a boot disk:
        ///
        /// * `batch-debian`: use Batch Debian images.
        /// * `batch-cos`: use Batch Container-Optimized images.
        /// * `batch-hpc-rocky`: use Batch HPC Rocky Linux images.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Image {
          get { return HasImage ? (string) dataSource_ : ""; }
          set {
            dataSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            dataSourceCase_ = DataSourceOneofCase.Image;
          }
        }
        /// <summary>Gets whether the "image" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasImage {
          get { return dataSourceCase_ == DataSourceOneofCase.Image; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "image" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearImage() {
          if (HasImage) {
            ClearDataSource();
          }
        }

        /// <summary>Field number for the "snapshot" field.</summary>
        public const int SnapshotFieldNumber = 5;
        /// <summary>
        /// Name of a snapshot used as the data source.
        /// Snapshot is not supported as boot disk now.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Snapshot {
          get { return HasSnapshot ? (string) dataSource_ : ""; }
          set {
            dataSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            dataSourceCase_ = DataSourceOneofCase.Snapshot;
          }
        }
        /// <summary>Gets whether the "snapshot" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSnapshot {
          get { return dataSourceCase_ == DataSourceOneofCase.Snapshot; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "snapshot" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSnapshot() {
          if (HasSnapshot) {
            ClearDataSource();
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private string type_ = "";
        /// <summary>
        /// Disk type as shown in `gcloud compute disk-types list`.
        /// For example, local SSD uses type "local-ssd".
        /// Persistent disks and boot disks use "pd-balanced", "pd-extreme", "pd-ssd"
        /// or "pd-standard". If not specified, "pd-standard" will be used as the
        /// default type for non-boot disks, "pd-balanced" will be used as the
        /// default type for boot disks.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "size_gb" field.</summary>
        public const int SizeGbFieldNumber = 2;
        private long sizeGb_;
        /// <summary>
        /// Disk size in GB.
        ///
        /// **Non-Boot Disk**:
        /// If the `type` specifies a persistent disk, this field
        /// is ignored if `data_source` is set as `image` or `snapshot`.
        /// If the `type` specifies a local SSD, this field should be a multiple of
        /// 375 GB, otherwise, the final size will be the next greater multiple of
        /// 375 GB.
        ///
        /// **Boot Disk**:
        /// Batch will calculate the boot disk size based on source
        /// image and task requirements if you do not speicify the size.
        /// If both this field and the `boot_disk_mib` field in task spec's
        /// `compute_resource` are defined, Batch will only honor this field.
        /// Also, this field should be no smaller than the source disk's
        /// size when the `data_source` is set as `snapshot` or `image`.
        /// For example, if you set an image as the `data_source` field and the
        /// image's default disk size 30 GB, you can only use this field to make the
        /// disk larger or equal to 30 GB.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long SizeGb {
          get { return sizeGb_; }
          set {
            sizeGb_ = value;
          }
        }

        /// <summary>Field number for the "disk_interface" field.</summary>
        public const int DiskInterfaceFieldNumber = 6;
        private string diskInterface_ = "";
        /// <summary>
        /// Local SSDs are available through both "SCSI" and "NVMe" interfaces.
        /// If not indicated, "NVMe" will be the default one for local ssds.
        /// This field is ignored for persistent disks as the interface is chosen
        /// automatically. See
        /// https://cloud.google.com/compute/docs/disks/persistent-disks#choose_an_interface.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DiskInterface {
          get { return diskInterface_; }
          set {
            diskInterface_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        private object dataSource_;
        /// <summary>Enum of possible cases for the "data_source" oneof.</summary>
        public enum DataSourceOneofCase {
          None = 0,
          Image = 4,
          Snapshot = 5,
        }
        private DataSourceOneofCase dataSourceCase_ = DataSourceOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DataSourceOneofCase DataSourceCase {
          get { return dataSourceCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDataSource() {
          dataSourceCase_ = DataSourceOneofCase.None;
          dataSource_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Disk);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Disk other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Image != other.Image) return false;
          if (Snapshot != other.Snapshot) return false;
          if (Type != other.Type) return false;
          if (SizeGb != other.SizeGb) return false;
          if (DiskInterface != other.DiskInterface) return false;
          if (DataSourceCase != other.DataSourceCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasImage) hash ^= Image.GetHashCode();
          if (HasSnapshot) hash ^= Snapshot.GetHashCode();
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (SizeGb != 0L) hash ^= SizeGb.GetHashCode();
          if (DiskInterface.Length != 0) hash ^= DiskInterface.GetHashCode();
          hash ^= (int) dataSourceCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (SizeGb != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SizeGb);
          }
          if (HasImage) {
            output.WriteRawTag(34);
            output.WriteString(Image);
          }
          if (HasSnapshot) {
            output.WriteRawTag(42);
            output.WriteString(Snapshot);
          }
          if (DiskInterface.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DiskInterface);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (SizeGb != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(SizeGb);
          }
          if (HasImage) {
            output.WriteRawTag(34);
            output.WriteString(Image);
          }
          if (HasSnapshot) {
            output.WriteRawTag(42);
            output.WriteString(Snapshot);
          }
          if (DiskInterface.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DiskInterface);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasImage) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
          }
          if (HasSnapshot) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Snapshot);
          }
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (SizeGb != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(SizeGb);
          }
          if (DiskInterface.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DiskInterface);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Disk other) {
          if (other == null) {
            return;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          if (other.SizeGb != 0L) {
            SizeGb = other.SizeGb;
          }
          if (other.DiskInterface.Length != 0) {
            DiskInterface = other.DiskInterface;
          }
          switch (other.DataSourceCase) {
            case DataSourceOneofCase.Image:
              Image = other.Image;
              break;
            case DataSourceOneofCase.Snapshot:
              Snapshot = other.Snapshot;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
              case 16: {
                SizeGb = input.ReadInt64();
                break;
              }
              case 34: {
                Image = input.ReadString();
                break;
              }
              case 42: {
                Snapshot = input.ReadString();
                break;
              }
              case 50: {
                DiskInterface = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
              case 16: {
                SizeGb = input.ReadInt64();
                break;
              }
              case 34: {
                Image = input.ReadString();
                break;
              }
              case 42: {
                Snapshot = input.ReadString();
                break;
              }
              case 50: {
                DiskInterface = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A new or an existing persistent disk (PD) or a local ssd attached to a VM
      /// instance.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AttachedDisk : pb::IMessage<AttachedDisk>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AttachedDisk> _parser = new pb::MessageParser<AttachedDisk>(() => new AttachedDisk());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AttachedDisk> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AttachedDisk() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AttachedDisk(AttachedDisk other) : this() {
          deviceName_ = other.deviceName_;
          switch (other.AttachedCase) {
            case AttachedOneofCase.NewDisk:
              NewDisk = other.NewDisk.Clone();
              break;
            case AttachedOneofCase.ExistingDisk:
              ExistingDisk = other.ExistingDisk;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AttachedDisk Clone() {
          return new AttachedDisk(this);
        }

        /// <summary>Field number for the "new_disk" field.</summary>
        public const int NewDiskFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk NewDisk {
          get { return attachedCase_ == AttachedOneofCase.NewDisk ? (global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk) attached_ : null; }
          set {
            attached_ = value;
            attachedCase_ = value == null ? AttachedOneofCase.None : AttachedOneofCase.NewDisk;
          }
        }

        /// <summary>Field number for the "existing_disk" field.</summary>
        public const int ExistingDiskFieldNumber = 2;
        /// <summary>
        /// Name of an existing PD.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ExistingDisk {
          get { return HasExistingDisk ? (string) attached_ : ""; }
          set {
            attached_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            attachedCase_ = AttachedOneofCase.ExistingDisk;
          }
        }
        /// <summary>Gets whether the "existing_disk" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasExistingDisk {
          get { return attachedCase_ == AttachedOneofCase.ExistingDisk; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "existing_disk" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearExistingDisk() {
          if (HasExistingDisk) {
            ClearAttached();
          }
        }

        /// <summary>Field number for the "device_name" field.</summary>
        public const int DeviceNameFieldNumber = 3;
        private string deviceName_ = "";
        /// <summary>
        /// Device name that the guest operating system will see.
        /// It is used by Runnable.volumes field to mount disks. So please specify
        /// the device_name if you want Batch to help mount the disk, and it should
        /// match the device_name field in volumes.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DeviceName {
          get { return deviceName_; }
          set {
            deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        private object attached_;
        /// <summary>Enum of possible cases for the "attached" oneof.</summary>
        public enum AttachedOneofCase {
          None = 0,
          NewDisk = 1,
          ExistingDisk = 2,
        }
        private AttachedOneofCase attachedCase_ = AttachedOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AttachedOneofCase AttachedCase {
          get { return attachedCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAttached() {
          attachedCase_ = AttachedOneofCase.None;
          attached_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AttachedDisk);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AttachedDisk other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(NewDisk, other.NewDisk)) return false;
          if (ExistingDisk != other.ExistingDisk) return false;
          if (DeviceName != other.DeviceName) return false;
          if (AttachedCase != other.AttachedCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (attachedCase_ == AttachedOneofCase.NewDisk) hash ^= NewDisk.GetHashCode();
          if (HasExistingDisk) hash ^= ExistingDisk.GetHashCode();
          if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
          hash ^= (int) attachedCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (attachedCase_ == AttachedOneofCase.NewDisk) {
            output.WriteRawTag(10);
            output.WriteMessage(NewDisk);
          }
          if (HasExistingDisk) {
            output.WriteRawTag(18);
            output.WriteString(ExistingDisk);
          }
          if (DeviceName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DeviceName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (attachedCase_ == AttachedOneofCase.NewDisk) {
            output.WriteRawTag(10);
            output.WriteMessage(NewDisk);
          }
          if (HasExistingDisk) {
            output.WriteRawTag(18);
            output.WriteString(ExistingDisk);
          }
          if (DeviceName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(DeviceName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (attachedCase_ == AttachedOneofCase.NewDisk) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewDisk);
          }
          if (HasExistingDisk) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ExistingDisk);
          }
          if (DeviceName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AttachedDisk other) {
          if (other == null) {
            return;
          }
          if (other.DeviceName.Length != 0) {
            DeviceName = other.DeviceName;
          }
          switch (other.AttachedCase) {
            case AttachedOneofCase.NewDisk:
              if (NewDisk == null) {
                NewDisk = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
              }
              NewDisk.MergeFrom(other.NewDisk);
              break;
            case AttachedOneofCase.ExistingDisk:
              ExistingDisk = other.ExistingDisk;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk subBuilder = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
                if (attachedCase_ == AttachedOneofCase.NewDisk) {
                  subBuilder.MergeFrom(NewDisk);
                }
                input.ReadMessage(subBuilder);
                NewDisk = subBuilder;
                break;
              }
              case 18: {
                ExistingDisk = input.ReadString();
                break;
              }
              case 26: {
                DeviceName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk subBuilder = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
                if (attachedCase_ == AttachedOneofCase.NewDisk) {
                  subBuilder.MergeFrom(NewDisk);
                }
                input.ReadMessage(subBuilder);
                NewDisk = subBuilder;
                break;
              }
              case 18: {
                ExistingDisk = input.ReadString();
                break;
              }
              case 26: {
                DeviceName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Accelerator describes Compute Engine accelerators to be attached to the VM.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Accelerator : pb::IMessage<Accelerator>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Accelerator> _parser = new pb::MessageParser<Accelerator>(() => new Accelerator());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Accelerator> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Accelerator() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Accelerator(Accelerator other) : this() {
          type_ = other.type_;
          count_ = other.count_;
          installGpuDrivers_ = other.installGpuDrivers_;
          driverVersion_ = other.driverVersion_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Accelerator Clone() {
          return new Accelerator(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private string type_ = "";
        /// <summary>
        /// The accelerator type. For example, "nvidia-tesla-t4".
        /// See `gcloud compute accelerator-types list`.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private long count_;
        /// <summary>
        /// The number of accelerators of this type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        /// <summary>Field number for the "install_gpu_drivers" field.</summary>
        public const int InstallGpuDriversFieldNumber = 3;
        private bool installGpuDrivers_;
        /// <summary>
        /// Deprecated: please use instances[0].install_gpu_drivers instead.
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool InstallGpuDrivers {
          get { return installGpuDrivers_; }
          set {
            installGpuDrivers_ = value;
          }
        }

        /// <summary>Field number for the "driver_version" field.</summary>
        public const int DriverVersionFieldNumber = 4;
        private string driverVersion_ = "";
        /// <summary>
        /// Optional. The NVIDIA GPU driver version that should be installed for this
        /// type.
        ///
        /// You can define the specific driver version such as "470.103.01",
        /// following the driver version requirements in
        /// https://cloud.google.com/compute/docs/gpus/install-drivers-gpu#minimum-driver.
        /// Batch will install the specific accelerator driver if qualified.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DriverVersion {
          get { return driverVersion_; }
          set {
            driverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Accelerator);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Accelerator other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Count != other.Count) return false;
          if (InstallGpuDrivers != other.InstallGpuDrivers) return false;
          if (DriverVersion != other.DriverVersion) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (Count != 0L) hash ^= Count.GetHashCode();
          if (InstallGpuDrivers != false) hash ^= InstallGpuDrivers.GetHashCode();
          if (DriverVersion.Length != 0) hash ^= DriverVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (Count != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Count);
          }
          if (InstallGpuDrivers != false) {
            output.WriteRawTag(24);
            output.WriteBool(InstallGpuDrivers);
          }
          if (DriverVersion.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DriverVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Type.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Type);
          }
          if (Count != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Count);
          }
          if (InstallGpuDrivers != false) {
            output.WriteRawTag(24);
            output.WriteBool(InstallGpuDrivers);
          }
          if (DriverVersion.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(DriverVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (Count != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
          }
          if (InstallGpuDrivers != false) {
            size += 1 + 1;
          }
          if (DriverVersion.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DriverVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Accelerator other) {
          if (other == null) {
            return;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          if (other.Count != 0L) {
            Count = other.Count;
          }
          if (other.InstallGpuDrivers != false) {
            InstallGpuDrivers = other.InstallGpuDrivers;
          }
          if (other.DriverVersion.Length != 0) {
            DriverVersion = other.DriverVersion;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadInt64();
                break;
              }
              case 24: {
                InstallGpuDrivers = input.ReadBool();
                break;
              }
              case 34: {
                DriverVersion = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Type = input.ReadString();
                break;
              }
              case 16: {
                Count = input.ReadInt64();
                break;
              }
              case 24: {
                InstallGpuDrivers = input.ReadBool();
                break;
              }
              case 34: {
                DriverVersion = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// InstancePolicy describes an instance type and resources attached to each VM
      /// created by this InstancePolicy.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class InstancePolicy : pb::IMessage<InstancePolicy>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InstancePolicy> _parser = new pb::MessageParser<InstancePolicy>(() => new InstancePolicy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<InstancePolicy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstancePolicy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstancePolicy(InstancePolicy other) : this() {
          allowedMachineTypes_ = other.allowedMachineTypes_.Clone();
          machineType_ = other.machineType_;
          minCpuPlatform_ = other.minCpuPlatform_;
          provisioningModel_ = other.provisioningModel_;
          accelerators_ = other.accelerators_.Clone();
          bootDisk_ = other.bootDisk_ != null ? other.bootDisk_.Clone() : null;
          disks_ = other.disks_.Clone();
          reservation_ = other.reservation_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstancePolicy Clone() {
          return new InstancePolicy(this);
        }

        /// <summary>Field number for the "allowed_machine_types" field.</summary>
        public const int AllowedMachineTypesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_allowedMachineTypes_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> allowedMachineTypes_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Deprecated: please use machine_type instead.
        /// </summary>
        [global::System.ObsoleteAttribute]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> AllowedMachineTypes {
          get { return allowedMachineTypes_; }
        }

        /// <summary>Field number for the "machine_type" field.</summary>
        public const int MachineTypeFieldNumber = 2;
        private string machineType_ = "";
        /// <summary>
        /// The Compute Engine machine type.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MachineType {
          get { return machineType_; }
          set {
            machineType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "min_cpu_platform" field.</summary>
        public const int MinCpuPlatformFieldNumber = 3;
        private string minCpuPlatform_ = "";
        /// <summary>
        /// The minimum CPU platform.
        /// See
        /// https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MinCpuPlatform {
          get { return minCpuPlatform_; }
          set {
            minCpuPlatform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "provisioning_model" field.</summary>
        public const int ProvisioningModelFieldNumber = 4;
        private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel provisioningModel_ = global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified;
        /// <summary>
        /// The provisioning model.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel ProvisioningModel {
          get { return provisioningModel_; }
          set {
            provisioningModel_ = value;
          }
        }

        /// <summary>Field number for the "accelerators" field.</summary>
        public const int AcceleratorsFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Accelerator> _repeated_accelerators_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Accelerator.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Accelerator> accelerators_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Accelerator>();
        /// <summary>
        /// The accelerators attached to each VM instance.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Accelerator> Accelerators {
          get { return accelerators_; }
        }

        /// <summary>Field number for the "boot_disk" field.</summary>
        public const int BootDiskFieldNumber = 8;
        private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk bootDisk_;
        /// <summary>
        /// Boot disk to be created and attached to each VM by this InstancePolicy.
        /// Boot disk will be deleted when the VM is deleted.
        /// Batch API now only supports booting from image.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk BootDisk {
          get { return bootDisk_; }
          set {
            bootDisk_ = value;
          }
        }

        /// <summary>Field number for the "disks" field.</summary>
        public const int DisksFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.AttachedDisk> _repeated_disks_codec
            = pb::FieldCodec.ForMessage(50, global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.AttachedDisk.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.AttachedDisk> disks_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.AttachedDisk>();
        /// <summary>
        /// Non-boot disks to be attached for each VM created by this InstancePolicy.
        /// New disks will be deleted when the VM is deleted.
        /// A non-boot disk is a disk that can be of a device with a
        /// file system or a raw storage drive that is not ready for data
        /// storage and accessing.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.AttachedDisk> Disks {
          get { return disks_; }
        }

        /// <summary>Field number for the "reservation" field.</summary>
        public const int ReservationFieldNumber = 7;
        private string reservation_ = "";
        /// <summary>
        /// Optional. If not specified (default), VMs will consume any applicable
        /// reservation. If "NO_RESERVATION" is specified, VMs will not consume any
        /// reservation. Otherwise, if specified, VMs will consume only the specified
        /// reservation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Reservation {
          get { return reservation_; }
          set {
            reservation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as InstancePolicy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(InstancePolicy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!allowedMachineTypes_.Equals(other.allowedMachineTypes_)) return false;
          if (MachineType != other.MachineType) return false;
          if (MinCpuPlatform != other.MinCpuPlatform) return false;
          if (ProvisioningModel != other.ProvisioningModel) return false;
          if(!accelerators_.Equals(other.accelerators_)) return false;
          if (!object.Equals(BootDisk, other.BootDisk)) return false;
          if(!disks_.Equals(other.disks_)) return false;
          if (Reservation != other.Reservation) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= allowedMachineTypes_.GetHashCode();
          if (MachineType.Length != 0) hash ^= MachineType.GetHashCode();
          if (MinCpuPlatform.Length != 0) hash ^= MinCpuPlatform.GetHashCode();
          if (ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) hash ^= ProvisioningModel.GetHashCode();
          hash ^= accelerators_.GetHashCode();
          if (bootDisk_ != null) hash ^= BootDisk.GetHashCode();
          hash ^= disks_.GetHashCode();
          if (Reservation.Length != 0) hash ^= Reservation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          allowedMachineTypes_.WriteTo(output, _repeated_allowedMachineTypes_codec);
          if (MachineType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MachineType);
          }
          if (MinCpuPlatform.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(MinCpuPlatform);
          }
          if (ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) ProvisioningModel);
          }
          accelerators_.WriteTo(output, _repeated_accelerators_codec);
          disks_.WriteTo(output, _repeated_disks_codec);
          if (Reservation.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Reservation);
          }
          if (bootDisk_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(BootDisk);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          allowedMachineTypes_.WriteTo(ref output, _repeated_allowedMachineTypes_codec);
          if (MachineType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MachineType);
          }
          if (MinCpuPlatform.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(MinCpuPlatform);
          }
          if (ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) ProvisioningModel);
          }
          accelerators_.WriteTo(ref output, _repeated_accelerators_codec);
          disks_.WriteTo(ref output, _repeated_disks_codec);
          if (Reservation.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Reservation);
          }
          if (bootDisk_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(BootDisk);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += allowedMachineTypes_.CalculateSize(_repeated_allowedMachineTypes_codec);
          if (MachineType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineType);
          }
          if (MinCpuPlatform.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MinCpuPlatform);
          }
          if (ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProvisioningModel);
          }
          size += accelerators_.CalculateSize(_repeated_accelerators_codec);
          if (bootDisk_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BootDisk);
          }
          size += disks_.CalculateSize(_repeated_disks_codec);
          if (Reservation.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Reservation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(InstancePolicy other) {
          if (other == null) {
            return;
          }
          allowedMachineTypes_.Add(other.allowedMachineTypes_);
          if (other.MachineType.Length != 0) {
            MachineType = other.MachineType;
          }
          if (other.MinCpuPlatform.Length != 0) {
            MinCpuPlatform = other.MinCpuPlatform;
          }
          if (other.ProvisioningModel != global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel.Unspecified) {
            ProvisioningModel = other.ProvisioningModel;
          }
          accelerators_.Add(other.accelerators_);
          if (other.bootDisk_ != null) {
            if (bootDisk_ == null) {
              BootDisk = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
            }
            BootDisk.MergeFrom(other.BootDisk);
          }
          disks_.Add(other.disks_);
          if (other.Reservation.Length != 0) {
            Reservation = other.Reservation;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                allowedMachineTypes_.AddEntriesFrom(input, _repeated_allowedMachineTypes_codec);
                break;
              }
              case 18: {
                MachineType = input.ReadString();
                break;
              }
              case 26: {
                MinCpuPlatform = input.ReadString();
                break;
              }
              case 32: {
                ProvisioningModel = (global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel) input.ReadEnum();
                break;
              }
              case 42: {
                accelerators_.AddEntriesFrom(input, _repeated_accelerators_codec);
                break;
              }
              case 50: {
                disks_.AddEntriesFrom(input, _repeated_disks_codec);
                break;
              }
              case 58: {
                Reservation = input.ReadString();
                break;
              }
              case 66: {
                if (bootDisk_ == null) {
                  BootDisk = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
                }
                input.ReadMessage(BootDisk);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                allowedMachineTypes_.AddEntriesFrom(ref input, _repeated_allowedMachineTypes_codec);
                break;
              }
              case 18: {
                MachineType = input.ReadString();
                break;
              }
              case 26: {
                MinCpuPlatform = input.ReadString();
                break;
              }
              case 32: {
                ProvisioningModel = (global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.ProvisioningModel) input.ReadEnum();
                break;
              }
              case 42: {
                accelerators_.AddEntriesFrom(ref input, _repeated_accelerators_codec);
                break;
              }
              case 50: {
                disks_.AddEntriesFrom(ref input, _repeated_disks_codec);
                break;
              }
              case 58: {
                Reservation = input.ReadString();
                break;
              }
              case 66: {
                if (bootDisk_ == null) {
                  BootDisk = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.Disk();
                }
                input.ReadMessage(BootDisk);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// InstancePolicyOrTemplate lets you define the type of resources to use for
      /// this job either with an InstancePolicy or an instance template.
      /// If undefined, Batch picks the type of VM to use and doesn't include
      /// optional VM resources such as GPUs and extra disks.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class InstancePolicyOrTemplate : pb::IMessage<InstancePolicyOrTemplate>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InstancePolicyOrTemplate> _parser = new pb::MessageParser<InstancePolicyOrTemplate>(() => new InstancePolicyOrTemplate());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<InstancePolicyOrTemplate> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstancePolicyOrTemplate() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstancePolicyOrTemplate(InstancePolicyOrTemplate other) : this() {
          installGpuDrivers_ = other.installGpuDrivers_;
          installOpsAgent_ = other.installOpsAgent_;
          blockProjectSshKeys_ = other.blockProjectSshKeys_;
          switch (other.PolicyTemplateCase) {
            case PolicyTemplateOneofCase.Policy:
              Policy = other.Policy.Clone();
              break;
            case PolicyTemplateOneofCase.InstanceTemplate:
              InstanceTemplate = other.InstanceTemplate;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public InstancePolicyOrTemplate Clone() {
          return new InstancePolicyOrTemplate(this);
        }

        /// <summary>Field number for the "policy" field.</summary>
        public const int PolicyFieldNumber = 1;
        /// <summary>
        /// InstancePolicy.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy Policy {
          get { return policyTemplateCase_ == PolicyTemplateOneofCase.Policy ? (global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy) policyTemplate_ : null; }
          set {
            policyTemplate_ = value;
            policyTemplateCase_ = value == null ? PolicyTemplateOneofCase.None : PolicyTemplateOneofCase.Policy;
          }
        }

        /// <summary>Field number for the "instance_template" field.</summary>
        public const int InstanceTemplateFieldNumber = 2;
        /// <summary>
        /// Name of an instance template used to create VMs.
        /// Named the field as 'instance_template' instead of 'template' to avoid
        /// C++ keyword conflict.
        ///
        /// Batch only supports global instance templates from the same project as
        /// the job.
        /// You can specify the global instance template as a full or partial URL.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string InstanceTemplate {
          get { return HasInstanceTemplate ? (string) policyTemplate_ : ""; }
          set {
            policyTemplate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            policyTemplateCase_ = PolicyTemplateOneofCase.InstanceTemplate;
          }
        }
        /// <summary>Gets whether the "instance_template" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasInstanceTemplate {
          get { return policyTemplateCase_ == PolicyTemplateOneofCase.InstanceTemplate; }
        }
        /// <summary> Clears the value of the oneof if it's currently set to "instance_template" </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearInstanceTemplate() {
          if (HasInstanceTemplate) {
            ClearPolicyTemplate();
          }
        }

        /// <summary>Field number for the "install_gpu_drivers" field.</summary>
        public const int InstallGpuDriversFieldNumber = 3;
        private bool installGpuDrivers_;
        /// <summary>
        /// Set this field true if you want Batch to help fetch drivers from a third
        /// party location and install them for GPUs specified in
        /// `policy.accelerators` or `instance_template` on your behalf. Default is
        /// false.
        ///
        /// For Container-Optimized Image cases, Batch will install the
        /// accelerator driver following milestones of
        /// https://cloud.google.com/container-optimized-os/docs/release-notes. For
        /// non Container-Optimized Image cases, following
        /// https://github.com/GoogleCloudPlatform/compute-gpu-installation/blob/main/linux/install_gpu_driver.py.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool InstallGpuDrivers {
          get { return installGpuDrivers_; }
          set {
            installGpuDrivers_ = value;
          }
        }

        /// <summary>Field number for the "install_ops_agent" field.</summary>
        public const int InstallOpsAgentFieldNumber = 4;
        private bool installOpsAgent_;
        /// <summary>
        /// Optional. Set this field true if you want Batch to install Ops Agent on
        /// your behalf. Default is false.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool InstallOpsAgent {
          get { return installOpsAgent_; }
          set {
            installOpsAgent_ = value;
          }
        }

        /// <summary>Field number for the "block_project_ssh_keys" field.</summary>
        public const int BlockProjectSshKeysFieldNumber = 5;
        private bool blockProjectSshKeys_;
        /// <summary>
        /// Optional. Set this field to `true` if you want Batch to block
        /// project-level SSH keys from accessing this job's VMs.  Alternatively, you
        /// can configure the job to specify a VM instance template that blocks
        /// project-level SSH keys. In either case, Batch blocks project-level SSH
        /// keys while creating the VMs for this job.
        ///
        /// Batch allows project-level SSH keys for a job's VMs only if all
        /// the following are true:
        ///
        /// + This field is undefined or set to `false`.
        /// + The job's VM instance template (if any) doesn't block project-level
        ///   SSH keys.
        ///
        /// Notably, you can override this behavior by manually updating a VM to
        /// block or allow project-level SSH keys. For more information about
        /// blocking project-level SSH keys, see the Compute Engine documentation:
        /// https://cloud.google.com/compute/docs/connect/restrict-ssh-keys#block-keys
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool BlockProjectSshKeys {
          get { return blockProjectSshKeys_; }
          set {
            blockProjectSshKeys_ = value;
          }
        }

        private object policyTemplate_;
        /// <summary>Enum of possible cases for the "policy_template" oneof.</summary>
        public enum PolicyTemplateOneofCase {
          None = 0,
          Policy = 1,
          InstanceTemplate = 2,
        }
        private PolicyTemplateOneofCase policyTemplateCase_ = PolicyTemplateOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PolicyTemplateOneofCase PolicyTemplateCase {
          get { return policyTemplateCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPolicyTemplate() {
          policyTemplateCase_ = PolicyTemplateOneofCase.None;
          policyTemplate_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as InstancePolicyOrTemplate);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(InstancePolicyOrTemplate other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Policy, other.Policy)) return false;
          if (InstanceTemplate != other.InstanceTemplate) return false;
          if (InstallGpuDrivers != other.InstallGpuDrivers) return false;
          if (InstallOpsAgent != other.InstallOpsAgent) return false;
          if (BlockProjectSshKeys != other.BlockProjectSshKeys) return false;
          if (PolicyTemplateCase != other.PolicyTemplateCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (policyTemplateCase_ == PolicyTemplateOneofCase.Policy) hash ^= Policy.GetHashCode();
          if (HasInstanceTemplate) hash ^= InstanceTemplate.GetHashCode();
          if (InstallGpuDrivers != false) hash ^= InstallGpuDrivers.GetHashCode();
          if (InstallOpsAgent != false) hash ^= InstallOpsAgent.GetHashCode();
          if (BlockProjectSshKeys != false) hash ^= BlockProjectSshKeys.GetHashCode();
          hash ^= (int) policyTemplateCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (policyTemplateCase_ == PolicyTemplateOneofCase.Policy) {
            output.WriteRawTag(10);
            output.WriteMessage(Policy);
          }
          if (HasInstanceTemplate) {
            output.WriteRawTag(18);
            output.WriteString(InstanceTemplate);
          }
          if (InstallGpuDrivers != false) {
            output.WriteRawTag(24);
            output.WriteBool(InstallGpuDrivers);
          }
          if (InstallOpsAgent != false) {
            output.WriteRawTag(32);
            output.WriteBool(InstallOpsAgent);
          }
          if (BlockProjectSshKeys != false) {
            output.WriteRawTag(40);
            output.WriteBool(BlockProjectSshKeys);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (policyTemplateCase_ == PolicyTemplateOneofCase.Policy) {
            output.WriteRawTag(10);
            output.WriteMessage(Policy);
          }
          if (HasInstanceTemplate) {
            output.WriteRawTag(18);
            output.WriteString(InstanceTemplate);
          }
          if (InstallGpuDrivers != false) {
            output.WriteRawTag(24);
            output.WriteBool(InstallGpuDrivers);
          }
          if (InstallOpsAgent != false) {
            output.WriteRawTag(32);
            output.WriteBool(InstallOpsAgent);
          }
          if (BlockProjectSshKeys != false) {
            output.WriteRawTag(40);
            output.WriteBool(BlockProjectSshKeys);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (policyTemplateCase_ == PolicyTemplateOneofCase.Policy) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Policy);
          }
          if (HasInstanceTemplate) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceTemplate);
          }
          if (InstallGpuDrivers != false) {
            size += 1 + 1;
          }
          if (InstallOpsAgent != false) {
            size += 1 + 1;
          }
          if (BlockProjectSshKeys != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(InstancePolicyOrTemplate other) {
          if (other == null) {
            return;
          }
          if (other.InstallGpuDrivers != false) {
            InstallGpuDrivers = other.InstallGpuDrivers;
          }
          if (other.InstallOpsAgent != false) {
            InstallOpsAgent = other.InstallOpsAgent;
          }
          if (other.BlockProjectSshKeys != false) {
            BlockProjectSshKeys = other.BlockProjectSshKeys;
          }
          switch (other.PolicyTemplateCase) {
            case PolicyTemplateOneofCase.Policy:
              if (Policy == null) {
                Policy = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy();
              }
              Policy.MergeFrom(other.Policy);
              break;
            case PolicyTemplateOneofCase.InstanceTemplate:
              InstanceTemplate = other.InstanceTemplate;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy subBuilder = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy();
                if (policyTemplateCase_ == PolicyTemplateOneofCase.Policy) {
                  subBuilder.MergeFrom(Policy);
                }
                input.ReadMessage(subBuilder);
                Policy = subBuilder;
                break;
              }
              case 18: {
                InstanceTemplate = input.ReadString();
                break;
              }
              case 24: {
                InstallGpuDrivers = input.ReadBool();
                break;
              }
              case 32: {
                InstallOpsAgent = input.ReadBool();
                break;
              }
              case 40: {
                BlockProjectSshKeys = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy subBuilder = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.InstancePolicy();
                if (policyTemplateCase_ == PolicyTemplateOneofCase.Policy) {
                  subBuilder.MergeFrom(Policy);
                }
                input.ReadMessage(subBuilder);
                Policy = subBuilder;
                break;
              }
              case 18: {
                InstanceTemplate = input.ReadString();
                break;
              }
              case 24: {
                InstallGpuDrivers = input.ReadBool();
                break;
              }
              case 32: {
                InstallOpsAgent = input.ReadBool();
                break;
              }
              case 40: {
                BlockProjectSshKeys = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A network interface.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class NetworkInterface : pb::IMessage<NetworkInterface>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NetworkInterface> _parser = new pb::MessageParser<NetworkInterface>(() => new NetworkInterface());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NetworkInterface> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetworkInterface() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetworkInterface(NetworkInterface other) : this() {
          network_ = other.network_;
          subnetwork_ = other.subnetwork_;
          noExternalIpAddress_ = other.noExternalIpAddress_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetworkInterface Clone() {
          return new NetworkInterface(this);
        }

        /// <summary>Field number for the "network" field.</summary>
        public const int NetworkFieldNumber = 1;
        private string network_ = "";
        /// <summary>
        /// The URL of an existing network resource.
        /// You can specify the network as a full or partial URL.
        ///
        /// For example, the following are all valid URLs:
        ///
        /// * https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}
        /// * projects/{project}/global/networks/{network}
        /// * global/networks/{network}
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Network {
          get { return network_; }
          set {
            network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "subnetwork" field.</summary>
        public const int SubnetworkFieldNumber = 2;
        private string subnetwork_ = "";
        /// <summary>
        /// The URL of an existing subnetwork resource in the network.
        /// You can specify the subnetwork as a full or partial URL.
        ///
        /// For example, the following are all valid URLs:
        ///
        /// * https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/subnetworks/{subnetwork}
        /// * projects/{project}/regions/{region}/subnetworks/{subnetwork}
        /// * regions/{region}/subnetworks/{subnetwork}
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Subnetwork {
          get { return subnetwork_; }
          set {
            subnetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "no_external_ip_address" field.</summary>
        public const int NoExternalIpAddressFieldNumber = 3;
        private bool noExternalIpAddress_;
        /// <summary>
        /// Default is false (with an external IP address). Required if
        /// no external public IP address is attached to the VM. If no external
        /// public IP address, additional configuration is required to allow the VM
        /// to access Google Services. See
        /// https://cloud.google.com/vpc/docs/configure-private-google-access and
        /// https://cloud.google.com/nat/docs/gce-example#create-nat for more
        /// information.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool NoExternalIpAddress {
          get { return noExternalIpAddress_; }
          set {
            noExternalIpAddress_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as NetworkInterface);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NetworkInterface other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Network != other.Network) return false;
          if (Subnetwork != other.Subnetwork) return false;
          if (NoExternalIpAddress != other.NoExternalIpAddress) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Network.Length != 0) hash ^= Network.GetHashCode();
          if (Subnetwork.Length != 0) hash ^= Subnetwork.GetHashCode();
          if (NoExternalIpAddress != false) hash ^= NoExternalIpAddress.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Network.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Network);
          }
          if (Subnetwork.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Subnetwork);
          }
          if (NoExternalIpAddress != false) {
            output.WriteRawTag(24);
            output.WriteBool(NoExternalIpAddress);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Network.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Network);
          }
          if (Subnetwork.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Subnetwork);
          }
          if (NoExternalIpAddress != false) {
            output.WriteRawTag(24);
            output.WriteBool(NoExternalIpAddress);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Network.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
          }
          if (Subnetwork.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Subnetwork);
          }
          if (NoExternalIpAddress != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NetworkInterface other) {
          if (other == null) {
            return;
          }
          if (other.Network.Length != 0) {
            Network = other.Network;
          }
          if (other.Subnetwork.Length != 0) {
            Subnetwork = other.Subnetwork;
          }
          if (other.NoExternalIpAddress != false) {
            NoExternalIpAddress = other.NoExternalIpAddress;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Network = input.ReadString();
                break;
              }
              case 18: {
                Subnetwork = input.ReadString();
                break;
              }
              case 24: {
                NoExternalIpAddress = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Network = input.ReadString();
                break;
              }
              case 18: {
                Subnetwork = input.ReadString();
                break;
              }
              case 24: {
                NoExternalIpAddress = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// NetworkPolicy describes VM instance network configurations.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class NetworkPolicy : pb::IMessage<NetworkPolicy>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NetworkPolicy> _parser = new pb::MessageParser<NetworkPolicy>(() => new NetworkPolicy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<NetworkPolicy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetworkPolicy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetworkPolicy(NetworkPolicy other) : this() {
          networkInterfaces_ = other.networkInterfaces_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public NetworkPolicy Clone() {
          return new NetworkPolicy(this);
        }

        /// <summary>Field number for the "network_interfaces" field.</summary>
        public const int NetworkInterfacesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkInterface> _repeated_networkInterfaces_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkInterface.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkInterface> networkInterfaces_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkInterface>();
        /// <summary>
        /// Network configurations.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Types.NetworkInterface> NetworkInterfaces {
          get { return networkInterfaces_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as NetworkPolicy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(NetworkPolicy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!networkInterfaces_.Equals(other.networkInterfaces_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= networkInterfaces_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          networkInterfaces_.WriteTo(output, _repeated_networkInterfaces_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          networkInterfaces_.WriteTo(ref output, _repeated_networkInterfaces_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += networkInterfaces_.CalculateSize(_repeated_networkInterfaces_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(NetworkPolicy other) {
          if (other == null) {
            return;
          }
          networkInterfaces_.Add(other.networkInterfaces_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                networkInterfaces_.AddEntriesFrom(input, _repeated_networkInterfaces_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                networkInterfaces_.AddEntriesFrom(ref input, _repeated_networkInterfaces_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// PlacementPolicy describes a group placement policy for the VMs controlled
      /// by this AllocationPolicy.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PlacementPolicy : pb::IMessage<PlacementPolicy>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlacementPolicy> _parser = new pb::MessageParser<PlacementPolicy>(() => new PlacementPolicy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PlacementPolicy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Batch.V1Alpha.AllocationPolicy.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlacementPolicy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlacementPolicy(PlacementPolicy other) : this() {
          collocation_ = other.collocation_;
          maxDistance_ = other.maxDistance_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlacementPolicy Clone() {
          return new PlacementPolicy(this);
        }

        /// <summary>Field number for the "collocation" field.</summary>
        public const int CollocationFieldNumber = 1;
        private string collocation_ = "";
        /// <summary>
        /// UNSPECIFIED vs. COLLOCATED (default UNSPECIFIED). Use COLLOCATED when you
        /// want VMs to be located close to each other for low network latency
        /// between the VMs. No placement policy will be generated when collocation
        /// is UNSPECIFIED.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Collocation {
          get { return collocation_; }
          set {
            collocation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "max_distance" field.</summary>
        public const int MaxDistanceFieldNumber = 2;
        private long maxDistance_;
        /// <summary>
        /// When specified, causes the job to fail if more than max_distance logical
        /// switches are required between VMs. Batch uses the most compact possible
        /// placement of VMs even when max_distance is not specified. An explicit
        /// max_distance makes that level of compactness a strict requirement.
        /// Not yet implemented
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long MaxDistance {
          get { return maxDistance_; }
          set {
            maxDistance_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PlacementPolicy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PlacementPolicy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Collocation != other.Collocation) return false;
          if (MaxDistance != other.MaxDistance) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Collocation.Length != 0) hash ^= Collocation.GetHashCode();
          if (MaxDistance != 0L) hash ^= MaxDistance.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Collocation.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Collocation);
          }
          if (MaxDistance != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxDistance);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Collocation.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Collocation);
          }
          if (MaxDistance != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(MaxDistance);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Collocation.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Collocation);
          }
          if (MaxDistance != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxDistance);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PlacementPolicy other) {
          if (other == null) {
            return;
          }
          if (other.Collocation.Length != 0) {
            Collocation = other.Collocation;
          }
          if (other.MaxDistance != 0L) {
            MaxDistance = other.MaxDistance;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Collocation = input.ReadString();
                break;
              }
              case 16: {
                MaxDistance = input.ReadInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Collocation = input.ReadString();
                break;
              }
              case 16: {
                MaxDistance = input.ReadInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A TaskGroup defines one or more Tasks that all share the same TaskSpec.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TaskGroup : pb::IMessage<TaskGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskGroup> _parser = new pb::MessageParser<TaskGroup>(() => new TaskGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskGroup(TaskGroup other) : this() {
      name_ = other.name_;
      taskSpec_ = other.taskSpec_ != null ? other.taskSpec_.Clone() : null;
      taskCount_ = other.taskCount_;
      parallelism_ = other.parallelism_;
      schedulingPolicy_ = other.schedulingPolicy_;
      allocationPolicy_ = other.allocationPolicy_ != null ? other.allocationPolicy_.Clone() : null;
      labels_ = other.labels_.Clone();
      taskEnvironments_ = other.taskEnvironments_.Clone();
      taskCountPerNode_ = other.taskCountPerNode_;
      requireHostsFile_ = other.requireHostsFile_;
      permissiveSsh_ = other.permissiveSsh_;
      runAsNonRoot_ = other.runAsNonRoot_;
      serviceAccount_ = other.serviceAccount_ != null ? other.serviceAccount_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskGroup Clone() {
      return new TaskGroup(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. TaskGroup name.
    /// The system generates this field based on parent Job name.
    /// For example:
    /// "projects/123456/locations/us-west1/jobs/job01/taskGroups/group01".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_spec" field.</summary>
    public const int TaskSpecFieldNumber = 3;
    private global::Google.Cloud.Batch.V1Alpha.TaskSpec taskSpec_;
    /// <summary>
    /// Required. Tasks in the group share the same task spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.TaskSpec TaskSpec {
      get { return taskSpec_; }
      set {
        taskSpec_ = value;
      }
    }

    /// <summary>Field number for the "task_count" field.</summary>
    public const int TaskCountFieldNumber = 4;
    private long taskCount_;
    /// <summary>
    /// Number of Tasks in the TaskGroup.
    /// Default is 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TaskCount {
      get { return taskCount_; }
      set {
        taskCount_ = value;
      }
    }

    /// <summary>Field number for the "parallelism" field.</summary>
    public const int ParallelismFieldNumber = 5;
    private long parallelism_;
    /// <summary>
    /// Max number of tasks that can run in parallel.
    /// Default to min(task_count, parallel tasks per job limit).
    /// See: [Job Limits](https://cloud.google.com/batch/quotas#job_limits).
    /// Field parallelism must be 1 if the scheduling_policy is IN_ORDER.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Parallelism {
      get { return parallelism_; }
      set {
        parallelism_ = value;
      }
    }

    /// <summary>Field number for the "scheduling_policy" field.</summary>
    public const int SchedulingPolicyFieldNumber = 6;
    private global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy schedulingPolicy_ = global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy.Unspecified;
    /// <summary>
    /// Scheduling policy for Tasks in the TaskGroup.
    /// The default value is AS_SOON_AS_POSSIBLE.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy SchedulingPolicy {
      get { return schedulingPolicy_; }
      set {
        schedulingPolicy_ = value;
      }
    }

    /// <summary>Field number for the "allocation_policy" field.</summary>
    public const int AllocationPolicyFieldNumber = 7;
    private global::Google.Cloud.Batch.V1Alpha.AllocationPolicy allocationPolicy_;
    /// <summary>
    /// Compute resource allocation for the TaskGroup.
    /// If specified, it overrides resources in Job.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.AllocationPolicy AllocationPolicy {
      get { return allocationPolicy_; }
      set {
        allocationPolicy_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 66);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Labels for the TaskGroup.
    /// Labels could be user provided or system generated.
    /// You can assign up to 64 labels.  [Google Compute Engine label
    /// restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions)
    /// apply.
    /// Label names that start with "goog-" or "google-" are reserved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "task_environments" field.</summary>
    public const int TaskEnvironmentsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Google.Cloud.Batch.V1Alpha.Environment> _repeated_taskEnvironments_codec
        = pb::FieldCodec.ForMessage(74, global::Google.Cloud.Batch.V1Alpha.Environment.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.Environment> taskEnvironments_ = new pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.Environment>();
    /// <summary>
    /// An array of environment variable mappings, which are passed to Tasks with
    /// matching indices. If task_environments is used then task_count should
    /// not be specified in the request (and will be ignored). Task count will be
    /// the length of task_environments.
    ///
    /// Tasks get a BATCH_TASK_INDEX and BATCH_TASK_COUNT environment variable, in
    /// addition to any environment variables set in task_environments, specifying
    /// the number of Tasks in the Task's parent TaskGroup, and the specific Task's
    /// index in the TaskGroup (0 through BATCH_TASK_COUNT - 1).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Batch.V1Alpha.Environment> TaskEnvironments {
      get { return taskEnvironments_; }
    }

    /// <summary>Field number for the "task_count_per_node" field.</summary>
    public const int TaskCountPerNodeFieldNumber = 10;
    private long taskCountPerNode_;
    /// <summary>
    /// Max number of tasks that can be run on a VM at the same time.
    /// If not specified, the system will decide a value based on available
    /// compute resources on a VM and task requirements.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TaskCountPerNode {
      get { return taskCountPerNode_; }
      set {
        taskCountPerNode_ = value;
      }
    }

    /// <summary>Field number for the "require_hosts_file" field.</summary>
    public const int RequireHostsFileFieldNumber = 11;
    private bool requireHostsFile_;
    /// <summary>
    /// When true, Batch will populate a file with a list of all VMs assigned to
    /// the TaskGroup and set the BATCH_HOSTS_FILE environment variable to the path
    /// of that file. Defaults to false. The host file supports up to 1000 VMs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RequireHostsFile {
      get { return requireHostsFile_; }
      set {
        requireHostsFile_ = value;
      }
    }

    /// <summary>Field number for the "permissive_ssh" field.</summary>
    public const int PermissiveSshFieldNumber = 12;
    private bool permissiveSsh_;
    /// <summary>
    /// When true, Batch will configure SSH to allow passwordless login between
    /// VMs running the Batch tasks in the same TaskGroup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PermissiveSsh {
      get { return permissiveSsh_; }
      set {
        permissiveSsh_ = value;
      }
    }

    /// <summary>Field number for the "run_as_non_root" field.</summary>
    public const int RunAsNonRootFieldNumber = 14;
    private bool runAsNonRoot_;
    /// <summary>
    /// Optional. If not set or set to false, Batch uses the root user to execute
    /// runnables. If set to true, Batch runs the runnables using a non-root user.
    /// Currently, the non-root user Batch used is generated by OS Login. For more
    /// information, see [About OS
    /// Login](https://cloud.google.com/compute/docs/oslogin).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RunAsNonRoot {
      get { return runAsNonRoot_; }
      set {
        runAsNonRoot_ = value;
      }
    }

    /// <summary>Field number for the "service_account" field.</summary>
    public const int ServiceAccountFieldNumber = 15;
    private global::Google.Cloud.Batch.V1Alpha.ServiceAccount serviceAccount_;
    /// <summary>
    /// Optional. ServiceAccount used by tasks within the task group for the access
    /// to other Cloud resources. This allows tasks to operate with permissions
    /// distinct from the service account for the VM set at `AllocationPolicy`. Use
    /// this field when tasks require different access rights than those of the VM.
    ///
    /// Specify the service account's `email` field. Ensure `scopes`
    /// include any necessary permissions for tasks, in addition to the default
    /// 'cloud-platform' scope.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.ServiceAccount ServiceAccount {
      get { return serviceAccount_; }
      set {
        serviceAccount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(TaskSpec, other.TaskSpec)) return false;
      if (TaskCount != other.TaskCount) return false;
      if (Parallelism != other.Parallelism) return false;
      if (SchedulingPolicy != other.SchedulingPolicy) return false;
      if (!object.Equals(AllocationPolicy, other.AllocationPolicy)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if(!taskEnvironments_.Equals(other.taskEnvironments_)) return false;
      if (TaskCountPerNode != other.TaskCountPerNode) return false;
      if (RequireHostsFile != other.RequireHostsFile) return false;
      if (PermissiveSsh != other.PermissiveSsh) return false;
      if (RunAsNonRoot != other.RunAsNonRoot) return false;
      if (!object.Equals(ServiceAccount, other.ServiceAccount)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (taskSpec_ != null) hash ^= TaskSpec.GetHashCode();
      if (TaskCount != 0L) hash ^= TaskCount.GetHashCode();
      if (Parallelism != 0L) hash ^= Parallelism.GetHashCode();
      if (SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy.Unspecified) hash ^= SchedulingPolicy.GetHashCode();
      if (allocationPolicy_ != null) hash ^= AllocationPolicy.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= taskEnvironments_.GetHashCode();
      if (TaskCountPerNode != 0L) hash ^= TaskCountPerNode.GetHashCode();
      if (RequireHostsFile != false) hash ^= RequireHostsFile.GetHashCode();
      if (PermissiveSsh != false) hash ^= PermissiveSsh.GetHashCode();
      if (RunAsNonRoot != false) hash ^= RunAsNonRoot.GetHashCode();
      if (serviceAccount_ != null) hash ^= ServiceAccount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (taskSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TaskSpec);
      }
      if (TaskCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TaskCount);
      }
      if (Parallelism != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Parallelism);
      }
      if (SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SchedulingPolicy);
      }
      if (allocationPolicy_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AllocationPolicy);
      }
      labels_.WriteTo(output, _map_labels_codec);
      taskEnvironments_.WriteTo(output, _repeated_taskEnvironments_codec);
      if (TaskCountPerNode != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TaskCountPerNode);
      }
      if (RequireHostsFile != false) {
        output.WriteRawTag(88);
        output.WriteBool(RequireHostsFile);
      }
      if (PermissiveSsh != false) {
        output.WriteRawTag(96);
        output.WriteBool(PermissiveSsh);
      }
      if (RunAsNonRoot != false) {
        output.WriteRawTag(112);
        output.WriteBool(RunAsNonRoot);
      }
      if (serviceAccount_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ServiceAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (taskSpec_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TaskSpec);
      }
      if (TaskCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TaskCount);
      }
      if (Parallelism != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Parallelism);
      }
      if (SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SchedulingPolicy);
      }
      if (allocationPolicy_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(AllocationPolicy);
      }
      labels_.WriteTo(ref output, _map_labels_codec);
      taskEnvironments_.WriteTo(ref output, _repeated_taskEnvironments_codec);
      if (TaskCountPerNode != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TaskCountPerNode);
      }
      if (RequireHostsFile != false) {
        output.WriteRawTag(88);
        output.WriteBool(RequireHostsFile);
      }
      if (PermissiveSsh != false) {
        output.WriteRawTag(96);
        output.WriteBool(PermissiveSsh);
      }
      if (RunAsNonRoot != false) {
        output.WriteRawTag(112);
        output.WriteBool(RunAsNonRoot);
      }
      if (serviceAccount_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ServiceAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (taskSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskSpec);
      }
      if (TaskCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TaskCount);
      }
      if (Parallelism != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Parallelism);
      }
      if (SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SchedulingPolicy);
      }
      if (allocationPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AllocationPolicy);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      size += taskEnvironments_.CalculateSize(_repeated_taskEnvironments_codec);
      if (TaskCountPerNode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TaskCountPerNode);
      }
      if (RequireHostsFile != false) {
        size += 1 + 1;
      }
      if (PermissiveSsh != false) {
        size += 1 + 1;
      }
      if (RunAsNonRoot != false) {
        size += 1 + 1;
      }
      if (serviceAccount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServiceAccount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskGroup other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.taskSpec_ != null) {
        if (taskSpec_ == null) {
          TaskSpec = new global::Google.Cloud.Batch.V1Alpha.TaskSpec();
        }
        TaskSpec.MergeFrom(other.TaskSpec);
      }
      if (other.TaskCount != 0L) {
        TaskCount = other.TaskCount;
      }
      if (other.Parallelism != 0L) {
        Parallelism = other.Parallelism;
      }
      if (other.SchedulingPolicy != global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy.Unspecified) {
        SchedulingPolicy = other.SchedulingPolicy;
      }
      if (other.allocationPolicy_ != null) {
        if (allocationPolicy_ == null) {
          AllocationPolicy = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy();
        }
        AllocationPolicy.MergeFrom(other.AllocationPolicy);
      }
      labels_.MergeFrom(other.labels_);
      taskEnvironments_.Add(other.taskEnvironments_);
      if (other.TaskCountPerNode != 0L) {
        TaskCountPerNode = other.TaskCountPerNode;
      }
      if (other.RequireHostsFile != false) {
        RequireHostsFile = other.RequireHostsFile;
      }
      if (other.PermissiveSsh != false) {
        PermissiveSsh = other.PermissiveSsh;
      }
      if (other.RunAsNonRoot != false) {
        RunAsNonRoot = other.RunAsNonRoot;
      }
      if (other.serviceAccount_ != null) {
        if (serviceAccount_ == null) {
          ServiceAccount = new global::Google.Cloud.Batch.V1Alpha.ServiceAccount();
        }
        ServiceAccount.MergeFrom(other.ServiceAccount);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (taskSpec_ == null) {
              TaskSpec = new global::Google.Cloud.Batch.V1Alpha.TaskSpec();
            }
            input.ReadMessage(TaskSpec);
            break;
          }
          case 32: {
            TaskCount = input.ReadInt64();
            break;
          }
          case 40: {
            Parallelism = input.ReadInt64();
            break;
          }
          case 48: {
            SchedulingPolicy = (global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy) input.ReadEnum();
            break;
          }
          case 58: {
            if (allocationPolicy_ == null) {
              AllocationPolicy = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy();
            }
            input.ReadMessage(AllocationPolicy);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 74: {
            taskEnvironments_.AddEntriesFrom(input, _repeated_taskEnvironments_codec);
            break;
          }
          case 80: {
            TaskCountPerNode = input.ReadInt64();
            break;
          }
          case 88: {
            RequireHostsFile = input.ReadBool();
            break;
          }
          case 96: {
            PermissiveSsh = input.ReadBool();
            break;
          }
          case 112: {
            RunAsNonRoot = input.ReadBool();
            break;
          }
          case 122: {
            if (serviceAccount_ == null) {
              ServiceAccount = new global::Google.Cloud.Batch.V1Alpha.ServiceAccount();
            }
            input.ReadMessage(ServiceAccount);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (taskSpec_ == null) {
              TaskSpec = new global::Google.Cloud.Batch.V1Alpha.TaskSpec();
            }
            input.ReadMessage(TaskSpec);
            break;
          }
          case 32: {
            TaskCount = input.ReadInt64();
            break;
          }
          case 40: {
            Parallelism = input.ReadInt64();
            break;
          }
          case 48: {
            SchedulingPolicy = (global::Google.Cloud.Batch.V1Alpha.TaskGroup.Types.SchedulingPolicy) input.ReadEnum();
            break;
          }
          case 58: {
            if (allocationPolicy_ == null) {
              AllocationPolicy = new global::Google.Cloud.Batch.V1Alpha.AllocationPolicy();
            }
            input.ReadMessage(AllocationPolicy);
            break;
          }
          case 66: {
            labels_.AddEntriesFrom(ref input, _map_labels_codec);
            break;
          }
          case 74: {
            taskEnvironments_.AddEntriesFrom(ref input, _repeated_taskEnvironments_codec);
            break;
          }
          case 80: {
            TaskCountPerNode = input.ReadInt64();
            break;
          }
          case 88: {
            RequireHostsFile = input.ReadBool();
            break;
          }
          case 96: {
            PermissiveSsh = input.ReadBool();
            break;
          }
          case 112: {
            RunAsNonRoot = input.ReadBool();
            break;
          }
          case 122: {
            if (serviceAccount_ == null) {
              ServiceAccount = new global::Google.Cloud.Batch.V1Alpha.ServiceAccount();
            }
            input.ReadMessage(ServiceAccount);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TaskGroup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// How Tasks in the TaskGroup should be scheduled relative to each other.
      /// </summary>
      public enum SchedulingPolicy {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("SCHEDULING_POLICY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Run Tasks as soon as resources are available.
        ///
        /// Tasks might be executed in parallel depending on parallelism and
        /// task_count values.
        /// </summary>
        [pbr::OriginalName("AS_SOON_AS_POSSIBLE")] AsSoonAsPossible = 1,
        /// <summary>
        /// Run Tasks sequentially with increased task index.
        /// </summary>
        [pbr::OriginalName("IN_ORDER")] InOrder = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Carries information about a Google Cloud service account.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ServiceAccount : pb::IMessage<ServiceAccount>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServiceAccount> _parser = new pb::MessageParser<ServiceAccount>(() => new ServiceAccount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServiceAccount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.JobReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceAccount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceAccount(ServiceAccount other) : this() {
      email_ = other.email_;
      scopes_ = other.scopes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceAccount Clone() {
      return new ServiceAccount(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    /// <summary>
    /// Email address of the service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_scopes_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> scopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of scopes to be enabled for this service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Scopes {
      get { return scopes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServiceAccount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServiceAccount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if(!scopes_.Equals(other.scopes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      hash ^= scopes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      scopes_.WriteTo(output, _repeated_scopes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      scopes_.WriteTo(ref output, _repeated_scopes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServiceAccount other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      scopes_.Add(other.scopes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            scopes_.AddEntriesFrom(ref input, _repeated_scopes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
