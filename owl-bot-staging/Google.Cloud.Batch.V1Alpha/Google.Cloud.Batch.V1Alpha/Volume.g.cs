// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/batch/v1alpha/volume.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Batch.V1Alpha {

  /// <summary>Holder for reflection information generated from google/cloud/batch/v1alpha/volume.proto</summary>
  public static partial class VolumeReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/batch/v1alpha/volume.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VolumeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidnb29nbGUvY2xvdWQvYmF0Y2gvdjFhbHBoYS92b2x1bWUucHJvdG8SGmdv",
            "b2dsZS5jbG91ZC5iYXRjaC52MWFscGhhIuYBCgZWb2x1bWUSLgoDbmZzGAEg",
            "ASgLMh8uZ29vZ2xlLmNsb3VkLmJhdGNoLnYxYWxwaGEuTkZTSAASMAoCcGQY",
            "AiABKAsyHi5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5QREICGAFIABIu",
            "CgNnY3MYAyABKAsyHy5nb29nbGUuY2xvdWQuYmF0Y2gudjFhbHBoYS5HQ1NI",
            "ABIVCgtkZXZpY2VfbmFtZRgGIAEoCUgAEhIKCm1vdW50X3BhdGgYBCABKAkS",
            "FQoNbW91bnRfb3B0aW9ucxgFIAMoCUIICgZzb3VyY2UiKgoDTkZTEg4KBnNl",
            "cnZlchgBIAEoCRITCgtyZW1vdGVfcGF0aBgCIAEoCSI4CgJQRBIMCgRkaXNr",
            "GAEgASgJEg4KBmRldmljZRgCIAEoCRIUCghleGlzdGluZxgDIAEoCEICGAEi",
            "GgoDR0NTEhMKC3JlbW90ZV9wYXRoGAEgASgJQsUBCh5jb20uZ29vZ2xlLmNs",
            "b3VkLmJhdGNoLnYxYWxwaGFCC1ZvbHVtZVByb3RvUAFaNGNsb3VkLmdvb2ds",
            "ZS5jb20vZ28vYmF0Y2gvYXBpdjFhbHBoYS9iYXRjaHBiO2JhdGNocGKiAgNH",
            "Q0KqAhpHb29nbGUuQ2xvdWQuQmF0Y2guVjFBbHBoYcoCGkdvb2dsZVxDbG91",
            "ZFxCYXRjaFxWMWFscGhh6gIdR29vZ2xlOjpDbG91ZDo6QmF0Y2g6OlYxYWxw",
            "aGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.Volume), global::Google.Cloud.Batch.V1Alpha.Volume.Parser, new[]{ "Nfs", "Pd", "Gcs", "DeviceName", "MountPath", "MountOptions" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.NFS), global::Google.Cloud.Batch.V1Alpha.NFS.Parser, new[]{ "Server", "RemotePath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.PD), global::Google.Cloud.Batch.V1Alpha.PD.Parser, new[]{ "Disk", "Device", "Existing" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Batch.V1Alpha.GCS), global::Google.Cloud.Batch.V1Alpha.GCS.Parser, new[]{ "RemotePath" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Volume describes a volume and parameters for it to be mounted to a VM.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Volume : pb::IMessage<Volume>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Volume> _parser = new pb::MessageParser<Volume>(() => new Volume());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Volume> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.VolumeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Volume() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Volume(Volume other) : this() {
      mountPath_ = other.mountPath_;
      mountOptions_ = other.mountOptions_.Clone();
      switch (other.SourceCase) {
        case SourceOneofCase.Nfs:
          Nfs = other.Nfs.Clone();
          break;
        case SourceOneofCase.Pd:
          Pd = other.Pd.Clone();
          break;
        case SourceOneofCase.Gcs:
          Gcs = other.Gcs.Clone();
          break;
        case SourceOneofCase.DeviceName:
          DeviceName = other.DeviceName;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Volume Clone() {
      return new Volume(this);
    }

    /// <summary>Field number for the "nfs" field.</summary>
    public const int NfsFieldNumber = 1;
    /// <summary>
    /// A Network File System (NFS) volume. For example, a
    /// Filestore file share.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.NFS Nfs {
      get { return sourceCase_ == SourceOneofCase.Nfs ? (global::Google.Cloud.Batch.V1Alpha.NFS) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Nfs;
      }
    }

    /// <summary>Field number for the "pd" field.</summary>
    public const int PdFieldNumber = 2;
    /// <summary>
    /// Deprecated: please use device_name instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.PD Pd {
      get { return sourceCase_ == SourceOneofCase.Pd ? (global::Google.Cloud.Batch.V1Alpha.PD) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Pd;
      }
    }

    /// <summary>Field number for the "gcs" field.</summary>
    public const int GcsFieldNumber = 3;
    /// <summary>
    /// A Google Cloud Storage (GCS) volume.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Batch.V1Alpha.GCS Gcs {
      get { return sourceCase_ == SourceOneofCase.Gcs ? (global::Google.Cloud.Batch.V1Alpha.GCS) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.Gcs;
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 6;
    /// <summary>
    /// Device name of an attached disk volume, which should align with a
    /// device_name specified by
    /// job.allocation_policy.instances[0].policy.disks[i].device_name or
    /// defined by the given instance template in
    /// job.allocation_policy.instances[0].instance_template.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceName {
      get { return HasDeviceName ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.DeviceName;
      }
    }
    /// <summary>Gets whether the "device_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeviceName {
      get { return sourceCase_ == SourceOneofCase.DeviceName; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "device_name" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeviceName() {
      if (HasDeviceName) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "mount_path" field.</summary>
    public const int MountPathFieldNumber = 4;
    private string mountPath_ = "";
    /// <summary>
    /// The mount path for the volume, e.g. /mnt/disks/share.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MountPath {
      get { return mountPath_; }
      set {
        mountPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mount_options" field.</summary>
    public const int MountOptionsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_mountOptions_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> mountOptions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Mount options vary based on the type of storage volume:
    ///
    /// * For a Cloud Storage bucket, all the mount options provided
    /// by
    ///   the [`gcsfuse` tool](https://cloud.google.com/storage/docs/gcsfuse-cli)
    ///   are supported.
    /// * For an existing persistent disk, all mount options provided by the
    ///   [`mount` command](https://man7.org/linux/man-pages/man8/mount.8.html)
    ///   except writing are supported. This is due to restrictions of
    ///   [multi-writer
    ///   mode](https://cloud.google.com/compute/docs/disks/sharing-disks-between-vms).
    /// * For any other disk or a Network File System (NFS), all the
    ///   mount options provided by the `mount` command are supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> MountOptions {
      get { return mountOptions_; }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Nfs = 1,
      Pd = 2,
      Gcs = 3,
      DeviceName = 6,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Volume);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Volume other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Nfs, other.Nfs)) return false;
      if (!object.Equals(Pd, other.Pd)) return false;
      if (!object.Equals(Gcs, other.Gcs)) return false;
      if (DeviceName != other.DeviceName) return false;
      if (MountPath != other.MountPath) return false;
      if(!mountOptions_.Equals(other.mountOptions_)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.Nfs) hash ^= Nfs.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Pd) hash ^= Pd.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Gcs) hash ^= Gcs.GetHashCode();
      if (HasDeviceName) hash ^= DeviceName.GetHashCode();
      if (MountPath.Length != 0) hash ^= MountPath.GetHashCode();
      hash ^= mountOptions_.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sourceCase_ == SourceOneofCase.Nfs) {
        output.WriteRawTag(10);
        output.WriteMessage(Nfs);
      }
      if (sourceCase_ == SourceOneofCase.Pd) {
        output.WriteRawTag(18);
        output.WriteMessage(Pd);
      }
      if (sourceCase_ == SourceOneofCase.Gcs) {
        output.WriteRawTag(26);
        output.WriteMessage(Gcs);
      }
      if (MountPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MountPath);
      }
      mountOptions_.WriteTo(output, _repeated_mountOptions_codec);
      if (HasDeviceName) {
        output.WriteRawTag(50);
        output.WriteString(DeviceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sourceCase_ == SourceOneofCase.Nfs) {
        output.WriteRawTag(10);
        output.WriteMessage(Nfs);
      }
      if (sourceCase_ == SourceOneofCase.Pd) {
        output.WriteRawTag(18);
        output.WriteMessage(Pd);
      }
      if (sourceCase_ == SourceOneofCase.Gcs) {
        output.WriteRawTag(26);
        output.WriteMessage(Gcs);
      }
      if (MountPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MountPath);
      }
      mountOptions_.WriteTo(ref output, _repeated_mountOptions_codec);
      if (HasDeviceName) {
        output.WriteRawTag(50);
        output.WriteString(DeviceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.Nfs) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nfs);
      }
      if (sourceCase_ == SourceOneofCase.Pd) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pd);
      }
      if (sourceCase_ == SourceOneofCase.Gcs) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gcs);
      }
      if (HasDeviceName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (MountPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MountPath);
      }
      size += mountOptions_.CalculateSize(_repeated_mountOptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Volume other) {
      if (other == null) {
        return;
      }
      if (other.MountPath.Length != 0) {
        MountPath = other.MountPath;
      }
      mountOptions_.Add(other.mountOptions_);
      switch (other.SourceCase) {
        case SourceOneofCase.Nfs:
          if (Nfs == null) {
            Nfs = new global::Google.Cloud.Batch.V1Alpha.NFS();
          }
          Nfs.MergeFrom(other.Nfs);
          break;
        case SourceOneofCase.Pd:
          if (Pd == null) {
            Pd = new global::Google.Cloud.Batch.V1Alpha.PD();
          }
          Pd.MergeFrom(other.Pd);
          break;
        case SourceOneofCase.Gcs:
          if (Gcs == null) {
            Gcs = new global::Google.Cloud.Batch.V1Alpha.GCS();
          }
          Gcs.MergeFrom(other.Gcs);
          break;
        case SourceOneofCase.DeviceName:
          DeviceName = other.DeviceName;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Cloud.Batch.V1Alpha.NFS subBuilder = new global::Google.Cloud.Batch.V1Alpha.NFS();
            if (sourceCase_ == SourceOneofCase.Nfs) {
              subBuilder.MergeFrom(Nfs);
            }
            input.ReadMessage(subBuilder);
            Nfs = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Batch.V1Alpha.PD subBuilder = new global::Google.Cloud.Batch.V1Alpha.PD();
            if (sourceCase_ == SourceOneofCase.Pd) {
              subBuilder.MergeFrom(Pd);
            }
            input.ReadMessage(subBuilder);
            Pd = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Batch.V1Alpha.GCS subBuilder = new global::Google.Cloud.Batch.V1Alpha.GCS();
            if (sourceCase_ == SourceOneofCase.Gcs) {
              subBuilder.MergeFrom(Gcs);
            }
            input.ReadMessage(subBuilder);
            Gcs = subBuilder;
            break;
          }
          case 34: {
            MountPath = input.ReadString();
            break;
          }
          case 42: {
            mountOptions_.AddEntriesFrom(input, _repeated_mountOptions_codec);
            break;
          }
          case 50: {
            DeviceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Google.Cloud.Batch.V1Alpha.NFS subBuilder = new global::Google.Cloud.Batch.V1Alpha.NFS();
            if (sourceCase_ == SourceOneofCase.Nfs) {
              subBuilder.MergeFrom(Nfs);
            }
            input.ReadMessage(subBuilder);
            Nfs = subBuilder;
            break;
          }
          case 18: {
            global::Google.Cloud.Batch.V1Alpha.PD subBuilder = new global::Google.Cloud.Batch.V1Alpha.PD();
            if (sourceCase_ == SourceOneofCase.Pd) {
              subBuilder.MergeFrom(Pd);
            }
            input.ReadMessage(subBuilder);
            Pd = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Batch.V1Alpha.GCS subBuilder = new global::Google.Cloud.Batch.V1Alpha.GCS();
            if (sourceCase_ == SourceOneofCase.Gcs) {
              subBuilder.MergeFrom(Gcs);
            }
            input.ReadMessage(subBuilder);
            Gcs = subBuilder;
            break;
          }
          case 34: {
            MountPath = input.ReadString();
            break;
          }
          case 42: {
            mountOptions_.AddEntriesFrom(ref input, _repeated_mountOptions_codec);
            break;
          }
          case 50: {
            DeviceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents an NFS volume.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NFS : pb::IMessage<NFS>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NFS> _parser = new pb::MessageParser<NFS>(() => new NFS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NFS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.VolumeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NFS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NFS(NFS other) : this() {
      server_ = other.server_;
      remotePath_ = other.remotePath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NFS Clone() {
      return new NFS(this);
    }

    /// <summary>Field number for the "server" field.</summary>
    public const int ServerFieldNumber = 1;
    private string server_ = "";
    /// <summary>
    /// The IP address of the NFS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Server {
      get { return server_; }
      set {
        server_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remote_path" field.</summary>
    public const int RemotePathFieldNumber = 2;
    private string remotePath_ = "";
    /// <summary>
    /// Remote source path exported from the NFS, e.g., "/share".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RemotePath {
      get { return remotePath_; }
      set {
        remotePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NFS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NFS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Server != other.Server) return false;
      if (RemotePath != other.RemotePath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Server.Length != 0) hash ^= Server.GetHashCode();
      if (RemotePath.Length != 0) hash ^= RemotePath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Server.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Server);
      }
      if (RemotePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RemotePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Server.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Server);
      }
      if (RemotePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RemotePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Server.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Server);
      }
      if (RemotePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemotePath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NFS other) {
      if (other == null) {
        return;
      }
      if (other.Server.Length != 0) {
        Server = other.Server;
      }
      if (other.RemotePath.Length != 0) {
        RemotePath = other.RemotePath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Server = input.ReadString();
            break;
          }
          case 18: {
            RemotePath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Server = input.ReadString();
            break;
          }
          case 18: {
            RemotePath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Deprecated: please use device_name instead.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PD : pb::IMessage<PD>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PD> _parser = new pb::MessageParser<PD>(() => new PD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.VolumeReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PD(PD other) : this() {
      disk_ = other.disk_;
      device_ = other.device_;
      existing_ = other.existing_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PD Clone() {
      return new PD(this);
    }

    /// <summary>Field number for the "disk" field.</summary>
    public const int DiskFieldNumber = 1;
    private string disk_ = "";
    /// <summary>
    /// PD disk name, e.g. pd-1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Disk {
      get { return disk_; }
      set {
        disk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 2;
    private string device_ = "";
    /// <summary>
    /// PD device name, e.g. persistent-disk-1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Device {
      get { return device_; }
      set {
        device_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "existing" field.</summary>
    public const int ExistingFieldNumber = 3;
    private bool existing_;
    /// <summary>
    /// Whether this is an existing PD. Default is false. If false, i.e., new
    /// PD, we will format it into ext4 and mount to the given path. If true, i.e.,
    /// existing PD, it should be in ext4 format and we will mount it to the given
    /// path.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Existing {
      get { return existing_; }
      set {
        existing_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disk != other.Disk) return false;
      if (Device != other.Device) return false;
      if (Existing != other.Existing) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Disk.Length != 0) hash ^= Disk.GetHashCode();
      if (Device.Length != 0) hash ^= Device.GetHashCode();
      if (Existing != false) hash ^= Existing.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Disk.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Disk);
      }
      if (Device.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Device);
      }
      if (Existing != false) {
        output.WriteRawTag(24);
        output.WriteBool(Existing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Disk.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Disk);
      }
      if (Device.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Device);
      }
      if (Existing != false) {
        output.WriteRawTag(24);
        output.WriteBool(Existing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Disk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Disk);
      }
      if (Device.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Device);
      }
      if (Existing != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PD other) {
      if (other == null) {
        return;
      }
      if (other.Disk.Length != 0) {
        Disk = other.Disk;
      }
      if (other.Device.Length != 0) {
        Device = other.Device;
      }
      if (other.Existing != false) {
        Existing = other.Existing;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Disk = input.ReadString();
            break;
          }
          case 18: {
            Device = input.ReadString();
            break;
          }
          case 24: {
            Existing = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Disk = input.ReadString();
            break;
          }
          case 18: {
            Device = input.ReadString();
            break;
          }
          case 24: {
            Existing = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a Google Cloud Storage volume.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GCS : pb::IMessage<GCS>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GCS> _parser = new pb::MessageParser<GCS>(() => new GCS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GCS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Batch.V1Alpha.VolumeReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCS(GCS other) : this() {
      remotePath_ = other.remotePath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GCS Clone() {
      return new GCS(this);
    }

    /// <summary>Field number for the "remote_path" field.</summary>
    public const int RemotePathFieldNumber = 1;
    private string remotePath_ = "";
    /// <summary>
    /// Remote path, either a bucket name or a subdirectory of a bucket, e.g.:
    /// bucket_name, bucket_name/subdirectory/
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RemotePath {
      get { return remotePath_; }
      set {
        remotePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GCS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GCS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RemotePath != other.RemotePath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RemotePath.Length != 0) hash ^= RemotePath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RemotePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RemotePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RemotePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RemotePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RemotePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RemotePath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GCS other) {
      if (other == null) {
        return;
      }
      if (other.RemotePath.Length != 0) {
        RemotePath = other.RemotePath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RemotePath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RemotePath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
