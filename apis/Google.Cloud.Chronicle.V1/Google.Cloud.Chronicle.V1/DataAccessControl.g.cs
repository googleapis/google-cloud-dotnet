// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/chronicle/v1/data_access_control.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Chronicle.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/chronicle/v1/data_access_control.proto</summary>
  public static partial class DataAccessControlReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/chronicle/v1/data_access_control.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataAccessControlReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNnb29nbGUvY2xvdWQvY2hyb25pY2xlL3YxL2RhdGFfYWNjZXNzX2NvbnRy",
            "b2wucHJvdG8SGWdvb2dsZS5jbG91ZC5jaHJvbmljbGUudjEaHGdvb2dsZS9h",
            "cGkvYW5ub3RhdGlvbnMucHJvdG8aF2dvb2dsZS9hcGkvY2xpZW50LnByb3Rv",
            "Gh9nb29nbGUvYXBpL2ZpZWxkX2JlaGF2aW9yLnByb3RvGhlnb29nbGUvYXBp",
            "L3Jlc291cmNlLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8a",
            "IGdvb2dsZS9wcm90b2J1Zi9maWVsZF9tYXNrLnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvIs8BChxDcmVhdGVEYXRhQWNjZXNzTGFi",
            "ZWxSZXF1ZXN0EkAKBnBhcmVudBgBIAEoCUIw4EEC+kEqEihjaHJvbmljbGUu",
            "Z29vZ2xlYXBpcy5jb20vRGF0YUFjY2Vzc0xhYmVsEkoKEWRhdGFfYWNjZXNz",
            "X2xhYmVsGAIgASgLMiouZ29vZ2xlLmNsb3VkLmNocm9uaWNsZS52MS5EYXRh",
            "QWNjZXNzTGFiZWxCA+BBAhIhChRkYXRhX2FjY2Vzc19sYWJlbF9pZBgDIAEo",
            "CUID4EECIlsKGUdldERhdGFBY2Nlc3NMYWJlbFJlcXVlc3QSPgoEbmFtZRgB",
            "IAEoCUIw4EEC+kEqCihjaHJvbmljbGUuZ29vZ2xlYXBpcy5jb20vRGF0YUFj",
            "Y2Vzc0xhYmVsIpsBChtMaXN0RGF0YUFjY2Vzc0xhYmVsc1JlcXVlc3QSQAoG",
            "cGFyZW50GAEgASgJQjDgQQL6QSoSKGNocm9uaWNsZS5nb29nbGVhcGlzLmNv",
            "bS9EYXRhQWNjZXNzTGFiZWwSEQoJcGFnZV9zaXplGAIgASgFEhIKCnBhZ2Vf",
            "dG9rZW4YAyABKAkSEwoGZmlsdGVyGAQgASgJQgPgQQEifwocTGlzdERhdGFB",
            "Y2Nlc3NMYWJlbHNSZXNwb25zZRJGChJkYXRhX2FjY2Vzc19sYWJlbHMYASAD",
            "KAsyKi5nb29nbGUuY2xvdWQuY2hyb25pY2xlLnYxLkRhdGFBY2Nlc3NMYWJl",
            "bBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkimwEKHFVwZGF0ZURhdGFBY2Nl",
            "c3NMYWJlbFJlcXVlc3QSSgoRZGF0YV9hY2Nlc3NfbGFiZWwYASABKAsyKi5n",
            "b29nbGUuY2xvdWQuY2hyb25pY2xlLnYxLkRhdGFBY2Nlc3NMYWJlbEID4EEC",
            "Ei8KC3VwZGF0ZV9tYXNrGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxk",
            "TWFzayJeChxEZWxldGVEYXRhQWNjZXNzTGFiZWxSZXF1ZXN0Ej4KBG5hbWUY",
            "ASABKAlCMOBBAvpBKgooY2hyb25pY2xlLmdvb2dsZWFwaXMuY29tL0RhdGFB",
            "Y2Nlc3NMYWJlbCLPAQocQ3JlYXRlRGF0YUFjY2Vzc1Njb3BlUmVxdWVzdBJA",
            "CgZwYXJlbnQYASABKAlCMOBBAvpBKhIoY2hyb25pY2xlLmdvb2dsZWFwaXMu",
            "Y29tL0RhdGFBY2Nlc3NTY29wZRJKChFkYXRhX2FjY2Vzc19zY29wZRgCIAEo",
            "CzIqLmdvb2dsZS5jbG91ZC5jaHJvbmljbGUudjEuRGF0YUFjY2Vzc1Njb3Bl",
            "QgPgQQISIQoUZGF0YV9hY2Nlc3Nfc2NvcGVfaWQYAyABKAlCA+BBAiJbChlH",
            "ZXREYXRhQWNjZXNzU2NvcGVSZXF1ZXN0Ej4KBG5hbWUYASABKAlCMOBBAvpB",
            "KgooY2hyb25pY2xlLmdvb2dsZWFwaXMuY29tL0RhdGFBY2Nlc3NTY29wZSKb",
            "AQobTGlzdERhdGFBY2Nlc3NTY29wZXNSZXF1ZXN0EkAKBnBhcmVudBgBIAEo",
            "CUIw4EEC+kEqEihjaHJvbmljbGUuZ29vZ2xlYXBpcy5jb20vRGF0YUFjY2Vz",
            "c1Njb3BlEhEKCXBhZ2Vfc2l6ZRgCIAEoBRISCgpwYWdlX3Rva2VuGAMgASgJ",
            "EhMKBmZpbHRlchgEIAEoCUID4EEBItMBChxMaXN0RGF0YUFjY2Vzc1Njb3Bl",
            "c1Jlc3BvbnNlEkYKEmRhdGFfYWNjZXNzX3Njb3BlcxgBIAMoCzIqLmdvb2ds",
            "ZS5jbG91ZC5jaHJvbmljbGUudjEuRGF0YUFjY2Vzc1Njb3BlEi0KIGdsb2Jh",
            "bF9kYXRhX2FjY2Vzc19zY29wZV9ncmFudGVkGAMgASgISACIAQESFwoPbmV4",
            "dF9wYWdlX3Rva2VuGAIgASgJQiMKIV9nbG9iYWxfZGF0YV9hY2Nlc3Nfc2Nv",
            "cGVfZ3JhbnRlZCKbAQocVXBkYXRlRGF0YUFjY2Vzc1Njb3BlUmVxdWVzdBJK",
            "ChFkYXRhX2FjY2Vzc19zY29wZRgBIAEoCzIqLmdvb2dsZS5jbG91ZC5jaHJv",
            "bmljbGUudjEuRGF0YUFjY2Vzc1Njb3BlQgPgQQISLwoLdXBkYXRlX21hc2sY",
            "AiABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNrIl4KHERlbGV0ZURh",
            "dGFBY2Nlc3NTY29wZVJlcXVlc3QSPgoEbmFtZRgBIAEoCUIw4EEC+kEqCihj",
            "aHJvbmljbGUuZ29vZ2xlYXBpcy5jb20vRGF0YUFjY2Vzc1Njb3BlItUDCg9E",
            "YXRhQWNjZXNzTGFiZWwSEwoJdWRtX3F1ZXJ5GAMgASgJSAASOwoEbmFtZRgB",
            "IAEoCUIt+kEqCihjaHJvbmljbGUuZ29vZ2xlYXBpcy5jb20vRGF0YUFjY2Vz",
            "c0xhYmVsEhkKDGRpc3BsYXlfbmFtZRgIIAEoCUID4EEDEjQKC2NyZWF0ZV90",
            "aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQK",
            "C3VwZGF0ZV90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cEID4EEDEhMKBmF1dGhvchgGIAEoCUID4EEDEhgKC2xhc3RfZWRpdG9yGAcg",
            "ASgJQgPgQQMSGAoLZGVzY3JpcHRpb24YAiABKAlCA+BBATqRAepBjQEKKGNo",
            "cm9uaWNsZS5nb29nbGVhcGlzLmNvbS9EYXRhQWNjZXNzTGFiZWwSYXByb2pl",
            "Y3RzL3twcm9qZWN0fS9sb2NhdGlvbnMve2xvY2F0aW9ufS9pbnN0YW5jZXMv",
            "e2luc3RhbmNlfS9kYXRhQWNjZXNzTGFiZWxzL3tkYXRhX2FjY2Vzc19sYWJl",
            "bH1CDAoKZGVmaW5pdGlvbiKIBQoPRGF0YUFjY2Vzc1Njb3BlEj4KBG5hbWUY",
            "ASABKAlCMOBBAvpBKgooY2hyb25pY2xlLmdvb2dsZWFwaXMuY29tL0RhdGFB",
            "Y2Nlc3NTY29wZRJcChphbGxvd2VkX2RhdGFfYWNjZXNzX2xhYmVscxgCIAMo",
            "CzIzLmdvb2dsZS5jbG91ZC5jaHJvbmljbGUudjEuRGF0YUFjY2Vzc0xhYmVs",
            "UmVmZXJlbmNlQgPgQQESWwoZZGVuaWVkX2RhdGFfYWNjZXNzX2xhYmVscxgD",
            "IAMoCzIzLmdvb2dsZS5jbG91ZC5jaHJvbmljbGUudjEuRGF0YUFjY2Vzc0xh",
            "YmVsUmVmZXJlbmNlQgPgQQESGQoMZGlzcGxheV9uYW1lGAQgASgJQgPgQQMS",
            "NAoLY3JlYXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wQgPgQQMSNAoLdXBkYXRlX3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wQgPgQQMSEwoGYXV0aG9yGAcgASgJQgPgQQMSGAoLbGFz",
            "dF9lZGl0b3IYCCABKAlCA+BBAxIYCgtkZXNjcmlwdGlvbhgJIAEoCUID4EEB",
            "EhYKCWFsbG93X2FsbBgKIAEoCEID4EEBOpEB6kGNAQooY2hyb25pY2xlLmdv",
            "b2dsZWFwaXMuY29tL0RhdGFBY2Nlc3NTY29wZRJhcHJvamVjdHMve3Byb2pl",
            "Y3R9L2xvY2F0aW9ucy97bG9jYXRpb259L2luc3RhbmNlcy97aW5zdGFuY2V9",
            "L2RhdGFBY2Nlc3NTY29wZXMve2RhdGFfYWNjZXNzX3Njb3BlfSLQAQoYRGF0",
            "YUFjY2Vzc0xhYmVsUmVmZXJlbmNlEhsKEWRhdGFfYWNjZXNzX2xhYmVsGAEg",
            "ASgJSAASEgoIbG9nX3R5cGUYAiABKAlIABIZCg9hc3NldF9uYW1lc3BhY2UY",
            "AyABKAlIABJECg9pbmdlc3Rpb25fbGFiZWwYBCABKAsyKS5nb29nbGUuY2xv",
            "dWQuY2hyb25pY2xlLnYxLkluZ2VzdGlvbkxhYmVsSAASGQoMZGlzcGxheV9u",
            "YW1lGAUgASgJQgPgQQNCBwoFbGFiZWwiVgoOSW5nZXN0aW9uTGFiZWwSIAoT",
            "aW5nZXN0aW9uX2xhYmVsX2tleRgBIAEoCUID4EECEiIKFWluZ2VzdGlvbl9s",
            "YWJlbF92YWx1ZRgCIAEoCUID4EEBMuYSChhEYXRhQWNjZXNzQ29udHJvbFNl",
            "cnZpY2USigIKFUNyZWF0ZURhdGFBY2Nlc3NMYWJlbBI3Lmdvb2dsZS5jbG91",
            "ZC5jaHJvbmljbGUudjEuQ3JlYXRlRGF0YUFjY2Vzc0xhYmVsUmVxdWVzdBoq",
            "Lmdvb2dsZS5jbG91ZC5jaHJvbmljbGUudjEuRGF0YUFjY2Vzc0xhYmVsIosB",
            "2kEtcGFyZW50LGRhdGFfYWNjZXNzX2xhYmVsLGRhdGFfYWNjZXNzX2xhYmVs",
            "X2lkgtPkkwJVIkAvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9ucy8q",
            "L2luc3RhbmNlcy8qfS9kYXRhQWNjZXNzTGFiZWxzOhFkYXRhX2FjY2Vzc19s",
            "YWJlbBLHAQoSR2V0RGF0YUFjY2Vzc0xhYmVsEjQuZ29vZ2xlLmNsb3VkLmNo",
            "cm9uaWNsZS52MS5HZXREYXRhQWNjZXNzTGFiZWxSZXF1ZXN0GiouZ29vZ2xl",
            "LmNsb3VkLmNocm9uaWNsZS52MS5EYXRhQWNjZXNzTGFiZWwiT9pBBG5hbWWC",
            "0+STAkISQC92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2luc3Rh",
            "bmNlcy8qL2RhdGFBY2Nlc3NMYWJlbHMvKn0S2gEKFExpc3REYXRhQWNjZXNz",
            "TGFiZWxzEjYuZ29vZ2xlLmNsb3VkLmNocm9uaWNsZS52MS5MaXN0RGF0YUFj",
            "Y2Vzc0xhYmVsc1JlcXVlc3QaNy5nb29nbGUuY2xvdWQuY2hyb25pY2xlLnYx",
            "Lkxpc3REYXRhQWNjZXNzTGFiZWxzUmVzcG9uc2UiUdpBBnBhcmVudILT5JMC",
            "QhJAL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9pbnN0YW5j",
            "ZXMvKn0vZGF0YUFjY2Vzc0xhYmVscxKMAgoVVXBkYXRlRGF0YUFjY2Vzc0xh",
            "YmVsEjcuZ29vZ2xlLmNsb3VkLmNocm9uaWNsZS52MS5VcGRhdGVEYXRhQWNj",
            "ZXNzTGFiZWxSZXF1ZXN0GiouZ29vZ2xlLmNsb3VkLmNocm9uaWNsZS52MS5E",
            "YXRhQWNjZXNzTGFiZWwijQHaQR1kYXRhX2FjY2Vzc19sYWJlbCx1cGRhdGVf",
            "bWFza4LT5JMCZzJSL3YxL3tkYXRhX2FjY2Vzc19sYWJlbC5uYW1lPXByb2pl",
            "Y3RzLyovbG9jYXRpb25zLyovaW5zdGFuY2VzLyovZGF0YUFjY2Vzc0xhYmVs",
            "cy8qfToRZGF0YV9hY2Nlc3NfbGFiZWwSuQEKFURlbGV0ZURhdGFBY2Nlc3NM",
            "YWJlbBI3Lmdvb2dsZS5jbG91ZC5jaHJvbmljbGUudjEuRGVsZXRlRGF0YUFj",
            "Y2Vzc0xhYmVsUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJP2kEE",
            "bmFtZYLT5JMCQipAL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyov",
            "aW5zdGFuY2VzLyovZGF0YUFjY2Vzc0xhYmVscy8qfRKKAgoVQ3JlYXRlRGF0",
            "YUFjY2Vzc1Njb3BlEjcuZ29vZ2xlLmNsb3VkLmNocm9uaWNsZS52MS5DcmVh",
            "dGVEYXRhQWNjZXNzU2NvcGVSZXF1ZXN0GiouZ29vZ2xlLmNsb3VkLmNocm9u",
            "aWNsZS52MS5EYXRhQWNjZXNzU2NvcGUiiwHaQS1wYXJlbnQsZGF0YV9hY2Nl",
            "c3Nfc2NvcGUsZGF0YV9hY2Nlc3Nfc2NvcGVfaWSC0+STAlUiQC92MS97cGFy",
            "ZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovaW5zdGFuY2VzLyp9L2RhdGFB",
            "Y2Nlc3NTY29wZXM6EWRhdGFfYWNjZXNzX3Njb3BlEscBChJHZXREYXRhQWNj",
            "ZXNzU2NvcGUSNC5nb29nbGUuY2xvdWQuY2hyb25pY2xlLnYxLkdldERhdGFB",
            "Y2Nlc3NTY29wZVJlcXVlc3QaKi5nb29nbGUuY2xvdWQuY2hyb25pY2xlLnYx",
            "LkRhdGFBY2Nlc3NTY29wZSJP2kEEbmFtZYLT5JMCQhJAL3YxL3tuYW1lPXBy",
            "b2plY3RzLyovbG9jYXRpb25zLyovaW5zdGFuY2VzLyovZGF0YUFjY2Vzc1Nj",
            "b3Blcy8qfRLaAQoUTGlzdERhdGFBY2Nlc3NTY29wZXMSNi5nb29nbGUuY2xv",
            "dWQuY2hyb25pY2xlLnYxLkxpc3REYXRhQWNjZXNzU2NvcGVzUmVxdWVzdBo3",
            "Lmdvb2dsZS5jbG91ZC5jaHJvbmljbGUudjEuTGlzdERhdGFBY2Nlc3NTY29w",
            "ZXNSZXNwb25zZSJR2kEGcGFyZW50gtPkkwJCEkAvdjEve3BhcmVudD1wcm9q",
            "ZWN0cy8qL2xvY2F0aW9ucy8qL2luc3RhbmNlcy8qfS9kYXRhQWNjZXNzU2Nv",
            "cGVzEowCChVVcGRhdGVEYXRhQWNjZXNzU2NvcGUSNy5nb29nbGUuY2xvdWQu",
            "Y2hyb25pY2xlLnYxLlVwZGF0ZURhdGFBY2Nlc3NTY29wZVJlcXVlc3QaKi5n",
            "b29nbGUuY2xvdWQuY2hyb25pY2xlLnYxLkRhdGFBY2Nlc3NTY29wZSKNAdpB",
            "HWRhdGFfYWNjZXNzX3Njb3BlLHVwZGF0ZV9tYXNrgtPkkwJnMlIvdjEve2Rh",
            "dGFfYWNjZXNzX3Njb3BlLm5hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9p",
            "bnN0YW5jZXMvKi9kYXRhQWNjZXNzU2NvcGVzLyp9OhFkYXRhX2FjY2Vzc19z",
            "Y29wZRK5AQoVRGVsZXRlRGF0YUFjY2Vzc1Njb3BlEjcuZ29vZ2xlLmNsb3Vk",
            "LmNocm9uaWNsZS52MS5EZWxldGVEYXRhQWNjZXNzU2NvcGVSZXF1ZXN0GhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5Ik/aQQRuYW1lgtPkkwJCKkAvdjEve25h",
            "bWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9pbnN0YW5jZXMvKi9kYXRhQWNj",
            "ZXNzU2NvcGVzLyp9GkzKQRhjaHJvbmljbGUuZ29vZ2xlYXBpcy5jb23SQS5o",
            "dHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2Nsb3VkLXBsYXRmb3Jt",
            "QsIBChlnb29nbGUuY2xvdWQuY2hyb25pY2xlLnYxQg9EYXRhQWNjZXNzUHJv",
            "dG9QAVo7Y2xvdWQuZ29vZ2xlLmNvbS9nby9jaHJvbmljbGUvYXBpdjEvY2hy",
            "b25pY2xlcGI7Y2hyb25pY2xlcGKqAhlHb29nbGUuQ2xvdWQuQ2hyb25pY2xl",
            "LlYxygIZR29vZ2xlXENsb3VkXENocm9uaWNsZVxWMeoCHEdvb2dsZTo6Q2xv",
            "dWQ6OkNocm9uaWNsZTo6VjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.CreateDataAccessLabelRequest), global::Google.Cloud.Chronicle.V1.CreateDataAccessLabelRequest.Parser, new[]{ "Parent", "DataAccessLabel", "DataAccessLabelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.GetDataAccessLabelRequest), global::Google.Cloud.Chronicle.V1.GetDataAccessLabelRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.ListDataAccessLabelsRequest), global::Google.Cloud.Chronicle.V1.ListDataAccessLabelsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.ListDataAccessLabelsResponse), global::Google.Cloud.Chronicle.V1.ListDataAccessLabelsResponse.Parser, new[]{ "DataAccessLabels", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.UpdateDataAccessLabelRequest), global::Google.Cloud.Chronicle.V1.UpdateDataAccessLabelRequest.Parser, new[]{ "DataAccessLabel", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.DeleteDataAccessLabelRequest), global::Google.Cloud.Chronicle.V1.DeleteDataAccessLabelRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.CreateDataAccessScopeRequest), global::Google.Cloud.Chronicle.V1.CreateDataAccessScopeRequest.Parser, new[]{ "Parent", "DataAccessScope", "DataAccessScopeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.GetDataAccessScopeRequest), global::Google.Cloud.Chronicle.V1.GetDataAccessScopeRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.ListDataAccessScopesRequest), global::Google.Cloud.Chronicle.V1.ListDataAccessScopesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.ListDataAccessScopesResponse), global::Google.Cloud.Chronicle.V1.ListDataAccessScopesResponse.Parser, new[]{ "DataAccessScopes", "GlobalDataAccessScopeGranted", "NextPageToken" }, new[]{ "GlobalDataAccessScopeGranted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.UpdateDataAccessScopeRequest), global::Google.Cloud.Chronicle.V1.UpdateDataAccessScopeRequest.Parser, new[]{ "DataAccessScope", "UpdateMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.DeleteDataAccessScopeRequest), global::Google.Cloud.Chronicle.V1.DeleteDataAccessScopeRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.DataAccessLabel), global::Google.Cloud.Chronicle.V1.DataAccessLabel.Parser, new[]{ "UdmQuery", "Name", "DisplayName", "CreateTime", "UpdateTime", "Author", "LastEditor", "Description" }, new[]{ "Definition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.DataAccessScope), global::Google.Cloud.Chronicle.V1.DataAccessScope.Parser, new[]{ "Name", "AllowedDataAccessLabels", "DeniedDataAccessLabels", "DisplayName", "CreateTime", "UpdateTime", "Author", "LastEditor", "Description", "AllowAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.DataAccessLabelReference), global::Google.Cloud.Chronicle.V1.DataAccessLabelReference.Parser, new[]{ "DataAccessLabel", "LogType", "AssetNamespace", "IngestionLabel", "DisplayName" }, new[]{ "Label" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Chronicle.V1.IngestionLabel), global::Google.Cloud.Chronicle.V1.IngestionLabel.Parser, new[]{ "IngestionLabelKey", "IngestionLabelValue" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for CreateDataAccessLabel.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDataAccessLabelRequest : pb::IMessage<CreateDataAccessLabelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDataAccessLabelRequest> _parser = new pb::MessageParser<CreateDataAccessLabelRequest>(() => new CreateDataAccessLabelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDataAccessLabelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDataAccessLabelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDataAccessLabelRequest(CreateDataAccessLabelRequest other) : this() {
      parent_ = other.parent_;
      dataAccessLabel_ = other.dataAccessLabel_ != null ? other.dataAccessLabel_.Clone() : null;
      dataAccessLabelId_ = other.dataAccessLabelId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDataAccessLabelRequest Clone() {
      return new CreateDataAccessLabelRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The parent resource where this Data Access Label will be created.
    /// Format: `projects/{project}/locations/{location}/instances/{instance}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_access_label" field.</summary>
    public const int DataAccessLabelFieldNumber = 2;
    private global::Google.Cloud.Chronicle.V1.DataAccessLabel dataAccessLabel_;
    /// <summary>
    /// Required. Data access label to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Chronicle.V1.DataAccessLabel DataAccessLabel {
      get { return dataAccessLabel_; }
      set {
        dataAccessLabel_ = value;
      }
    }

    /// <summary>Field number for the "data_access_label_id" field.</summary>
    public const int DataAccessLabelIdFieldNumber = 3;
    private string dataAccessLabelId_ = "";
    /// <summary>
    /// Required. The ID to use for the data access label, which will become the
    /// label's display name and the final component of the label's resource name.
    /// The maximum number of characters should be 63. Regex pattern is as per AIP:
    /// https://google.aip.dev/122#resource-id-segments
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataAccessLabelId {
      get { return dataAccessLabelId_; }
      set {
        dataAccessLabelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDataAccessLabelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDataAccessLabelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(DataAccessLabel, other.DataAccessLabel)) return false;
      if (DataAccessLabelId != other.DataAccessLabelId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (dataAccessLabel_ != null) hash ^= DataAccessLabel.GetHashCode();
      if (DataAccessLabelId.Length != 0) hash ^= DataAccessLabelId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (dataAccessLabel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataAccessLabel);
      }
      if (DataAccessLabelId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DataAccessLabelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (dataAccessLabel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataAccessLabel);
      }
      if (DataAccessLabelId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DataAccessLabelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (dataAccessLabel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataAccessLabel);
      }
      if (DataAccessLabelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataAccessLabelId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDataAccessLabelRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.dataAccessLabel_ != null) {
        if (dataAccessLabel_ == null) {
          DataAccessLabel = new global::Google.Cloud.Chronicle.V1.DataAccessLabel();
        }
        DataAccessLabel.MergeFrom(other.DataAccessLabel);
      }
      if (other.DataAccessLabelId.Length != 0) {
        DataAccessLabelId = other.DataAccessLabelId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (dataAccessLabel_ == null) {
              DataAccessLabel = new global::Google.Cloud.Chronicle.V1.DataAccessLabel();
            }
            input.ReadMessage(DataAccessLabel);
            break;
          }
          case 26: {
            DataAccessLabelId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (dataAccessLabel_ == null) {
              DataAccessLabel = new global::Google.Cloud.Chronicle.V1.DataAccessLabel();
            }
            input.ReadMessage(DataAccessLabel);
            break;
          }
          case 26: {
            DataAccessLabelId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message to retrieve a data access label.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetDataAccessLabelRequest : pb::IMessage<GetDataAccessLabelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDataAccessLabelRequest> _parser = new pb::MessageParser<GetDataAccessLabelRequest>(() => new GetDataAccessLabelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetDataAccessLabelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDataAccessLabelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDataAccessLabelRequest(GetDataAccessLabelRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDataAccessLabelRequest Clone() {
      return new GetDataAccessLabelRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The ID of the data access label to retrieve.
    /// Format:
    /// `projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetDataAccessLabelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetDataAccessLabelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetDataAccessLabelRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for ListDataAccessLabels.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListDataAccessLabelsRequest : pb::IMessage<ListDataAccessLabelsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDataAccessLabelsRequest> _parser = new pb::MessageParser<ListDataAccessLabelsRequest>(() => new ListDataAccessLabelsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListDataAccessLabelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessLabelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessLabelsRequest(ListDataAccessLabelsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessLabelsRequest Clone() {
      return new ListDataAccessLabelsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The parent resource where this data access label will be created.
    /// Format: `projects/{project}/locations/{location}/instances/{instance}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of data access labels to return. The service may return
    /// fewer than this value. If unspecified, at most 100 data access labels will
    /// be returned. The maximum value is 1000; values above 1000 will be coerced
    /// to 1000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A page token, received from a previous `ListDataAccessLabelsRequest` call.
    /// Provide this to retrieve the subsequent page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Optional. A filter which should follow the guidelines of AIP-160.
    /// Supports filtering on all fieds of DataAccessLabel and all operations as
    /// mentioned in https://google.aip.dev/160.
    /// example filter: "create_time greater than \"2023-04-21T11:30:00-04:00\" OR
    /// display_name:\"-21-1\"".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListDataAccessLabelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListDataAccessLabelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListDataAccessLabelsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for ListDataAccessLabels.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListDataAccessLabelsResponse : pb::IMessage<ListDataAccessLabelsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDataAccessLabelsResponse> _parser = new pb::MessageParser<ListDataAccessLabelsResponse>(() => new ListDataAccessLabelsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListDataAccessLabelsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessLabelsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessLabelsResponse(ListDataAccessLabelsResponse other) : this() {
      dataAccessLabels_ = other.dataAccessLabels_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessLabelsResponse Clone() {
      return new ListDataAccessLabelsResponse(this);
    }

    /// <summary>Field number for the "data_access_labels" field.</summary>
    public const int DataAccessLabelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Chronicle.V1.DataAccessLabel> _repeated_dataAccessLabels_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Chronicle.V1.DataAccessLabel.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabel> dataAccessLabels_ = new pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabel>();
    /// <summary>
    /// List of data access labels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabel> DataAccessLabels {
      get { return dataAccessLabels_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token, which can be sent as `page_token` to retrieve the next page.
    /// If this field is omitted, there are no subsequent pages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListDataAccessLabelsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListDataAccessLabelsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dataAccessLabels_.Equals(other.dataAccessLabels_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dataAccessLabels_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dataAccessLabels_.WriteTo(output, _repeated_dataAccessLabels_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dataAccessLabels_.WriteTo(ref output, _repeated_dataAccessLabels_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += dataAccessLabels_.CalculateSize(_repeated_dataAccessLabels_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListDataAccessLabelsResponse other) {
      if (other == null) {
        return;
      }
      dataAccessLabels_.Add(other.dataAccessLabels_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dataAccessLabels_.AddEntriesFrom(input, _repeated_dataAccessLabels_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dataAccessLabels_.AddEntriesFrom(ref input, _repeated_dataAccessLabels_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for UpdateDataAccessLabel method.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDataAccessLabelRequest : pb::IMessage<UpdateDataAccessLabelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDataAccessLabelRequest> _parser = new pb::MessageParser<UpdateDataAccessLabelRequest>(() => new UpdateDataAccessLabelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDataAccessLabelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDataAccessLabelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDataAccessLabelRequest(UpdateDataAccessLabelRequest other) : this() {
      dataAccessLabel_ = other.dataAccessLabel_ != null ? other.dataAccessLabel_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDataAccessLabelRequest Clone() {
      return new UpdateDataAccessLabelRequest(this);
    }

    /// <summary>Field number for the "data_access_label" field.</summary>
    public const int DataAccessLabelFieldNumber = 1;
    private global::Google.Cloud.Chronicle.V1.DataAccessLabel dataAccessLabel_;
    /// <summary>
    /// Required. The data access label to update.
    ///
    /// The label's `name` field is used to identify the label to update.
    /// Format:
    /// `projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Chronicle.V1.DataAccessLabel DataAccessLabel {
      get { return dataAccessLabel_; }
      set {
        dataAccessLabel_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// The list of fields to update. If not included, all fields with a non-empty
    /// value will be overwritten. Currently, only the description and definition
    /// fields are supported for update; an update call that attempts to update any
    /// other fields will return INVALID_ARGUMENT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDataAccessLabelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDataAccessLabelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DataAccessLabel, other.DataAccessLabel)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dataAccessLabel_ != null) hash ^= DataAccessLabel.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataAccessLabel_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DataAccessLabel);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataAccessLabel_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DataAccessLabel);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dataAccessLabel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataAccessLabel);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDataAccessLabelRequest other) {
      if (other == null) {
        return;
      }
      if (other.dataAccessLabel_ != null) {
        if (dataAccessLabel_ == null) {
          DataAccessLabel = new global::Google.Cloud.Chronicle.V1.DataAccessLabel();
        }
        DataAccessLabel.MergeFrom(other.DataAccessLabel);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dataAccessLabel_ == null) {
              DataAccessLabel = new global::Google.Cloud.Chronicle.V1.DataAccessLabel();
            }
            input.ReadMessage(DataAccessLabel);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dataAccessLabel_ == null) {
              DataAccessLabel = new global::Google.Cloud.Chronicle.V1.DataAccessLabel();
            }
            input.ReadMessage(DataAccessLabel);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message to delete a data access label.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDataAccessLabelRequest : pb::IMessage<DeleteDataAccessLabelRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDataAccessLabelRequest> _parser = new pb::MessageParser<DeleteDataAccessLabelRequest>(() => new DeleteDataAccessLabelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDataAccessLabelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDataAccessLabelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDataAccessLabelRequest(DeleteDataAccessLabelRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDataAccessLabelRequest Clone() {
      return new DeleteDataAccessLabelRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The ID of the data access label to delete.
    /// Format:
    /// `projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDataAccessLabelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDataAccessLabelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDataAccessLabelRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for CreateDataAccessScope.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CreateDataAccessScopeRequest : pb::IMessage<CreateDataAccessScopeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDataAccessScopeRequest> _parser = new pb::MessageParser<CreateDataAccessScopeRequest>(() => new CreateDataAccessScopeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateDataAccessScopeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDataAccessScopeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDataAccessScopeRequest(CreateDataAccessScopeRequest other) : this() {
      parent_ = other.parent_;
      dataAccessScope_ = other.dataAccessScope_ != null ? other.dataAccessScope_.Clone() : null;
      dataAccessScopeId_ = other.dataAccessScopeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateDataAccessScopeRequest Clone() {
      return new CreateDataAccessScopeRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The parent resource where this Data Access Scope will be created.
    /// Format: `projects/{project}/locations/{location}/instances/{instance}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_access_scope" field.</summary>
    public const int DataAccessScopeFieldNumber = 2;
    private global::Google.Cloud.Chronicle.V1.DataAccessScope dataAccessScope_;
    /// <summary>
    /// Required. Data access scope to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Chronicle.V1.DataAccessScope DataAccessScope {
      get { return dataAccessScope_; }
      set {
        dataAccessScope_ = value;
      }
    }

    /// <summary>Field number for the "data_access_scope_id" field.</summary>
    public const int DataAccessScopeIdFieldNumber = 3;
    private string dataAccessScopeId_ = "";
    /// <summary>
    /// Required. The user provided scope id which will become the last part of the
    /// name of the scope resource. Needs to be compliant with
    /// https://google.aip.dev/122
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataAccessScopeId {
      get { return dataAccessScopeId_; }
      set {
        dataAccessScopeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateDataAccessScopeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateDataAccessScopeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (!object.Equals(DataAccessScope, other.DataAccessScope)) return false;
      if (DataAccessScopeId != other.DataAccessScopeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (dataAccessScope_ != null) hash ^= DataAccessScope.GetHashCode();
      if (DataAccessScopeId.Length != 0) hash ^= DataAccessScopeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (dataAccessScope_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataAccessScope);
      }
      if (DataAccessScopeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DataAccessScopeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (dataAccessScope_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataAccessScope);
      }
      if (DataAccessScopeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DataAccessScopeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (dataAccessScope_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataAccessScope);
      }
      if (DataAccessScopeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataAccessScopeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateDataAccessScopeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.dataAccessScope_ != null) {
        if (dataAccessScope_ == null) {
          DataAccessScope = new global::Google.Cloud.Chronicle.V1.DataAccessScope();
        }
        DataAccessScope.MergeFrom(other.DataAccessScope);
      }
      if (other.DataAccessScopeId.Length != 0) {
        DataAccessScopeId = other.DataAccessScopeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (dataAccessScope_ == null) {
              DataAccessScope = new global::Google.Cloud.Chronicle.V1.DataAccessScope();
            }
            input.ReadMessage(DataAccessScope);
            break;
          }
          case 26: {
            DataAccessScopeId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            if (dataAccessScope_ == null) {
              DataAccessScope = new global::Google.Cloud.Chronicle.V1.DataAccessScope();
            }
            input.ReadMessage(DataAccessScope);
            break;
          }
          case 26: {
            DataAccessScopeId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message to retrieve a data access scope.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetDataAccessScopeRequest : pb::IMessage<GetDataAccessScopeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDataAccessScopeRequest> _parser = new pb::MessageParser<GetDataAccessScopeRequest>(() => new GetDataAccessScopeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetDataAccessScopeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDataAccessScopeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDataAccessScopeRequest(GetDataAccessScopeRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetDataAccessScopeRequest Clone() {
      return new GetDataAccessScopeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The ID of the data access scope to retrieve.
    /// Format:
    /// `projects/{project}/locations/{location}/instances/{instance}/dataAccessScopes/{data_access_scope}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetDataAccessScopeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetDataAccessScopeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetDataAccessScopeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for ListDataAccessScopes.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListDataAccessScopesRequest : pb::IMessage<ListDataAccessScopesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDataAccessScopesRequest> _parser = new pb::MessageParser<ListDataAccessScopesRequest>(() => new ListDataAccessScopesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListDataAccessScopesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessScopesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessScopesRequest(ListDataAccessScopesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessScopesRequest Clone() {
      return new ListDataAccessScopesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The parent resource where this data access scope will be created.
    /// Format: `projects/{project}/locations/{location}/instances/{instance}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of data access scopes to return. The service may return
    /// fewer than this value. If unspecified, at most 100 data access scopes will
    /// be returned. The maximum value is 1000; values above 1000 will be coerced
    /// to 1000.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// A page token, received from a previous `ListDataAccessScopesRequest` call.
    /// Provide this to retrieve the subsequent page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// Optional. A filter which should follow the guidelines of AIP-160.
    /// Supports filtering on all fieds of DataAccessScope and all operations as
    /// mentioned in https://google.aip.dev/160.
    /// example filter: "create_time greater than \"2023-04-21T11:30:00-04:00\" OR
    /// display_name:\"-21-1\"".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListDataAccessScopesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListDataAccessScopesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListDataAccessScopesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response message for ListDataAccessScopes.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ListDataAccessScopesResponse : pb::IMessage<ListDataAccessScopesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDataAccessScopesResponse> _parser = new pb::MessageParser<ListDataAccessScopesResponse>(() => new ListDataAccessScopesResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListDataAccessScopesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessScopesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessScopesResponse(ListDataAccessScopesResponse other) : this() {
      _hasBits0 = other._hasBits0;
      dataAccessScopes_ = other.dataAccessScopes_.Clone();
      globalDataAccessScopeGranted_ = other.globalDataAccessScopeGranted_;
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListDataAccessScopesResponse Clone() {
      return new ListDataAccessScopesResponse(this);
    }

    /// <summary>Field number for the "data_access_scopes" field.</summary>
    public const int DataAccessScopesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Chronicle.V1.DataAccessScope> _repeated_dataAccessScopes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Chronicle.V1.DataAccessScope.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessScope> dataAccessScopes_ = new pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessScope>();
    /// <summary>
    /// List of data access scopes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessScope> DataAccessScopes {
      get { return dataAccessScopes_; }
    }

    /// <summary>Field number for the "global_data_access_scope_granted" field.</summary>
    public const int GlobalDataAccessScopeGrantedFieldNumber = 3;
    private readonly static bool GlobalDataAccessScopeGrantedDefaultValue = false;

    private bool globalDataAccessScopeGranted_;
    /// <summary>
    /// Whether or not global scope is granted to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GlobalDataAccessScopeGranted {
      get { if ((_hasBits0 & 1) != 0) { return globalDataAccessScopeGranted_; } else { return GlobalDataAccessScopeGrantedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        globalDataAccessScopeGranted_ = value;
      }
    }
    /// <summary>Gets whether the "global_data_access_scope_granted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGlobalDataAccessScopeGranted {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "global_data_access_scope_granted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGlobalDataAccessScopeGranted() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A token, which can be sent as `page_token` to retrieve the next page.
    /// If this field is omitted, there are no subsequent pages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListDataAccessScopesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListDataAccessScopesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dataAccessScopes_.Equals(other.dataAccessScopes_)) return false;
      if (GlobalDataAccessScopeGranted != other.GlobalDataAccessScopeGranted) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dataAccessScopes_.GetHashCode();
      if (HasGlobalDataAccessScopeGranted) hash ^= GlobalDataAccessScopeGranted.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dataAccessScopes_.WriteTo(output, _repeated_dataAccessScopes_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (HasGlobalDataAccessScopeGranted) {
        output.WriteRawTag(24);
        output.WriteBool(GlobalDataAccessScopeGranted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dataAccessScopes_.WriteTo(ref output, _repeated_dataAccessScopes_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (HasGlobalDataAccessScopeGranted) {
        output.WriteRawTag(24);
        output.WriteBool(GlobalDataAccessScopeGranted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += dataAccessScopes_.CalculateSize(_repeated_dataAccessScopes_codec);
      if (HasGlobalDataAccessScopeGranted) {
        size += 1 + 1;
      }
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListDataAccessScopesResponse other) {
      if (other == null) {
        return;
      }
      dataAccessScopes_.Add(other.dataAccessScopes_);
      if (other.HasGlobalDataAccessScopeGranted) {
        GlobalDataAccessScopeGranted = other.GlobalDataAccessScopeGranted;
      }
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dataAccessScopes_.AddEntriesFrom(input, _repeated_dataAccessScopes_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 24: {
            GlobalDataAccessScopeGranted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dataAccessScopes_.AddEntriesFrom(ref input, _repeated_dataAccessScopes_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
          case 24: {
            GlobalDataAccessScopeGranted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message for UpdateDataAccessScope method.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UpdateDataAccessScopeRequest : pb::IMessage<UpdateDataAccessScopeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDataAccessScopeRequest> _parser = new pb::MessageParser<UpdateDataAccessScopeRequest>(() => new UpdateDataAccessScopeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateDataAccessScopeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDataAccessScopeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDataAccessScopeRequest(UpdateDataAccessScopeRequest other) : this() {
      dataAccessScope_ = other.dataAccessScope_ != null ? other.dataAccessScope_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateDataAccessScopeRequest Clone() {
      return new UpdateDataAccessScopeRequest(this);
    }

    /// <summary>Field number for the "data_access_scope" field.</summary>
    public const int DataAccessScopeFieldNumber = 1;
    private global::Google.Cloud.Chronicle.V1.DataAccessScope dataAccessScope_;
    /// <summary>
    /// Required. The data access scope to update.
    ///
    /// The scope's `name` field is used to identify the scope to update.
    /// Format:
    /// `projects/{project}/locations/{location}/instances/{instance}/dataAccessScopes/{data_access_scope}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Chronicle.V1.DataAccessScope DataAccessScope {
      get { return dataAccessScope_; }
      set {
        dataAccessScope_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// The list of fields to update. If not included, all fields with a non-empty
    /// value will be overwritten. Currently, only the description, the allowed
    /// and denied labels list fields are supported for update;
    /// an update call that attempts to update any
    /// other fields will return INVALID_ARGUMENT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateDataAccessScopeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateDataAccessScopeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DataAccessScope, other.DataAccessScope)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dataAccessScope_ != null) hash ^= DataAccessScope.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataAccessScope_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DataAccessScope);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataAccessScope_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DataAccessScope);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dataAccessScope_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataAccessScope);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateDataAccessScopeRequest other) {
      if (other == null) {
        return;
      }
      if (other.dataAccessScope_ != null) {
        if (dataAccessScope_ == null) {
          DataAccessScope = new global::Google.Cloud.Chronicle.V1.DataAccessScope();
        }
        DataAccessScope.MergeFrom(other.DataAccessScope);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dataAccessScope_ == null) {
              DataAccessScope = new global::Google.Cloud.Chronicle.V1.DataAccessScope();
            }
            input.ReadMessage(DataAccessScope);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dataAccessScope_ == null) {
              DataAccessScope = new global::Google.Cloud.Chronicle.V1.DataAccessScope();
            }
            input.ReadMessage(DataAccessScope);
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request message to delete a data access scope.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DeleteDataAccessScopeRequest : pb::IMessage<DeleteDataAccessScopeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteDataAccessScopeRequest> _parser = new pb::MessageParser<DeleteDataAccessScopeRequest>(() => new DeleteDataAccessScopeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteDataAccessScopeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDataAccessScopeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDataAccessScopeRequest(DeleteDataAccessScopeRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteDataAccessScopeRequest Clone() {
      return new DeleteDataAccessScopeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The ID of the data access scope to delete.
    /// Format:
    /// `projects/{project}/locations/{location}/instances/{instance}/dataAccessScopes/{data_access_scope}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteDataAccessScopeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteDataAccessScopeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteDataAccessScopeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A DataAccessLabel is a label on events to define user access to data.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DataAccessLabel : pb::IMessage<DataAccessLabel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataAccessLabel> _parser = new pb::MessageParser<DataAccessLabel>(() => new DataAccessLabel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataAccessLabel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessLabel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessLabel(DataAccessLabel other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      author_ = other.author_;
      lastEditor_ = other.lastEditor_;
      description_ = other.description_;
      switch (other.DefinitionCase) {
        case DefinitionOneofCase.UdmQuery:
          UdmQuery = other.UdmQuery;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessLabel Clone() {
      return new DataAccessLabel(this);
    }

    /// <summary>Field number for the "udm_query" field.</summary>
    public const int UdmQueryFieldNumber = 3;
    /// <summary>
    /// A UDM query over event data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UdmQuery {
      get { return HasUdmQuery ? (string) definition_ : ""; }
      set {
        definition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        definitionCase_ = DefinitionOneofCase.UdmQuery;
      }
    }
    /// <summary>Gets whether the "udm_query" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUdmQuery {
      get { return definitionCase_ == DefinitionOneofCase.UdmQuery; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "udm_query" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUdmQuery() {
      if (HasUdmQuery) {
        ClearDefinition();
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique resource name of the data access label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 8;
    private string displayName_ = "";
    /// <summary>
    /// Output only. The short name displayed for the label as it appears on event
    /// data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time at which the data access label was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time at which the data access label was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 6;
    private string author_ = "";
    /// <summary>
    /// Output only. The user who created the data access label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_editor" field.</summary>
    public const int LastEditorFieldNumber = 7;
    private string lastEditor_ = "";
    /// <summary>
    /// Output only. The user who last updated the data access label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LastEditor {
      get { return lastEditor_; }
      set {
        lastEditor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Optional. A description of the data access label for a human reader.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object definition_;
    /// <summary>Enum of possible cases for the "definition" oneof.</summary>
    public enum DefinitionOneofCase {
      None = 0,
      UdmQuery = 3,
    }
    private DefinitionOneofCase definitionCase_ = DefinitionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefinitionOneofCase DefinitionCase {
      get { return definitionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDefinition() {
      definitionCase_ = DefinitionOneofCase.None;
      definition_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataAccessLabel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataAccessLabel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UdmQuery != other.UdmQuery) return false;
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (Author != other.Author) return false;
      if (LastEditor != other.LastEditor) return false;
      if (Description != other.Description) return false;
      if (DefinitionCase != other.DefinitionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUdmQuery) hash ^= UdmQuery.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      if (LastEditor.Length != 0) hash ^= LastEditor.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= (int) definitionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasUdmQuery) {
        output.WriteRawTag(26);
        output.WriteString(UdmQuery);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTime);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Author);
      }
      if (LastEditor.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LastEditor);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (HasUdmQuery) {
        output.WriteRawTag(26);
        output.WriteString(UdmQuery);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTime);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Author);
      }
      if (LastEditor.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LastEditor);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUdmQuery) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UdmQuery);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      if (LastEditor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastEditor);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataAccessLabel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      if (other.LastEditor.Length != 0) {
        LastEditor = other.LastEditor;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      switch (other.DefinitionCase) {
        case DefinitionOneofCase.UdmQuery:
          UdmQuery = other.UdmQuery;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            UdmQuery = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 50: {
            Author = input.ReadString();
            break;
          }
          case 58: {
            LastEditor = input.ReadString();
            break;
          }
          case 66: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            UdmQuery = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 50: {
            Author = input.ReadString();
            break;
          }
          case 58: {
            LastEditor = input.ReadString();
            break;
          }
          case 66: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A DataAccessScope is a boolean expression of data access labels used
  /// to restrict access to data for users.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DataAccessScope : pb::IMessage<DataAccessScope>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataAccessScope> _parser = new pb::MessageParser<DataAccessScope>(() => new DataAccessScope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataAccessScope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessScope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessScope(DataAccessScope other) : this() {
      name_ = other.name_;
      allowedDataAccessLabels_ = other.allowedDataAccessLabels_.Clone();
      deniedDataAccessLabels_ = other.deniedDataAccessLabels_.Clone();
      displayName_ = other.displayName_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      author_ = other.author_;
      lastEditor_ = other.lastEditor_;
      description_ = other.description_;
      allowAll_ = other.allowAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessScope Clone() {
      return new DataAccessScope(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The unique full name of the data access scope.
    /// The name should comply with https://google.aip.dev/122 standards.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allowed_data_access_labels" field.</summary>
    public const int AllowedDataAccessLabelsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Chronicle.V1.DataAccessLabelReference> _repeated_allowedDataAccessLabels_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Chronicle.V1.DataAccessLabelReference.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabelReference> allowedDataAccessLabels_ = new pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabelReference>();
    /// <summary>
    /// Optional. The allowed labels for the scope.
    /// Either allow_all or allowed_data_access_labels needs to be provided.
    /// When provided, there has to be at least one label allowed for the scope to
    /// be valid.
    /// The logical operator for evaluation of the allowed labels is OR.
    /// E.g.: A customer with scope with allowed labels A and B will be able
    /// to see data with labeled with A or B or (A and B).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabelReference> AllowedDataAccessLabels {
      get { return allowedDataAccessLabels_; }
    }

    /// <summary>Field number for the "denied_data_access_labels" field.</summary>
    public const int DeniedDataAccessLabelsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Chronicle.V1.DataAccessLabelReference> _repeated_deniedDataAccessLabels_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Chronicle.V1.DataAccessLabelReference.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabelReference> deniedDataAccessLabels_ = new pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabelReference>();
    /// <summary>
    /// Optional. The denied labels for the scope.
    /// The logical operator for evaluation of the denied labels is AND.
    /// E.g.: A customer with scope with denied labels A and B won't be able
    /// to see data labeled with A and data labeled with B
    /// and data with labels A and B.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Chronicle.V1.DataAccessLabelReference> DeniedDataAccessLabels {
      get { return deniedDataAccessLabels_; }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    /// <summary>
    /// Output only. The name to be used for display to customers of the data
    /// access scope.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time at which the data access scope was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time at which the data access scope was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 7;
    private string author_ = "";
    /// <summary>
    /// Output only. The user who created the data access scope.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_editor" field.</summary>
    public const int LastEditorFieldNumber = 8;
    private string lastEditor_ = "";
    /// <summary>
    /// Output only. The user who last updated the data access scope.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LastEditor {
      get { return lastEditor_; }
      set {
        lastEditor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 9;
    private string description_ = "";
    /// <summary>
    /// Optional. A description of the data access scope for a human reader.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allow_all" field.</summary>
    public const int AllowAllFieldNumber = 10;
    private bool allowAll_;
    /// <summary>
    /// Optional. Whether or not the scope allows all labels, allow_all and
    /// allowed_data_access_labels are mutually exclusive and one of them must be
    /// present. denied_data_access_labels can still be used along with allow_all.
    /// When combined with denied_data_access_labels, access will be granted to all
    /// data that doesn't have labels mentioned in denied_data_access_labels. E.g.:
    /// A customer with scope with denied labels A and B and allow_all will be able
    /// to see all data except data labeled with A and data labeled with B and data
    /// with labels A and B.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowAll {
      get { return allowAll_; }
      set {
        allowAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataAccessScope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataAccessScope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!allowedDataAccessLabels_.Equals(other.allowedDataAccessLabels_)) return false;
      if(!deniedDataAccessLabels_.Equals(other.deniedDataAccessLabels_)) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (Author != other.Author) return false;
      if (LastEditor != other.LastEditor) return false;
      if (Description != other.Description) return false;
      if (AllowAll != other.AllowAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= allowedDataAccessLabels_.GetHashCode();
      hash ^= deniedDataAccessLabels_.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      if (LastEditor.Length != 0) hash ^= LastEditor.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (AllowAll != false) hash ^= AllowAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      allowedDataAccessLabels_.WriteTo(output, _repeated_allowedDataAccessLabels_codec);
      deniedDataAccessLabels_.WriteTo(output, _repeated_deniedDataAccessLabels_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Author);
      }
      if (LastEditor.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LastEditor);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Description);
      }
      if (AllowAll != false) {
        output.WriteRawTag(80);
        output.WriteBool(AllowAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      allowedDataAccessLabels_.WriteTo(ref output, _repeated_allowedDataAccessLabels_codec);
      deniedDataAccessLabels_.WriteTo(ref output, _repeated_deniedDataAccessLabels_codec);
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(UpdateTime);
      }
      if (Author.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Author);
      }
      if (LastEditor.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LastEditor);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Description);
      }
      if (AllowAll != false) {
        output.WriteRawTag(80);
        output.WriteBool(AllowAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += allowedDataAccessLabels_.CalculateSize(_repeated_allowedDataAccessLabels_codec);
      size += deniedDataAccessLabels_.CalculateSize(_repeated_deniedDataAccessLabels_codec);
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      if (LastEditor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastEditor);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (AllowAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataAccessScope other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      allowedDataAccessLabels_.Add(other.allowedDataAccessLabels_);
      deniedDataAccessLabels_.Add(other.deniedDataAccessLabels_);
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      if (other.LastEditor.Length != 0) {
        LastEditor = other.LastEditor;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.AllowAll != false) {
        AllowAll = other.AllowAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            allowedDataAccessLabels_.AddEntriesFrom(input, _repeated_allowedDataAccessLabels_codec);
            break;
          }
          case 26: {
            deniedDataAccessLabels_.AddEntriesFrom(input, _repeated_deniedDataAccessLabels_codec);
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            Author = input.ReadString();
            break;
          }
          case 66: {
            LastEditor = input.ReadString();
            break;
          }
          case 74: {
            Description = input.ReadString();
            break;
          }
          case 80: {
            AllowAll = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            allowedDataAccessLabels_.AddEntriesFrom(ref input, _repeated_allowedDataAccessLabels_codec);
            break;
          }
          case 26: {
            deniedDataAccessLabels_.AddEntriesFrom(ref input, _repeated_deniedDataAccessLabels_codec);
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 50: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 58: {
            Author = input.ReadString();
            break;
          }
          case 66: {
            LastEditor = input.ReadString();
            break;
          }
          case 74: {
            Description = input.ReadString();
            break;
          }
          case 80: {
            AllowAll = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reference object to a data access label.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class DataAccessLabelReference : pb::IMessage<DataAccessLabelReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DataAccessLabelReference> _parser = new pb::MessageParser<DataAccessLabelReference>(() => new DataAccessLabelReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DataAccessLabelReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessLabelReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessLabelReference(DataAccessLabelReference other) : this() {
      displayName_ = other.displayName_;
      switch (other.LabelCase) {
        case LabelOneofCase.DataAccessLabel:
          DataAccessLabel = other.DataAccessLabel;
          break;
        case LabelOneofCase.LogType:
          LogType = other.LogType;
          break;
        case LabelOneofCase.AssetNamespace:
          AssetNamespace = other.AssetNamespace;
          break;
        case LabelOneofCase.IngestionLabel:
          IngestionLabel = other.IngestionLabel.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataAccessLabelReference Clone() {
      return new DataAccessLabelReference(this);
    }

    /// <summary>Field number for the "data_access_label" field.</summary>
    public const int DataAccessLabelFieldNumber = 1;
    /// <summary>
    /// The name of the data access label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataAccessLabel {
      get { return HasDataAccessLabel ? (string) label_ : ""; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        labelCase_ = LabelOneofCase.DataAccessLabel;
      }
    }
    /// <summary>Gets whether the "data_access_label" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDataAccessLabel {
      get { return labelCase_ == LabelOneofCase.DataAccessLabel; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "data_access_label" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDataAccessLabel() {
      if (HasDataAccessLabel) {
        ClearLabel();
      }
    }

    /// <summary>Field number for the "log_type" field.</summary>
    public const int LogTypeFieldNumber = 2;
    /// <summary>
    /// The name of the log type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogType {
      get { return HasLogType ? (string) label_ : ""; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        labelCase_ = LabelOneofCase.LogType;
      }
    }
    /// <summary>Gets whether the "log_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLogType {
      get { return labelCase_ == LabelOneofCase.LogType; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "log_type" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLogType() {
      if (HasLogType) {
        ClearLabel();
      }
    }

    /// <summary>Field number for the "asset_namespace" field.</summary>
    public const int AssetNamespaceFieldNumber = 3;
    /// <summary>
    /// The asset namespace configured in the forwarder
    /// of the customer's events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AssetNamespace {
      get { return HasAssetNamespace ? (string) label_ : ""; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        labelCase_ = LabelOneofCase.AssetNamespace;
      }
    }
    /// <summary>Gets whether the "asset_namespace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAssetNamespace {
      get { return labelCase_ == LabelOneofCase.AssetNamespace; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "asset_namespace" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAssetNamespace() {
      if (HasAssetNamespace) {
        ClearLabel();
      }
    }

    /// <summary>Field number for the "ingestion_label" field.</summary>
    public const int IngestionLabelFieldNumber = 4;
    /// <summary>
    /// The ingestion label configured in the forwarder of the customer's events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Chronicle.V1.IngestionLabel IngestionLabel {
      get { return labelCase_ == LabelOneofCase.IngestionLabel ? (global::Google.Cloud.Chronicle.V1.IngestionLabel) label_ : null; }
      set {
        label_ = value;
        labelCase_ = value == null ? LabelOneofCase.None : LabelOneofCase.IngestionLabel;
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 5;
    private string displayName_ = "";
    /// <summary>
    /// Output only. The display name of the label.
    /// Data access label and log types's name
    /// will match the display name of the resource.
    /// The asset namespace will match the namespace itself.
    /// The ingestion key value pair will match the key of the tuple.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object label_;
    /// <summary>Enum of possible cases for the "label" oneof.</summary>
    public enum LabelOneofCase {
      None = 0,
      DataAccessLabel = 1,
      LogType = 2,
      AssetNamespace = 3,
      IngestionLabel = 4,
    }
    private LabelOneofCase labelCase_ = LabelOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LabelOneofCase LabelCase {
      get { return labelCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLabel() {
      labelCase_ = LabelOneofCase.None;
      label_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DataAccessLabelReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DataAccessLabelReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataAccessLabel != other.DataAccessLabel) return false;
      if (LogType != other.LogType) return false;
      if (AssetNamespace != other.AssetNamespace) return false;
      if (!object.Equals(IngestionLabel, other.IngestionLabel)) return false;
      if (DisplayName != other.DisplayName) return false;
      if (LabelCase != other.LabelCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDataAccessLabel) hash ^= DataAccessLabel.GetHashCode();
      if (HasLogType) hash ^= LogType.GetHashCode();
      if (HasAssetNamespace) hash ^= AssetNamespace.GetHashCode();
      if (labelCase_ == LabelOneofCase.IngestionLabel) hash ^= IngestionLabel.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      hash ^= (int) labelCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDataAccessLabel) {
        output.WriteRawTag(10);
        output.WriteString(DataAccessLabel);
      }
      if (HasLogType) {
        output.WriteRawTag(18);
        output.WriteString(LogType);
      }
      if (HasAssetNamespace) {
        output.WriteRawTag(26);
        output.WriteString(AssetNamespace);
      }
      if (labelCase_ == LabelOneofCase.IngestionLabel) {
        output.WriteRawTag(34);
        output.WriteMessage(IngestionLabel);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDataAccessLabel) {
        output.WriteRawTag(10);
        output.WriteString(DataAccessLabel);
      }
      if (HasLogType) {
        output.WriteRawTag(18);
        output.WriteString(LogType);
      }
      if (HasAssetNamespace) {
        output.WriteRawTag(26);
        output.WriteString(AssetNamespace);
      }
      if (labelCase_ == LabelOneofCase.IngestionLabel) {
        output.WriteRawTag(34);
        output.WriteMessage(IngestionLabel);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasDataAccessLabel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataAccessLabel);
      }
      if (HasLogType) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogType);
      }
      if (HasAssetNamespace) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetNamespace);
      }
      if (labelCase_ == LabelOneofCase.IngestionLabel) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IngestionLabel);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DataAccessLabelReference other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      switch (other.LabelCase) {
        case LabelOneofCase.DataAccessLabel:
          DataAccessLabel = other.DataAccessLabel;
          break;
        case LabelOneofCase.LogType:
          LogType = other.LogType;
          break;
        case LabelOneofCase.AssetNamespace:
          AssetNamespace = other.AssetNamespace;
          break;
        case LabelOneofCase.IngestionLabel:
          if (IngestionLabel == null) {
            IngestionLabel = new global::Google.Cloud.Chronicle.V1.IngestionLabel();
          }
          IngestionLabel.MergeFrom(other.IngestionLabel);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataAccessLabel = input.ReadString();
            break;
          }
          case 18: {
            LogType = input.ReadString();
            break;
          }
          case 26: {
            AssetNamespace = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.Chronicle.V1.IngestionLabel subBuilder = new global::Google.Cloud.Chronicle.V1.IngestionLabel();
            if (labelCase_ == LabelOneofCase.IngestionLabel) {
              subBuilder.MergeFrom(IngestionLabel);
            }
            input.ReadMessage(subBuilder);
            IngestionLabel = subBuilder;
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DataAccessLabel = input.ReadString();
            break;
          }
          case 18: {
            LogType = input.ReadString();
            break;
          }
          case 26: {
            AssetNamespace = input.ReadString();
            break;
          }
          case 34: {
            global::Google.Cloud.Chronicle.V1.IngestionLabel subBuilder = new global::Google.Cloud.Chronicle.V1.IngestionLabel();
            if (labelCase_ == LabelOneofCase.IngestionLabel) {
              subBuilder.MergeFrom(IngestionLabel);
            }
            input.ReadMessage(subBuilder);
            IngestionLabel = subBuilder;
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Representation of an ingestion label type.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class IngestionLabel : pb::IMessage<IngestionLabel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IngestionLabel> _parser = new pb::MessageParser<IngestionLabel>(() => new IngestionLabel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IngestionLabel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Chronicle.V1.DataAccessControlReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngestionLabel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngestionLabel(IngestionLabel other) : this() {
      ingestionLabelKey_ = other.ingestionLabelKey_;
      ingestionLabelValue_ = other.ingestionLabelValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IngestionLabel Clone() {
      return new IngestionLabel(this);
    }

    /// <summary>Field number for the "ingestion_label_key" field.</summary>
    public const int IngestionLabelKeyFieldNumber = 1;
    private string ingestionLabelKey_ = "";
    /// <summary>
    /// Required. The key of the ingestion label. Always required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IngestionLabelKey {
      get { return ingestionLabelKey_; }
      set {
        ingestionLabelKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ingestion_label_value" field.</summary>
    public const int IngestionLabelValueFieldNumber = 2;
    private string ingestionLabelValue_ = "";
    /// <summary>
    /// Optional. The value of the ingestion label. Optional. An object
    /// with no provided value and some key provided would match
    /// against the given key and ANY value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IngestionLabelValue {
      get { return ingestionLabelValue_; }
      set {
        ingestionLabelValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IngestionLabel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IngestionLabel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IngestionLabelKey != other.IngestionLabelKey) return false;
      if (IngestionLabelValue != other.IngestionLabelValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IngestionLabelKey.Length != 0) hash ^= IngestionLabelKey.GetHashCode();
      if (IngestionLabelValue.Length != 0) hash ^= IngestionLabelValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IngestionLabelKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IngestionLabelKey);
      }
      if (IngestionLabelValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IngestionLabelValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IngestionLabelKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IngestionLabelKey);
      }
      if (IngestionLabelValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IngestionLabelValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IngestionLabelKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IngestionLabelKey);
      }
      if (IngestionLabelValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IngestionLabelValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IngestionLabel other) {
      if (other == null) {
        return;
      }
      if (other.IngestionLabelKey.Length != 0) {
        IngestionLabelKey = other.IngestionLabelKey;
      }
      if (other.IngestionLabelValue.Length != 0) {
        IngestionLabelValue = other.IngestionLabelValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IngestionLabelKey = input.ReadString();
            break;
          }
          case 18: {
            IngestionLabelValue = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IngestionLabelKey = input.ReadString();
            break;
          }
          case 18: {
            IngestionLabelValue = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
