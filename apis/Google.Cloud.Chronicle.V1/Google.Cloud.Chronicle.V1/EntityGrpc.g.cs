// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/chronicle/v1/entity.proto
// </auto-generated>
// Original file comments:
// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Chronicle.V1 {
  /// <summary>
  /// EntityService contains apis for finding entities.
  /// </summary>
  public static partial class EntityService
  {
    static readonly string __ServiceName = "google.cloud.chronicle.v1.EntityService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Chronicle.V1.GetWatchlistRequest> __Marshaller_google_cloud_chronicle_v1_GetWatchlistRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Chronicle.V1.GetWatchlistRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Chronicle.V1.Watchlist> __Marshaller_google_cloud_chronicle_v1_Watchlist = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Chronicle.V1.Watchlist.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest> __Marshaller_google_cloud_chronicle_v1_ListWatchlistsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse> __Marshaller_google_cloud_chronicle_v1_ListWatchlistsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest> __Marshaller_google_cloud_chronicle_v1_CreateWatchlistRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest> __Marshaller_google_cloud_chronicle_v1_UpdateWatchlistRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest> __Marshaller_google_cloud_chronicle_v1_DeleteWatchlistRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Chronicle.V1.GetWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist> __Method_GetWatchlist = new grpc::Method<global::Google.Cloud.Chronicle.V1.GetWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetWatchlist",
        __Marshaller_google_cloud_chronicle_v1_GetWatchlistRequest,
        __Marshaller_google_cloud_chronicle_v1_Watchlist);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest, global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse> __Method_ListWatchlists = new grpc::Method<global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest, global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListWatchlists",
        __Marshaller_google_cloud_chronicle_v1_ListWatchlistsRequest,
        __Marshaller_google_cloud_chronicle_v1_ListWatchlistsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist> __Method_CreateWatchlist = new grpc::Method<global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWatchlist",
        __Marshaller_google_cloud_chronicle_v1_CreateWatchlistRequest,
        __Marshaller_google_cloud_chronicle_v1_Watchlist);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist> __Method_UpdateWatchlist = new grpc::Method<global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateWatchlist",
        __Marshaller_google_cloud_chronicle_v1_UpdateWatchlistRequest,
        __Marshaller_google_cloud_chronicle_v1_Watchlist);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteWatchlist = new grpc::Method<global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteWatchlist",
        __Marshaller_google_cloud_chronicle_v1_DeleteWatchlistRequest,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Chronicle.V1.EntityReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EntityService</summary>
    [grpc::BindServiceMethod(typeof(EntityService), "BindService")]
    public abstract partial class EntityServiceBase
    {
      /// <summary>
      /// Gets watchlist details for the given watchlist ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Chronicle.V1.Watchlist> GetWatchlist(global::Google.Cloud.Chronicle.V1.GetWatchlistRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lists all watchlists for the given instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse> ListWatchlists(global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a watchlist for the given instance.
      /// Note that there can be at most 200 watchlists per instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Chronicle.V1.Watchlist> CreateWatchlist(global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Chronicle.V1.Watchlist> UpdateWatchlist(global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteWatchlist(global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EntityService</summary>
    public partial class EntityServiceClient : grpc::ClientBase<EntityServiceClient>
    {
      /// <summary>Creates a new client for EntityService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EntityServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EntityService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public EntityServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EntityServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected EntityServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Gets watchlist details for the given watchlist ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Chronicle.V1.Watchlist GetWatchlist(global::Google.Cloud.Chronicle.V1.GetWatchlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWatchlist(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets watchlist details for the given watchlist ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Chronicle.V1.Watchlist GetWatchlist(global::Google.Cloud.Chronicle.V1.GetWatchlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetWatchlist, null, options, request);
      }
      /// <summary>
      /// Gets watchlist details for the given watchlist ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Chronicle.V1.Watchlist> GetWatchlistAsync(global::Google.Cloud.Chronicle.V1.GetWatchlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetWatchlistAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets watchlist details for the given watchlist ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Chronicle.V1.Watchlist> GetWatchlistAsync(global::Google.Cloud.Chronicle.V1.GetWatchlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetWatchlist, null, options, request);
      }
      /// <summary>
      /// Lists all watchlists for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse ListWatchlists(global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWatchlists(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all watchlists for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse ListWatchlists(global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListWatchlists, null, options, request);
      }
      /// <summary>
      /// Lists all watchlists for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse> ListWatchlistsAsync(global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListWatchlistsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists all watchlists for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse> ListWatchlistsAsync(global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListWatchlists, null, options, request);
      }
      /// <summary>
      /// Creates a watchlist for the given instance.
      /// Note that there can be at most 200 watchlists per instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Chronicle.V1.Watchlist CreateWatchlist(global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWatchlist(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a watchlist for the given instance.
      /// Note that there can be at most 200 watchlists per instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Chronicle.V1.Watchlist CreateWatchlist(global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWatchlist, null, options, request);
      }
      /// <summary>
      /// Creates a watchlist for the given instance.
      /// Note that there can be at most 200 watchlists per instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Chronicle.V1.Watchlist> CreateWatchlistAsync(global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWatchlistAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a watchlist for the given instance.
      /// Note that there can be at most 200 watchlists per instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Chronicle.V1.Watchlist> CreateWatchlistAsync(global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWatchlist, null, options, request);
      }
      /// <summary>
      /// Updates the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Chronicle.V1.Watchlist UpdateWatchlist(global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWatchlist(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Chronicle.V1.Watchlist UpdateWatchlist(global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateWatchlist, null, options, request);
      }
      /// <summary>
      /// Updates the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Chronicle.V1.Watchlist> UpdateWatchlistAsync(global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateWatchlistAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Chronicle.V1.Watchlist> UpdateWatchlistAsync(global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateWatchlist, null, options, request);
      }
      /// <summary>
      /// Deletes the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteWatchlist(global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWatchlist(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteWatchlist(global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteWatchlist, null, options, request);
      }
      /// <summary>
      /// Deletes the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteWatchlistAsync(global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteWatchlistAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the watchlist for the given instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteWatchlistAsync(global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteWatchlist, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override EntityServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EntityServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EntityServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetWatchlist, serviceImpl.GetWatchlist)
          .AddMethod(__Method_ListWatchlists, serviceImpl.ListWatchlists)
          .AddMethod(__Method_CreateWatchlist, serviceImpl.CreateWatchlist)
          .AddMethod(__Method_UpdateWatchlist, serviceImpl.UpdateWatchlist)
          .AddMethod(__Method_DeleteWatchlist, serviceImpl.DeleteWatchlist).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EntityServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetWatchlist, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Chronicle.V1.GetWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist>(serviceImpl.GetWatchlist));
      serviceBinder.AddMethod(__Method_ListWatchlists, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Chronicle.V1.ListWatchlistsRequest, global::Google.Cloud.Chronicle.V1.ListWatchlistsResponse>(serviceImpl.ListWatchlists));
      serviceBinder.AddMethod(__Method_CreateWatchlist, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Chronicle.V1.CreateWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist>(serviceImpl.CreateWatchlist));
      serviceBinder.AddMethod(__Method_UpdateWatchlist, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Chronicle.V1.UpdateWatchlistRequest, global::Google.Cloud.Chronicle.V1.Watchlist>(serviceImpl.UpdateWatchlist));
      serviceBinder.AddMethod(__Method_DeleteWatchlist, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Chronicle.V1.DeleteWatchlistRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteWatchlist));
    }

  }
}
#endregion
