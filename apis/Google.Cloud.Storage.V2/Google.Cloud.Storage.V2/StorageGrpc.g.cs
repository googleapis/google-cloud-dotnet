// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/storage/v2/storage.proto
// </auto-generated>
// Original file comments:
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Google.Cloud.Storage.V2 {
  /// <summary>
  /// ## API Overview and Naming Syntax
  ///
  /// The Cloud Storage gRPC API allows applications to read and write data through
  /// the abstractions of buckets and objects. For a description of these
  /// abstractions please see https://cloud.google.com/storage/docs.
  ///
  /// Resources are named as follows:
  ///   - Projects are referred to as they are defined by the Resource Manager API,
  ///     using strings like `projects/123456` or `projects/my-string-id`.
  ///   - Buckets are named using string names of the form:
  ///     `projects/{project}/buckets/{bucket}`
  ///     For globally unique buckets, `_` may be substituted for the project.
  ///   - Objects are uniquely identified by their name along with the name of the
  ///     bucket they belong to, as separate strings in this API. For example:
  ///
  ///       ReadObjectRequest {
  ///         bucket: 'projects/_/buckets/my-bucket'
  ///         object: 'my-object'
  ///       }
  ///     Note that object names can contain `/` characters, which are treated as
  ///     any other character (no special directory semantics).
  /// </summary>
  public static partial class Storage
  {
    static readonly string __ServiceName = "google.storage.v2.Storage";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.DeleteBucketRequest> __Marshaller_google_storage_v2_DeleteBucketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.DeleteBucketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.GetBucketRequest> __Marshaller_google_storage_v2_GetBucketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.GetBucketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.Bucket> __Marshaller_google_storage_v2_Bucket = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.Bucket.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.CreateBucketRequest> __Marshaller_google_storage_v2_CreateBucketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.CreateBucketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.ListBucketsRequest> __Marshaller_google_storage_v2_ListBucketsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.ListBucketsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.ListBucketsResponse> __Marshaller_google_storage_v2_ListBucketsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.ListBucketsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest> __Marshaller_google_storage_v2_LockBucketRetentionPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.GetIamPolicyRequest> __Marshaller_google_iam_v1_GetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.GetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.Policy> __Marshaller_google_iam_v1_Policy = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.Policy.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.SetIamPolicyRequest> __Marshaller_google_iam_v1_SetIamPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.SetIamPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest> __Marshaller_google_iam_v1_TestIamPermissionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Marshaller_google_iam_v1_TestIamPermissionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.UpdateBucketRequest> __Marshaller_google_storage_v2_UpdateBucketRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.UpdateBucketRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.ComposeObjectRequest> __Marshaller_google_storage_v2_ComposeObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.ComposeObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.Object> __Marshaller_google_storage_v2_Object = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.Object.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.DeleteObjectRequest> __Marshaller_google_storage_v2_DeleteObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.DeleteObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.RestoreObjectRequest> __Marshaller_google_storage_v2_RestoreObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.RestoreObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.CancelResumableWriteRequest> __Marshaller_google_storage_v2_CancelResumableWriteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.CancelResumableWriteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.CancelResumableWriteResponse> __Marshaller_google_storage_v2_CancelResumableWriteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.CancelResumableWriteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.GetObjectRequest> __Marshaller_google_storage_v2_GetObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.GetObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.ReadObjectRequest> __Marshaller_google_storage_v2_ReadObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.ReadObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.ReadObjectResponse> __Marshaller_google_storage_v2_ReadObjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.ReadObjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.BidiReadObjectRequest> __Marshaller_google_storage_v2_BidiReadObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.BidiReadObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.BidiReadObjectResponse> __Marshaller_google_storage_v2_BidiReadObjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.BidiReadObjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.UpdateObjectRequest> __Marshaller_google_storage_v2_UpdateObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.UpdateObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.WriteObjectRequest> __Marshaller_google_storage_v2_WriteObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.WriteObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.WriteObjectResponse> __Marshaller_google_storage_v2_WriteObjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.WriteObjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.BidiWriteObjectRequest> __Marshaller_google_storage_v2_BidiWriteObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.BidiWriteObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.BidiWriteObjectResponse> __Marshaller_google_storage_v2_BidiWriteObjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.BidiWriteObjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.ListObjectsRequest> __Marshaller_google_storage_v2_ListObjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.ListObjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.ListObjectsResponse> __Marshaller_google_storage_v2_ListObjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.ListObjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.RewriteObjectRequest> __Marshaller_google_storage_v2_RewriteObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.RewriteObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.RewriteResponse> __Marshaller_google_storage_v2_RewriteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.RewriteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.StartResumableWriteRequest> __Marshaller_google_storage_v2_StartResumableWriteRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.StartResumableWriteRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.StartResumableWriteResponse> __Marshaller_google_storage_v2_StartResumableWriteResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.StartResumableWriteResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.QueryWriteStatusRequest> __Marshaller_google_storage_v2_QueryWriteStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.QueryWriteStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.QueryWriteStatusResponse> __Marshaller_google_storage_v2_QueryWriteStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.QueryWriteStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Cloud.Storage.V2.MoveObjectRequest> __Marshaller_google_storage_v2_MoveObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Cloud.Storage.V2.MoveObjectRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.DeleteBucketRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteBucket = new grpc::Method<global::Google.Cloud.Storage.V2.DeleteBucketRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteBucket",
        __Marshaller_google_storage_v2_DeleteBucketRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.GetBucketRequest, global::Google.Cloud.Storage.V2.Bucket> __Method_GetBucket = new grpc::Method<global::Google.Cloud.Storage.V2.GetBucketRequest, global::Google.Cloud.Storage.V2.Bucket>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBucket",
        __Marshaller_google_storage_v2_GetBucketRequest,
        __Marshaller_google_storage_v2_Bucket);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.CreateBucketRequest, global::Google.Cloud.Storage.V2.Bucket> __Method_CreateBucket = new grpc::Method<global::Google.Cloud.Storage.V2.CreateBucketRequest, global::Google.Cloud.Storage.V2.Bucket>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateBucket",
        __Marshaller_google_storage_v2_CreateBucketRequest,
        __Marshaller_google_storage_v2_Bucket);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.ListBucketsRequest, global::Google.Cloud.Storage.V2.ListBucketsResponse> __Method_ListBuckets = new grpc::Method<global::Google.Cloud.Storage.V2.ListBucketsRequest, global::Google.Cloud.Storage.V2.ListBucketsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBuckets",
        __Marshaller_google_storage_v2_ListBucketsRequest,
        __Marshaller_google_storage_v2_ListBucketsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest, global::Google.Cloud.Storage.V2.Bucket> __Method_LockBucketRetentionPolicy = new grpc::Method<global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest, global::Google.Cloud.Storage.V2.Bucket>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LockBucketRetentionPolicy",
        __Marshaller_google_storage_v2_LockBucketRetentionPolicyRequest,
        __Marshaller_google_storage_v2_Bucket);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_GetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIamPolicy",
        __Marshaller_google_iam_v1_GetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy> __Method_SetIamPolicy = new grpc::Method<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetIamPolicy",
        __Marshaller_google_iam_v1_SetIamPolicyRequest,
        __Marshaller_google_iam_v1_Policy);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> __Method_TestIamPermissions = new grpc::Method<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TestIamPermissions",
        __Marshaller_google_iam_v1_TestIamPermissionsRequest,
        __Marshaller_google_iam_v1_TestIamPermissionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.UpdateBucketRequest, global::Google.Cloud.Storage.V2.Bucket> __Method_UpdateBucket = new grpc::Method<global::Google.Cloud.Storage.V2.UpdateBucketRequest, global::Google.Cloud.Storage.V2.Bucket>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateBucket",
        __Marshaller_google_storage_v2_UpdateBucketRequest,
        __Marshaller_google_storage_v2_Bucket);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.ComposeObjectRequest, global::Google.Cloud.Storage.V2.Object> __Method_ComposeObject = new grpc::Method<global::Google.Cloud.Storage.V2.ComposeObjectRequest, global::Google.Cloud.Storage.V2.Object>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ComposeObject",
        __Marshaller_google_storage_v2_ComposeObjectRequest,
        __Marshaller_google_storage_v2_Object);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.DeleteObjectRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_DeleteObject = new grpc::Method<global::Google.Cloud.Storage.V2.DeleteObjectRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteObject",
        __Marshaller_google_storage_v2_DeleteObjectRequest,
        __Marshaller_google_protobuf_Empty);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.RestoreObjectRequest, global::Google.Cloud.Storage.V2.Object> __Method_RestoreObject = new grpc::Method<global::Google.Cloud.Storage.V2.RestoreObjectRequest, global::Google.Cloud.Storage.V2.Object>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RestoreObject",
        __Marshaller_google_storage_v2_RestoreObjectRequest,
        __Marshaller_google_storage_v2_Object);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.CancelResumableWriteRequest, global::Google.Cloud.Storage.V2.CancelResumableWriteResponse> __Method_CancelResumableWrite = new grpc::Method<global::Google.Cloud.Storage.V2.CancelResumableWriteRequest, global::Google.Cloud.Storage.V2.CancelResumableWriteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancelResumableWrite",
        __Marshaller_google_storage_v2_CancelResumableWriteRequest,
        __Marshaller_google_storage_v2_CancelResumableWriteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.GetObjectRequest, global::Google.Cloud.Storage.V2.Object> __Method_GetObject = new grpc::Method<global::Google.Cloud.Storage.V2.GetObjectRequest, global::Google.Cloud.Storage.V2.Object>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObject",
        __Marshaller_google_storage_v2_GetObjectRequest,
        __Marshaller_google_storage_v2_Object);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.ReadObjectRequest, global::Google.Cloud.Storage.V2.ReadObjectResponse> __Method_ReadObject = new grpc::Method<global::Google.Cloud.Storage.V2.ReadObjectRequest, global::Google.Cloud.Storage.V2.ReadObjectResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ReadObject",
        __Marshaller_google_storage_v2_ReadObjectRequest,
        __Marshaller_google_storage_v2_ReadObjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.BidiReadObjectRequest, global::Google.Cloud.Storage.V2.BidiReadObjectResponse> __Method_BidiReadObject = new grpc::Method<global::Google.Cloud.Storage.V2.BidiReadObjectRequest, global::Google.Cloud.Storage.V2.BidiReadObjectResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "BidiReadObject",
        __Marshaller_google_storage_v2_BidiReadObjectRequest,
        __Marshaller_google_storage_v2_BidiReadObjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.UpdateObjectRequest, global::Google.Cloud.Storage.V2.Object> __Method_UpdateObject = new grpc::Method<global::Google.Cloud.Storage.V2.UpdateObjectRequest, global::Google.Cloud.Storage.V2.Object>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateObject",
        __Marshaller_google_storage_v2_UpdateObjectRequest,
        __Marshaller_google_storage_v2_Object);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.WriteObjectRequest, global::Google.Cloud.Storage.V2.WriteObjectResponse> __Method_WriteObject = new grpc::Method<global::Google.Cloud.Storage.V2.WriteObjectRequest, global::Google.Cloud.Storage.V2.WriteObjectResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "WriteObject",
        __Marshaller_google_storage_v2_WriteObjectRequest,
        __Marshaller_google_storage_v2_WriteObjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.BidiWriteObjectRequest, global::Google.Cloud.Storage.V2.BidiWriteObjectResponse> __Method_BidiWriteObject = new grpc::Method<global::Google.Cloud.Storage.V2.BidiWriteObjectRequest, global::Google.Cloud.Storage.V2.BidiWriteObjectResponse>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "BidiWriteObject",
        __Marshaller_google_storage_v2_BidiWriteObjectRequest,
        __Marshaller_google_storage_v2_BidiWriteObjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.ListObjectsRequest, global::Google.Cloud.Storage.V2.ListObjectsResponse> __Method_ListObjects = new grpc::Method<global::Google.Cloud.Storage.V2.ListObjectsRequest, global::Google.Cloud.Storage.V2.ListObjectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListObjects",
        __Marshaller_google_storage_v2_ListObjectsRequest,
        __Marshaller_google_storage_v2_ListObjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.RewriteObjectRequest, global::Google.Cloud.Storage.V2.RewriteResponse> __Method_RewriteObject = new grpc::Method<global::Google.Cloud.Storage.V2.RewriteObjectRequest, global::Google.Cloud.Storage.V2.RewriteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RewriteObject",
        __Marshaller_google_storage_v2_RewriteObjectRequest,
        __Marshaller_google_storage_v2_RewriteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.StartResumableWriteRequest, global::Google.Cloud.Storage.V2.StartResumableWriteResponse> __Method_StartResumableWrite = new grpc::Method<global::Google.Cloud.Storage.V2.StartResumableWriteRequest, global::Google.Cloud.Storage.V2.StartResumableWriteResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartResumableWrite",
        __Marshaller_google_storage_v2_StartResumableWriteRequest,
        __Marshaller_google_storage_v2_StartResumableWriteResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.QueryWriteStatusRequest, global::Google.Cloud.Storage.V2.QueryWriteStatusResponse> __Method_QueryWriteStatus = new grpc::Method<global::Google.Cloud.Storage.V2.QueryWriteStatusRequest, global::Google.Cloud.Storage.V2.QueryWriteStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryWriteStatus",
        __Marshaller_google_storage_v2_QueryWriteStatusRequest,
        __Marshaller_google_storage_v2_QueryWriteStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Cloud.Storage.V2.MoveObjectRequest, global::Google.Cloud.Storage.V2.Object> __Method_MoveObject = new grpc::Method<global::Google.Cloud.Storage.V2.MoveObjectRequest, global::Google.Cloud.Storage.V2.Object>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MoveObject",
        __Marshaller_google_storage_v2_MoveObjectRequest,
        __Marshaller_google_storage_v2_Object);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Google.Cloud.Storage.V2.StorageReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Storage</summary>
    [grpc::BindServiceMethod(typeof(Storage), "BindService")]
    public abstract partial class StorageBase
    {
      /// <summary>
      /// Permanently deletes an empty bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBucket(global::Google.Cloud.Storage.V2.DeleteBucketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns metadata for the specified bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Bucket> GetBucket(global::Google.Cloud.Storage.V2.GetBucketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Creates a new bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Bucket> CreateBucket(global::Google.Cloud.Storage.V2.CreateBucketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a list of buckets for a given project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.ListBucketsResponse> ListBuckets(global::Google.Cloud.Storage.V2.ListBucketsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Locks retention policy on a bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Bucket> LockBucketRetentionPolicy(global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Gets the IAM policy for a specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an IAM policy for the specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.Policy> SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Tests a set of permissions on the given bucket, object, or managed folder
      /// to see which, if any, are held by the caller.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}` for a bucket,
      /// `projects/_/buckets/{bucket}/objects/{object}` for an object, or
      /// `projects/_/buckets/{bucket}/managedFolders/{managedFolder}`
      /// for a managed folder.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates a bucket. Equivalent to JSON API's storage.buckets.patch method.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Bucket> UpdateBucket(global::Google.Cloud.Storage.V2.UpdateBucketRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Concatenates a list of existing objects into a new object in the same
      /// bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Object> ComposeObject(global::Google.Cloud.Storage.V2.ComposeObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deletes an object and its metadata. Deletions are permanent if versioning
      /// is not enabled for the bucket, or if the generation parameter is used, or
      /// if [soft delete](https://cloud.google.com/storage/docs/soft-delete) is not
      /// enabled for the bucket.
      /// When this API is used to delete an object from a bucket that has soft
      /// delete policy enabled, the object becomes soft deleted, and the
      /// `softDeleteTime` and `hardDeleteTime` properties are set on the object.
      /// This API cannot be used to permanently delete soft-deleted objects.
      /// Soft-deleted objects are permanently deleted according to their
      /// `hardDeleteTime`.
      ///
      /// You can use the [`RestoreObject`][google.storage.v2.Storage.RestoreObject]
      /// API to restore soft-deleted objects until the soft delete retention period
      /// has passed.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.delete`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> DeleteObject(global::Google.Cloud.Storage.V2.DeleteObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Restores a soft-deleted object.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Object> RestoreObject(global::Google.Cloud.Storage.V2.RestoreObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Cancels an in-progress resumable upload.
      ///
      /// Any attempts to write to the resumable upload after cancelling the upload
      /// will fail.
      ///
      /// The behavior for currently in progress write operations is not guaranteed -
      /// they could either complete before the cancellation or fail if the
      /// cancellation completes first.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.CancelResumableWriteResponse> CancelResumableWrite(global::Google.Cloud.Storage.V2.CancelResumableWriteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves object metadata.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket. To return object ACLs, the authenticated user must also have
      /// the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Object> GetObject(global::Google.Cloud.Storage.V2.GetObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves object data.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ReadObject(global::Google.Cloud.Storage.V2.ReadObjectRequest request, grpc::IServerStreamWriter<global::Google.Cloud.Storage.V2.ReadObjectResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Reads an object's data.
      ///
      /// This is a bi-directional API with the added support for reading multiple
      /// ranges within one stream both within and across multiple messages.
      /// If the server encountered an error for any of the inputs, the stream will
      /// be closed with the relevant error code.
      /// Because the API allows for multiple outstanding requests, when the stream
      /// is closed the error response will contain a BidiReadObjectRangesError proto
      /// in the error extension describing the error for each outstanding read_id.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      ///
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      ///
      /// This API is currently in preview and is not yet available for general
      /// use.
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task BidiReadObject(grpc::IAsyncStreamReader<global::Google.Cloud.Storage.V2.BidiReadObjectRequest> requestStream, grpc::IServerStreamWriter<global::Google.Cloud.Storage.V2.BidiReadObjectResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Updates an object's metadata.
      /// Equivalent to JSON API's storage.objects.patch.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Object> UpdateObject(global::Google.Cloud.Storage.V2.UpdateObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stores a new object and metadata.
      ///
      /// An object can be written either in a single message stream or in a
      /// resumable sequence of message streams. To write using a single stream,
      /// the client should include in the first message of the stream an
      /// `WriteObjectSpec` describing the destination bucket, object, and any
      /// preconditions. Additionally, the final message must set 'finish_write' to
      /// true, or else it is an error.
      ///
      /// For a resumable write, the client should instead call
      /// `StartResumableWrite()`, populating a `WriteObjectSpec` into that request.
      /// They should then attach the returned `upload_id` to the first message of
      /// each following call to `WriteObject`. If the stream is closed before
      /// finishing the upload (either explicitly by the client or due to a network
      /// error or an error response from the server), the client should do as
      /// follows:
      ///   - Check the result Status of the stream, to determine if writing can be
      ///     resumed on this stream or must be restarted from scratch (by calling
      ///     `StartResumableWrite()`). The resumable errors are DEADLINE_EXCEEDED,
      ///     INTERNAL, and UNAVAILABLE. For each case, the client should use binary
      ///     exponential backoff before retrying.  Additionally, writes can be
      ///     resumed after RESOURCE_EXHAUSTED errors, but only after taking
      ///     appropriate measures, which may include reducing aggregate send rate
      ///     across clients and/or requesting a quota increase for your project.
      ///   - If the call to `WriteObject` returns `ABORTED`, that indicates
      ///     concurrent attempts to update the resumable write, caused either by
      ///     multiple racing clients or by a single client where the previous
      ///     request was timed out on the client side but nonetheless reached the
      ///     server. In this case the client should take steps to prevent further
      ///     concurrent writes (e.g., increase the timeouts, stop using more than
      ///     one process to perform the upload, etc.), and then should follow the
      ///     steps below for resuming the upload.
      ///   - For resumable errors, the client should call `QueryWriteStatus()` and
      ///     then continue writing from the returned `persisted_size`. This may be
      ///     less than the amount of data the client previously sent. Note also that
      ///     it is acceptable to send data starting at an offset earlier than the
      ///     returned `persisted_size`; in this case, the service will skip data at
      ///     offsets that were already persisted (without checking that it matches
      ///     the previously written data), and write only the data starting from the
      ///     persisted offset. Even though the data isn't written, it may still
      ///     incur a performance cost over resuming at the correct write offset.
      ///     This behavior can make client-side handling simpler in some cases.
      ///   - Clients must only send data that is a multiple of 256 KiB per message,
      ///     unless the object is being finished with `finish_write` set to `true`.
      ///
      /// The service will not view the object as complete until the client has
      /// sent a `WriteObjectRequest` with `finish_write` set to `true`. Sending any
      /// requests on a stream after sending a request with `finish_write` set to
      /// `true` will cause an error. The client **should** check the response it
      /// receives to determine how much data the service was able to commit and
      /// whether the service views the object as complete.
      ///
      /// Attempting to resume an already finalized object will result in an OK
      /// status, with a `WriteObjectResponse` containing the finalized object's
      /// metadata.
      ///
      /// Alternatively, the BidiWriteObject operation may be used to write an
      /// object with controls over flushing and the ability to fetch the ability to
      /// determine the current persisted size.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.create`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.WriteObjectResponse> WriteObject(grpc::IAsyncStreamReader<global::Google.Cloud.Storage.V2.WriteObjectRequest> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stores a new object and metadata.
      ///
      /// This is similar to the WriteObject call with the added support for
      /// manual flushing of persisted state, and the ability to determine current
      /// persisted size without closing the stream.
      ///
      /// The client may specify one or both of the `state_lookup` and `flush` fields
      /// in each BidiWriteObjectRequest. If `flush` is specified, the data written
      /// so far will be persisted to storage. If `state_lookup` is specified, the
      /// service will respond with a BidiWriteObjectResponse that contains the
      /// persisted size. If both `flush` and `state_lookup` are specified, the flush
      /// will always occur before a `state_lookup`, so that both may be set in the
      /// same request and the returned state will be the state of the object
      /// post-flush. When the stream is closed, a BidiWriteObjectResponse will
      /// always be sent to the client, regardless of the value of `state_lookup`.
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task BidiWriteObject(grpc::IAsyncStreamReader<global::Google.Cloud.Storage.V2.BidiWriteObjectRequest> requestStream, grpc::IServerStreamWriter<global::Google.Cloud.Storage.V2.BidiWriteObjectResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieves a list of objects matching the criteria.
      ///
      /// **IAM Permissions**:
      ///
      /// The authenticated user requires `storage.objects.list`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions)
      /// to use this method. To return object ACLs, the authenticated user must also
      /// have the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.ListObjectsResponse> ListObjects(global::Google.Cloud.Storage.V2.ListObjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Rewrites a source object to a destination object. Optionally overrides
      /// metadata.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.RewriteResponse> RewriteObject(global::Google.Cloud.Storage.V2.RewriteObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Starts a resumable write operation. This
      /// method is part of the [Resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// This allows you to upload large objects in multiple chunks, which is more
      /// resilient to network interruptions than a single upload. The validity
      /// duration of the write operation, and the consequences of it becoming
      /// invalid, are service-dependent.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.create`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.StartResumableWriteResponse> StartResumableWrite(global::Google.Cloud.Storage.V2.StartResumableWriteRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Determines the `persisted_size` of an object that is being written. This
      /// method is part of the [resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// The returned value is the size of the object that has been persisted so
      /// far. The value can be used as the `write_offset` for the next `Write()`
      /// call.
      ///
      /// If the object does not exist, meaning if it was deleted, or the
      /// first `Write()` has not yet reached the service, this method returns the
      /// error `NOT_FOUND`.
      ///
      /// This method is useful for clients that buffer data and need to know which
      /// data can be safely evicted. The client can call `QueryWriteStatus()` at any
      /// time to determine how much data has been logged for this object.
      /// For any sequence of `QueryWriteStatus()` calls for a given
      /// object name, the sequence of returned `persisted_size` values are
      /// non-decreasing.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.QueryWriteStatusResponse> QueryWriteStatus(global::Google.Cloud.Storage.V2.QueryWriteStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Moves the source object to the destination object in the same bucket.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Cloud.Storage.V2.Object> MoveObject(global::Google.Cloud.Storage.V2.MoveObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Storage</summary>
    public partial class StorageClient : grpc::ClientBase<StorageClient>
    {
      /// <summary>Creates a new client for Storage</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public StorageClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Storage that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public StorageClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected StorageClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected StorageClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Permanently deletes an empty bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBucket(global::Google.Cloud.Storage.V2.DeleteBucketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBucket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes an empty bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteBucket(global::Google.Cloud.Storage.V2.DeleteBucketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteBucket, null, options, request);
      }
      /// <summary>
      /// Permanently deletes an empty bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBucketAsync(global::Google.Cloud.Storage.V2.DeleteBucketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteBucketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Permanently deletes an empty bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteBucketAsync(global::Google.Cloud.Storage.V2.DeleteBucketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteBucket, null, options, request);
      }
      /// <summary>
      /// Returns metadata for the specified bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Bucket GetBucket(global::Google.Cloud.Storage.V2.GetBucketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBucket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns metadata for the specified bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Bucket GetBucket(global::Google.Cloud.Storage.V2.GetBucketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBucket, null, options, request);
      }
      /// <summary>
      /// Returns metadata for the specified bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Bucket> GetBucketAsync(global::Google.Cloud.Storage.V2.GetBucketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBucketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns metadata for the specified bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Bucket> GetBucketAsync(global::Google.Cloud.Storage.V2.GetBucketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBucket, null, options, request);
      }
      /// <summary>
      /// Creates a new bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Bucket CreateBucket(global::Google.Cloud.Storage.V2.CreateBucketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBucket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Bucket CreateBucket(global::Google.Cloud.Storage.V2.CreateBucketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateBucket, null, options, request);
      }
      /// <summary>
      /// Creates a new bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Bucket> CreateBucketAsync(global::Google.Cloud.Storage.V2.CreateBucketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateBucketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Bucket> CreateBucketAsync(global::Google.Cloud.Storage.V2.CreateBucketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateBucket, null, options, request);
      }
      /// <summary>
      /// Retrieves a list of buckets for a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.ListBucketsResponse ListBuckets(global::Google.Cloud.Storage.V2.ListBucketsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBuckets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a list of buckets for a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.ListBucketsResponse ListBuckets(global::Google.Cloud.Storage.V2.ListBucketsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBuckets, null, options, request);
      }
      /// <summary>
      /// Retrieves a list of buckets for a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.ListBucketsResponse> ListBucketsAsync(global::Google.Cloud.Storage.V2.ListBucketsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBucketsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a list of buckets for a given project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.ListBucketsResponse> ListBucketsAsync(global::Google.Cloud.Storage.V2.ListBucketsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBuckets, null, options, request);
      }
      /// <summary>
      /// Locks retention policy on a bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Bucket LockBucketRetentionPolicy(global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockBucketRetentionPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Locks retention policy on a bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Bucket LockBucketRetentionPolicy(global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LockBucketRetentionPolicy, null, options, request);
      }
      /// <summary>
      /// Locks retention policy on a bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Bucket> LockBucketRetentionPolicyAsync(global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockBucketRetentionPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Locks retention policy on a bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Bucket> LockBucketRetentionPolicyAsync(global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LockBucketRetentionPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the IAM policy for a specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the IAM policy for a specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy GetIamPolicy(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Gets the IAM policy for a specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Gets the IAM policy for a specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> GetIamPolicyAsync(global::Google.Cloud.Iam.V1.GetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Updates an IAM policy for the specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an IAM policy for the specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.Policy SetIamPolicy(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Updates an IAM policy for the specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetIamPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an IAM policy for the specified bucket.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}`.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.Policy> SetIamPolicyAsync(global::Google.Cloud.Iam.V1.SetIamPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetIamPolicy, null, options, request);
      }
      /// <summary>
      /// Tests a set of permissions on the given bucket, object, or managed folder
      /// to see which, if any, are held by the caller.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}` for a bucket,
      /// `projects/_/buckets/{bucket}/objects/{object}` for an object, or
      /// `projects/_/buckets/{bucket}/managedFolders/{managedFolder}`
      /// for a managed folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Tests a set of permissions on the given bucket, object, or managed folder
      /// to see which, if any, are held by the caller.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}` for a bucket,
      /// `projects/_/buckets/{bucket}/objects/{object}` for an object, or
      /// `projects/_/buckets/{bucket}/managedFolders/{managedFolder}`
      /// for a managed folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Iam.V1.TestIamPermissionsResponse TestIamPermissions(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Tests a set of permissions on the given bucket, object, or managed folder
      /// to see which, if any, are held by the caller.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}` for a bucket,
      /// `projects/_/buckets/{bucket}/objects/{object}` for an object, or
      /// `projects/_/buckets/{bucket}/managedFolders/{managedFolder}`
      /// for a managed folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TestIamPermissionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Tests a set of permissions on the given bucket, object, or managed folder
      /// to see which, if any, are held by the caller.
      /// The `resource` field in the request should be
      /// `projects/_/buckets/{bucket}` for a bucket,
      /// `projects/_/buckets/{bucket}/objects/{object}` for an object, or
      /// `projects/_/buckets/{bucket}/managedFolders/{managedFolder}`
      /// for a managed folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Iam.V1.TestIamPermissionsResponse> TestIamPermissionsAsync(global::Google.Cloud.Iam.V1.TestIamPermissionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TestIamPermissions, null, options, request);
      }
      /// <summary>
      /// Updates a bucket. Equivalent to JSON API's storage.buckets.patch method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Bucket UpdateBucket(global::Google.Cloud.Storage.V2.UpdateBucketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBucket(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a bucket. Equivalent to JSON API's storage.buckets.patch method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Bucket UpdateBucket(global::Google.Cloud.Storage.V2.UpdateBucketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateBucket, null, options, request);
      }
      /// <summary>
      /// Updates a bucket. Equivalent to JSON API's storage.buckets.patch method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Bucket> UpdateBucketAsync(global::Google.Cloud.Storage.V2.UpdateBucketRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateBucketAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates a bucket. Equivalent to JSON API's storage.buckets.patch method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Bucket> UpdateBucketAsync(global::Google.Cloud.Storage.V2.UpdateBucketRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateBucket, null, options, request);
      }
      /// <summary>
      /// Concatenates a list of existing objects into a new object in the same
      /// bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object ComposeObject(global::Google.Cloud.Storage.V2.ComposeObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ComposeObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Concatenates a list of existing objects into a new object in the same
      /// bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object ComposeObject(global::Google.Cloud.Storage.V2.ComposeObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ComposeObject, null, options, request);
      }
      /// <summary>
      /// Concatenates a list of existing objects into a new object in the same
      /// bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> ComposeObjectAsync(global::Google.Cloud.Storage.V2.ComposeObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ComposeObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Concatenates a list of existing objects into a new object in the same
      /// bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> ComposeObjectAsync(global::Google.Cloud.Storage.V2.ComposeObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ComposeObject, null, options, request);
      }
      /// <summary>
      /// Deletes an object and its metadata. Deletions are permanent if versioning
      /// is not enabled for the bucket, or if the generation parameter is used, or
      /// if [soft delete](https://cloud.google.com/storage/docs/soft-delete) is not
      /// enabled for the bucket.
      /// When this API is used to delete an object from a bucket that has soft
      /// delete policy enabled, the object becomes soft deleted, and the
      /// `softDeleteTime` and `hardDeleteTime` properties are set on the object.
      /// This API cannot be used to permanently delete soft-deleted objects.
      /// Soft-deleted objects are permanently deleted according to their
      /// `hardDeleteTime`.
      ///
      /// You can use the [`RestoreObject`][google.storage.v2.Storage.RestoreObject]
      /// API to restore soft-deleted objects until the soft delete retention period
      /// has passed.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.delete`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteObject(global::Google.Cloud.Storage.V2.DeleteObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an object and its metadata. Deletions are permanent if versioning
      /// is not enabled for the bucket, or if the generation parameter is used, or
      /// if [soft delete](https://cloud.google.com/storage/docs/soft-delete) is not
      /// enabled for the bucket.
      /// When this API is used to delete an object from a bucket that has soft
      /// delete policy enabled, the object becomes soft deleted, and the
      /// `softDeleteTime` and `hardDeleteTime` properties are set on the object.
      /// This API cannot be used to permanently delete soft-deleted objects.
      /// Soft-deleted objects are permanently deleted according to their
      /// `hardDeleteTime`.
      ///
      /// You can use the [`RestoreObject`][google.storage.v2.Storage.RestoreObject]
      /// API to restore soft-deleted objects until the soft delete retention period
      /// has passed.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.delete`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteObject(global::Google.Cloud.Storage.V2.DeleteObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteObject, null, options, request);
      }
      /// <summary>
      /// Deletes an object and its metadata. Deletions are permanent if versioning
      /// is not enabled for the bucket, or if the generation parameter is used, or
      /// if [soft delete](https://cloud.google.com/storage/docs/soft-delete) is not
      /// enabled for the bucket.
      /// When this API is used to delete an object from a bucket that has soft
      /// delete policy enabled, the object becomes soft deleted, and the
      /// `softDeleteTime` and `hardDeleteTime` properties are set on the object.
      /// This API cannot be used to permanently delete soft-deleted objects.
      /// Soft-deleted objects are permanently deleted according to their
      /// `hardDeleteTime`.
      ///
      /// You can use the [`RestoreObject`][google.storage.v2.Storage.RestoreObject]
      /// API to restore soft-deleted objects until the soft delete retention period
      /// has passed.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.delete`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteObjectAsync(global::Google.Cloud.Storage.V2.DeleteObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes an object and its metadata. Deletions are permanent if versioning
      /// is not enabled for the bucket, or if the generation parameter is used, or
      /// if [soft delete](https://cloud.google.com/storage/docs/soft-delete) is not
      /// enabled for the bucket.
      /// When this API is used to delete an object from a bucket that has soft
      /// delete policy enabled, the object becomes soft deleted, and the
      /// `softDeleteTime` and `hardDeleteTime` properties are set on the object.
      /// This API cannot be used to permanently delete soft-deleted objects.
      /// Soft-deleted objects are permanently deleted according to their
      /// `hardDeleteTime`.
      ///
      /// You can use the [`RestoreObject`][google.storage.v2.Storage.RestoreObject]
      /// API to restore soft-deleted objects until the soft delete retention period
      /// has passed.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.delete`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteObjectAsync(global::Google.Cloud.Storage.V2.DeleteObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteObject, null, options, request);
      }
      /// <summary>
      /// Restores a soft-deleted object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object RestoreObject(global::Google.Cloud.Storage.V2.RestoreObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestoreObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Restores a soft-deleted object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object RestoreObject(global::Google.Cloud.Storage.V2.RestoreObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RestoreObject, null, options, request);
      }
      /// <summary>
      /// Restores a soft-deleted object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> RestoreObjectAsync(global::Google.Cloud.Storage.V2.RestoreObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestoreObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Restores a soft-deleted object.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> RestoreObjectAsync(global::Google.Cloud.Storage.V2.RestoreObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RestoreObject, null, options, request);
      }
      /// <summary>
      /// Cancels an in-progress resumable upload.
      ///
      /// Any attempts to write to the resumable upload after cancelling the upload
      /// will fail.
      ///
      /// The behavior for currently in progress write operations is not guaranteed -
      /// they could either complete before the cancellation or fail if the
      /// cancellation completes first.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.CancelResumableWriteResponse CancelResumableWrite(global::Google.Cloud.Storage.V2.CancelResumableWriteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelResumableWrite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels an in-progress resumable upload.
      ///
      /// Any attempts to write to the resumable upload after cancelling the upload
      /// will fail.
      ///
      /// The behavior for currently in progress write operations is not guaranteed -
      /// they could either complete before the cancellation or fail if the
      /// cancellation completes first.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.CancelResumableWriteResponse CancelResumableWrite(global::Google.Cloud.Storage.V2.CancelResumableWriteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancelResumableWrite, null, options, request);
      }
      /// <summary>
      /// Cancels an in-progress resumable upload.
      ///
      /// Any attempts to write to the resumable upload after cancelling the upload
      /// will fail.
      ///
      /// The behavior for currently in progress write operations is not guaranteed -
      /// they could either complete before the cancellation or fail if the
      /// cancellation completes first.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.CancelResumableWriteResponse> CancelResumableWriteAsync(global::Google.Cloud.Storage.V2.CancelResumableWriteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancelResumableWriteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Cancels an in-progress resumable upload.
      ///
      /// Any attempts to write to the resumable upload after cancelling the upload
      /// will fail.
      ///
      /// The behavior for currently in progress write operations is not guaranteed -
      /// they could either complete before the cancellation or fail if the
      /// cancellation completes first.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.CancelResumableWriteResponse> CancelResumableWriteAsync(global::Google.Cloud.Storage.V2.CancelResumableWriteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancelResumableWrite, null, options, request);
      }
      /// <summary>
      /// Retrieves object metadata.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket. To return object ACLs, the authenticated user must also have
      /// the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object GetObject(global::Google.Cloud.Storage.V2.GetObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves object metadata.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket. To return object ACLs, the authenticated user must also have
      /// the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object GetObject(global::Google.Cloud.Storage.V2.GetObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObject, null, options, request);
      }
      /// <summary>
      /// Retrieves object metadata.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket. To return object ACLs, the authenticated user must also have
      /// the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> GetObjectAsync(global::Google.Cloud.Storage.V2.GetObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves object metadata.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket. To return object ACLs, the authenticated user must also have
      /// the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> GetObjectAsync(global::Google.Cloud.Storage.V2.GetObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObject, null, options, request);
      }
      /// <summary>
      /// Retrieves object data.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Google.Cloud.Storage.V2.ReadObjectResponse> ReadObject(global::Google.Cloud.Storage.V2.ReadObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves object data.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Google.Cloud.Storage.V2.ReadObjectResponse> ReadObject(global::Google.Cloud.Storage.V2.ReadObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ReadObject, null, options, request);
      }
      /// <summary>
      /// Reads an object's data.
      ///
      /// This is a bi-directional API with the added support for reading multiple
      /// ranges within one stream both within and across multiple messages.
      /// If the server encountered an error for any of the inputs, the stream will
      /// be closed with the relevant error code.
      /// Because the API allows for multiple outstanding requests, when the stream
      /// is closed the error response will contain a BidiReadObjectRangesError proto
      /// in the error extension describing the error for each outstanding read_id.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      ///
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      ///
      /// This API is currently in preview and is not yet available for general
      /// use.
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Google.Cloud.Storage.V2.BidiReadObjectRequest, global::Google.Cloud.Storage.V2.BidiReadObjectResponse> BidiReadObject(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BidiReadObject(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reads an object's data.
      ///
      /// This is a bi-directional API with the added support for reading multiple
      /// ranges within one stream both within and across multiple messages.
      /// If the server encountered an error for any of the inputs, the stream will
      /// be closed with the relevant error code.
      /// Because the API allows for multiple outstanding requests, when the stream
      /// is closed the error response will contain a BidiReadObjectRangesError proto
      /// in the error extension describing the error for each outstanding read_id.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.get`
      ///
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      ///
      /// This API is currently in preview and is not yet available for general
      /// use.
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Google.Cloud.Storage.V2.BidiReadObjectRequest, global::Google.Cloud.Storage.V2.BidiReadObjectResponse> BidiReadObject(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_BidiReadObject, null, options);
      }
      /// <summary>
      /// Updates an object's metadata.
      /// Equivalent to JSON API's storage.objects.patch.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object UpdateObject(global::Google.Cloud.Storage.V2.UpdateObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an object's metadata.
      /// Equivalent to JSON API's storage.objects.patch.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object UpdateObject(global::Google.Cloud.Storage.V2.UpdateObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateObject, null, options, request);
      }
      /// <summary>
      /// Updates an object's metadata.
      /// Equivalent to JSON API's storage.objects.patch.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> UpdateObjectAsync(global::Google.Cloud.Storage.V2.UpdateObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates an object's metadata.
      /// Equivalent to JSON API's storage.objects.patch.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> UpdateObjectAsync(global::Google.Cloud.Storage.V2.UpdateObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateObject, null, options, request);
      }
      /// <summary>
      /// Stores a new object and metadata.
      ///
      /// An object can be written either in a single message stream or in a
      /// resumable sequence of message streams. To write using a single stream,
      /// the client should include in the first message of the stream an
      /// `WriteObjectSpec` describing the destination bucket, object, and any
      /// preconditions. Additionally, the final message must set 'finish_write' to
      /// true, or else it is an error.
      ///
      /// For a resumable write, the client should instead call
      /// `StartResumableWrite()`, populating a `WriteObjectSpec` into that request.
      /// They should then attach the returned `upload_id` to the first message of
      /// each following call to `WriteObject`. If the stream is closed before
      /// finishing the upload (either explicitly by the client or due to a network
      /// error or an error response from the server), the client should do as
      /// follows:
      ///   - Check the result Status of the stream, to determine if writing can be
      ///     resumed on this stream or must be restarted from scratch (by calling
      ///     `StartResumableWrite()`). The resumable errors are DEADLINE_EXCEEDED,
      ///     INTERNAL, and UNAVAILABLE. For each case, the client should use binary
      ///     exponential backoff before retrying.  Additionally, writes can be
      ///     resumed after RESOURCE_EXHAUSTED errors, but only after taking
      ///     appropriate measures, which may include reducing aggregate send rate
      ///     across clients and/or requesting a quota increase for your project.
      ///   - If the call to `WriteObject` returns `ABORTED`, that indicates
      ///     concurrent attempts to update the resumable write, caused either by
      ///     multiple racing clients or by a single client where the previous
      ///     request was timed out on the client side but nonetheless reached the
      ///     server. In this case the client should take steps to prevent further
      ///     concurrent writes (e.g., increase the timeouts, stop using more than
      ///     one process to perform the upload, etc.), and then should follow the
      ///     steps below for resuming the upload.
      ///   - For resumable errors, the client should call `QueryWriteStatus()` and
      ///     then continue writing from the returned `persisted_size`. This may be
      ///     less than the amount of data the client previously sent. Note also that
      ///     it is acceptable to send data starting at an offset earlier than the
      ///     returned `persisted_size`; in this case, the service will skip data at
      ///     offsets that were already persisted (without checking that it matches
      ///     the previously written data), and write only the data starting from the
      ///     persisted offset. Even though the data isn't written, it may still
      ///     incur a performance cost over resuming at the correct write offset.
      ///     This behavior can make client-side handling simpler in some cases.
      ///   - Clients must only send data that is a multiple of 256 KiB per message,
      ///     unless the object is being finished with `finish_write` set to `true`.
      ///
      /// The service will not view the object as complete until the client has
      /// sent a `WriteObjectRequest` with `finish_write` set to `true`. Sending any
      /// requests on a stream after sending a request with `finish_write` set to
      /// `true` will cause an error. The client **should** check the response it
      /// receives to determine how much data the service was able to commit and
      /// whether the service views the object as complete.
      ///
      /// Attempting to resume an already finalized object will result in an OK
      /// status, with a `WriteObjectResponse` containing the finalized object's
      /// metadata.
      ///
      /// Alternatively, the BidiWriteObject operation may be used to write an
      /// object with controls over flushing and the ability to fetch the ability to
      /// determine the current persisted size.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.create`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Google.Cloud.Storage.V2.WriteObjectRequest, global::Google.Cloud.Storage.V2.WriteObjectResponse> WriteObject(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return WriteObject(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stores a new object and metadata.
      ///
      /// An object can be written either in a single message stream or in a
      /// resumable sequence of message streams. To write using a single stream,
      /// the client should include in the first message of the stream an
      /// `WriteObjectSpec` describing the destination bucket, object, and any
      /// preconditions. Additionally, the final message must set 'finish_write' to
      /// true, or else it is an error.
      ///
      /// For a resumable write, the client should instead call
      /// `StartResumableWrite()`, populating a `WriteObjectSpec` into that request.
      /// They should then attach the returned `upload_id` to the first message of
      /// each following call to `WriteObject`. If the stream is closed before
      /// finishing the upload (either explicitly by the client or due to a network
      /// error or an error response from the server), the client should do as
      /// follows:
      ///   - Check the result Status of the stream, to determine if writing can be
      ///     resumed on this stream or must be restarted from scratch (by calling
      ///     `StartResumableWrite()`). The resumable errors are DEADLINE_EXCEEDED,
      ///     INTERNAL, and UNAVAILABLE. For each case, the client should use binary
      ///     exponential backoff before retrying.  Additionally, writes can be
      ///     resumed after RESOURCE_EXHAUSTED errors, but only after taking
      ///     appropriate measures, which may include reducing aggregate send rate
      ///     across clients and/or requesting a quota increase for your project.
      ///   - If the call to `WriteObject` returns `ABORTED`, that indicates
      ///     concurrent attempts to update the resumable write, caused either by
      ///     multiple racing clients or by a single client where the previous
      ///     request was timed out on the client side but nonetheless reached the
      ///     server. In this case the client should take steps to prevent further
      ///     concurrent writes (e.g., increase the timeouts, stop using more than
      ///     one process to perform the upload, etc.), and then should follow the
      ///     steps below for resuming the upload.
      ///   - For resumable errors, the client should call `QueryWriteStatus()` and
      ///     then continue writing from the returned `persisted_size`. This may be
      ///     less than the amount of data the client previously sent. Note also that
      ///     it is acceptable to send data starting at an offset earlier than the
      ///     returned `persisted_size`; in this case, the service will skip data at
      ///     offsets that were already persisted (without checking that it matches
      ///     the previously written data), and write only the data starting from the
      ///     persisted offset. Even though the data isn't written, it may still
      ///     incur a performance cost over resuming at the correct write offset.
      ///     This behavior can make client-side handling simpler in some cases.
      ///   - Clients must only send data that is a multiple of 256 KiB per message,
      ///     unless the object is being finished with `finish_write` set to `true`.
      ///
      /// The service will not view the object as complete until the client has
      /// sent a `WriteObjectRequest` with `finish_write` set to `true`. Sending any
      /// requests on a stream after sending a request with `finish_write` set to
      /// `true` will cause an error. The client **should** check the response it
      /// receives to determine how much data the service was able to commit and
      /// whether the service views the object as complete.
      ///
      /// Attempting to resume an already finalized object will result in an OK
      /// status, with a `WriteObjectResponse` containing the finalized object's
      /// metadata.
      ///
      /// Alternatively, the BidiWriteObject operation may be used to write an
      /// object with controls over flushing and the ability to fetch the ability to
      /// determine the current persisted size.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.create`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncClientStreamingCall<global::Google.Cloud.Storage.V2.WriteObjectRequest, global::Google.Cloud.Storage.V2.WriteObjectResponse> WriteObject(grpc::CallOptions options)
      {
        return CallInvoker.AsyncClientStreamingCall(__Method_WriteObject, null, options);
      }
      /// <summary>
      /// Stores a new object and metadata.
      ///
      /// This is similar to the WriteObject call with the added support for
      /// manual flushing of persisted state, and the ability to determine current
      /// persisted size without closing the stream.
      ///
      /// The client may specify one or both of the `state_lookup` and `flush` fields
      /// in each BidiWriteObjectRequest. If `flush` is specified, the data written
      /// so far will be persisted to storage. If `state_lookup` is specified, the
      /// service will respond with a BidiWriteObjectResponse that contains the
      /// persisted size. If both `flush` and `state_lookup` are specified, the flush
      /// will always occur before a `state_lookup`, so that both may be set in the
      /// same request and the returned state will be the state of the object
      /// post-flush. When the stream is closed, a BidiWriteObjectResponse will
      /// always be sent to the client, regardless of the value of `state_lookup`.
      /// </summary>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Google.Cloud.Storage.V2.BidiWriteObjectRequest, global::Google.Cloud.Storage.V2.BidiWriteObjectResponse> BidiWriteObject(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BidiWriteObject(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stores a new object and metadata.
      ///
      /// This is similar to the WriteObject call with the added support for
      /// manual flushing of persisted state, and the ability to determine current
      /// persisted size without closing the stream.
      ///
      /// The client may specify one or both of the `state_lookup` and `flush` fields
      /// in each BidiWriteObjectRequest. If `flush` is specified, the data written
      /// so far will be persisted to storage. If `state_lookup` is specified, the
      /// service will respond with a BidiWriteObjectResponse that contains the
      /// persisted size. If both `flush` and `state_lookup` are specified, the flush
      /// will always occur before a `state_lookup`, so that both may be set in the
      /// same request and the returned state will be the state of the object
      /// post-flush. When the stream is closed, a BidiWriteObjectResponse will
      /// always be sent to the client, regardless of the value of `state_lookup`.
      /// </summary>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncDuplexStreamingCall<global::Google.Cloud.Storage.V2.BidiWriteObjectRequest, global::Google.Cloud.Storage.V2.BidiWriteObjectResponse> BidiWriteObject(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_BidiWriteObject, null, options);
      }
      /// <summary>
      /// Retrieves a list of objects matching the criteria.
      ///
      /// **IAM Permissions**:
      ///
      /// The authenticated user requires `storage.objects.list`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions)
      /// to use this method. To return object ACLs, the authenticated user must also
      /// have the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.ListObjectsResponse ListObjects(global::Google.Cloud.Storage.V2.ListObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListObjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a list of objects matching the criteria.
      ///
      /// **IAM Permissions**:
      ///
      /// The authenticated user requires `storage.objects.list`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions)
      /// to use this method. To return object ACLs, the authenticated user must also
      /// have the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.ListObjectsResponse ListObjects(global::Google.Cloud.Storage.V2.ListObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListObjects, null, options, request);
      }
      /// <summary>
      /// Retrieves a list of objects matching the criteria.
      ///
      /// **IAM Permissions**:
      ///
      /// The authenticated user requires `storage.objects.list`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions)
      /// to use this method. To return object ACLs, the authenticated user must also
      /// have the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.ListObjectsResponse> ListObjectsAsync(global::Google.Cloud.Storage.V2.ListObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListObjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a list of objects matching the criteria.
      ///
      /// **IAM Permissions**:
      ///
      /// The authenticated user requires `storage.objects.list`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions)
      /// to use this method. To return object ACLs, the authenticated user must also
      /// have the `storage.objects.getIamPolicy` permission.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.ListObjectsResponse> ListObjectsAsync(global::Google.Cloud.Storage.V2.ListObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListObjects, null, options, request);
      }
      /// <summary>
      /// Rewrites a source object to a destination object. Optionally overrides
      /// metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.RewriteResponse RewriteObject(global::Google.Cloud.Storage.V2.RewriteObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RewriteObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Rewrites a source object to a destination object. Optionally overrides
      /// metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.RewriteResponse RewriteObject(global::Google.Cloud.Storage.V2.RewriteObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RewriteObject, null, options, request);
      }
      /// <summary>
      /// Rewrites a source object to a destination object. Optionally overrides
      /// metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.RewriteResponse> RewriteObjectAsync(global::Google.Cloud.Storage.V2.RewriteObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RewriteObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Rewrites a source object to a destination object. Optionally overrides
      /// metadata.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.RewriteResponse> RewriteObjectAsync(global::Google.Cloud.Storage.V2.RewriteObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RewriteObject, null, options, request);
      }
      /// <summary>
      /// Starts a resumable write operation. This
      /// method is part of the [Resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// This allows you to upload large objects in multiple chunks, which is more
      /// resilient to network interruptions than a single upload. The validity
      /// duration of the write operation, and the consequences of it becoming
      /// invalid, are service-dependent.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.create`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.StartResumableWriteResponse StartResumableWrite(global::Google.Cloud.Storage.V2.StartResumableWriteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartResumableWrite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a resumable write operation. This
      /// method is part of the [Resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// This allows you to upload large objects in multiple chunks, which is more
      /// resilient to network interruptions than a single upload. The validity
      /// duration of the write operation, and the consequences of it becoming
      /// invalid, are service-dependent.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.create`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.StartResumableWriteResponse StartResumableWrite(global::Google.Cloud.Storage.V2.StartResumableWriteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartResumableWrite, null, options, request);
      }
      /// <summary>
      /// Starts a resumable write operation. This
      /// method is part of the [Resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// This allows you to upload large objects in multiple chunks, which is more
      /// resilient to network interruptions than a single upload. The validity
      /// duration of the write operation, and the consequences of it becoming
      /// invalid, are service-dependent.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.create`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.StartResumableWriteResponse> StartResumableWriteAsync(global::Google.Cloud.Storage.V2.StartResumableWriteRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartResumableWriteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts a resumable write operation. This
      /// method is part of the [Resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// This allows you to upload large objects in multiple chunks, which is more
      /// resilient to network interruptions than a single upload. The validity
      /// duration of the write operation, and the consequences of it becoming
      /// invalid, are service-dependent.
      ///
      /// **IAM Permissions**:
      ///
      /// Requires `storage.objects.create`
      /// [IAM permission](https://cloud.google.com/iam/docs/overview#permissions) on
      /// the bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.StartResumableWriteResponse> StartResumableWriteAsync(global::Google.Cloud.Storage.V2.StartResumableWriteRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartResumableWrite, null, options, request);
      }
      /// <summary>
      /// Determines the `persisted_size` of an object that is being written. This
      /// method is part of the [resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// The returned value is the size of the object that has been persisted so
      /// far. The value can be used as the `write_offset` for the next `Write()`
      /// call.
      ///
      /// If the object does not exist, meaning if it was deleted, or the
      /// first `Write()` has not yet reached the service, this method returns the
      /// error `NOT_FOUND`.
      ///
      /// This method is useful for clients that buffer data and need to know which
      /// data can be safely evicted. The client can call `QueryWriteStatus()` at any
      /// time to determine how much data has been logged for this object.
      /// For any sequence of `QueryWriteStatus()` calls for a given
      /// object name, the sequence of returned `persisted_size` values are
      /// non-decreasing.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.QueryWriteStatusResponse QueryWriteStatus(global::Google.Cloud.Storage.V2.QueryWriteStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryWriteStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Determines the `persisted_size` of an object that is being written. This
      /// method is part of the [resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// The returned value is the size of the object that has been persisted so
      /// far. The value can be used as the `write_offset` for the next `Write()`
      /// call.
      ///
      /// If the object does not exist, meaning if it was deleted, or the
      /// first `Write()` has not yet reached the service, this method returns the
      /// error `NOT_FOUND`.
      ///
      /// This method is useful for clients that buffer data and need to know which
      /// data can be safely evicted. The client can call `QueryWriteStatus()` at any
      /// time to determine how much data has been logged for this object.
      /// For any sequence of `QueryWriteStatus()` calls for a given
      /// object name, the sequence of returned `persisted_size` values are
      /// non-decreasing.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.QueryWriteStatusResponse QueryWriteStatus(global::Google.Cloud.Storage.V2.QueryWriteStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryWriteStatus, null, options, request);
      }
      /// <summary>
      /// Determines the `persisted_size` of an object that is being written. This
      /// method is part of the [resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// The returned value is the size of the object that has been persisted so
      /// far. The value can be used as the `write_offset` for the next `Write()`
      /// call.
      ///
      /// If the object does not exist, meaning if it was deleted, or the
      /// first `Write()` has not yet reached the service, this method returns the
      /// error `NOT_FOUND`.
      ///
      /// This method is useful for clients that buffer data and need to know which
      /// data can be safely evicted. The client can call `QueryWriteStatus()` at any
      /// time to determine how much data has been logged for this object.
      /// For any sequence of `QueryWriteStatus()` calls for a given
      /// object name, the sequence of returned `persisted_size` values are
      /// non-decreasing.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.QueryWriteStatusResponse> QueryWriteStatusAsync(global::Google.Cloud.Storage.V2.QueryWriteStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryWriteStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Determines the `persisted_size` of an object that is being written. This
      /// method is part of the [resumable
      /// upload](https://cloud.google.com/storage/docs/resumable-uploads) feature.
      /// The returned value is the size of the object that has been persisted so
      /// far. The value can be used as the `write_offset` for the next `Write()`
      /// call.
      ///
      /// If the object does not exist, meaning if it was deleted, or the
      /// first `Write()` has not yet reached the service, this method returns the
      /// error `NOT_FOUND`.
      ///
      /// This method is useful for clients that buffer data and need to know which
      /// data can be safely evicted. The client can call `QueryWriteStatus()` at any
      /// time to determine how much data has been logged for this object.
      /// For any sequence of `QueryWriteStatus()` calls for a given
      /// object name, the sequence of returned `persisted_size` values are
      /// non-decreasing.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.QueryWriteStatusResponse> QueryWriteStatusAsync(global::Google.Cloud.Storage.V2.QueryWriteStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryWriteStatus, null, options, request);
      }
      /// <summary>
      /// Moves the source object to the destination object in the same bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object MoveObject(global::Google.Cloud.Storage.V2.MoveObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Moves the source object to the destination object in the same bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Google.Cloud.Storage.V2.Object MoveObject(global::Google.Cloud.Storage.V2.MoveObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MoveObject, null, options, request);
      }
      /// <summary>
      /// Moves the source object to the destination object in the same bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> MoveObjectAsync(global::Google.Cloud.Storage.V2.MoveObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Moves the source object to the destination object in the same bucket.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Google.Cloud.Storage.V2.Object> MoveObjectAsync(global::Google.Cloud.Storage.V2.MoveObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MoveObject, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override StorageClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StorageClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(StorageBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_DeleteBucket, serviceImpl.DeleteBucket)
          .AddMethod(__Method_GetBucket, serviceImpl.GetBucket)
          .AddMethod(__Method_CreateBucket, serviceImpl.CreateBucket)
          .AddMethod(__Method_ListBuckets, serviceImpl.ListBuckets)
          .AddMethod(__Method_LockBucketRetentionPolicy, serviceImpl.LockBucketRetentionPolicy)
          .AddMethod(__Method_GetIamPolicy, serviceImpl.GetIamPolicy)
          .AddMethod(__Method_SetIamPolicy, serviceImpl.SetIamPolicy)
          .AddMethod(__Method_TestIamPermissions, serviceImpl.TestIamPermissions)
          .AddMethod(__Method_UpdateBucket, serviceImpl.UpdateBucket)
          .AddMethod(__Method_ComposeObject, serviceImpl.ComposeObject)
          .AddMethod(__Method_DeleteObject, serviceImpl.DeleteObject)
          .AddMethod(__Method_RestoreObject, serviceImpl.RestoreObject)
          .AddMethod(__Method_CancelResumableWrite, serviceImpl.CancelResumableWrite)
          .AddMethod(__Method_GetObject, serviceImpl.GetObject)
          .AddMethod(__Method_ReadObject, serviceImpl.ReadObject)
          .AddMethod(__Method_BidiReadObject, serviceImpl.BidiReadObject)
          .AddMethod(__Method_UpdateObject, serviceImpl.UpdateObject)
          .AddMethod(__Method_WriteObject, serviceImpl.WriteObject)
          .AddMethod(__Method_BidiWriteObject, serviceImpl.BidiWriteObject)
          .AddMethod(__Method_ListObjects, serviceImpl.ListObjects)
          .AddMethod(__Method_RewriteObject, serviceImpl.RewriteObject)
          .AddMethod(__Method_StartResumableWrite, serviceImpl.StartResumableWrite)
          .AddMethod(__Method_QueryWriteStatus, serviceImpl.QueryWriteStatus)
          .AddMethod(__Method_MoveObject, serviceImpl.MoveObject).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, StorageBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_DeleteBucket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.DeleteBucketRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteBucket));
      serviceBinder.AddMethod(__Method_GetBucket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.GetBucketRequest, global::Google.Cloud.Storage.V2.Bucket>(serviceImpl.GetBucket));
      serviceBinder.AddMethod(__Method_CreateBucket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.CreateBucketRequest, global::Google.Cloud.Storage.V2.Bucket>(serviceImpl.CreateBucket));
      serviceBinder.AddMethod(__Method_ListBuckets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.ListBucketsRequest, global::Google.Cloud.Storage.V2.ListBucketsResponse>(serviceImpl.ListBuckets));
      serviceBinder.AddMethod(__Method_LockBucketRetentionPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.LockBucketRetentionPolicyRequest, global::Google.Cloud.Storage.V2.Bucket>(serviceImpl.LockBucketRetentionPolicy));
      serviceBinder.AddMethod(__Method_GetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.GetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.GetIamPolicy));
      serviceBinder.AddMethod(__Method_SetIamPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.SetIamPolicyRequest, global::Google.Cloud.Iam.V1.Policy>(serviceImpl.SetIamPolicy));
      serviceBinder.AddMethod(__Method_TestIamPermissions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Iam.V1.TestIamPermissionsRequest, global::Google.Cloud.Iam.V1.TestIamPermissionsResponse>(serviceImpl.TestIamPermissions));
      serviceBinder.AddMethod(__Method_UpdateBucket, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.UpdateBucketRequest, global::Google.Cloud.Storage.V2.Bucket>(serviceImpl.UpdateBucket));
      serviceBinder.AddMethod(__Method_ComposeObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.ComposeObjectRequest, global::Google.Cloud.Storage.V2.Object>(serviceImpl.ComposeObject));
      serviceBinder.AddMethod(__Method_DeleteObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.DeleteObjectRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.DeleteObject));
      serviceBinder.AddMethod(__Method_RestoreObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.RestoreObjectRequest, global::Google.Cloud.Storage.V2.Object>(serviceImpl.RestoreObject));
      serviceBinder.AddMethod(__Method_CancelResumableWrite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.CancelResumableWriteRequest, global::Google.Cloud.Storage.V2.CancelResumableWriteResponse>(serviceImpl.CancelResumableWrite));
      serviceBinder.AddMethod(__Method_GetObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.GetObjectRequest, global::Google.Cloud.Storage.V2.Object>(serviceImpl.GetObject));
      serviceBinder.AddMethod(__Method_ReadObject, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Cloud.Storage.V2.ReadObjectRequest, global::Google.Cloud.Storage.V2.ReadObjectResponse>(serviceImpl.ReadObject));
      serviceBinder.AddMethod(__Method_BidiReadObject, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Google.Cloud.Storage.V2.BidiReadObjectRequest, global::Google.Cloud.Storage.V2.BidiReadObjectResponse>(serviceImpl.BidiReadObject));
      serviceBinder.AddMethod(__Method_UpdateObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.UpdateObjectRequest, global::Google.Cloud.Storage.V2.Object>(serviceImpl.UpdateObject));
      serviceBinder.AddMethod(__Method_WriteObject, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::Google.Cloud.Storage.V2.WriteObjectRequest, global::Google.Cloud.Storage.V2.WriteObjectResponse>(serviceImpl.WriteObject));
      serviceBinder.AddMethod(__Method_BidiWriteObject, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::Google.Cloud.Storage.V2.BidiWriteObjectRequest, global::Google.Cloud.Storage.V2.BidiWriteObjectResponse>(serviceImpl.BidiWriteObject));
      serviceBinder.AddMethod(__Method_ListObjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.ListObjectsRequest, global::Google.Cloud.Storage.V2.ListObjectsResponse>(serviceImpl.ListObjects));
      serviceBinder.AddMethod(__Method_RewriteObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.RewriteObjectRequest, global::Google.Cloud.Storage.V2.RewriteResponse>(serviceImpl.RewriteObject));
      serviceBinder.AddMethod(__Method_StartResumableWrite, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.StartResumableWriteRequest, global::Google.Cloud.Storage.V2.StartResumableWriteResponse>(serviceImpl.StartResumableWrite));
      serviceBinder.AddMethod(__Method_QueryWriteStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.QueryWriteStatusRequest, global::Google.Cloud.Storage.V2.QueryWriteStatusResponse>(serviceImpl.QueryWriteStatus));
      serviceBinder.AddMethod(__Method_MoveObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Cloud.Storage.V2.MoveObjectRequest, global::Google.Cloud.Storage.V2.Object>(serviceImpl.MoveObject));
    }

  }
}
#endregion
